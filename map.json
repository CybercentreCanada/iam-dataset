{
    "info": "This file is sourced from https://github.com/iann0036/sdk-iam-map",
    "sdk_permissionless_actions": [
        "DynamoDB.DescribeEndpoints",
        "STS.GetCallerIdentity"
    ],
    "sdk_method_iam_mappings": {
        "APIGateway.CreateApiKey": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apikeys"
                    }
                }
            }
        ],
        "APIGateway.CreateAuthorizer": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/authorizers"
                    }
                }
            }
        ],
        "APIGateway.CreateBasePathMapping": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}/basepathmappings"
                    }
                }
            }
        ],
        "APIGateway.CreateDeployment": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/deployments"
                    }
                }
            }
        ],
        "APIGateway.CreateDocumentationPart": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/parts"
                    }
                }
            }
        ],
        "APIGateway.CreateDocumentationVersion": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/versions"
                    }
                }
            }
        ],
        "APIGateway.CreateDomainName": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames"
                    }
                }
            }
        ],
        "APIGateway.CreateModel": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/models"
                    }
                }
            }
        ],
        "APIGateway.CreateRequestValidator": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/requestvalidators"
                    }
                }
            }
        ],
        "APIGateway.CreateResource": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${parentId}"
                    }
                }
            }
        ],
        "APIGateway.CreateRestApi": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis"
                    }
                }
            }
        ],
        "APIGateway.CreateStage": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages"
                    }
                }
            }
        ],
        "APIGateway.CreateUsagePlan": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans"
                    }
                }
            }
        ],
        "APIGateway.CreateUsagePlanKey": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usageplanId}/keys"
                    }
                }
            }
        ],
        "APIGateway.CreateVpcLink": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/vpclinks"
                    }
                }
            }
        ],
        "APIGateway.DeleteApiKey": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apikeys/${apiKey}"
                    }
                }
            }
        ],
        "APIGateway.DeleteAuthorizer": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/authorizers/${authorizerId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteBasePathMapping": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}/basepathmappings/${basePath}"
                    }
                }
            }
        ],
        "APIGateway.DeleteClientCertificate": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/clientcertificates/${clientCertificateId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteDeployment": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/deployments/${deploymentId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteDocumentationPart": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/parts/${documentationPartId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteDocumentationVersion": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/versions/${documentationVersion}"
                    }
                }
            }
        ],
        "APIGateway.DeleteDomainName": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}"
                    }
                }
            }
        ],
        "APIGateway.DeleteGatewayResponse": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/gatewayresponses/${responseType}"
                    }
                }
            }
        ],
        "APIGateway.DeleteIntegration": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
                    }
                }
            }
        ],
        "APIGateway.DeleteIntegrationResponse": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.DeleteMethod": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
                    }
                }
            }
        ],
        "APIGateway.DeleteMethodResponse": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.DeleteModel": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/models/${modelName}"
                    }
                }
            }
        ],
        "APIGateway.DeleteRequestValidator": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/requestvalidators/${requestValidatorId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteResource": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteRestApi": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteStage": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages/${stageName}"
                    }
                }
            }
        ],
        "APIGateway.DeleteUsagePlan": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteUsagePlanKey": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}/keys/${keyId}"
                    }
                }
            }
        ],
        "APIGateway.DeleteVpcLink": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/vpclinks/${vpcLinkId}"
                    }
                }
            }
        ],
        "APIGateway.GetAccount": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/account"
                    }
                }
            }
        ],
        "APIGateway.GetApiKey": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apikeys/${apiKey}"
                    }
                }
            }
        ],
        "APIGateway.GetApiKeys": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apikeys"
                    }
                }
            }
        ],
        "APIGateway.GetAuthorizer": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/authorizers/${authorizerId}"
                    }
                }
            }
        ],
        "APIGateway.GetAuthorizers": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/authorizers"
                    }
                }
            }
        ],
        "APIGateway.GetBasePathMapping": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}/basepathmappings/${basePath}"
                    }
                }
            }
        ],
        "APIGateway.GetBasePathMappings": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}/basepathmappings"
                    }
                }
            }
        ],
        "APIGateway.GetClientCertificate": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/clientcertificates/${clientCertificateId}"
                    }
                }
            }
        ],
        "APIGateway.GetClientCertificates": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/clientcertificates"
                    }
                }
            }
        ],
        "APIGateway.GetDeployment": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/deployments/${deploymentId}"
                    }
                }
            }
        ],
        "APIGateway.GetDeployments": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/deployments"
                    }
                }
            }
        ],
        "APIGateway.GetDocumentationPart": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/parts/${documentationPartId}"
                    }
                }
            }
        ],
        "APIGateway.GetDocumentationParts": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/parts"
                    }
                }
            }
        ],
        "APIGateway.GetDocumentationVersion": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/versions/${documentationVersion}"
                    }
                }
            }
        ],
        "APIGateway.GetDocumentationVersions": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/versions"
                    }
                }
            }
        ],
        "APIGateway.GetDomainName": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}"
                    }
                }
            }
        ],
        "APIGateway.GetDomainNames": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames"
                    }
                }
            }
        ],
        "APIGateway.GetExport": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages/${stageName}/exports/${exportType}"
                    }
                }
            }
        ],
        "APIGateway.GetGatewayResponse": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/gatewayresponses/${responseType}"
                    }
                }
            }
        ],
        "APIGateway.GetGatewayResponses": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/gatewayresponses"
                    }
                }
            }
        ],
        "APIGateway.GetIntegration": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
                    }
                }
            }
        ],
        "APIGateway.GetIntegrationResponse": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.GetMethod": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
                    }
                }
            }
        ],
        "APIGateway.GetMethodResponse": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.GetModel": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/models/${modelName}"
                    }
                }
            }
        ],
        "APIGateway.GetModelTemplate": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/models/${modelName}/default_template"
                    }
                }
            }
        ],
        "APIGateway.GetModels": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/models"
                    }
                }
            }
        ],
        "APIGateway.GetRequestValidator": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/requestvalidators/${requestValidatorId}"
                    }
                }
            }
        ],
        "APIGateway.GetRequestValidators": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/requestvalidators"
                    }
                }
            }
        ],
        "APIGateway.GetResource": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}"
                    }
                }
            }
        ],
        "APIGateway.GetResources": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources"
                    }
                }
            }
        ],
        "APIGateway.GetRestApi": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}"
                    }
                }
            }
        ],
        "APIGateway.GetRestApis": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis"
                    }
                }
            }
        ],
        "APIGateway.GetSdk": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages/${stageName}/sdks/${sdkType}"
                    }
                }
            }
        ],
        "APIGateway.GetSdkType": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/sdktypes/${id}"
                    }
                }
            }
        ],
        "APIGateway.GetSdkTypes": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/sdktypes"
                    }
                }
            }
        ],
        "APIGateway.GetStage": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages/${stageName}"
                    }
                }
            }
        ],
        "APIGateway.GetStages": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages"
                    }
                }
            }
        ],
        "APIGateway.GetTags": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/tags/${resourceArn}"
                    }
                }
            }
        ],
        "APIGateway.GetUsage": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}/usage"
                    }
                }
            }
        ],
        "APIGateway.GetUsagePlan": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}"
                    }
                }
            }
        ],
        "APIGateway.GetUsagePlanKey": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}/keys/${keyId}"
                    }
                }
            }
        ],
        "APIGateway.GetUsagePlanKeys": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}/keys"
                    }
                }
            }
        ],
        "APIGateway.GetUsagePlans": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans"
                    }
                }
            }
        ],
        "APIGateway.GetVpcLink": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/vpclinks/${vpcLinkId}"
                    }
                }
            }
        ],
        "APIGateway.GetVpcLinks": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/vpclinks"
                    }
                }
            }
        ],
        "APIGateway.ImportDocumentationParts": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/parts"
                    }
                }
            }
        ],
        "APIGateway.PutGatewayResponse": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/gatewayresponses/${responseType}"
                    }
                }
            }
        ],
        "APIGateway.PutIntegration": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
                    }
                }
            }
        ],
        "APIGateway.PutIntegrationResponse": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.PutMethod": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
                    }
                }
            }
        ],
        "APIGateway.PutMethodResponse": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.PutRestApi": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateAccount": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/account"
                    }
                }
            }
        ],
        "APIGateway.UpdateApiKey": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apikeys/${apiKey}"
                    }
                }
            }
        ],
        "APIGateway.UpdateAuthorizer": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/authorizers/${authorizerId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateBasePathMapping": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}/basepathmappings/${basePath}"
                    }
                }
            }
        ],
        "APIGateway.UpdateClientCertificate": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/clientcertificates/${clientCertificateId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateDeployment": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/deployments/${deploymentId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateDocumentationPart": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/parts/${documentationPartId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateDocumentationVersion": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/documentation/versions/${documentationVersion}"
                    }
                }
            }
        ],
        "APIGateway.UpdateDomainName": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/domainnames/${domainName}"
                    }
                }
            }
        ],
        "APIGateway.UpdateGatewayResponse": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/gatewayresponses/${responseType}"
                    }
                }
            }
        ],
        "APIGateway.UpdateIntegration": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
                    }
                }
            }
        ],
        "APIGateway.UpdateIntegrationResponse": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.UpdateMethod": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
                    }
                }
            }
        ],
        "APIGateway.UpdateMethodResponse": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
                    }
                }
            }
        ],
        "APIGateway.UpdateModel": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/models/${modelName}"
                    }
                }
            }
        ],
        "APIGateway.UpdateRequestValidator": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/requestvalidators/${requestValidatorId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateResource": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateRestApi": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/{restApiId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateStage": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/{restApiId}/stages/${stageName}"
                    }
                }
            }
        ],
        "APIGateway.UpdateUsage": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}/keys/${keyId}/usage"
                    }
                }
            }
        ],
        "APIGateway.UpdateUsagePlan": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/usageplans/${usagePlanId}"
                    }
                }
            }
        ],
        "APIGateway.UpdateVpcLink": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/vpclinks/${vpcLinkId}"
                    }
                }
            }
        ],
        "Budgets.CreateBudget": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${Budget.BudgetName}"
                    }
                }
            }
        ],
        "Budgets.CreateNotification": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.CreateSubscriber": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DeleteBudget": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DeleteNotification": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DeleteSubscriber": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DescribeBudget": [
            {
                "action": "budgets:ViewBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DescribeBudgetPerformanceHistory": [
            {
                "action": "budgets:ViewBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DescribeBudgets": [
            {
                "action": "budgets:ViewBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "*"
                    }
                }
            }
        ],
        "Budgets.DescribeNotificationsForBudget": [
            {
                "action": "budgets:ViewBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.DescribeSubscribersForNotification": [
            {
                "action": "budgets:ViewBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.UpdateBudget": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${NewBudget.BudgetName}"
                    }
                }
            }
        ],
        "Budgets.UpdateNotification": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.UpdateSubscriber": [
            {
                "action": "budgets:ModifyBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "CloudDirectory.ListManagedSchemaArns": [
            {
                "action": "clouddirectory:ListManagedSchemaArns",
                "undocumented": true
            }
        ],
        "CloudFormation.RecordHandlerProgress": [
            {
                "action": "cloudformation:RecordHandlerProgress",
                "undocumented": true
            }
        ],
        "CloudFront.CreateKeyGroup": [
            {
                "action": "cloudfront:CreateKeyGroup",
                "undocumented": true
            }
        ],
        "CloudFront.CreateMonitoringSubscription": [
            {
                "action": "cloudfront:CreateMonitoringSubscription",
                "undocumented": true
            }
        ],
        "CloudFront.CreateRealtimeLogConfig": [
            {
                "action": "cloudfront:CreateRealtimeLogConfig",
                "undocumented": true
            }
        ],
        "CloudFront.DeleteKeyGroup": [
            {
                "action": "cloudfront:DeleteKeyGroup",
                "undocumented": true
            }
        ],
        "CloudFront.DeleteMonitoringSubscription": [
            {
                "action": "cloudfront:DeleteMonitoringSubscription",
                "undocumented": true
            }
        ],
        "CloudFront.DeleteRealtimeLogConfig": [
            {
                "action": "cloudfront:DeleteRealtimeLogConfig",
                "undocumented": true
            }
        ],
        "CloudFront.GetKeyGroup": [
            {
                "action": "cloudfront:GetKeyGroup",
                "undocumented": true
            }
        ],
        "CloudFront.GetKeyGroupConfig": [
            {
                "action": "cloudfront:GetKeyGroupConfig",
                "undocumented": true
            }
        ],
        "CloudFront.GetMonitoringSubscription": [
            {
                "action": "cloudfront:GetMonitoringSubscription",
                "undocumented": true
            }
        ],
        "CloudFront.GetRealtimeLogConfig": [
            {
                "action": "cloudfront:GetRealtimeLogConfig",
                "undocumented": true
            }
        ],
        "CloudFront.ListDistributionsByKeyGroup": [
            {
                "action": "cloudfront:ListDistributionsByKeyGroup",
                "undocumented": true
            }
        ],
        "CloudFront.ListDistributionsByRealtimeLogConfig": [
            {
                "action": "cloudfront:ListDistributionsByRealtimeLogConfig",
                "undocumented": true
            }
        ],
        "CloudFront.ListKeyGroups": [
            {
                "action": "cloudfront:ListKeyGroups",
                "undocumented": true
            }
        ],
        "CloudFront.ListRealtimeLogConfigs": [
            {
                "action": "cloudfront:ListRealtimeLogConfigs",
                "undocumented": true
            }
        ],
        "CloudFront.UpdateKeyGroup": [
            {
                "action": "cloudfront:UpdateKeyGroup",
                "undocumented": true
            }
        ],
        "CloudFront.UpdateRealtimeLogConfig": [
            {
                "action": "cloudfront:UpdateRealtimeLogConfig",
                "undocumented": true
            }
        ],
        "CloudSearchDomain.Search": [
            {
                "action": "cloudsearch:search"
            }
        ],
        "CloudSearchDomain.Suggest": [
            {
                "action": "cloudsearch:suggest"
            }
        ],
        "CloudSearchDomain.UploadDocuments": [
            {
                "action": "cloudsearch:upload"
            }
        ],
        "CloudWatchLogs.DeleteQueryDefinition": [
            {
                "action": "logs:DeleteQueryDefinition",
                "undocumented": true
            }
        ],
        "CloudWatchLogs.DescribeQueryDefinitions": [
            {
                "action": "logs:DescribeQueryDefinitions",
                "undocumented": true
            }
        ],
        "CloudWatchLogs.PutQueryDefinition": [
            {
                "action": "logs:PutQueryDefinition",
                "undocumented": true
            }
        ],
        "CodeBuild.GetReportGroupTrend": [
            {
                "action": "codebuild:GetReportGroupTrend",
                "undocumented": true
            }
        ],
        "DirectoryService.AddRegion": [
            {
                "action": "ds:AddRegion",
                "undocumented": true
            }
        ],
        "DirectoryService.DescribeRegions": [
            {
                "action": "ds:DescribeRegions",
                "undocumented": true
            }
        ],
        "DirectoryService.DisableClientAuthentication": [
            {
                "action": "ds:DisableClientAuthentication",
                "undocumented": true
            }
        ],
        "DirectoryService.EnableClientAuthentication": [
            {
                "action": "ds:EnableClientAuthentication",
                "undocumented": true
            }
        ],
        "DirectoryService.RemoveRegion": [
            {
                "action": "ds:RemoveRegion",
                "undocumented": true
            }
        ],
        "DMS.DeleteConnection": [
            {
                "action": "dms:DeleteConnection",
                "undocumented": true
            }
        ],
        "DMS.DescribePendingMaintenanceActions": [
            {
                "action": "DescribePendingMaintenanceActions",
                "undocumented": true
            }
        ],
        "DMS.MoveReplicationTask": [
            {
                "action": "dms:MoveReplicationTask",
                "undocumented": true
            }
        ],
        "DynamoDB.BatchExecuteStatement": [
            {
                "action": "dynamodb:PartiQLSelect",
                "conditions": {
                    "lhs": "Statements[].Statement",
                    "op": "IContains",
                    "rhs": "SELECT "
                }
            },
            {
                "action": "dynamodb:PartiQLInsert",
                "conditions": {
                    "lhs": "Statements[].Statement",
                    "op": "IContains",
                    "rhs": "INSERT "
                }
            },
            {
                "action": "dynamodb:PartiQLUpdate",
                "conditions": {
                    "lhs": "Statements[].Statement",
                    "op": "IContains",
                    "rhs": "UPDATE "
                }
            },
            {
                "action": "dynamodb:PartiQLDelete",
                "conditions": {
                    "lhs": "Statements[].Statement",
                    "op": "IContains",
                    "rhs": "DELETE "
                }
            }
        ],
        "DynamoDB.ExecuteStatement": [
            {
                "action": "dynamodb:PartiQLSelect",
                "conditions": {
                    "lhs": "Statement",
                    "op": "IContains",
                    "rhs": "SELECT "
                }
            },
            {
                "action": "dynamodb:PartiQLInsert",
                "conditions": {
                    "lhs": "Statement",
                    "op": "IContains",
                    "rhs": "INSERT "
                }
            },
            {
                "action": "dynamodb:PartiQLUpdate",
                "conditions": {
                    "lhs": "Statement",
                    "op": "IContains",
                    "rhs": "UPDATE "
                }
            },
            {
                "action": "dynamodb:PartiQLDelete",
                "conditions": {
                    "lhs": "Statement",
                    "op": "IContains",
                    "rhs": "DELETE "
                }
            }
        ],
        "DynamoDB.ExecuteTransaction": [
            {
                "action": "dynamodb:PartiQLSelect",
                "conditions": {
                    "lhs": "TransactStatements[].Statement",
                    "op": "IContains",
                    "rhs": "SELECT "
                }
            },
            {
                "action": "dynamodb:PartiQLInsert",
                "conditions": {
                    "lhs": "TransactStatements[].Statement",
                    "op": "IContains",
                    "rhs": "INSERT "
                }
            },
            {
                "action": "dynamodb:PartiQLUpdate",
                "conditions": {
                    "lhs": "TransactStatements[].Statement",
                    "op": "IContains",
                    "rhs": "UPDATE "
                }
            },
            {
                "action": "dynamodb:PartiQLDelete",
                "conditions": {
                    "lhs": "TransactStatements[].Statement",
                    "op": "IContains",
                    "rhs": "DELETE "
                }
            }
        ],
        "DynamoDB.TransactGetItems": [
            {
                "action": "dynamodb:GetItem",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TransactItems[].Get.TableName}"
                    }
                }
            }
        ],
        "DynamoDB.TransactWriteItems": [
            {
                "action": "dynamodb:ConditionCheckItem",
                "conditions": {
                    "lhs": "TransactItems[].ConditionCheck",
                    "op": "Exists"
                }
            },
            {
                "action": "dynamodb:PutItem",
                "conditions": {
                    "lhs": "TransactItems[].Put",
                    "op": "Exists"
                }
            },
            {
                "action": "dynamodb:UpdateItem",
                "conditions": {
                    "lhs": "TransactItems[].Update",
                    "op": "Exists"
                }
            },
            {
                "action": "dynamodb:DeleteItem",
                "conditions": {
                    "lhs": "TransactItems[].Delete",
                    "op": "Exists"
                }
            }
        ],
        "ECS.UpdateCapacityProvider": [
            {
                "action": "ecs:UpdateCapacityProvider",
                "undocumented": true
            }
        ],
        "EMR.CreateStudio": [
            {
                "action": "elasticmapreduce:CreateStudio",
                "undocumented": true
            }
        ],
        "EMR.CreateStudioSessionMapping": [
            {
                "action": "elasticmapreduce:CreateStudioSessionMapping",
                "undocumented": true
            }
        ],
        "EMR.DeleteStudio": [
            {
                "action": "elasticmapreduce:DeleteStudio",
                "undocumented": true
            }
        ],
        "EMR.DeleteStudioSessionMapping": [
            {
                "action": "elasticmapreduce:DeleteStudioSessionMapping",
                "undocumented": true
            }
        ],
        "EMR.DescribeNotebookExecution": [
            {
                "action": "elasticmapreduce:DescribeNotebookExecution",
                "undocumented": true
            }
        ],
        "EMR.DescribeStudio": [
            {
                "action": "elasticmapreduce:DescribeStudio",
                "undocumented": true
            }
        ],
        "EMR.GetStudioSessionMapping": [
            {
                "action": "elasticmapreduce:GetStudioSessionMapping",
                "undocumented": true
            }
        ],
        "EMR.ListNotebookExecutions": [
            {
                "action": "elasticmapreduce:ListNotebookExecutions",
                "undocumented": true
            }
        ],
        "EMR.ListStudioSessionMappings": [
            {
                "action": "elasticmapreduce:ListStudioSessionMappings",
                "undocumented": true
            }
        ],
        "EMR.ListStudios": [
            {
                "action": "elasticmapreduce:ListStudios",
                "undocumented": true
            }
        ],
        "EMR.StartNotebookExecution": [
            {
                "action": "elasticmapreduce:StartNotebookExecution",
                "undocumented": true
            }
        ],
        "EMR.StopNotebookExecution": [
            {
                "action": "elasticmapreduce:StopNotebookExecution",
                "undocumented": true
            }
        ],
        "EMR.UpdateStudioSessionMapping": [
            {
                "action": "elasticmapreduce:UpdateStudioSessionMapping",
                "undocumented": true
            }
        ],
        "ES.AssociatePackage": [
            {
                "action": "es:AssociatePackage",
                "undocumented": true
            }
        ],
        "ES.CancelElasticsearchServiceSoftwareUpdate": [
            {
                "action": "es:CancelElasticsearchServiceSoftwareUpdate",
                "undocumented": true
            }
        ],
        "ES.CreatePackage": [
            {
                "action": "es:CreatePackage",
                "undocumented": true
            }
        ],
        "ES.DeletePackage": [
            {
                "action": "es:DeletePackage",
                "undocumented": true
            }
        ],
        "ES.DescribePackages": [
            {
                "action": "es:DescribePackages",
                "undocumented": true
            }
        ],
        "ES.DissociatePackage": [
            {
                "action": "es:DissociatePackage",
                "undocumented": true
            }
        ],
        "ES.GetPackageVersionHistory": [
            {
                "action": "es:GetPackageVersionHistory",
                "undocumented": true
            }
        ],
        "ES.ListDomainsForPackage": [
            {
                "action": "es:ListDomainsForPackage",
                "undocumented": true
            }
        ],
        "ES.ListPackagesForDomain": [
            {
                "action": "es:ListPackagesForDomain",
                "undocumented": true
            }
        ],
        "ES.StartElasticsearchServiceSoftwareUpdate": [
            {
                "action": "es:StartElasticsearchServiceSoftwareUpdate",
                "undocumented": true
            }
        ],
        "ES.UpdatePackage": [
            {
                "action": "es:UpdatePackage",
                "undocumented": true
            }
        ],
        "Inspector.CreateExclusionsPreview": [
            {
                "action": "inspector:CreateExclusionsPreview",
                "undocumented": true
            }
        ],
        "Inspector.DescribeExclusions": [
            {
                "action": "inspector:DescribeExclusions",
                "undocumented": true
            }
        ],
        "Inspector.GetAssessmentReport": [
            {
                "action": "inspector:GetAssessmentReport",
                "undocumented": true
            }
        ],
        "Inspector.GetExclusionsPreview": [
            {
                "action": "inspector:GetExclusionsPreview",
                "undocumented": true
            }
        ],
        "Inspector.ListExclusions": [
            {
                "action": "inspector:ListExclusions",
                "undocumented": true
            }
        ],
        "Iot.CancelDetectMitigationActionsTask": [
            {
                "action": "iot:CancelDetectMitigationActionsTask",
                "undocumented": true
            }
        ],
        "Iot.CreateCustomMetric": [
            {
                "action": "iot:CreateCustomMetric",
                "undocumented": true
            }
        ],
        "Iot.CreateTopicRuleDestination": [
            {
                "action": "iot:CreateTopicRuleDestination",
                "undocumented": true
            }
        ],
        "Iot.DeleteCustomMetric": [
            {
                "action": "iot:DeleteCustomMetric",
                "undocumented": true
            }
        ],
        "Iot.DeleteTopicRuleDestination": [
            {
                "action": "iot:DeleteTopicRuleDestination",
                "undocumented": true
            }
        ],
        "Iot.DescribeCustomMetric": [
            {
                "action": "iot:DescribeCustomMetric",
                "undocumented": true
            }
        ],
        "Iot.DescribeDetectMitigationActionsTask": [
            {
                "action": "iot:DescribeDetectMitigationActionsTask",
                "undocumented": true
            }
        ],
        "Iot.GetBehaviorModelTrainingSummaries": [
            {
                "action": "iot:GetBehaviorModelTrainingSummaries",
                "undocumented": true
            }
        ],
        "Iot.GetTopicRuleDestination": [
            {
                "action": "iot:GetTopicRuleDestination",
                "undocumented": true
            }
        ],
        "Iot.ListCustomMetrics": [
            {
                "action": "iot:ListCustomMetrics",
                "undocumented": true
            }
        ],
        "Iot.ListDetectMitigationActionsExecutions": [
            {
                "action": "iot:ListDetectMitigationActionsExecutions",
                "undocumented": true
            }
        ],
        "Iot.ListDetectMitigationActionsTasks": [
            {
                "action": "iot:ListDetectMitigationActionsTasks",
                "undocumented": true
            }
        ],
        "Iot.ListTopicRuleDestinations": [
            {
                "action": "iot:ListTopicRuleDestinations",
                "undocumented": true
            }
        ],
        "Iot.StartDetectMitigationActionsTask": [
            {
                "action": "iot:StartDetectMitigationActionsTask",
                "undocumented": true
            }
        ],
        "Iot.UpdateCustomMetric": [
            {
                "action": "iot:UpdateCustomMetric",
                "undocumented": true
            }
        ],
        "Iot.UpdateTopicRuleDestination": [
            {
                "action": "iot:UpdateTopicRuleDestination",
                "undocumented": true
            }
        ],
        "Lambda.GetLayerVersionByArn": [
            {
                "action": "lambda:GetLayerVersion"
            }
        ],
        "Lambda.Invoke": [
            {
                "action": "lambda:InvokeFunction",
                "resource_mappings": {
                    "FunctionName": {
                        "template": "${FunctionName}"
                    }
                }
            }
        ],
        "Lightsail.AttachCertificateToDistribution": [
            {
                "action": "lightsail:AttachCertificateToDistribution",
                "undocumented": true
            }
        ],
        "Lightsail.CreateCertificate": [
            {
                "action": "lightsail:CreateCertificate",
                "undocumented": true
            }
        ],
        "Lightsail.CreateContactMethod": [
            {
                "action": "lightsail:CreateContactMethod",
                "undocumented": true
            }
        ],
        "Lightsail.CreateContainerService": [
            {
                "action": "lightsail:CreateContainerService",
                "undocumented": true
            }
        ],
        "Lightsail.CreateContainerServiceDeployment": [
            {
                "action": "lightsail:CreateContainerServiceDeployment",
                "undocumented": true
            }
        ],
        "Lightsail.CreateContainerServiceRegistryLogin": [
            {
                "action": "lightsail:CreateContainerServiceRegistryLogin",
                "undocumented": true
            }
        ],
        "Lightsail.CreateDistribution": [
            {
                "action": "lightsail:CreateDistribution",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteAlarm": [
            {
                "action": "lightsail:DeleteAlarm",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteAutoSnapshot": [
            {
                "action": "lightsail:DeleteAutoSnapshot",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteCertificate": [
            {
                "action": "lightsail:DeleteCertificate",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteContactMethod": [
            {
                "action": "lightsail:DeleteContactMethod",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteContainerImage": [
            {
                "action": "lightsail:DeleteContainerImage",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteContainerService": [
            {
                "action": "lightsail:DeleteContainerService",
                "undocumented": true
            }
        ],
        "Lightsail.DeleteDistribution": [
            {
                "action": "lightsail:DeleteDistribution",
                "undocumented": true
            }
        ],
        "Lightsail.GetAlarms": [
            {
                "action": "lightsail:GetAlarms",
                "undocumented": true
            }
        ],
        "Lightsail.GetAutoSnapshots": [
            {
                "action": "lightsail:GetAutoSnapshots",
                "undocumented": true
            }
        ],
        "Lightsail.GetCertificates": [
            {
                "action": "lightsail:GetCertificates",
                "undocumented": true
            }
        ],
        "Lightsail.GetContactMethods": [
            {
                "action": "lightsail:GetContactMethods",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerAPIMetadata": [
            {
                "action": "lightsail:GetContainerAPIMetadata",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerImages": [
            {
                "action": "lightsail:GetContainerImages",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerLog": [
            {
                "action": "lightsail:GetContainerLog",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerServiceDeployments": [
            {
                "action": "lightsail:GetContainerServiceDeployments",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerServiceMetricData": [
            {
                "action": "lightsail:GetContainerServiceMetricData",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerServicePowers": [
            {
                "action": "lightsail:GetContainerServicePowers",
                "undocumented": true
            }
        ],
        "Lightsail.GetContainerServices": [
            {
                "action": "lightsail:GetContainerServices",
                "undocumented": true
            }
        ],
        "Lightsail.GetDistributionBundles": [
            {
                "action": "lightsail:GetDistributionBundles",
                "undocumented": true
            }
        ],
        "Lightsail.GetDistributionLatestCacheReset": [
            {
                "action": "lightsail:GetDistributionLatestCacheReset",
                "undocumented": true
            }
        ],
        "Lightsail.GetDistributionMetricData": [
            {
                "action": "lightsail:GetDistributionMetricData",
                "undocumented": true
            }
        ],
        "Lightsail.GetDistributions": [
            {
                "action": "lightsail:GetDistributions",
                "undocumented": true
            }
        ],
        "Lightsail.PutAlarm": [
            {
                "action": "lightsail:PutAlarm",
                "undocumented": true
            }
        ],
        "Lightsail.RegisterContainerImage": [
            {
                "action": "lightsail:RegisterContainerImage",
                "undocumented": true
            }
        ],
        "Lightsail.ResetDistributionCache": [
            {
                "action": "lightsail:ResetDistributionCache",
                "undocumented": true
            }
        ],
        "Lightsail.SendContactMethodVerification": [
            {
                "action": "lightsail:SendContactMethodVerification",
                "undocumented": true
            }
        ],
        "Lightsail.SetIpAddressType": [
            {
                "action": "lightsail:SetIpAddressType",
                "undocumented": true
            }
        ],
        "Lightsail.TestAlarm": [
            {
                "action": "lightsail:TestAlarm",
                "undocumented": true
            }
        ],
        "Lightsail.UpdateContainerService": [
            {
                "action": "lightsail:UpdateContainerService",
                "undocumented": true
            }
        ],
        "Lightsail.UpdateDistribution": [
            {
                "action": "lightsail:UpdateDistribution",
                "undocumented": true
            }
        ],
        "Lightsail.UpdateDistributionBundle": [
            {
                "action": "lightsail:UpdateDistributionBundle",
                "undocumented": true
            }
        ],
        "OpsWorks.DescribeOperatingSystems": [
            {
                "action": "opsworks:DescribeOperatingSystems",
                "undocumented": true
            }
        ],
        "OpsWorksCM.ExportServerEngineAttribute": [
            {
                "action": "opsworks-cm:ExportServerEngineAttribute",
                "undocumented": true
            }
        ],
        "Pinpoint.GetApplicationDateRangeKpi": [
            {
                "action": "mobiletargeting:GetApplicationDateRangeKpi",
                "undocumented": true
            }
        ],
        "Pinpoint.GetCampaignDateRangeKpi": [
            {
                "action": "mobiletargeting:GetCampaignDateRangeKpi",
                "undocumented": true
            }
        ],
        "Pinpoint.GetJourneyDateRangeKpi": [
            {
                "action": "mobiletargeting:GetJourneyDateRangeKpi",
                "undocumented": true
            }
        ],
        "Pinpoint.GetJourneyExecutionActivityMetrics": [
            {
                "action": "mobiletargeting:GetJourneyExecutionActivityMetrics",
                "undocumented": true
            }
        ],
        "Pinpoint.GetJourneyExecutionMetrics": [
            {
                "action": "mobiletargeting:GetJourneyExecutionMetrics",
                "undocumented": true
            }
        ],
        "RDS.CreateCustomAvailabilityZone": [
            {
                "action": "rds:CreateCustomAvailabilityZone",
                "undocumented": true
            }
        ],
        "RDS.DeleteCustomAvailabilityZone": [
            {
                "action": "rds:DeleteCustomAvailabilityZone",
                "undocumented": true
            }
        ],
        "RDS.DeleteInstallationMedia": [
            {
                "action": "rds:DeleteInstallationMedia",
                "undocumented": true
            }
        ],
        "RDS.DescribeCustomAvailabilityZones": [
            {
                "action": "rds:DescribeCustomAvailabilityZones",
                "undocumented": true
            }
        ],
        "RDS.DescribeInstallationMedia": [
            {
                "action": "rds:DescribeInstallationMedia",
                "undocumented": true
            }
        ],
        "RDS.ImportInstallationMedia": [
            {
                "action": "rds:ImportInstallationMedia",
                "undocumented": true
            }
        ],
        "RDS.ModifyCertificates": [
            {
                "action": "rds:ModifyCertificates",
                "undocumented": true
            }
        ],
        "RDS.StartDBInstanceAutomatedBackupsReplication": [
            {
                "action": "rds:StartDBInstanceAutomatedBackupsReplication",
                "undocumented": true
            }
        ],
        "RDS.StopDBInstanceAutomatedBackupsReplication": [
            {
                "action": "rds:StopDBInstanceAutomatedBackupsReplication",
                "undocumented": true
            }
        ],
        "Redshift.CreateUsageLimit": [
            {
                "action": "redshift:CreateUsageLimit",
                "undocumented": true
            }
        ],
        "Redshift.DeleteUsageLimit": [
            {
                "action": "redshift:DeleteUsageLimit",
                "undocumented": true
            }
        ],
        "Redshift.DescribeUsageLimits": [
            {
                "action": "redshift:DescribeUsageLimits",
                "undocumented": true
            }
        ],
        "Redshift.ModifyUsageLimit": [
            {
                "action": "redshift:ModifyUsageLimit",
                "undocumented": true
            }
        ],
        "Route53Domains.AcceptDomainTransferFromAnotherAwsAccount": [
            {
                "action": "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
                "undocumented": true
            }
        ],
        "Route53Domains.CancelDomainTransferToAnotherAwsAccount": [
            {
                "action": "route53domains:CancelDomainTransferToAnotherAwsAccount",
                "undocumented": true
            }
        ],
        "Route53Domains.CheckDomainTransferability": [
            {
                "action": "route53domains:CheckDomainTransferability",
                "undocumented": true
            }
        ],
        "Route53Domains.RejectDomainTransferFromAnotherAwsAccount": [
            {
                "action": "route53domains:RejectDomainTransferFromAnotherAwsAccount",
                "undocumented": true
            }
        ],
        "Route53Domains.TransferDomainToAnotherAwsAccount": [
            {
                "action": "route53domains:TransferDomainToAnotherAwsAccount",
                "undocumented": true
            }
        ],
        "S3.CopyObject": [
            {
                "action": "s3:ListBucket",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            },
            {
                "action": "s3:GetObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            },
            {
                "action": "s3:GetObjectTagging",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                },
                "conditions": {
                    "lhs": "TaggingDirective",
                    "op": "NotEquals",
                    "rhs": "REPLACE"
                }
            },
            {
                "action": "s3:PutObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            },
            {
                "action": "s3:PutObjectTagging",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            },
            {
                "action": "s3:PutObjectAcl",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3.DeleteBucketAnalyticsConfiguration": [
            {
                "action": "s3:PutAnalyticsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketCors": [
            {
                "action": "s3:PutBucketCORS",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketEncryption": [
            {
                "action": "s3:PutEncryptionConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketInventoryConfiguration": [
            {
                "action": "s3:PutInventoryConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketLifecycle": [
            {
                "action": "s3:PutLifecycleConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketMetricsConfiguration": [
            {
                "action": "s3:PutMetricsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketReplication": [
            {
                "action": "s3:PutReplicationConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteBucketTagging": [
            {
                "action": "s3:PutBucketTagging",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.DeleteObjects": [
            {
                "action": "DeleteObject",
                "conditions": {
                    "lhs": "Delete.Objects[].VersionId",
                    "op": "NotExists"
                }
            },
            {
                "action": "DeleteObjectVersion",
                "conditions": {
                    "lhs": "Delete.Objects[].VersionId",
                    "op": "Exists"
                }
            }
        ],
        "S3.DeletePublicAccessBlock": [
            {
                "action": "s3:PutBucketPublicAccessBlock",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketAccelerateConfiguration": [
            {
                "action": "s3:GetAccelerateConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketAnalyticsConfiguration": [
            {
                "action": "s3:GetAnalyticsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketEncryption": [
            {
                "action": "s3:GetEncryptionConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketInventoryConfiguration": [
            {
                "action": "s3:GetInventoryConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketLifecycle": [
            {
                "action": "s3:GetLifecycleConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketLifecycleConfiguration": [
            {
                "action": "s3:GetLifecycleConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketMetricsConfiguration": [
            {
                "action": "s3:GetMetricsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketNotificationConfiguration": [
            {
                "action": "s3:GetBucketNotification"
            }
        ],
        "S3.GetBucketReplication": [
            {
                "action": "s3:GetReplicationConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetPublicAccessBlock": [
            {
                "action": "s3:GetBucketPublicAccessBlock",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListBucketAnalyticsConfigurations": [
            {
                "action": "s3:GetAnalyticsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListBucketInventoryConfigurations": [
            {
                "action": "s3:GetInventoryConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListBucketMetricsConfigurations": [
            {
                "action": "s3:GetMetricsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListObjects": [
            {
                "action": "s3:ListBucket",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListObjectsV2": [
            {
                "action": "s3:ListBucket",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketAccelerateConfiguration": [
            {
                "action": "s3:PutAccelerateConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketAnalyticsConfiguration": [
            {
                "action": "s3:PutAnalyticsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketEncryption": [
            {
                "action": "s3:PutEncryptionConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketInventoryConfiguration": [
            {
                "action": "s3:PutInventoryConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketLifecycle": [
            {
                "action": "s3:PutLifecycleConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketLifecycleConfiguration": [
            {
                "action": "s3:PutLifecycleConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketMetricsConfiguration": [
            {
                "action": "s3:PutMetricsConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketNotificationConfiguration": [
            {
                "action": "s3:PutBucketNotification",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketReplication": [
            {
                "action": "s3:PutReplicationConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutPublicAccessBlock": [
            {
                "action": "s3:PutBucketPublicAccessBlock",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.SelectObjectContent": [
            {
                "action": "s3:GetObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3Control.DeleteBucketLifecycleConfiguration": [
            {
                "action": "s3-outposts:DeleteLifecycleConfiguration"
            }
        ],
        "S3Control.DeleteBucketTagging": [
            {
                "action": "s3-outposts:PutBucketTagging"
            }
        ],
        "S3Control.GetBucket": [
            {
                "action": "s3-outposts:GetBucket"
            }
        ],
        "S3Control.GetBucketLifecycleConfiguration": [
            {
                "action": "s3-outposts:GetLifecycleConfiguration"
            }
        ],
        "Snowball.CreateReturnShippingLabel": [
            {
                "action": "snowball:CreateReturnShippingLabel",
                "undocumented": true
            }
        ],
        "Snowball.DescribeReturnShippingLabel": [
            {
                "action": "snowball:DescribeReturnShippingLabel",
                "undocumented": true
            }
        ],
        "Snowball.GetSoftwareUpdates": [
            {
                "action": "snowball:GetSoftwareUpdates",
                "undocumented": true
            }
        ],
        "Snowball.ListCompatibleImages": [
            {
                "action": "snowball:ListCompatibleImages",
                "undocumented": true
            }
        ],
        "Snowball.UpdateJobShipmentState": [
            {
                "action": "snowball:UpdateJobShipmentState",
                "undocumented": true
            }
        ],
        "Greengrass.GetThingRuntimeConfiguration": [
            {
                "action": "greengrass:GetThingRuntimeConfiguration",
                "undocumented": true
            }
        ],
        "Greengrass.UpdateThingRuntimeConfiguration": [
            {
                "action": "greengrass:UpdateThingRuntimeConfiguration",
                "undocumented": true
            }
        ],
        "MigrationHub.ListApplicationStates": [
            {
                "action": "mgh:ListApplicationStates",
                "undocumented": true
            }
        ],
        "CloudHSMV2.ModifyBackupAttributes": [
            {
                "action": "cloudhsm:ModifyBackupAttributes",
                "undocumented": true
            }
        ],
        "CloudHSMV2.ModifyCluster": [
            {
                "action": "cloudhsm:ModifyCluster",
                "undocumented": true
            }
        ],
        "Glue.BatchUpdatePartition": [
            {
                "action": "glue:UpdatePartition",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.CreatePartitionIndex": [
            {
                "action": "glue:UpdateTable",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.DeleteColumnStatisticsForPartition": [
            {
                "action": "glue:UpdatePartition",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.DeleteColumnStatisticsForTable": [
            {
                "action": "glue:UpdateTable",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.DeletePartitionIndex": [
            {
                "action": "glue:UpdateTable",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.GetColumnStatisticsForPartition": [
            {
                "action": "glue:GetPartition",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.GetColumnStatisticsForTable": [
            {
                "action": "glue:GetTable",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.GetPartitionIndexes": [
            {
                "action": "glue:GetTable",
                "resource_mappings": {
                    "DatabaseName": {
                        "template": "${DatabaseName}"
                    },
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "Glue.ResumeWorkflowRun": [
            {
                "action": "glue:ResumeWorkflowRun",
                "undocumented": true
            }
        ],
        "Glue.StopWorkflowRun": [
            {
                "action": "glue:StopWorkflowRun",
                "undocumented": true
            }
        ],
        "Mobile.DescribeProject": [
            {
                "action": "mobilehub:GetProject",
                "resource_mappings": {
                    "ProjectId": {
                        "template": "${projectId}"
                    }
                }
            }
        ],
        "MediaPackage.ConfigureLogs": [
            {
                "action": "mediapackage:UpdateChannel",
                "resource_mappings": {
                    "ChannelIdentifier": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "MediaPackage.RotateChannelCredentials": [
            {
                "action": "mediapackage:RotateChannelCredentials",
                "undocumented": true
            }
        ],
        "AppSync.CreateApiCache": [
            {
                "action": "appsync:CreateApiCache",
                "undocumented": true
            }
        ],
        "AppSync.DeleteApiCache": [
            {
                "action": "appsync:DeleteApiCache",
                "undocumented": true
            }
        ],
        "AppSync.FlushApiCache": [
            {
                "action": "appsync:FlushApiCache",
                "undocumented": true
            }
        ],
        "AppSync.GetApiCache": [
            {
                "action": "appsync:GetApiCache",
                "undocumented": true
            }
        ],
        "AppSync.UpdateApiCache": [
            {
                "action": "appsync:UpdateApiCache",
                "undocumented": true
            }
        ],
        "GuardDuty.GetMemberDetectors": [
            {
                "action": "guardduty:GetMemberDetectors",
                "undocumented": true
            }
        ],
        "GuardDuty.GetUsageStatistics": [
            {
                "action": "guardduty:GetUsageStatistics",
                "undocumented": true
            }
        ],
        "GuardDuty.UpdateMemberDetectors": [
            {
                "action": "guardduty:UpdateMemberDetectors",
                "undocumented": true
            }
        ],
        "SageMaker.DeleteHumanTaskUi": [
            {
                "action": "sagemaker:DeleteHumanTaskUi",
                "undocumented": true
            }
        ],
        "ResourceGroups.PutGroupConfiguration": [
            {
                "action": "resource-groups:PutGroupConfiguration",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.AssociateDeviceWithNetworkProfile": [
            {
                "action": "a4b:AssociateDeviceWithNetworkProfile",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.CreateGatewayGroup": [
            {
                "action": "a4b:CreateGatewayGroup",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.CreateNetworkProfile": [
            {
                "action": "a4b:CreateNetworkProfile",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.DeleteDeviceUsageData": [
            {
                "action": "a4b:DeleteDeviceUsageData",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.DeleteGatewayGroup": [
            {
                "action": "a4b:DeleteGatewayGroup",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.DeleteNetworkProfile": [
            {
                "action": "a4b:DeleteNetworkProfile",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.GetGateway": [
            {
                "action": "a4b:GetGateway",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.GetGatewayGroup": [
            {
                "action": "a4b:GetGatewayGroup",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.GetInvitationConfiguration": [
            {
                "action": "a4b:GetInvitationConfiguration",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.ListGatewayGroups": [
            {
                "action": "a4b:ListGatewayGroups",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.ListGateways": [
            {
                "action": "a4b:ListGateways",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.PutInvitationConfiguration": [
            {
                "action": "a4b:PutInvitationConfiguration",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.SendAnnouncement": [
            {
                "action": "a4b:SendAnnouncement",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.UpdateGateway": [
            {
                "action": "a4b:UpdateGateway",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.UpdateGatewayGroup": [
            {
                "action": "a4b:UpdateGatewayGroup",
                "undocumented": true
            }
        ],
        "AlexaForBusiness.UpdateNetworkProfile": [
            {
                "action": "a4b:UpdateNetworkProfile",
                "undocumented": true
            }
        ],
        "IoTAnalytics.ListDatasetContents": [
            {
                "action": "iotanalytics:ListDatasetContents",
                "undocumented": true
            }
        ],
        "PinpointEmail.GetDomainDeliverabilityCampaign": [
            {
                "action": "ses:GetDomainDeliverabilityCampaign",
                "undocumented": true
            }
        ],
        "PinpointEmail.ListDomainDeliverabilityCampaigns": [
            {
                "action": "ses:ListDomainDeliverabilityCampaigns",
                "undocumented": true
            }
        ],
        "Amplify.CreateWebhook": [
            {
                "action": "amplify:CreateWebhook",
                "undocumented": true
            }
        ],
        "Amplify.DeleteWebhook": [
            {
                "action": "amplify:DeleteWebhook",
                "undocumented": true
            }
        ],
        "Amplify.GetWebhook": [
            {
                "action": "amplify:GetWebhook",
                "undocumented": true
            }
        ],
        "Amplify.ListTagsForResource": [
            {
                "action": "amplify:ListTagsForResource",
                "undocumented": true
            }
        ],
        "Amplify.ListWebhooks": [
            {
                "action": "amplify:ListWebhooks",
                "undocumented": true
            }
        ],
        "Amplify.UpdateWebhook": [
            {
                "action": "amplify:UpdateWebhook",
                "undocumented": true
            }
        ],
        "DataSync.UpdateTaskExecution": [
            {
                "action": "datasync:UpdateTaskExecution",
                "undocumented": true
            }
        ],
        "ComprehendMedical.DescribeEntitiesDetectionV2Job": [
            {
                "action": "comprehendmedical:DescribeEntitiesDetectionV2Job",
                "undocumented": true
            }
        ],
        "ComprehendMedical.DescribeICD10CMInferenceJob": [
            {
                "action": "comprehendmedical:DescribeICD10CMInferenceJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.DescribePHIDetectionJob": [
            {
                "action": "comprehendmedical:DescribePHIDetectionJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.DescribeRxNormInferenceJob": [
            {
                "action": "comprehendmedical:DescribeRxNormInferenceJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.DetectEntitiesV2": [
            {
                "action": "comprehendmedical:DetectEntitiesV2",
                "undocumented": true
            }
        ],
        "ComprehendMedical.InferICD10CM": [
            {
                "action": "comprehendmedical:InferICD10CM",
                "undocumented": true
            }
        ],
        "ComprehendMedical.InferRxNorm": [
            {
                "action": "comprehendmedical:InferRxNorm",
                "undocumented": true
            }
        ],
        "ComprehendMedical.ListEntitiesDetectionV2Jobs": [
            {
                "action": "comprehendmedical:ListEntitiesDetectionV2Jobs",
                "undocumented": true
            }
        ],
        "ComprehendMedical.ListICD10CMInferenceJobs": [
            {
                "action": "comprehendmedical:ListICD10CMInferenceJobs",
                "undocumented": true
            }
        ],
        "ComprehendMedical.ListPHIDetectionJobs": [
            {
                "action": "comprehendmedical:ListPHIDetectionJobs",
                "undocumented": true
            }
        ],
        "ComprehendMedical.ListRxNormInferenceJobs": [
            {
                "action": "comprehendmedical:ListRxNormInferenceJobs",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StartEntitiesDetectionV2Job": [
            {
                "action": "comprehendmedical:StartEntitiesDetectionV2Job",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StartICD10CMInferenceJob": [
            {
                "action": "comprehendmedical:StartICD10CMInferenceJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StartPHIDetectionJob": [
            {
                "action": "comprehendmedical:StartPHIDetectionJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StartRxNormInferenceJob": [
            {
                "action": "comprehendmedical:StartRxNormInferenceJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StopEntitiesDetectionV2Job": [
            {
                "action": "comprehendmedical:StopEntitiesDetectionV2Job",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StopICD10CMInferenceJob": [
            {
                "action": "comprehendmedical:StopICD10CMInferenceJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StopPHIDetectionJob": [
            {
                "action": "comprehendmedical:StopPHIDetectionJob",
                "undocumented": true
            }
        ],
        "ComprehendMedical.StopRxNormInferenceJob": [
            {
                "action": "comprehendmedical:StopRxNormInferenceJob",
                "undocumented": true
            }
        ],
        "KinesisAnalyticsV2.CreateApplicationPresignedUrl": [
            {
                "action": "kinesisanalytics:CreateApplicationPresignedUrl",
                "undocumented": true
            }
        ],
        "MediaConnect.AddFlowSources": [
            {
                "action": "mediaconnect:AddFlowSources",
                "undocumented": true
            }
        ],
        "MediaConnect.AddFlowVpcInterfaces": [
            {
                "action": "mediaconnect:AddFlowVpcInterfaces",
                "undocumented": true
            }
        ],
        "MediaConnect.DescribeOffering": [
            {
                "action": "mediaconnect:DescribeOffering",
                "undocumented": true
            }
        ],
        "MediaConnect.DescribeReservation": [
            {
                "action": "mediaconnect:DescribeReservation",
                "undocumented": true
            }
        ],
        "MediaConnect.ListOfferings": [
            {
                "action": "mediaconnect:ListOfferings",
                "undocumented": true
            }
        ],
        "MediaConnect.ListReservations": [
            {
                "action": "mediaconnect:ListReservations",
                "undocumented": true
            }
        ],
        "MediaConnect.ListTagsForResource": [
            {
                "action": "mediaconnect:ListTagsForResource",
                "undocumented": true
            }
        ],
        "MediaConnect.PurchaseOffering": [
            {
                "action": "mediaconnect:PurchaseOffering",
                "undocumented": true
            }
        ],
        "MediaConnect.RemoveFlowSource": [
            {
                "action": "mediaconnect:RemoveFlowSource",
                "undocumented": true
            }
        ],
        "MediaConnect.RemoveFlowVpcInterface": [
            {
                "action": "mediaconnect:RemoveFlowVpcInterface",
                "undocumented": true
            }
        ],
        "MediaConnect.TagResource": [
            {
                "action": "mediaconnect:TagResource",
                "undocumented": true
            }
        ],
        "MediaConnect.UntagResource": [
            {
                "action": "mediaconnect:UntagResource",
                "undocumented": true
            }
        ],
        "MediaConnect.UpdateFlow": [
            {
                "action": "mediaconnect:UpdateFlow",
                "undocumented": true
            }
        ],
        "FSx.AssociateFileSystemAliases": [
            {
                "action": "fsx:AssociateFileSystemAliases",
                "undocumented": true
            }
        ],
        "FSx.DescribeFileSystemAliases": [
            {
                "action": "fsx:DescribeFileSystemAliases",
                "undocumented": true
            }
        ],
        "FSx.DisassociateFileSystemAliases": [
            {
                "action": "fsx:DisassociateFileSystemAliases",
                "undocumented": true
            }
        ],
        "Kafka.UpdateBrokerType": [
            {
                "action": "kafka:UpdateBrokerType",
                "undocumented": true
            }
        ],
        "ApiGatewayV2.CreateApiMapping": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}/apimappings"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateAuthorizer": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/authorizers"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateDeployment": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/deployments"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateDomainName": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateIntegration": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateIntegrationResponse": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateModel": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/models"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateRoute": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateRouteResponse": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}/routeresponses"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateStage": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages"
                    }
                }
            }
        ],
        "ApiGatewayV2.CreateVpcLink": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/vpclinks"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteAccessLogSettings": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages/${StageName}/accesslogsettings"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteApi": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteApiMapping": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}/apimappings/${ApiMappingId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteAuthorizer": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/authorizers/${AuthorizerId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteCorsConfiguration": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/cors"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteDeployment": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/deployments/${DeploymentId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteDomainName": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteIntegration": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteIntegrationResponse": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteModel": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/models/${ModelId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteRoute": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteRouteRequestParameter": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}/requestparameters/${RequestParameterKey}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteRouteResponse": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteRouteSettings": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages/${StageName}/routesettings/${RouteKey}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteStage": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages/${StageName}"
                    }
                }
            }
        ],
        "ApiGatewayV2.DeleteVpcLink": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/vpclinks/${VpcLinkId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetApiMapping": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}/apimappings/${ApiMappingId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetApiMappings": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}/apimappings"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetAuthorizer": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/authorizers/${AuthorizerId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetAuthorizers": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/authorizers"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetDeployment": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/deployments/${DeploymentId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetDeployments": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/deployments"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetDomainName": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetDomainNames": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetIntegration": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetIntegrationResponse": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetIntegrationResponses": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetIntegrations": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetModel": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/models/${ModelId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetModelTemplate": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/models/${ModelId}/template"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetModels": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/models"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetRoute": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetRouteResponse": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetRouteResponses": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}/routeresponses"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetRoutes": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetStage": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages/${StageName}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetStages": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetTags": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/tags/${ResourceArn}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetVpcLink": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/vpclinks/${VpcLinkId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.GetVpcLinks": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/vpclinks"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateApi": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateApiMapping": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}/apimappings/${ApiMappingId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateAuthorizer": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/authorizers/${AuthorizerId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateDeployment": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/deployments/${DeploymentId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateDomainName": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/domainnames/${DomainName}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateIntegration": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateIntegrationResponse": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateModel": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/models/${ModelId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateRoute": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateRouteResponse": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateStage": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages/${StageName}"
                    }
                }
            }
        ],
        "ApiGatewayV2.UpdateVpcLink": [
            {
                "action": "apigateway:PATCH",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/vpclinks/${VpcLinkId}"
                    }
                }
            }
        ],
        "MediaPackageVod.UpdatePackagingGroup": [
            {
                "action": "mediapackage-vod:UpdatePackagingGroup",
                "undocumented": true
            }
        ],
        "SESV2.CreateContact": [
            {
                "action": "ses:CreateContact",
                "undocumented": true
            }
        ],
        "SESV2.CreateContactList": [
            {
                "action": "ses:CreateContactList",
                "undocumented": true
            }
        ],
        "SESV2.CreateEmailIdentityPolicy": [
            {
                "action": "ses:CreateEmailIdentityPolicy",
                "undocumented": true
            }
        ],
        "SESV2.CreateEmailTemplate": [
            {
                "action": "ses:CreateEmailTemplate",
                "undocumented": true
            }
        ],
        "SESV2.CreateImportJob": [
            {
                "action": "ses:CreateImportJob",
                "undocumented": true
            }
        ],
        "SESV2.DeleteContact": [
            {
                "action": "ses:DeleteContact",
                "undocumented": true
            }
        ],
        "SESV2.DeleteContactList": [
            {
                "action": "ses:DeleteContactList",
                "undocumented": true
            }
        ],
        "SESV2.DeleteEmailIdentityPolicy": [
            {
                "action": "ses:DeleteEmailIdentityPolicy",
                "undocumented": true
            }
        ],
        "SESV2.DeleteEmailTemplate": [
            {
                "action": "ses:DeleteEmailTemplate",
                "undocumented": true
            }
        ],
        "SESV2.DeleteSuppressedDestination": [
            {
                "action": "ses:DeleteSuppressedDestination",
                "undocumented": true
            }
        ],
        "SESV2.GetContact": [
            {
                "action": "ses:GetContact",
                "undocumented": true
            }
        ],
        "SESV2.GetContactList": [
            {
                "action": "ses:GetContactList",
                "undocumented": true
            }
        ],
        "SESV2.GetDomainDeliverabilityCampaign": [
            {
                "action": "ses:GetDomainDeliverabilityCampaign",
                "undocumented": true
            }
        ],
        "SESV2.GetEmailIdentityPolicies": [
            {
                "action": "ses:GetEmailIdentityPolicies",
                "undocumented": true
            }
        ],
        "SESV2.GetEmailTemplate": [
            {
                "action": "ses:GetEmailTemplate",
                "undocumented": true
            }
        ],
        "SESV2.GetImportJob": [
            {
                "action": "ses:GetImportJob",
                "undocumented": true
            }
        ],
        "SESV2.GetSuppressedDestination": [
            {
                "action": "ses:GetSuppressedDestination",
                "undocumented": true
            }
        ],
        "SESV2.ListContactLists": [
            {
                "action": "ses:ListContactLists",
                "undocumented": true
            }
        ],
        "SESV2.ListContacts": [
            {
                "action": "ses:ListContacts",
                "undocumented": true
            }
        ],
        "SESV2.ListDomainDeliverabilityCampaigns": [
            {
                "action": "ses:ListDomainDeliverabilityCampaigns",
                "undocumented": true
            }
        ],
        "SESV2.ListEmailTemplates": [
            {
                "action": "ses:ListEmailTemplates",
                "undocumented": true
            }
        ],
        "SESV2.ListImportJobs": [
            {
                "action": "ses:ListImportJobs",
                "undocumented": true
            }
        ],
        "SESV2.ListSuppressedDestinations": [
            {
                "action": "ses:ListSuppressedDestinations",
                "undocumented": true
            }
        ],
        "SESV2.PutAccountDetails": [
            {
                "action": "ses:PutAccountDetails",
                "undocumented": true
            }
        ],
        "SESV2.PutAccountSuppressionAttributes": [
            {
                "action": "ses:PutAccountSuppressionAttributes",
                "undocumented": true
            }
        ],
        "SESV2.PutConfigurationSetSuppressionOptions": [
            {
                "action": "ses:PutConfigurationSetSuppressionOptions",
                "undocumented": true
            }
        ],
        "SESV2.PutEmailIdentityConfigurationSetAttributes": [
            {
                "action": "ses:PutEmailIdentityConfigurationSetAttributes",
                "undocumented": true
            }
        ],
        "SESV2.PutEmailIdentityDkimSigningAttributes": [
            {
                "action": "ses:PutEmailIdentityDkimSigningAttributes",
                "undocumented": true
            }
        ],
        "SESV2.PutSuppressedDestination": [
            {
                "action": "ses:PutSuppressedDestination",
                "undocumented": true
            }
        ],
        "SESV2.SendBulkEmail": [
            {
                "action": "ses:SendBulkEmail",
                "undocumented": true
            }
        ],
        "SESV2.TestRenderEmailTemplate": [
            {
                "action": "ses:TestRenderEmailTemplate",
                "undocumented": true
            }
        ],
        "SESV2.UpdateContact": [
            {
                "action": "ses:UpdateContact",
                "undocumented": true
            }
        ],
        "SESV2.UpdateContactList": [
            {
                "action": "ses:UpdateContactList",
                "undocumented": true
            }
        ],
        "SESV2.UpdateEmailIdentityPolicy": [
            {
                "action": "ses:UpdateEmailIdentityPolicy",
                "undocumented": true
            }
        ],
        "SESV2.UpdateEmailTemplate": [
            {
                "action": "ses:UpdateEmailTemplate",
                "undocumented": true
            }
        ],
        "ElasticInference.DescribeAcceleratorOfferings": [
            {
                "action": "elastic-inference:DescribeAcceleratorOfferings",
                "undocumented": true
            }
        ],
        "ElasticInference.DescribeAcceleratorTypes": [
            {
                "action": "elastic-inference:DescribeAcceleratorTypes",
                "undocumented": true
            }
        ],
        "ElasticInference.DescribeAccelerators": [
            {
                "action": "elastic-inference:DescribeAccelerators",
                "undocumented": true
            }
        ],
        "ElasticInference.ListTagsForResource": [
            {
                "action": "elastic-inference:ListTagsForResource",
                "undocumented": true
            }
        ],
        "ElasticInference.TagResource": [
            {
                "action": "elastic-inference:TagResource",
                "undocumented": true
            }
        ],
        "ElasticInference.UntagResource": [
            {
                "action": "elastic-inference:UntagResource",
                "undocumented": true
            }
        ],
        "Imagebuilder.ImportComponent": [
            {
                "action": "imagebuilder:ImportComponent",
                "undocumented": true
            }
        ],
        "CodeGuruReviewer.CreateCodeReview": [
            {
                "action": "codeguru-reviewer:CreateCodeReview",
                "undocumented": true
            }
        ],
        "CodeGuruReviewer.ListTagsForResource": [
            {
                "action": "codeguru-reviewer:ListTagsForResource",
                "undocumented": true
            }
        ],
        "CodeGuruReviewer.TagResource": [
            {
                "action": "codeguru-reviewer:TagResource",
                "undocumented": true
            }
        ],
        "CodeGuruReviewer.UntagResource": [
            {
                "action": "codeguru-reviewer:UntagResource",
                "undocumented": true
            }
        ],
        "Synthetics.DescribeRuntimeVersions": [
            {
                "action": "synthetics:DescribeRuntimeVersions",
                "undocumented": true
            }
        ],
        "Synthetics.GetCanary": [
            {
                "action": "synthetics:GetCanary",
                "undocumented": true
            }
        ],
        "IoTSiteWise.DescribeDefaultEncryptionConfiguration": [
            {
                "action": "iotsitewise:DescribeDefaultEncryptionConfiguration",
                "undocumented": true
            }
        ],
        "IoTSiteWise.PutDefaultEncryptionConfiguration": [
            {
                "action": "iotsitewise:PutDefaultEncryptionConfiguration",
                "undocumented": true
            }
        ],
        "EMRcontainers.CreateManagedEndpoint": [
            {
                "action": "emr-containers:CreateManagedEndpoint",
                "undocumented": true
            }
        ],
        "EMRcontainers.DeleteManagedEndpoint": [
            {
                "action": "emr-containers:DeleteManagedEndpoint",
                "undocumented": true
            }
        ],
        "EMRcontainers.DescribeManagedEndpoint": [
            {
                "action": "emr-containers:DescribeManagedEndpoint",
                "undocumented": true
            }
        ],
        "EMRcontainers.ListManagedEndpoints": [
            {
                "action": "emr-containers:ListManagedEndpoints",
                "undocumented": true
            }
        ],
        "HealthLake.CreateFHIRDatastore": [
            {
                "action": "healthlake:CreateFHIRDatastore",
                "undocumented": true
            }
        ],
        "HealthLake.DeleteFHIRDatastore": [
            {
                "action": "healthlake:DeleteFHIRDatastore",
                "undocumented": true
            }
        ],
        "HealthLake.DescribeFHIRDatastore": [
            {
                "action": "healthlake:DescribeFHIRDatastore",
                "undocumented": true
            }
        ],
        "HealthLake.DescribeFHIRExportJob": [
            {
                "action": "healthlake:DescribeFHIRExportJob",
                "undocumented": true
            }
        ],
        "HealthLake.DescribeFHIRImportJob": [
            {
                "action": "healthlake:DescribeFHIRImportJob",
                "undocumented": true
            }
        ],
        "HealthLake.ListFHIRDatastores": [
            {
                "action": "healthlake:ListFHIRDatastores",
                "undocumented": true
            }
        ],
        "HealthLake.StartFHIRExportJob": [
            {
                "action": "healthlake:StartFHIRExportJob",
                "undocumented": true
            }
        ],
        "HealthLake.StartFHIRImportJob": [
            {
                "action": "healthlake:StartFHIRImportJob",
                "undocumented": true
            }
        ],
        "LexModelsV2.CreateBot": [
            {
                "action": "lex:PutBot"
            }
        ],
        "LexModelsV2.CreateBotAlias": [
            {
                "action": "lex:PutBotAlias"
            }
        ],
        "LexModelsV2.CreateIntent": [
            {
                "action": "lex:PutIntent"
            }
        ],
        "LexModelsV2.CreateSlotType": [
            {
                "action": "lex:PutSlotType"
            }
        ],
        "LexModelsV2.DescribeIntent": [
            {
                "action": "lex:GetIntent"
            }
        ],
        "LexModelsV2.DescribeSlotType": [
            {
                "action": "lex:GetSlotType"
            }
        ],
        "LexModelsV2.ListBotVersions": [
            {
                "action": "lex:GetBotVersions"
            }
        ],
        "LexModelsV2.ListBots": [
            {
                "action": "lex:GetBots"
            }
        ],
        "LexModelsV2.ListBuiltInIntents": [
            {
                "action": "lex:GetBuiltinIntents"
            }
        ],
        "LexModelsV2.ListBuiltInSlotTypes": [
            {
                "action": "lex:GetBuiltinSlotTypes"
            }
        ],
        "LexModelsV2.ListIntents": [
            {
                "action": "lex:GetIntents"
            }
        ],
        "LexModelsV2.ListSlotTypes": [
            {
                "action": "lex:GetSlotTypes"
            }
        ],
        "LexModelsV2.UpdateBot": [
            {
                "action": "lex:PutBot"
            }
        ],
        "LexModelsV2.UpdateBotAlias": [
            {
                "action": "lex:PutBotAlias"
            }
        ],
        "LexModelsV2.UpdateIntent": [
            {
                "action": "lex:PutIntent"
            }
        ],
        "LexModelsV2.UpdateSlotType": [
            {
                "action": "lex:PutSlotType"
            }
        ],
        "ApiGatewayV2.CreateApi": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apis"
                    }
                }
            }
        ],
        "ApiGatewayV2.ExportApi": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apis/$APIID/exports/$SPECIFICATION",
                        "variables": {
                            "APIID": "ApiId",
                            "SPECIFICATION": "Specification"
                        }
                    }
                }
            }
        ],
        "ApiGatewayV2.GetApi": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apis/$APIID",
                        "variables": {
                            "APIID": "ApiId"
                        }
                    }
                }
            }
        ],
        "ApiGatewayV2.GetApis": [
            {
                "action": "apigateway:GET",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/apis"
                    }
                }
            }
        ],
        "ApiGatewayV2.TagResource": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/tags/%urlencode:$RESOURCEARN%",
                        "variables": {
                            "RESOURCEARN": "ResourceArn"
                        }
                    }
                }
            }
        ],
        "ApiGatewayV2.UntagResource": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/tags/%urlencode:$RESOURCEARN%",
                        "variables": {
                            "RESOURCEARN": "ResourceArn"
                        }
                    }
                }
            }
        ],
        "S3.ListBuckets": [
            {
                "action": "s3:ListAllMyBuckets"
            }
        ],
        "S3.HeadBucket": [
            {
                "action": "s3:ListBucket",
                "resource_mappings": {
                    "BucketName": {
                        "parameter": "Bucket",
                        "conditions": {
                            "lhs": "Bucket",
                            "op": "NotStartsWith",
                            "rhs": "arn:"
                        }
                    }
                },
                "condition_mappings": {
                    "s3:ResourceAccount": {
                        "parameter": "ExpectedBucketOwner"
                    },
                    "s3:DataAccessPointArn": {
                        "parameter": "Bucket",
                        "conditions": {
                            "lhs": "Bucket",
                            "op": "Contains",
                            "rhs": ":accesspoint/"
                        }
                    }
                }
            }
        ],
        "S3.HeadObject": [
            {
                "action": "s3:GetObject",
                "conditions": {
                    "lhs": "VersionId",
                    "op": "NotExists"
                },
                "resource_mappings": {
                    "BucketName": {
                        "parameter": "Bucket",
                        "conditions": {
                            "lhs": "Bucket",
                            "op": "NotStartsWith",
                            "rhs": "arn:"
                        }
                    },
                    "ObjectName": {
                        "parameter": "Key"
                    }
                },
                "condition_mappings": {
                    "s3:ResourceAccount": {
                        "parameter": "ExpectedBucketOwner"
                    },
                    "s3:DataAccessPointArn": {
                        "parameter": "Bucket",
                        "conditions": {
                            "lhs": "Bucket",
                            "op": "Contains",
                            "rhs": ":accesspoint/"
                        }
                    }
                }
            },
            {
                "action": "s3:GetObjectVersion",
                "conditions": {
                    "lhs": "VersionId",
                    "op": "Exists"
                },
                "resource_mappings": {
                    "BucketName": {
                        "parameter": "Bucket",
                        "conditions": {
                            "lhs": "Bucket",
                            "op": "NotStartsWith",
                            "rhs": "arn:"
                        }
                    },
                    "ObjectName": {
                        "parameter": "Key"
                    }
                },
                "condition_mappings": {
                    "s3:versionid": {
                        "parameter": "VersionId"
                    },
                    "s3:ResourceAccount": {
                        "parameter": "ExpectedBucketOwner"
                    },
                    "s3:DataAccessPointArn": {
                        "parameter": "Bucket",
                        "conditions": {
                            "lhs": "Bucket",
                            "op": "Contains",
                            "rhs": ":accesspoint/"
                        }
                    }
                }
            }
        ],
        "CognitoIdentity.GetPrincipalTagAttributeMap": [
            {
                "action": "cognito-identity:GetPrincipalTagAttributeMap",
                "undocumented": true
            }
        ],
        "CognitoIdentity.SetPrincipalTagAttributeMap": [
            {
                "action": "cognito-identity:SetPrincipalTagAttributeMap",
                "undocumented": true
            }
        ],
        "APIGateway.FlushStageAuthorizersCache": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages/${stageName}/cache/authorizers"
                    }
                }
            }
        ],
        "APIGateway.FlushStageCache": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/stages/${stageName}/cache/data"
                    }
                }
            }
        ],
        "APIGateway.GenerateClientCertificate": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/clientcertificates"
                    }
                }
            }
        ],
        "APIGateway.ImportApiKeys": [
            {
                "action": "apigateway:POST"
            }
        ],
        "APIGateway.ImportRestApi": [
            {
                "action": "apigateway:POST"
            }
        ],
        "APIGateway.TagResource": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/tags/${resourceArn}"
                    }
                }
            }
        ],
        "APIGateway.TestInvokeAuthorizer": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/authorizers/${authorizerId}"
                    }
                }
            }
        ],
        "APIGateway.TestInvokeMethod": [
            {
                "action": "apigateway:POST",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
                    }
                }
            }
        ],
        "APIGateway.UntagResource": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/tags/${resourceArn}"
                    }
                }
            }
        ],
        "Lightsail.DisableAddOn": [
            {
                "action": "lightsail:DisableAddOn",
                "undocumented": true
            }
        ],
        "Lightsail.EnableAddOn": [
            {
                "action": "lightsail:EnableAddOn",
                "undocumented": true
            }
        ],
        "Shield.AssociateProactiveEngagementDetails": [
            {
                "action": "shield:AssociateProactiveEngagementDetails",
                "undocumented": true
            }
        ],
        "Shield.CreateProtectionGroup": [
            {
                "action": "shield:CreateProtectionGroup",
                "undocumented": true
            }
        ],
        "Shield.DeleteProtectionGroup": [
            {
                "action": "shield:DeleteProtectionGroup",
                "undocumented": true
            }
        ],
        "Shield.DescribeAttackStatistics": [
            {
                "action": "shield:DescribeAttackStatistics",
                "undocumented": true
            }
        ],
        "Shield.DescribeProtectionGroup": [
            {
                "action": "shield:DescribeProtectionGroup",
                "undocumented": true
            }
        ],
        "Shield.DisableProactiveEngagement": [
            {
                "action": "shield:DisableProactiveEngagement",
                "undocumented": true
            }
        ],
        "Shield.EnableProactiveEngagement": [
            {
                "action": "shield:EnableProactiveEngagement",
                "undocumented": true
            }
        ],
        "Shield.ListProtectionGroups": [
            {
                "action": "shield:ListProtectionGroups",
                "undocumented": true
            }
        ],
        "Shield.ListResourcesInProtectionGroup": [
            {
                "action": "shield:ListResourcesInProtectionGroup",
                "undocumented": true
            }
        ],
        "Shield.UpdateProtectionGroup": [
            {
                "action": "shield:UpdateProtectionGroup",
                "undocumented": true
            }
        ],
        "SWF.UndeprecateActivityType": [
            {
                "action": "swf:UndeprecateActivityType",
                "undocumented": true
            }
        ],
        "SWF.UndeprecateDomain": [
            {
                "action": "swf:UndeprecateDomain",
                "undocumented": true
            }
        ],
        "SWF.UndeprecateWorkflowType": [
            {
                "action": "swf:UndeprecateWorkflowType",
                "undocumented": true
            }
        ],
        "WorkSpaces.CreateConnectionAlias": [
            {
                "action": "workspaces:CreateConnectionAlias",
                "undocumented": true
            }
        ],
        "WorkSpaces.DescribeConnectionAliases": [
            {
                "action": "workspaces:DescribeConnectionAliases",
                "undocumented": true
            }
        ],
        "Connect.CreateIntegrationAssociation": [
            {
                "action": "connect:CreateIntegrationAssociation",
                "undocumented": true
            }
        ],
        "Connect.CreateUseCase": [
            {
                "action": "connect:CreateUseCase",
                "undocumented": true
            }
        ],
        "Connect.DeleteIntegrationAssociation": [
            {
                "action": "connect:DeleteIntegrationAssociation",
                "undocumented": true
            }
        ],
        "Connect.DeleteUseCase": [
            {
                "action": "connect:DeleteUseCase",
                "undocumented": true
            }
        ],
        "Connect.ListIntegrationAssociations": [
            {
                "action": "connect:ListIntegrationAssociations",
                "undocumented": true
            }
        ],
        "Connect.ListUseCases": [
            {
                "action": "connect:ListUseCases",
                "undocumented": true
            }
        ],
        "ApiGatewayV2.ResetAuthorizersCache": [
            {
                "action": "apigateway:DELETE",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}/stages/${StageName}/cache/authorizers"
                    }
                }
            }
        ],
        "ApiGatewayV2.ImportApi": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis"
                    }
                }
            }
        ],
        "ApiGatewayV2.ReimportApi": [
            {
                "action": "apigateway:PUT",
                "resource_mappings": {
                    "ApiGatewayResourcePath": {
                        "template": "/v2/apis/${ApiId}"
                    }
                }
            }
        ],
        "ConnectContactLens.ListRealtimeContactAnalysisSegments": [
            {
                "action": "connect:ListRealtimeContactAnalysisSegments",
                "undocumented": true
            }
        ],
        "GreengrassV2.GetComponentVersionArtifact": [
            {
                "action": "greengrass:GetComponentVersionArtifact",
                "undocumented": true
            }
        ],
        "TimestreamQuery.Query": [
            {
                "action": "timestream:Select",
                "conditions": {
                    "lhs": "QueryString",
                    "op": "IContains",
                    "rhs": "SELECT ",
                    "andCondition": {
                        "lhs": "QueryString",
                        "op": "INotContains",
                        "rhs": " FROM "
                    }
                }
            },
            {
                "action": "timestream:SelectValues",
                "conditions": {
                    "lhs": "QueryString",
                    "op": "IContains",
                    "rhs": "SELECT ",
                    "andCondition": {
                        "lhs": "QueryString",
                        "op": "IContains",
                        "rhs": " FROM "
                    }
                }
            },
            {
                "action": "timestream:ListDatabases",
                "conditions": {
                    "lhs": "QueryString",
                    "op": "IContains",
                    "rhs": "SHOW DATABASES "
                }
            },
            {
                "action": "timestream:ListTables",
                "conditions": {
                    "lhs": "QueryString",
                    "op": "IContains",
                    "rhs": "SHOW TABLES "
                }
            },
            {
                "action": "timestream:ListMeasures",
                "conditions": {
                    "lhs": "QueryString",
                    "op": "IContains",
                    "rhs": "SHOW MEASURES "
                }
            },
            {
                "action": "timestream:DescribeTable",
                "conditions": {
                    "lhs": "QueryString",
                    "op": "IContains",
                    "rhs": "DESCRIBE "
                }
            }
        ],
        "KMS.ReEncrypt": [
            {
                "action": "kms:ReEncryptFrom",
                "resource_mappings": {
                    "KeyId": {
                        "template": "${SourceKeyId}"
                    }
                }
            },
            {
                "action": "kms:ReEncryptTo",
                "resource_mappings": {
                    "KeyId": {
                        "template": "${DestinationKeyId}"
                    }
                }
            }
        ],
        "Route53.ActivateKeySigningKey": [
            {
                "action": "route53:ActivateKeySigningKey",
                "undocumented": true
            },
            {
                "action": "kms:DescribeKey"
            },
            {
                "action": "kms:GetPublicKey"
            },
            {
                "action": "kms:Sign"
            }
        ],
        "Route53.CreateKeySigningKey": [
            {
                "action": "route53:CreateKeySigningKey",
                "undocumented": true
            },
            {
                "action": "kms:DescribeKey"
            },
            {
                "action": "kms:GetPublicKey"
            },
            {
                "action": "kms:Sign"
            }
        ],
        "Route53.DeactivateKeySigningKey": [
            {
                "action": "route53:DeactivateKeySigningKey",
                "undocumented": true
            },
            {
                "action": "kms:DescribeKey"
            },
            {
                "action": "kms:GetPublicKey"
            },
            {
                "action": "kms:Sign"
            }
        ],
        "Route53.DeleteKeySigningKey": [
            {
                "action": "route53:DeleteKeySigningKey",
                "undocumented": true
            },
            {
                "action": "kms:DescribeKey"
            },
            {
                "action": "kms:GetPublicKey"
            },
            {
                "action": "kms:Sign"
            }
        ],
        "Route53.DisableHostedZoneDNSSEC": [
            {
                "action": "route53:DisableHostedZoneDNSSEC",
                "undocumented": true
            },
            {
                "action": "kms:DescribeKey"
            },
            {
                "action": "kms:GetPublicKey"
            },
            {
                "action": "kms:Sign"
            }
        ],
        "Route53.EnableHostedZoneDNSSEC": [
            {
                "action": "route53:EnableHostedZoneDNSSEC",
                "undocumented": true
            },
            {
                "action": "kms:DescribeKey"
            },
            {
                "action": "kms:GetPublicKey"
            },
            {
                "action": "kms:Sign"
            }
        ],
        "Route53.GetDNSSEC": [
            {
                "action": "route53:GetDNSSEC",
                "undocumented": true
            }
        ],
        "S3.CompleteMultipartUpload": [
            {
                "action": "s3:PutObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3.CreateMultipartUpload": [
            {
                "action": "s3:PutObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3.GetBucketCors": [
            {
                "action": "s3:GetBucketCORS",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetBucketIntelligentTieringConfiguration": [
            {
                "action": "s3:GetIntelligentTieringConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.GetObjectLockConfiguration": [
            {
                "action": "s3:GetBucketObjectLockConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListMultipartUploads": [
            {
                "action": "s3:ListBucketMultipartUploads",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListObjectVersions": [
            {
                "action": "s3:ListBucketVersions",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.ListParts": [
            {
                "action": "s3:ListMultipartUploadParts",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3.PutBucketCors": [
            {
                "action": "s3:PutBucketCORS",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutBucketIntelligentTieringConfiguration": [
            {
                "action": "s3:PutIntelligentTieringConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.PutObjectLockConfiguration": [
            {
                "action": "s3:PutBucketObjectLockConfiguration",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    }
                }
            }
        ],
        "S3.UploadPart": [
            {
                "action": "s3:PutObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Body}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3.UploadPartCopy": [
            {
                "action": "s3:PutObject",
                "resource_mappings": {
                    "BucketName": {
                        "template": "${Bucket}"
                    },
                    "ObjectName": {
                        "template": "${Key}"
                    }
                }
            }
        ],
        "S3Control.CreateJob": [
            {
                "action": "s3:CreateJob",
                "undocumented": true
            },
            {
                "action": "iam:PassRole"
            }
        ],
        "S3Control.DescribeJob": [
            {
                "action": "s3:DescribeJob",
                "undocumented": true
            }
        ],
        "S3Control.ListJobs": [
            {
                "action": "s3:ListJobs",
                "undocumented": true
            }
        ],
        "ServiceCatalog.DescribePortfolioShares": [
            {
                "action": "servicecatalog:DescribePortfolioShares",
                "undocumented": true
            }
        ],
        "ServiceCatalog.GetProvisionedProductOutputs": [
            {
                "action": "servicecatalog:GetProvisionedProductOutputs",
                "undocumented": true
            }
        ],
        "ServiceCatalog.UpdatePortfolioShare": [
            {
                "action": "servicecatalog:UpdatePortfolioShare",
                "undocumented": true
            }
        ],
        "WorkSpaces.AssociateConnectionAlias": [
            {
                "action": "workspaces:AssociateConnectionAlias",
                "undocumented": true
            }
        ],
        "WorkSpaces.CopyWorkspaceImage": [
            {
                "action": "workspaces:CopyWorkspaceImage",
                "undocumented": true
            }
        ],
        "WorkSpaces.DisassociateConnectionAlias": [
            {
                "action": "workspaces:DisassociateConnectionAlias",
                "undocumented": true
            }
        ],
        "S3Control.DeleteJobTagging": [
            {
                "action": "s3:DeleteJobTagging",
                "resource_mappings": {
                    "JobId": {
                        "template": "${JobId}"
                    }
                }
            }
        ],
        "S3Control.DeleteStorageLensConfiguration": [
            {
                "action": "s3:DeleteStorageLensConfiguration",
                "resource_mappings": {
                    "ConfigId": {
                        "template": "${ConfigId}"
                    }
                }
            }
        ],
        "S3Control.DeleteStorageLensConfigurationTagging": [
            {
                "action": "s3:DeleteStorageLensConfigurationTagging",
                "resource_mappings": {
                    "ConfigId": {
                        "template": "${ConfigId}"
                    }
                }
            }
        ],
        "S3Control.GetAccessPointPolicyStatus": [
            {
                "action": "s3:GetAccessPointPolicyStatus",
                "resource_mappings": {
                    "AccessPointName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "S3Control.GetJobTagging": [
            {
                "action": "s3:GetJobTagging",
                "resource_mappings": {
                    "JobId": {
                        "template": "${JobId}"
                    }
                }
            }
        ],
        "S3Control.GetStorageLensConfiguration": [
            {
                "action": "s3:GetStorageLensConfiguration",
                "resource_mappings": {
                    "ConfigId": {
                        "template": "${ConfigId}"
                    }
                }
            }
        ],
        "S3Control.GetStorageLensConfigurationTagging": [
            {
                "action": "s3:GetStorageLensConfigurationTagging",
                "resource_mappings": {
                    "ConfigId": {
                        "template": "${ConfigId}"
                    }
                }
            }
        ],
        "S3Control.ListStorageLensConfigurations": [
            {
                "action": "s3:ListStorageLensConfigurations"
            }
        ],
        "S3Control.PutJobTagging": [
            {
                "action": "s3:PutJobTagging",
                "resource_mappings": {
                    "JobId": {
                        "template": "${JobId}"
                    }
                }
            }
        ],
        "S3Control.PutStorageLensConfiguration": [
            {
                "action": "s3:PutStorageLensConfiguration"
            }
        ],
        "S3Control.PutStorageLensConfigurationTagging": [
            {
                "action": "s3:PutStorageLensConfigurationTagging",
                "resource_mappings": {
                    "ConfigId": {
                        "template": "${ConfigId}"
                    }
                }
            }
        ],
        "S3Control.UpdateJobPriority": [
            {
                "action": "s3:UpdateJobPriority",
                "resource_mappings": {
                    "JobId": {
                        "template": "${JobId}"
                    }
                }
            }
        ],
        "S3Control.UpdateJobStatus": [
            {
                "action": "s3:UpdateJobStatus",
                "resource_mappings": {
                    "JobId": {
                        "template": "${JobId}"
                    }
                }
            }
        ],
        "WorkSpaces.DeleteConnectionAlias": [
            {
                "action": "workspaces:DeleteConnectionAlias",
                "undocumented": true
            }
        ],
        "WorkSpaces.DeregisterWorkspaceDirectory": [
            {
                "action": "workspaces:DeregisterWorkspaceDirectory",
                "undocumented": true
            }
        ],
        "WorkSpaces.DescribeConnectionAliasPermissions": [
            {
                "action": "workspaces:DescribeConnectionAliasPermissions",
                "undocumented": true
            }
        ],
        "WorkSpaces.DescribeWorkspaceImagePermissions": [
            {
                "action": "workspaces:DescribeWorkspaceImagePermissions",
                "undocumented": true
            }
        ],
        "WorkSpaces.DescribeWorkspaceSnapshots": [
            {
                "action": "workspaces:DescribeWorkspaceSnapshots",
                "undocumented": true
            }
        ],
        "WorkSpaces.MigrateWorkspace": [
            {
                "action": "workspaces:MigrateWorkspace",
                "undocumented": true
            }
        ],
        "WorkSpaces.ModifySelfservicePermissions": [
            {
                "action": "workspaces:ModifySelfservicePermissions",
                "undocumented": true
            }
        ],
        "WorkSpaces.ModifyWorkspaceAccessProperties": [
            {
                "action": "workspaces:ModifyWorkspaceAccessProperties",
                "undocumented": true
            }
        ],
        "WorkSpaces.ModifyWorkspaceCreationProperties": [
            {
                "action": "workspaces:ModifyWorkspaceCreationProperties",
                "undocumented": true
            }
        ],
        "WorkSpaces.RegisterWorkspaceDirectory": [
            {
                "action": "workspaces:RegisterWorkspaceDirectory",
                "undocumented": true
            }
        ],
        "WorkSpaces.RestoreWorkspace": [
            {
                "action": "workspaces:RestoreWorkspace",
                "undocumented": true
            }
        ],
        "WorkSpaces.UpdateConnectionAliasPermission": [
            {
                "action": "workspaces:UpdateConnectionAliasPermission",
                "undocumented": true
            }
        ],
        "WorkSpaces.UpdateWorkspaceImagePermission": [
            {
                "action": "workspaces:UpdateWorkspaceImagePermission",
                "undocumented": true
            }
        ],
        "STS.AssumeRole": [
            {
                "action": "sts:AssumeRole"
            }
        ],
        "STS.AssumeRoleWithSAML": [
            {
                "action": "sts:AssumeRoleWithSAML"
            }
        ],
        "STS.AssumeRoleWithWebIdentity": [
            {
                "action": "sts:AssumeRoleWithWebIdentity"
            }
        ],
        "STS.DecodeAuthorizationMessage": [
            {
                "action": "sts:DecodeAuthorizationMessage"
            }
        ],
        "STS.GetAccessKeyInfo": [
            {
                "action": "sts:GetAccessKeyInfo"
            }
        ],
        "STS.GetCallerIdentity": [
            {
                "action": "sts:GetCallerIdentity"
            }
        ],
        "STS.GetFederationToken": [
            {
                "action": "sts:GetFederationToken"
            }
        ],
        "STS.GetSessionToken": [
            {
                "action": "sts:GetSessionToken"
            }
        ],
        "CognitoIdentity.CreateIdentityPool": [
            {
                "action": "cognito-identity:CreateIdentityPool"
            }
        ],
        "CognitoIdentity.DeleteIdentities": [
            {
                "action": "cognito-identity:DeleteIdentities"
            }
        ],
        "CognitoIdentity.DeleteIdentityPool": [
            {
                "action": "cognito-identity:DeleteIdentityPool"
            }
        ],
        "CognitoIdentity.DescribeIdentity": [
            {
                "action": "cognito-identity:DescribeIdentity"
            }
        ],
        "CognitoIdentity.DescribeIdentityPool": [
            {
                "action": "cognito-identity:DescribeIdentityPool"
            }
        ],
        "CognitoIdentity.GetCredentialsForIdentity": [
            {
                "action": "cognito-identity:GetCredentialsForIdentity"
            }
        ],
        "CognitoIdentity.GetId": [
            {
                "action": "cognito-identity:GetId"
            }
        ],
        "CognitoIdentity.GetIdentityPoolRoles": [
            {
                "action": "cognito-identity:GetIdentityPoolRoles"
            }
        ],
        "CognitoIdentity.GetOpenIdToken": [
            {
                "action": "cognito-identity:GetOpenIdToken"
            }
        ],
        "CognitoIdentity.GetOpenIdTokenForDeveloperIdentity": [
            {
                "action": "cognito-identity:GetOpenIdTokenForDeveloperIdentity"
            }
        ],
        "CognitoIdentity.ListIdentities": [
            {
                "action": "cognito-identity:ListIdentities"
            }
        ],
        "CognitoIdentity.ListIdentityPools": [
            {
                "action": "cognito-identity:ListIdentityPools"
            }
        ],
        "CognitoIdentity.ListTagsForResource": [
            {
                "action": "cognito-identity:ListTagsForResource"
            }
        ],
        "CognitoIdentity.LookupDeveloperIdentity": [
            {
                "action": "cognito-identity:LookupDeveloperIdentity"
            }
        ],
        "CognitoIdentity.MergeDeveloperIdentities": [
            {
                "action": "cognito-identity:MergeDeveloperIdentities"
            }
        ],
        "CognitoIdentity.SetIdentityPoolRoles": [
            {
                "action": "cognito-identity:SetIdentityPoolRoles"
            }
        ],
        "CognitoIdentity.TagResource": [
            {
                "action": "cognito-identity:TagResource"
            }
        ],
        "CognitoIdentity.UnlinkDeveloperIdentity": [
            {
                "action": "cognito-identity:UnlinkDeveloperIdentity"
            }
        ],
        "CognitoIdentity.UnlinkIdentity": [
            {
                "action": "cognito-identity:UnlinkIdentity"
            }
        ],
        "CognitoIdentity.UntagResource": [
            {
                "action": "cognito-identity:UntagResource"
            }
        ],
        "CognitoIdentity.UpdateIdentityPool": [
            {
                "action": "cognito-identity:UpdateIdentityPool"
            }
        ],
        "ACM.AddTagsToCertificate": [
            {
                "action": "acm:AddTagsToCertificate"
            }
        ],
        "ACM.DeleteCertificate": [
            {
                "action": "acm:DeleteCertificate"
            }
        ],
        "ACM.DescribeCertificate": [
            {
                "action": "acm:DescribeCertificate"
            }
        ],
        "ACM.ExportCertificate": [
            {
                "action": "acm:ExportCertificate"
            }
        ],
        "ACM.GetCertificate": [
            {
                "action": "acm:GetCertificate"
            }
        ],
        "ACM.ImportCertificate": [
            {
                "action": "acm:ImportCertificate"
            }
        ],
        "ACM.ListCertificates": [
            {
                "action": "acm:ListCertificates"
            }
        ],
        "ACM.ListTagsForCertificate": [
            {
                "action": "acm:ListTagsForCertificate"
            }
        ],
        "ACM.RemoveTagsFromCertificate": [
            {
                "action": "acm:RemoveTagsFromCertificate"
            }
        ],
        "ACM.RenewCertificate": [
            {
                "action": "acm:RenewCertificate"
            }
        ],
        "ACM.RequestCertificate": [
            {
                "action": "acm:RequestCertificate"
            }
        ],
        "ACM.ResendValidationEmail": [
            {
                "action": "acm:ResendValidationEmail"
            }
        ],
        "ACM.UpdateCertificateOptions": [
            {
                "action": "acm:UpdateCertificateOptions"
            }
        ],
        "ApplicationAutoScaling.DeleteScalingPolicy": [
            {
                "action": "application-autoscaling:DeleteScalingPolicy"
            }
        ],
        "ApplicationAutoScaling.DeleteScheduledAction": [
            {
                "action": "application-autoscaling:DeleteScheduledAction"
            }
        ],
        "ApplicationAutoScaling.DeregisterScalableTarget": [
            {
                "action": "application-autoscaling:DeregisterScalableTarget"
            }
        ],
        "ApplicationAutoScaling.DescribeScalableTargets": [
            {
                "action": "application-autoscaling:DescribeScalableTargets"
            }
        ],
        "ApplicationAutoScaling.DescribeScalingActivities": [
            {
                "action": "application-autoscaling:DescribeScalingActivities"
            }
        ],
        "ApplicationAutoScaling.DescribeScalingPolicies": [
            {
                "action": "application-autoscaling:DescribeScalingPolicies"
            }
        ],
        "ApplicationAutoScaling.DescribeScheduledActions": [
            {
                "action": "application-autoscaling:DescribeScheduledActions"
            }
        ],
        "ApplicationAutoScaling.PutScalingPolicy": [
            {
                "action": "application-autoscaling:PutScalingPolicy"
            }
        ],
        "ApplicationAutoScaling.PutScheduledAction": [
            {
                "action": "application-autoscaling:PutScheduledAction"
            }
        ],
        "ApplicationAutoScaling.RegisterScalableTarget": [
            {
                "action": "application-autoscaling:RegisterScalableTarget"
            }
        ],
        "AppStream.AssociateFleet": [
            {
                "action": "appstream:AssociateFleet"
            }
        ],
        "AppStream.BatchAssociateUserStack": [
            {
                "action": "appstream:BatchAssociateUserStack"
            }
        ],
        "AppStream.BatchDisassociateUserStack": [
            {
                "action": "appstream:BatchDisassociateUserStack"
            }
        ],
        "AppStream.CopyImage": [
            {
                "action": "appstream:CopyImage"
            }
        ],
        "AppStream.CreateDirectoryConfig": [
            {
                "action": "appstream:CreateDirectoryConfig"
            }
        ],
        "AppStream.CreateFleet": [
            {
                "action": "appstream:CreateFleet"
            }
        ],
        "AppStream.CreateImageBuilder": [
            {
                "action": "appstream:CreateImageBuilder"
            }
        ],
        "AppStream.CreateImageBuilderStreamingURL": [
            {
                "action": "appstream:CreateImageBuilderStreamingURL"
            }
        ],
        "AppStream.CreateStack": [
            {
                "action": "appstream:CreateStack"
            }
        ],
        "AppStream.CreateStreamingURL": [
            {
                "action": "appstream:CreateStreamingURL"
            }
        ],
        "AppStream.CreateUsageReportSubscription": [
            {
                "action": "appstream:CreateUsageReportSubscription"
            }
        ],
        "AppStream.CreateUser": [
            {
                "action": "appstream:CreateUser"
            }
        ],
        "AppStream.DeleteDirectoryConfig": [
            {
                "action": "appstream:DeleteDirectoryConfig"
            }
        ],
        "AppStream.DeleteFleet": [
            {
                "action": "appstream:DeleteFleet"
            }
        ],
        "AppStream.DeleteImage": [
            {
                "action": "appstream:DeleteImage"
            }
        ],
        "AppStream.DeleteImageBuilder": [
            {
                "action": "appstream:DeleteImageBuilder"
            }
        ],
        "AppStream.DeleteImagePermissions": [
            {
                "action": "appstream:DeleteImagePermissions"
            }
        ],
        "AppStream.DeleteStack": [
            {
                "action": "appstream:DeleteStack"
            }
        ],
        "AppStream.DeleteUsageReportSubscription": [
            {
                "action": "appstream:DeleteUsageReportSubscription"
            }
        ],
        "AppStream.DeleteUser": [
            {
                "action": "appstream:DeleteUser"
            }
        ],
        "AppStream.DescribeDirectoryConfigs": [
            {
                "action": "appstream:DescribeDirectoryConfigs"
            }
        ],
        "AppStream.DescribeFleets": [
            {
                "action": "appstream:DescribeFleets"
            }
        ],
        "AppStream.DescribeImageBuilders": [
            {
                "action": "appstream:DescribeImageBuilders"
            }
        ],
        "AppStream.DescribeImagePermissions": [
            {
                "action": "appstream:DescribeImagePermissions"
            }
        ],
        "AppStream.DescribeImages": [
            {
                "action": "appstream:DescribeImages"
            }
        ],
        "AppStream.DescribeSessions": [
            {
                "action": "appstream:DescribeSessions"
            }
        ],
        "AppStream.DescribeStacks": [
            {
                "action": "appstream:DescribeStacks"
            }
        ],
        "AppStream.DescribeUsageReportSubscriptions": [
            {
                "action": "appstream:DescribeUsageReportSubscriptions"
            }
        ],
        "AppStream.DescribeUserStackAssociations": [
            {
                "action": "appstream:DescribeUserStackAssociations"
            }
        ],
        "AppStream.DescribeUsers": [
            {
                "action": "appstream:DescribeUsers"
            }
        ],
        "AppStream.DisableUser": [
            {
                "action": "appstream:DisableUser"
            }
        ],
        "AppStream.DisassociateFleet": [
            {
                "action": "appstream:DisassociateFleet"
            }
        ],
        "AppStream.EnableUser": [
            {
                "action": "appstream:EnableUser"
            }
        ],
        "AppStream.ExpireSession": [
            {
                "action": "appstream:ExpireSession"
            }
        ],
        "AppStream.ListAssociatedFleets": [
            {
                "action": "appstream:ListAssociatedFleets"
            }
        ],
        "AppStream.ListAssociatedStacks": [
            {
                "action": "appstream:ListAssociatedStacks"
            }
        ],
        "AppStream.ListTagsForResource": [
            {
                "action": "appstream:ListTagsForResource"
            }
        ],
        "AppStream.StartFleet": [
            {
                "action": "appstream:StartFleet"
            }
        ],
        "AppStream.StartImageBuilder": [
            {
                "action": "appstream:StartImageBuilder"
            }
        ],
        "AppStream.StopFleet": [
            {
                "action": "appstream:StopFleet",
                "resource_mappings": {
                    "FleetName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "AppStream.StopImageBuilder": [
            {
                "action": "appstream:StopImageBuilder",
                "resource_mappings": {
                    "ImageBuilderName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "AppStream.TagResource": [
            {
                "action": "appstream:TagResource"
            }
        ],
        "AppStream.UntagResource": [
            {
                "action": "appstream:UntagResource"
            }
        ],
        "AppStream.UpdateDirectoryConfig": [
            {
                "action": "appstream:UpdateDirectoryConfig"
            }
        ],
        "AppStream.UpdateFleet": [
            {
                "action": "appstream:UpdateFleet",
                "resource_mappings": {
                    "FleetName": {
                        "template": "${Name}"
                    },
                    "ImageName": {
                        "template": "${ImageName}"
                    }
                }
            }
        ],
        "AppStream.UpdateImagePermissions": [
            {
                "action": "appstream:UpdateImagePermissions",
                "resource_mappings": {
                    "ImageName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "AppStream.UpdateStack": [
            {
                "action": "appstream:UpdateStack",
                "resource_mappings": {
                    "StackName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "AutoScaling.AttachInstances": [
            {
                "action": "autoscaling:AttachInstances"
            }
        ],
        "AutoScaling.AttachLoadBalancerTargetGroups": [
            {
                "action": "autoscaling:AttachLoadBalancerTargetGroups"
            }
        ],
        "AutoScaling.AttachLoadBalancers": [
            {
                "action": "autoscaling:AttachLoadBalancers"
            }
        ],
        "AutoScaling.BatchDeleteScheduledAction": [
            {
                "action": "autoscaling:BatchDeleteScheduledAction"
            }
        ],
        "AutoScaling.BatchPutScheduledUpdateGroupAction": [
            {
                "action": "autoscaling:BatchPutScheduledUpdateGroupAction"
            }
        ],
        "AutoScaling.CancelInstanceRefresh": [
            {
                "action": "autoscaling:CancelInstanceRefresh"
            }
        ],
        "AutoScaling.CompleteLifecycleAction": [
            {
                "action": "autoscaling:CompleteLifecycleAction"
            }
        ],
        "AutoScaling.CreateAutoScalingGroup": [
            {
                "action": "autoscaling:CreateAutoScalingGroup"
            }
        ],
        "AutoScaling.CreateLaunchConfiguration": [
            {
                "action": "autoscaling:CreateLaunchConfiguration"
            }
        ],
        "AutoScaling.CreateOrUpdateTags": [
            {
                "action": "autoscaling:CreateOrUpdateTags"
            }
        ],
        "AutoScaling.DeleteAutoScalingGroup": [
            {
                "action": "autoscaling:DeleteAutoScalingGroup"
            }
        ],
        "AutoScaling.DeleteLaunchConfiguration": [
            {
                "action": "autoscaling:DeleteLaunchConfiguration"
            }
        ],
        "AutoScaling.DeleteLifecycleHook": [
            {
                "action": "autoscaling:DeleteLifecycleHook"
            }
        ],
        "AutoScaling.DeleteNotificationConfiguration": [
            {
                "action": "autoscaling:DeleteNotificationConfiguration"
            }
        ],
        "AutoScaling.DeletePolicy": [
            {
                "action": "autoscaling:DeletePolicy"
            }
        ],
        "AutoScaling.DeleteScheduledAction": [
            {
                "action": "autoscaling:DeleteScheduledAction"
            }
        ],
        "AutoScaling.DeleteTags": [
            {
                "action": "autoscaling:DeleteTags"
            }
        ],
        "AutoScaling.DescribeAccountLimits": [
            {
                "action": "autoscaling:DescribeAccountLimits"
            }
        ],
        "AutoScaling.DescribeAdjustmentTypes": [
            {
                "action": "autoscaling:DescribeAdjustmentTypes"
            }
        ],
        "AutoScaling.DescribeAutoScalingGroups": [
            {
                "action": "autoscaling:DescribeAutoScalingGroups"
            }
        ],
        "AutoScaling.DescribeAutoScalingInstances": [
            {
                "action": "autoscaling:DescribeAutoScalingInstances"
            }
        ],
        "AutoScaling.DescribeAutoScalingNotificationTypes": [
            {
                "action": "autoscaling:DescribeAutoScalingNotificationTypes"
            }
        ],
        "AutoScaling.DescribeInstanceRefreshes": [
            {
                "action": "autoscaling:DescribeInstanceRefreshes"
            }
        ],
        "AutoScaling.DescribeLaunchConfigurations": [
            {
                "action": "autoscaling:DescribeLaunchConfigurations"
            }
        ],
        "AutoScaling.DescribeLifecycleHookTypes": [
            {
                "action": "autoscaling:DescribeLifecycleHookTypes"
            }
        ],
        "AutoScaling.DescribeLifecycleHooks": [
            {
                "action": "autoscaling:DescribeLifecycleHooks"
            }
        ],
        "AutoScaling.DescribeLoadBalancerTargetGroups": [
            {
                "action": "autoscaling:DescribeLoadBalancerTargetGroups"
            }
        ],
        "AutoScaling.DescribeLoadBalancers": [
            {
                "action": "autoscaling:DescribeLoadBalancers"
            }
        ],
        "AutoScaling.DescribeMetricCollectionTypes": [
            {
                "action": "autoscaling:DescribeMetricCollectionTypes"
            }
        ],
        "AutoScaling.DescribeNotificationConfigurations": [
            {
                "action": "autoscaling:DescribeNotificationConfigurations"
            }
        ],
        "AutoScaling.DescribePolicies": [
            {
                "action": "autoscaling:DescribePolicies"
            }
        ],
        "AutoScaling.DescribeScalingActivities": [
            {
                "action": "autoscaling:DescribeScalingActivities"
            }
        ],
        "AutoScaling.DescribeScalingProcessTypes": [
            {
                "action": "autoscaling:DescribeScalingProcessTypes"
            }
        ],
        "AutoScaling.DescribeScheduledActions": [
            {
                "action": "autoscaling:DescribeScheduledActions"
            }
        ],
        "AutoScaling.DescribeTags": [
            {
                "action": "autoscaling:DescribeTags"
            }
        ],
        "AutoScaling.DescribeTerminationPolicyTypes": [
            {
                "action": "autoscaling:DescribeTerminationPolicyTypes"
            }
        ],
        "AutoScaling.DetachInstances": [
            {
                "action": "autoscaling:DetachInstances"
            }
        ],
        "AutoScaling.DetachLoadBalancerTargetGroups": [
            {
                "action": "autoscaling:DetachLoadBalancerTargetGroups"
            }
        ],
        "AutoScaling.DetachLoadBalancers": [
            {
                "action": "autoscaling:DetachLoadBalancers"
            }
        ],
        "AutoScaling.DisableMetricsCollection": [
            {
                "action": "autoscaling:DisableMetricsCollection"
            }
        ],
        "AutoScaling.EnableMetricsCollection": [
            {
                "action": "autoscaling:EnableMetricsCollection"
            }
        ],
        "AutoScaling.EnterStandby": [
            {
                "action": "autoscaling:EnterStandby"
            }
        ],
        "AutoScaling.ExecutePolicy": [
            {
                "action": "autoscaling:ExecutePolicy"
            }
        ],
        "AutoScaling.ExitStandby": [
            {
                "action": "autoscaling:ExitStandby"
            }
        ],
        "AutoScaling.PutLifecycleHook": [
            {
                "action": "autoscaling:PutLifecycleHook"
            }
        ],
        "AutoScaling.PutNotificationConfiguration": [
            {
                "action": "autoscaling:PutNotificationConfiguration"
            }
        ],
        "AutoScaling.PutScalingPolicy": [
            {
                "action": "autoscaling:PutScalingPolicy"
            }
        ],
        "AutoScaling.PutScheduledUpdateGroupAction": [
            {
                "action": "autoscaling:PutScheduledUpdateGroupAction"
            }
        ],
        "AutoScaling.RecordLifecycleActionHeartbeat": [
            {
                "action": "autoscaling:RecordLifecycleActionHeartbeat"
            }
        ],
        "AutoScaling.ResumeProcesses": [
            {
                "action": "autoscaling:ResumeProcesses"
            }
        ],
        "AutoScaling.SetDesiredCapacity": [
            {
                "action": "autoscaling:SetDesiredCapacity"
            }
        ],
        "AutoScaling.SetInstanceHealth": [
            {
                "action": "autoscaling:SetInstanceHealth"
            }
        ],
        "AutoScaling.SetInstanceProtection": [
            {
                "action": "autoscaling:SetInstanceProtection"
            }
        ],
        "AutoScaling.StartInstanceRefresh": [
            {
                "action": "autoscaling:StartInstanceRefresh"
            }
        ],
        "AutoScaling.SuspendProcesses": [
            {
                "action": "autoscaling:SuspendProcesses"
            }
        ],
        "AutoScaling.TerminateInstanceInAutoScalingGroup": [
            {
                "action": "autoscaling:TerminateInstanceInAutoScalingGroup"
            }
        ],
        "AutoScaling.UpdateAutoScalingGroup": [
            {
                "action": "autoscaling:UpdateAutoScalingGroup"
            }
        ],
        "Batch.CancelJob": [
            {
                "action": "batch:CancelJob",
                "resource_mappings": {
                    "jobId": {
                        "template": "${jobId}"
                    }
                }
            }
        ],
        "Batch.CreateComputeEnvironment": [
            {
                "action": "batch:CreateComputeEnvironment"
            }
        ],
        "Batch.CreateJobQueue": [
            {
                "action": "batch:CreateJobQueue"
            }
        ],
        "Batch.DeleteComputeEnvironment": [
            {
                "action": "batch:DeleteComputeEnvironment",
                "resource_mappings": {
                    "ComputeEnvironmentName": {
                        "template": "${computeEnvironment}"
                    }
                }
            }
        ],
        "Batch.DeleteJobQueue": [
            {
                "action": "batch:DeleteJobQueue",
                "resource_mappings": {
                    "JobQueueName": {
                        "template": "${jobQueue}"
                    }
                }
            }
        ],
        "Batch.DeregisterJobDefinition": [
            {
                "action": "batch:DeregisterJobDefinition"
            }
        ],
        "Batch.DescribeComputeEnvironments": [
            {
                "action": "batch:DescribeComputeEnvironments"
            }
        ],
        "Batch.DescribeJobDefinitions": [
            {
                "action": "batch:DescribeJobDefinitions"
            }
        ],
        "Batch.DescribeJobQueues": [
            {
                "action": "batch:DescribeJobQueues"
            }
        ],
        "Batch.DescribeJobs": [
            {
                "action": "batch:DescribeJobs"
            }
        ],
        "Batch.ListJobs": [
            {
                "action": "batch:ListJobs"
            }
        ],
        "Batch.ListTagsForResource": [
            {
                "action": "batch:ListTagsForResource"
            }
        ],
        "Batch.RegisterJobDefinition": [
            {
                "action": "batch:RegisterJobDefinition"
            }
        ],
        "Batch.SubmitJob": [
            {
                "action": "batch:SubmitJob"
            }
        ],
        "Batch.TagResource": [
            {
                "action": "batch:TagResource"
            }
        ],
        "Batch.TerminateJob": [
            {
                "action": "batch:TerminateJob",
                "resource_mappings": {
                    "jobId": {
                        "template": "${jobId}"
                    }
                }
            }
        ],
        "Batch.UntagResource": [
            {
                "action": "batch:UntagResource"
            }
        ],
        "Batch.UpdateComputeEnvironment": [
            {
                "action": "batch:UpdateComputeEnvironment",
                "resource_mappings": {
                    "ComputeEnvironmentName": {
                        "template": "${computeEnvironment}"
                    }
                }
            }
        ],
        "Batch.UpdateJobQueue": [
            {
                "action": "batch:UpdateJobQueue",
                "resource_mappings": {
                    "JobQueueName": {
                        "template": "${jobQueue}"
                    }
                }
            }
        ],
        "Budgets.CreateBudgetAction": [
            {
                "action": "budgets:CreateBudgetAction"
            }
        ],
        "Budgets.DeleteBudgetAction": [
            {
                "action": "budgets:DeleteBudgetAction"
            }
        ],
        "Budgets.DescribeBudgetAction": [
            {
                "action": "budgets:DescribeBudgetAction"
            }
        ],
        "Budgets.DescribeBudgetActionHistories": [
            {
                "action": "budgets:DescribeBudgetActionHistories"
            }
        ],
        "Budgets.DescribeBudgetActionsForAccount": [
            {
                "action": "budgets:DescribeBudgetActionsForAccount"
            }
        ],
        "Budgets.DescribeBudgetActionsForBudget": [
            {
                "action": "budgets:DescribeBudgetActionsForBudget",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    }
                }
            }
        ],
        "Budgets.ExecuteBudgetAction": [
            {
                "action": "budgets:ExecuteBudgetAction"
            }
        ],
        "Budgets.UpdateBudgetAction": [
            {
                "action": "budgets:UpdateBudgetAction",
                "resource_mappings": {
                    "BudgetName": {
                        "template": "${BudgetName}"
                    },
                    "ActionId": {
                        "template": "${ActionId}"
                    }
                }
            }
        ],
        "CloudDirectory.AddFacetToObject": [
            {
                "action": "clouddirectory:AddFacetToObject"
            }
        ],
        "CloudDirectory.ApplySchema": [
            {
                "action": "clouddirectory:ApplySchema"
            }
        ],
        "CloudDirectory.AttachObject": [
            {
                "action": "clouddirectory:AttachObject"
            }
        ],
        "CloudDirectory.AttachPolicy": [
            {
                "action": "clouddirectory:AttachPolicy"
            }
        ],
        "CloudDirectory.AttachToIndex": [
            {
                "action": "clouddirectory:AttachToIndex"
            }
        ],
        "CloudDirectory.AttachTypedLink": [
            {
                "action": "clouddirectory:AttachTypedLink"
            }
        ],
        "CloudDirectory.BatchRead": [
            {
                "action": "clouddirectory:BatchRead"
            }
        ],
        "CloudDirectory.BatchWrite": [
            {
                "action": "clouddirectory:BatchWrite"
            }
        ],
        "CloudDirectory.CreateDirectory": [
            {
                "action": "clouddirectory:CreateDirectory"
            }
        ],
        "CloudDirectory.CreateFacet": [
            {
                "action": "clouddirectory:CreateFacet"
            }
        ],
        "CloudDirectory.CreateIndex": [
            {
                "action": "clouddirectory:CreateIndex"
            }
        ],
        "CloudDirectory.CreateObject": [
            {
                "action": "clouddirectory:CreateObject"
            }
        ],
        "CloudDirectory.CreateSchema": [
            {
                "action": "clouddirectory:CreateSchema"
            }
        ],
        "CloudDirectory.CreateTypedLinkFacet": [
            {
                "action": "clouddirectory:CreateTypedLinkFacet"
            }
        ],
        "CloudDirectory.DeleteDirectory": [
            {
                "action": "clouddirectory:DeleteDirectory"
            }
        ],
        "CloudDirectory.DeleteFacet": [
            {
                "action": "clouddirectory:DeleteFacet"
            }
        ],
        "CloudDirectory.DeleteObject": [
            {
                "action": "clouddirectory:DeleteObject"
            }
        ],
        "CloudDirectory.DeleteSchema": [
            {
                "action": "clouddirectory:DeleteSchema"
            }
        ],
        "CloudDirectory.DeleteTypedLinkFacet": [
            {
                "action": "clouddirectory:DeleteTypedLinkFacet"
            }
        ],
        "CloudDirectory.DetachFromIndex": [
            {
                "action": "clouddirectory:DetachFromIndex"
            }
        ],
        "CloudDirectory.DetachObject": [
            {
                "action": "clouddirectory:DetachObject"
            }
        ],
        "CloudDirectory.DetachPolicy": [
            {
                "action": "clouddirectory:DetachPolicy"
            }
        ],
        "CloudDirectory.DetachTypedLink": [
            {
                "action": "clouddirectory:DetachTypedLink"
            }
        ],
        "CloudDirectory.DisableDirectory": [
            {
                "action": "clouddirectory:DisableDirectory"
            }
        ],
        "CloudDirectory.EnableDirectory": [
            {
                "action": "clouddirectory:EnableDirectory"
            }
        ],
        "CloudDirectory.GetDirectory": [
            {
                "action": "clouddirectory:GetDirectory"
            }
        ],
        "CloudDirectory.GetFacet": [
            {
                "action": "clouddirectory:GetFacet"
            }
        ],
        "CloudDirectory.GetLinkAttributes": [
            {
                "action": "clouddirectory:GetLinkAttributes"
            }
        ],
        "CloudDirectory.GetObjectAttributes": [
            {
                "action": "clouddirectory:GetObjectAttributes"
            }
        ],
        "CloudDirectory.GetObjectInformation": [
            {
                "action": "clouddirectory:GetObjectInformation"
            }
        ],
        "CloudDirectory.GetSchemaAsJson": [
            {
                "action": "clouddirectory:GetSchemaAsJson"
            }
        ],
        "CloudDirectory.GetTypedLinkFacetInformation": [
            {
                "action": "clouddirectory:GetTypedLinkFacetInformation"
            }
        ],
        "CloudDirectory.ListAppliedSchemaArns": [
            {
                "action": "clouddirectory:ListAppliedSchemaArns"
            }
        ],
        "CloudDirectory.ListAttachedIndices": [
            {
                "action": "clouddirectory:ListAttachedIndices"
            }
        ],
        "CloudDirectory.ListDevelopmentSchemaArns": [
            {
                "action": "clouddirectory:ListDevelopmentSchemaArns"
            }
        ],
        "CloudDirectory.ListDirectories": [
            {
                "action": "clouddirectory:ListDirectories"
            }
        ],
        "CloudDirectory.ListFacetAttributes": [
            {
                "action": "clouddirectory:ListFacetAttributes"
            }
        ],
        "CloudDirectory.ListFacetNames": [
            {
                "action": "clouddirectory:ListFacetNames"
            }
        ],
        "CloudDirectory.ListIncomingTypedLinks": [
            {
                "action": "clouddirectory:ListIncomingTypedLinks"
            }
        ],
        "CloudDirectory.ListIndex": [
            {
                "action": "clouddirectory:ListIndex"
            }
        ],
        "CloudDirectory.ListObjectAttributes": [
            {
                "action": "clouddirectory:ListObjectAttributes"
            }
        ],
        "CloudDirectory.ListObjectChildren": [
            {
                "action": "clouddirectory:ListObjectChildren"
            }
        ],
        "CloudDirectory.ListObjectParentPaths": [
            {
                "action": "clouddirectory:ListObjectParentPaths"
            }
        ],
        "CloudDirectory.ListObjectParents": [
            {
                "action": "clouddirectory:ListObjectParents"
            }
        ],
        "CloudDirectory.ListObjectPolicies": [
            {
                "action": "clouddirectory:ListObjectPolicies"
            }
        ],
        "CloudDirectory.ListOutgoingTypedLinks": [
            {
                "action": "clouddirectory:ListOutgoingTypedLinks"
            }
        ],
        "CloudDirectory.ListPolicyAttachments": [
            {
                "action": "clouddirectory:ListPolicyAttachments"
            }
        ],
        "CloudDirectory.ListPublishedSchemaArns": [
            {
                "action": "clouddirectory:ListPublishedSchemaArns"
            }
        ],
        "CloudDirectory.ListTagsForResource": [
            {
                "action": "clouddirectory:ListTagsForResource"
            }
        ],
        "CloudDirectory.ListTypedLinkFacetAttributes": [
            {
                "action": "clouddirectory:ListTypedLinkFacetAttributes"
            }
        ],
        "CloudDirectory.ListTypedLinkFacetNames": [
            {
                "action": "clouddirectory:ListTypedLinkFacetNames"
            }
        ],
        "CloudDirectory.LookupPolicy": [
            {
                "action": "clouddirectory:LookupPolicy"
            }
        ],
        "CloudDirectory.PublishSchema": [
            {
                "action": "clouddirectory:PublishSchema"
            }
        ],
        "CloudDirectory.PutSchemaFromJson": [
            {
                "action": "clouddirectory:PutSchemaFromJson"
            }
        ],
        "CloudDirectory.RemoveFacetFromObject": [
            {
                "action": "clouddirectory:RemoveFacetFromObject"
            }
        ],
        "CloudDirectory.TagResource": [
            {
                "action": "clouddirectory:TagResource"
            }
        ],
        "CloudDirectory.UntagResource": [
            {
                "action": "clouddirectory:UntagResource"
            }
        ],
        "CloudDirectory.UpdateFacet": [
            {
                "action": "clouddirectory:UpdateFacet"
            }
        ],
        "CloudDirectory.UpdateLinkAttributes": [
            {
                "action": "clouddirectory:UpdateLinkAttributes"
            }
        ],
        "CloudDirectory.UpdateObjectAttributes": [
            {
                "action": "clouddirectory:UpdateObjectAttributes"
            }
        ],
        "CloudDirectory.UpdateSchema": [
            {
                "action": "clouddirectory:UpdateSchema"
            }
        ],
        "CloudDirectory.UpdateTypedLinkFacet": [
            {
                "action": "clouddirectory:UpdateTypedLinkFacet"
            }
        ],
        "CloudFormation.CancelUpdateStack": [
            {
                "action": "cloudformation:CancelUpdateStack"
            }
        ],
        "CloudFormation.ContinueUpdateRollback": [
            {
                "action": "cloudformation:ContinueUpdateRollback"
            }
        ],
        "CloudFormation.CreateChangeSet": [
            {
                "action": "cloudformation:CreateChangeSet"
            }
        ],
        "CloudFormation.CreateStack": [
            {
                "action": "cloudformation:CreateStack"
            }
        ],
        "CloudFormation.CreateStackInstances": [
            {
                "action": "cloudformation:CreateStackInstances"
            }
        ],
        "CloudFormation.CreateStackSet": [
            {
                "action": "cloudformation:CreateStackSet"
            }
        ],
        "CloudFormation.DeleteChangeSet": [
            {
                "action": "cloudformation:DeleteChangeSet"
            }
        ],
        "CloudFormation.DeleteStack": [
            {
                "action": "cloudformation:DeleteStack"
            }
        ],
        "CloudFormation.DeleteStackInstances": [
            {
                "action": "cloudformation:DeleteStackInstances"
            }
        ],
        "CloudFormation.DeleteStackSet": [
            {
                "action": "cloudformation:DeleteStackSet"
            }
        ],
        "CloudFormation.DeregisterType": [
            {
                "action": "cloudformation:DeregisterType"
            }
        ],
        "CloudFormation.DescribeAccountLimits": [
            {
                "action": "cloudformation:DescribeAccountLimits"
            }
        ],
        "CloudFormation.DescribeChangeSet": [
            {
                "action": "cloudformation:DescribeChangeSet"
            }
        ],
        "CloudFormation.DescribeStackDriftDetectionStatus": [
            {
                "action": "cloudformation:DescribeStackDriftDetectionStatus"
            }
        ],
        "CloudFormation.DescribeStackEvents": [
            {
                "action": "cloudformation:DescribeStackEvents"
            }
        ],
        "CloudFormation.DescribeStackInstance": [
            {
                "action": "cloudformation:DescribeStackInstance"
            }
        ],
        "CloudFormation.DescribeStackResource": [
            {
                "action": "cloudformation:DescribeStackResource"
            }
        ],
        "CloudFormation.DescribeStackResourceDrifts": [
            {
                "action": "cloudformation:DescribeStackResourceDrifts"
            }
        ],
        "CloudFormation.DescribeStackResources": [
            {
                "action": "cloudformation:DescribeStackResources"
            }
        ],
        "CloudFormation.DescribeStackSet": [
            {
                "action": "cloudformation:DescribeStackSet"
            }
        ],
        "CloudFormation.DescribeStackSetOperation": [
            {
                "action": "cloudformation:DescribeStackSetOperation"
            }
        ],
        "CloudFormation.DescribeStacks": [
            {
                "action": "cloudformation:DescribeStacks"
            }
        ],
        "CloudFormation.DescribeType": [
            {
                "action": "cloudformation:DescribeType"
            }
        ],
        "CloudFormation.DescribeTypeRegistration": [
            {
                "action": "cloudformation:DescribeTypeRegistration"
            }
        ],
        "CloudFormation.DetectStackDrift": [
            {
                "action": "cloudformation:DetectStackDrift"
            }
        ],
        "CloudFormation.DetectStackResourceDrift": [
            {
                "action": "cloudformation:DetectStackResourceDrift"
            }
        ],
        "CloudFormation.DetectStackSetDrift": [
            {
                "action": "cloudformation:DetectStackSetDrift"
            }
        ],
        "CloudFormation.EstimateTemplateCost": [
            {
                "action": "cloudformation:EstimateTemplateCost"
            }
        ],
        "CloudFormation.ExecuteChangeSet": [
            {
                "action": "cloudformation:ExecuteChangeSet"
            }
        ],
        "CloudFormation.GetStackPolicy": [
            {
                "action": "cloudformation:GetStackPolicy"
            }
        ],
        "CloudFormation.GetTemplate": [
            {
                "action": "cloudformation:GetTemplate"
            }
        ],
        "CloudFormation.GetTemplateSummary": [
            {
                "action": "cloudformation:GetTemplateSummary"
            }
        ],
        "CloudFormation.ListChangeSets": [
            {
                "action": "cloudformation:ListChangeSets"
            }
        ],
        "CloudFormation.ListExports": [
            {
                "action": "cloudformation:ListExports"
            }
        ],
        "CloudFormation.ListImports": [
            {
                "action": "cloudformation:ListImports"
            }
        ],
        "CloudFormation.ListStackInstances": [
            {
                "action": "cloudformation:ListStackInstances"
            }
        ],
        "CloudFormation.ListStackResources": [
            {
                "action": "cloudformation:ListStackResources"
            }
        ],
        "CloudFormation.ListStackSetOperationResults": [
            {
                "action": "cloudformation:ListStackSetOperationResults"
            }
        ],
        "CloudFormation.ListStackSetOperations": [
            {
                "action": "cloudformation:ListStackSetOperations"
            }
        ],
        "CloudFormation.ListStackSets": [
            {
                "action": "cloudformation:ListStackSets"
            }
        ],
        "CloudFormation.ListStacks": [
            {
                "action": "cloudformation:ListStacks"
            }
        ],
        "CloudFormation.ListTypeRegistrations": [
            {
                "action": "cloudformation:ListTypeRegistrations"
            }
        ],
        "CloudFormation.ListTypeVersions": [
            {
                "action": "cloudformation:ListTypeVersions"
            }
        ],
        "CloudFormation.ListTypes": [
            {
                "action": "cloudformation:ListTypes"
            }
        ],
        "CloudFormation.RegisterType": [
            {
                "action": "cloudformation:RegisterType"
            }
        ],
        "CloudFormation.SetStackPolicy": [
            {
                "action": "cloudformation:SetStackPolicy"
            }
        ],
        "CloudFormation.SetTypeDefaultVersion": [
            {
                "action": "cloudformation:SetTypeDefaultVersion"
            }
        ],
        "CloudFormation.SignalResource": [
            {
                "action": "cloudformation:SignalResource"
            }
        ],
        "CloudFormation.StopStackSetOperation": [
            {
                "action": "cloudformation:StopStackSetOperation"
            }
        ],
        "CloudFormation.UpdateStack": [
            {
                "action": "cloudformation:UpdateStack"
            }
        ],
        "CloudFormation.UpdateStackInstances": [
            {
                "action": "cloudformation:UpdateStackInstances"
            }
        ],
        "CloudFormation.UpdateStackSet": [
            {
                "action": "cloudformation:UpdateStackSet"
            }
        ],
        "CloudFormation.UpdateTerminationProtection": [
            {
                "action": "cloudformation:UpdateTerminationProtection"
            }
        ],
        "CloudFormation.ValidateTemplate": [
            {
                "action": "cloudformation:ValidateTemplate"
            }
        ],
        "CloudFront.CreateCachePolicy": [
            {
                "action": "cloudfront:CreateCachePolicy"
            }
        ],
        "CloudFront.CreateCloudFrontOriginAccessIdentity": [
            {
                "action": "cloudfront:CreateCloudFrontOriginAccessIdentity",
                "resource_mappings": {
                    "Id": {
                        "template": "*"
                    }
                }
            }
        ],
        "CloudFront.CreateDistribution": [
            {
                "action": "cloudfront:CreateDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "*"
                    }
                }
            }
        ],
        "CloudFront.CreateDistributionWithTags": [
            {
                "action": "cloudfront:CreateDistributionWithTags",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "*"
                    }
                }
            }
        ],
        "CloudFront.CreateFieldLevelEncryptionConfig": [
            {
                "action": "cloudfront:CreateFieldLevelEncryptionConfig"
            }
        ],
        "CloudFront.CreateFieldLevelEncryptionProfile": [
            {
                "action": "cloudfront:CreateFieldLevelEncryptionProfile"
            }
        ],
        "CloudFront.CreateInvalidation": [
            {
                "action": "cloudfront:CreateInvalidation",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${DistributionId}"
                    }
                }
            }
        ],
        "CloudFront.CreateOriginRequestPolicy": [
            {
                "action": "cloudfront:CreateOriginRequestPolicy"
            }
        ],
        "CloudFront.CreatePublicKey": [
            {
                "action": "cloudfront:CreatePublicKey"
            }
        ],
        "CloudFront.CreateStreamingDistribution": [
            {
                "action": "cloudfront:CreateStreamingDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "*"
                    }
                }
            }
        ],
        "CloudFront.CreateStreamingDistributionWithTags": [
            {
                "action": "cloudfront:CreateStreamingDistributionWithTags",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "*"
                    }
                }
            }
        ],
        "CloudFront.DeleteCachePolicy": [
            {
                "action": "cloudfront:DeleteCachePolicy"
            }
        ],
        "CloudFront.DeleteCloudFrontOriginAccessIdentity": [
            {
                "action": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
                "resource_mappings": {
                    "Id": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.DeleteDistribution": [
            {
                "action": "cloudfront:DeleteDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.DeleteFieldLevelEncryptionConfig": [
            {
                "action": "cloudfront:DeleteFieldLevelEncryptionConfig"
            }
        ],
        "CloudFront.DeleteFieldLevelEncryptionProfile": [
            {
                "action": "cloudfront:DeleteFieldLevelEncryptionProfile"
            }
        ],
        "CloudFront.DeleteOriginRequestPolicy": [
            {
                "action": "cloudfront:DeleteOriginRequestPolicy"
            }
        ],
        "CloudFront.DeletePublicKey": [
            {
                "action": "cloudfront:DeletePublicKey"
            }
        ],
        "CloudFront.DeleteStreamingDistribution": [
            {
                "action": "cloudfront:DeleteStreamingDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.GetCachePolicy": [
            {
                "action": "cloudfront:GetCachePolicy"
            }
        ],
        "CloudFront.GetCachePolicyConfig": [
            {
                "action": "cloudfront:GetCachePolicyConfig"
            }
        ],
        "CloudFront.GetCloudFrontOriginAccessIdentity": [
            {
                "action": "cloudfront:GetCloudFrontOriginAccessIdentity",
                "resource_mappings": {
                    "Id": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.GetCloudFrontOriginAccessIdentityConfig": [
            {
                "action": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
                "resource_mappings": {
                    "Id": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.GetDistribution": [
            {
                "action": "cloudfront:GetDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.GetDistributionConfig": [
            {
                "action": "cloudfront:GetDistributionConfig",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.GetFieldLevelEncryption": [
            {
                "action": "cloudfront:GetFieldLevelEncryption"
            }
        ],
        "CloudFront.GetFieldLevelEncryptionConfig": [
            {
                "action": "cloudfront:GetFieldLevelEncryptionConfig"
            }
        ],
        "CloudFront.GetFieldLevelEncryptionProfile": [
            {
                "action": "cloudfront:GetFieldLevelEncryptionProfile"
            }
        ],
        "CloudFront.GetFieldLevelEncryptionProfileConfig": [
            {
                "action": "cloudfront:GetFieldLevelEncryptionProfileConfig"
            }
        ],
        "CloudFront.GetInvalidation": [
            {
                "action": "cloudfront:GetInvalidation",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${DistributionId}"
                    }
                }
            }
        ],
        "CloudFront.GetOriginRequestPolicy": [
            {
                "action": "cloudfront:GetOriginRequestPolicy"
            }
        ],
        "CloudFront.GetOriginRequestPolicyConfig": [
            {
                "action": "cloudfront:GetOriginRequestPolicyConfig"
            }
        ],
        "CloudFront.GetPublicKey": [
            {
                "action": "cloudfront:GetPublicKey"
            }
        ],
        "CloudFront.GetPublicKeyConfig": [
            {
                "action": "cloudfront:GetPublicKeyConfig"
            }
        ],
        "CloudFront.GetStreamingDistribution": [
            {
                "action": "cloudfront:GetStreamingDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.GetStreamingDistributionConfig": [
            {
                "action": "cloudfront:GetStreamingDistributionConfig",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.ListCachePolicies": [
            {
                "action": "cloudfront:ListCachePolicies"
            }
        ],
        "CloudFront.ListCloudFrontOriginAccessIdentities": [
            {
                "action": "cloudfront:ListCloudFrontOriginAccessIdentities"
            }
        ],
        "CloudFront.ListDistributions": [
            {
                "action": "cloudfront:ListDistributions"
            }
        ],
        "CloudFront.ListDistributionsByCachePolicyId": [
            {
                "action": "cloudfront:ListDistributionsByCachePolicyId"
            }
        ],
        "CloudFront.ListDistributionsByOriginRequestPolicyId": [
            {
                "action": "cloudfront:ListDistributionsByOriginRequestPolicyId"
            }
        ],
        "CloudFront.ListDistributionsByWebACLId": [
            {
                "action": "cloudfront:ListDistributionsByWebACLId"
            }
        ],
        "CloudFront.ListFieldLevelEncryptionConfigs": [
            {
                "action": "cloudfront:ListFieldLevelEncryptionConfigs"
            }
        ],
        "CloudFront.ListFieldLevelEncryptionProfiles": [
            {
                "action": "cloudfront:ListFieldLevelEncryptionProfiles"
            }
        ],
        "CloudFront.ListInvalidations": [
            {
                "action": "cloudfront:ListInvalidations",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${DistributionId}"
                    }
                }
            }
        ],
        "CloudFront.ListOriginRequestPolicies": [
            {
                "action": "cloudfront:ListOriginRequestPolicies"
            }
        ],
        "CloudFront.ListPublicKeys": [
            {
                "action": "cloudfront:ListPublicKeys"
            }
        ],
        "CloudFront.ListStreamingDistributions": [
            {
                "action": "cloudfront:ListStreamingDistributions"
            }
        ],
        "CloudFront.ListTagsForResource": [
            {
                "action": "cloudfront:ListTagsForResource"
            }
        ],
        "CloudFront.TagResource": [
            {
                "action": "cloudfront:TagResource"
            }
        ],
        "CloudFront.UntagResource": [
            {
                "action": "cloudfront:UntagResource"
            }
        ],
        "CloudFront.UpdateCachePolicy": [
            {
                "action": "cloudfront:UpdateCachePolicy"
            }
        ],
        "CloudFront.UpdateCloudFrontOriginAccessIdentity": [
            {
                "action": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
                "resource_mappings": {
                    "Id": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.UpdateDistribution": [
            {
                "action": "cloudfront:UpdateDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudFront.UpdateFieldLevelEncryptionConfig": [
            {
                "action": "cloudfront:UpdateFieldLevelEncryptionConfig"
            }
        ],
        "CloudFront.UpdateFieldLevelEncryptionProfile": [
            {
                "action": "cloudfront:UpdateFieldLevelEncryptionProfile"
            }
        ],
        "CloudFront.UpdateOriginRequestPolicy": [
            {
                "action": "cloudfront:UpdateOriginRequestPolicy"
            }
        ],
        "CloudFront.UpdatePublicKey": [
            {
                "action": "cloudfront:UpdatePublicKey"
            }
        ],
        "CloudFront.UpdateStreamingDistribution": [
            {
                "action": "cloudfront:UpdateStreamingDistribution",
                "resource_mappings": {
                    "DistributionId": {
                        "template": "${Id}"
                    }
                }
            }
        ],
        "CloudHSM.AddTagsToResource": [
            {
                "action": "cloudhsm:AddTagsToResource"
            }
        ],
        "CloudHSM.CreateHapg": [
            {
                "action": "cloudhsm:CreateHapg"
            }
        ],
        "CloudHSM.CreateHsm": [
            {
                "action": "cloudhsm:CreateHsm"
            }
        ],
        "CloudHSM.CreateLunaClient": [
            {
                "action": "cloudhsm:CreateLunaClient"
            }
        ],
        "CloudHSM.DeleteHapg": [
            {
                "action": "cloudhsm:DeleteHapg"
            }
        ],
        "CloudHSM.DeleteHsm": [
            {
                "action": "cloudhsm:DeleteHsm"
            }
        ],
        "CloudHSM.DeleteLunaClient": [
            {
                "action": "cloudhsm:DeleteLunaClient"
            }
        ],
        "CloudHSM.DescribeHapg": [
            {
                "action": "cloudhsm:DescribeHapg"
            }
        ],
        "CloudHSM.DescribeHsm": [
            {
                "action": "cloudhsm:DescribeHsm"
            }
        ],
        "CloudHSM.DescribeLunaClient": [
            {
                "action": "cloudhsm:DescribeLunaClient"
            }
        ],
        "CloudHSM.GetConfig": [
            {
                "action": "cloudhsm:GetConfig"
            }
        ],
        "CloudHSM.ListAvailableZones": [
            {
                "action": "cloudhsm:ListAvailableZones"
            }
        ],
        "CloudHSM.ListHapgs": [
            {
                "action": "cloudhsm:ListHapgs"
            }
        ],
        "CloudHSM.ListHsms": [
            {
                "action": "cloudhsm:ListHsms"
            }
        ],
        "CloudHSM.ListLunaClients": [
            {
                "action": "cloudhsm:ListLunaClients"
            }
        ],
        "CloudHSM.ListTagsForResource": [
            {
                "action": "cloudhsm:ListTagsForResource"
            }
        ],
        "CloudHSM.ModifyHapg": [
            {
                "action": "cloudhsm:ModifyHapg"
            }
        ],
        "CloudHSM.ModifyHsm": [
            {
                "action": "cloudhsm:ModifyHsm"
            }
        ],
        "CloudHSM.ModifyLunaClient": [
            {
                "action": "cloudhsm:ModifyLunaClient"
            }
        ],
        "CloudHSM.RemoveTagsFromResource": [
            {
                "action": "cloudhsm:RemoveTagsFromResource"
            }
        ],
        "CloudSearch.BuildSuggesters": [
            {
                "action": "cloudsearch:BuildSuggesters",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.CreateDomain": [
            {
                "action": "cloudsearch:CreateDomain",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DefineAnalysisScheme": [
            {
                "action": "cloudsearch:DefineAnalysisScheme",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DefineExpression": [
            {
                "action": "cloudsearch:DefineExpression",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DefineIndexField": [
            {
                "action": "cloudsearch:DefineIndexField",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DefineSuggester": [
            {
                "action": "cloudsearch:DefineSuggester",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DeleteAnalysisScheme": [
            {
                "action": "cloudsearch:DeleteAnalysisScheme",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DeleteDomain": [
            {
                "action": "cloudsearch:DeleteDomain",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DeleteExpression": [
            {
                "action": "cloudsearch:DeleteExpression",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DeleteIndexField": [
            {
                "action": "cloudsearch:DeleteIndexField",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DeleteSuggester": [
            {
                "action": "cloudsearch:DeleteSuggester",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeAnalysisSchemes": [
            {
                "action": "cloudsearch:DescribeAnalysisSchemes",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeAvailabilityOptions": [
            {
                "action": "cloudsearch:DescribeAvailabilityOptions",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeDomainEndpointOptions": [
            {
                "action": "cloudsearch:DescribeDomainEndpointOptions",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeDomains": [
            {
                "action": "cloudsearch:DescribeDomains"
            }
        ],
        "CloudSearch.DescribeExpressions": [
            {
                "action": "cloudsearch:DescribeExpressions",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeIndexFields": [
            {
                "action": "cloudsearch:DescribeIndexFields",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeScalingParameters": [
            {
                "action": "cloudsearch:DescribeScalingParameters",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeServiceAccessPolicies": [
            {
                "action": "cloudsearch:DescribeServiceAccessPolicies",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.DescribeSuggesters": [
            {
                "action": "cloudsearch:DescribeSuggesters",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.IndexDocuments": [
            {
                "action": "cloudsearch:IndexDocuments",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.ListDomainNames": [
            {
                "action": "cloudsearch:ListDomainNames"
            }
        ],
        "CloudSearch.UpdateAvailabilityOptions": [
            {
                "action": "cloudsearch:UpdateAvailabilityOptions",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.UpdateDomainEndpointOptions": [
            {
                "action": "cloudsearch:UpdateDomainEndpointOptions",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.UpdateScalingParameters": [
            {
                "action": "cloudsearch:UpdateScalingParameters",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudSearch.UpdateServiceAccessPolicies": [
            {
                "action": "cloudsearch:UpdateServiceAccessPolicies",
                "resource_mappings": {
                    "DomainName": {
                        "template": "${DomainName}"
                    }
                }
            }
        ],
        "CloudTrail.AddTags": [
            {
                "action": "cloudtrail:AddTags"
            }
        ],
        "CloudTrail.CreateTrail": [
            {
                "action": "cloudtrail:CreateTrail",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "CloudTrail.DeleteTrail": [
            {
                "action": "cloudtrail:DeleteTrail",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "CloudTrail.DescribeTrails": [
            {
                "action": "cloudtrail:DescribeTrails"
            }
        ],
        "CloudTrail.GetEventSelectors": [
            {
                "action": "cloudtrail:GetEventSelectors",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${TrailName}"
                    }
                }
            }
        ],
        "CloudTrail.GetInsightSelectors": [
            {
                "action": "cloudtrail:GetInsightSelectors",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${TrailName}"
                    }
                }
            }
        ],
        "CloudTrail.GetTrail": [
            {
                "action": "cloudtrail:GetTrail"
            }
        ],
        "CloudTrail.GetTrailStatus": [
            {
                "action": "cloudtrail:GetTrailStatus",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "CloudTrail.ListPublicKeys": [
            {
                "action": "cloudtrail:ListPublicKeys"
            }
        ],
        "CloudTrail.ListTags": [
            {
                "action": "cloudtrail:ListTags"
            }
        ],
        "CloudTrail.ListTrails": [
            {
                "action": "cloudtrail:ListTrails"
            }
        ],
        "CloudTrail.LookupEvents": [
            {
                "action": "cloudtrail:LookupEvents"
            }
        ],
        "CloudTrail.PutEventSelectors": [
            {
                "action": "cloudtrail:PutEventSelectors",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${TrailName}"
                    }
                }
            }
        ],
        "CloudTrail.PutInsightSelectors": [
            {
                "action": "cloudtrail:PutInsightSelectors",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${TrailName}"
                    }
                }
            }
        ],
        "CloudTrail.RemoveTags": [
            {
                "action": "cloudtrail:RemoveTags"
            }
        ],
        "CloudTrail.StartLogging": [
            {
                "action": "cloudtrail:StartLogging",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "CloudTrail.StopLogging": [
            {
                "action": "cloudtrail:StopLogging",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "CloudTrail.UpdateTrail": [
            {
                "action": "cloudtrail:UpdateTrail",
                "resource_mappings": {
                    "TrailName": {
                        "template": "${Name}"
                    }
                }
            }
        ],
        "CloudWatch.DeleteAlarms": [
            {
                "action": "cloudwatch:DeleteAlarms"
            }
        ],
        "CloudWatch.DeleteAnomalyDetector": [
            {
                "action": "cloudwatch:DeleteAnomalyDetector"
            }
        ],
        "CloudWatch.DeleteDashboards": [
            {
                "action": "cloudwatch:DeleteDashboards"
            }
        ],
        "CloudWatch.DeleteInsightRules": [
            {
                "action": "cloudwatch:DeleteInsightRules"
            }
        ],
        "CloudWatch.DescribeAlarmHistory": [
            {
                "action": "cloudwatch:DescribeAlarmHistory"
            }
        ],
        "CloudWatch.DescribeAlarms": [
            {
                "action": "cloudwatch:DescribeAlarms"
            }
        ],
        "CloudWatch.DescribeAlarmsForMetric": [
            {
                "action": "cloudwatch:DescribeAlarmsForMetric"
            }
        ],
        "CloudWatch.DescribeAnomalyDetectors": [
            {
                "action": "cloudwatch:DescribeAnomalyDetectors"
            }
        ],
        "CloudWatch.DescribeInsightRules": [
            {
                "action": "cloudwatch:DescribeInsightRules"
            }
        ],
        "CloudWatch.DisableAlarmActions": [
            {
                "action": "cloudwatch:DisableAlarmActions"
            }
        ],
        "CloudWatch.DisableInsightRules": [
            {
                "action": "cloudwatch:DisableInsightRules"
            }
        ],
        "CloudWatch.EnableAlarmActions": [
            {
                "action": "cloudwatch:EnableAlarmActions"
            }
        ],
        "CloudWatch.EnableInsightRules": [
            {
                "action": "cloudwatch:EnableInsightRules"
            }
        ],
        "CloudWatch.GetDashboard": [
            {
                "action": "cloudwatch:GetDashboard"
            }
        ],
        "CloudWatch.GetInsightRuleReport": [
            {
                "action": "cloudwatch:GetInsightRuleReport"
            }
        ],
        "CloudWatch.GetMetricData": [
            {
                "action": "cloudwatch:GetMetricData"
            }
        ],
        "CloudWatch.GetMetricStatistics": [
            {
                "action": "cloudwatch:GetMetricStatistics"
            }
        ],
        "CloudWatch.GetMetricWidgetImage": [
            {
                "action": "cloudwatch:GetMetricWidgetImage"
            }
        ],
        "CloudWatch.ListDashboards": [
            {
                "action": "cloudwatch:ListDashboards"
            }
        ],
        "CloudWatch.ListMetrics": [
            {
                "action": "cloudwatch:ListMetrics"
            }
        ],
        "CloudWatch.ListTagsForResource": [
            {
                "action": "cloudwatch:ListTagsForResource"
            }
        ],
        "CloudWatch.PutAnomalyDetector": [
            {
                "action": "cloudwatch:PutAnomalyDetector"
            }
        ],
        "CloudWatch.PutCompositeAlarm": [
            {
                "action": "cloudwatch:PutCompositeAlarm"
            }
        ],
        "CloudWatch.PutDashboard": [
            {
                "action": "cloudwatch:PutDashboard"
            }
        ],
        "CloudWatch.PutInsightRule": [
            {
                "action": "cloudwatch:PutInsightRule"
            }
        ],
        "CloudWatch.PutMetricAlarm": [
            {
                "action": "cloudwatch:PutMetricAlarm"
            }
        ],
        "CloudWatch.PutMetricData": [
            {
                "action": "cloudwatch:PutMetricData"
            }
        ],
        "CloudWatch.SetAlarmState": [
            {
                "action": "cloudwatch:SetAlarmState"
            }
        ],
        "CloudWatch.TagResource": [
            {
                "action": "cloudwatch:TagResource"
            }
        ],
        "CloudWatch.UntagResource": [
            {
                "action": "cloudwatch:UntagResource"
            }
        ],
        "CloudWatchEvents.ActivateEventSource": [
            {
                "action": "events:ActivateEventSource"
            }
        ],
        "CloudWatchEvents.CancelReplay": [
            {
                "action": "events:CancelReplay"
            }
        ],
        "CloudWatchEvents.CreateArchive": [
            {
                "action": "events:CreateArchive"
            }
        ],
        "CloudWatchEvents.CreateEventBus": [
            {
                "action": "events:CreateEventBus"
            }
        ],
        "CloudWatchEvents.CreatePartnerEventSource": [
            {
                "action": "events:CreatePartnerEventSource"
            }
        ],
        "CloudWatchEvents.DeactivateEventSource": [
            {
                "action": "events:DeactivateEventSource"
            }
        ],
        "CloudWatchEvents.DeleteArchive": [
            {
                "action": "events:DeleteArchive"
            }
        ],
        "CloudWatchEvents.DeleteEventBus": [
            {
                "action": "events:DeleteEventBus"
            }
        ],
        "CloudWatchEvents.DeletePartnerEventSource": [
            {
                "action": "events:DeletePartnerEventSource"
            }
        ],
        "CloudWatchEvents.DeleteRule": [
            {
                "action": "events:DeleteRule"
            }
        ],
        "CloudWatchEvents.DescribeArchive": [
            {
                "action": "events:DescribeArchive"
            }
        ],
        "CloudWatchEvents.DescribeEventBus": [
            {
                "action": "events:DescribeEventBus"
            }
        ],
        "CloudWatchEvents.DescribeEventSource": [
            {
                "action": "events:DescribeEventSource"
            }
        ],
        "CloudWatchEvents.DescribePartnerEventSource": [
            {
                "action": "events:DescribePartnerEventSource"
            }
        ],
        "CloudWatchEvents.DescribeReplay": [
            {
                "action": "events:DescribeReplay"
            }
        ],
        "CloudWatchEvents.DescribeRule": [
            {
                "action": "events:DescribeRule"
            }
        ],
        "CloudWatchEvents.DisableRule": [
            {
                "action": "events:DisableRule"
            }
        ],
        "CloudWatchEvents.EnableRule": [
            {
                "action": "events:EnableRule"
            }
        ],
        "CloudWatchEvents.ListArchives": [
            {
                "action": "events:ListArchives"
            }
        ],
        "CloudWatchEvents.ListEventBuses": [
            {
                "action": "events:ListEventBuses"
            }
        ],
        "CloudWatchEvents.ListEventSources": [
            {
                "action": "events:ListEventSources"
            }
        ],
        "CloudWatchEvents.ListPartnerEventSourceAccounts": [
            {
                "action": "events:ListPartnerEventSourceAccounts"
            }
        ],
        "CloudWatchEvents.ListPartnerEventSources": [
            {
                "action": "events:ListPartnerEventSources"
            }
        ],
        "CloudWatchEvents.ListReplays": [
            {
                "action": "events:ListReplays"
            }
        ],
        "CloudWatchEvents.ListRuleNamesByTarget": [
            {
                "action": "events:ListRuleNamesByTarget"
            }
        ],
        "CloudWatchEvents.ListRules": [
            {
                "action": "events:ListRules"
            }
        ],
        "CloudWatchEvents.ListTagsForResource": [
            {
                "action": "events:ListTagsForResource"
            }
        ],
        "CloudWatchEvents.ListTargetsByRule": [
            {
                "action": "events:ListTargetsByRule"
            }
        ],
        "CloudWatchEvents.PutEvents": [
            {
                "action": "events:PutEvents"
            }
        ],
        "CloudWatchEvents.PutPartnerEvents": [
            {
                "action": "events:PutPartnerEvents"
            }
        ],
        "CloudWatchEvents.PutPermission": [
            {
                "action": "events:PutPermission"
            }
        ],
        "CloudWatchEvents.PutRule": [
            {
                "action": "events:PutRule"
            }
        ],
        "CloudWatchEvents.PutTargets": [
            {
                "action": "events:PutTargets"
            }
        ],
        "CloudWatchEvents.RemovePermission": [
            {
                "action": "events:RemovePermission"
            }
        ],
        "CloudWatchEvents.RemoveTargets": [
            {
                "action": "events:RemoveTargets"
            }
        ],
        "CloudWatchEvents.StartReplay": [
            {
                "action": "events:StartReplay"
            }
        ],
        "CloudWatchEvents.TagResource": [
            {
                "action": "events:TagResource"
            }
        ],
        "CloudWatchEvents.TestEventPattern": [
            {
                "action": "events:TestEventPattern"
            }
        ],
        "CloudWatchEvents.UntagResource": [
            {
                "action": "events:UntagResource"
            }
        ],
        "CloudWatchEvents.UpdateArchive": [
            {
                "action": "events:UpdateArchive"
            }
        ],
        "CloudWatchLogs.AssociateKmsKey": [
            {
                "action": "logs:AssociateKmsKey"
            }
        ],
        "CloudWatchLogs.CancelExportTask": [
            {
                "action": "logs:CancelExportTask"
            }
        ],
        "CloudWatchLogs.CreateExportTask": [
            {
                "action": "logs:CreateExportTask"
            }
        ],
        "CloudWatchLogs.CreateLogGroup": [
            {
                "action": "logs:CreateLogGroup"
            }
        ],
        "CloudWatchLogs.CreateLogStream": [
            {
                "action": "logs:CreateLogStream"
            }
        ],
        "CloudWatchLogs.DeleteDestination": [
            {
                "action": "logs:DeleteDestination"
            }
        ],
        "CloudWatchLogs.DeleteLogGroup": [
            {
                "action": "logs:DeleteLogGroup"
            }
        ],
        "CloudWatchLogs.DeleteLogStream": [
            {
                "action": "logs:DeleteLogStream"
            }
        ],
        "CloudWatchLogs.DeleteMetricFilter": [
            {
                "action": "logs:DeleteMetricFilter"
            }
        ],
        "CloudWatchLogs.DeleteResourcePolicy": [
            {
                "action": "logs:DeleteResourcePolicy"
            }
        ],
        "CloudWatchLogs.DeleteRetentionPolicy": [
            {
                "action": "logs:DeleteRetentionPolicy"
            }
        ],
        "CloudWatchLogs.DeleteSubscriptionFilter": [
            {
                "action": "logs:DeleteSubscriptionFilter"
            }
        ],
        "CloudWatchLogs.DescribeDestinations": [
            {
                "action": "logs:DescribeDestinations"
            }
        ],
        "CloudWatchLogs.DescribeExportTasks": [
            {
                "action": "logs:DescribeExportTasks"
            }
        ],
        "CloudWatchLogs.DescribeLogGroups": [
            {
                "action": "logs:DescribeLogGroups"
            }
        ],
        "CloudWatchLogs.DescribeLogStreams": [
            {
                "action": "logs:DescribeLogStreams"
            }
        ],
        "CloudWatchLogs.DescribeMetricFilters": [
            {
                "action": "logs:DescribeMetricFilters"
            }
        ],
        "CloudWatchLogs.DescribeQueries": [
            {
                "action": "logs:DescribeQueries"
            }
        ],
        "CloudWatchLogs.DescribeResourcePolicies": [
            {
                "action": "logs:DescribeResourcePolicies"
            }
        ],
        "CloudWatchLogs.DescribeSubscriptionFilters": [
            {
                "action": "logs:DescribeSubscriptionFilters"
            }
        ],
        "CloudWatchLogs.DisassociateKmsKey": [
            {
                "action": "logs:DisassociateKmsKey"
            }
        ],
        "CloudWatchLogs.FilterLogEvents": [
            {
                "action": "logs:FilterLogEvents"
            }
        ],
        "CloudWatchLogs.GetLogEvents": [
            {
                "action": "logs:GetLogEvents"
            }
        ],
        "CloudWatchLogs.GetLogGroupFields": [
            {
                "action": "logs:GetLogGroupFields"
            }
        ],
        "CloudWatchLogs.GetLogRecord": [
            {
                "action": "logs:GetLogRecord"
            }
        ],
        "CloudWatchLogs.GetQueryResults": [
            {
                "action": "logs:GetQueryResults"
            }
        ],
        "CloudWatchLogs.ListTagsLogGroup": [
            {
                "action": "logs:ListTagsLogGroup"
            }
        ],
        "CloudWatchLogs.PutDestination": [
            {
                "action": "logs:PutDestination"
            }
        ],
        "CloudWatchLogs.PutDestinationPolicy": [
            {
                "action": "logs:PutDestinationPolicy"
            }
        ],
        "CloudWatchLogs.PutLogEvents": [
            {
                "action": "logs:PutLogEvents"
            }
        ],
        "CloudWatchLogs.PutMetricFilter": [
            {
                "action": "logs:PutMetricFilter"
            }
        ],
        "CloudWatchLogs.PutResourcePolicy": [
            {
                "action": "logs:PutResourcePolicy"
            }
        ],
        "CloudWatchLogs.PutRetentionPolicy": [
            {
                "action": "logs:PutRetentionPolicy"
            }
        ],
        "CloudWatchLogs.PutSubscriptionFilter": [
            {
                "action": "logs:PutSubscriptionFilter"
            }
        ],
        "CloudWatchLogs.StartQuery": [
            {
                "action": "logs:StartQuery"
            }
        ],
        "CloudWatchLogs.StopQuery": [
            {
                "action": "logs:StopQuery"
            }
        ],
        "CloudWatchLogs.TagLogGroup": [
            {
                "action": "logs:TagLogGroup"
            }
        ],
        "CloudWatchLogs.TestMetricFilter": [
            {
                "action": "logs:TestMetricFilter"
            }
        ],
        "CloudWatchLogs.UntagLogGroup": [
            {
                "action": "logs:UntagLogGroup"
            }
        ],
        "CodeBuild.BatchDeleteBuilds": [
            {
                "action": "codebuild:BatchDeleteBuilds"
            }
        ],
        "CodeBuild.BatchGetBuildBatches": [
            {
                "action": "codebuild:BatchGetBuildBatches"
            }
        ],
        "CodeBuild.BatchGetBuilds": [
            {
                "action": "codebuild:BatchGetBuilds"
            }
        ],
        "CodeBuild.BatchGetProjects": [
            {
                "action": "codebuild:BatchGetProjects"
            }
        ],
        "CodeBuild.BatchGetReportGroups": [
            {
                "action": "codebuild:BatchGetReportGroups"
            }
        ],
        "CodeBuild.BatchGetReports": [
            {
                "action": "codebuild:BatchGetReports"
            }
        ],
        "CodeBuild.CreateProject": [
            {
                "action": "codebuild:CreateProject"
            }
        ],
        "CodeBuild.CreateReportGroup": [
            {
                "action": "codebuild:CreateReportGroup"
            }
        ],
        "CodeBuild.CreateWebhook": [
            {
                "action": "codebuild:CreateWebhook"
            }
        ],
        "CodeBuild.DeleteBuildBatch": [
            {
                "action": "codebuild:DeleteBuildBatch"
            }
        ],
        "CodeBuild.DeleteProject": [
            {
                "action": "codebuild:DeleteProject"
            }
        ],
        "CodeBuild.DeleteReport": [
            {
                "action": "codebuild:DeleteReport"
            }
        ],
        "CodeBuild.DeleteReportGroup": [
            {
                "action": "codebuild:DeleteReportGroup"
            }
        ],
        "CodeBuild.DeleteResourcePolicy": [
            {
                "action": "codebuild:DeleteResourcePolicy"
            }
        ],
        "CodeBuild.DeleteSourceCredentials": [
            {
                "action": "codebuild:DeleteSourceCredentials"
            }
        ],
        "CodeBuild.DeleteWebhook": [
            {
                "action": "codebuild:DeleteWebhook"
            }
        ],
        "CodeBuild.DescribeCodeCoverages": [
            {
                "action": "codebuild:DescribeCodeCoverages"
            }
        ],
        "CodeBuild.DescribeTestCases": [
            {
                "action": "codebuild:DescribeTestCases"
            }
        ],
        "CodeBuild.GetResourcePolicy": [
            {
                "action": "codebuild:GetResourcePolicy"
            }
        ],
        "CodeBuild.ImportSourceCredentials": [
            {
                "action": "codebuild:ImportSourceCredentials"
            }
        ],
        "CodeBuild.InvalidateProjectCache": [
            {
                "action": "codebuild:InvalidateProjectCache"
            }
        ],
        "CodeBuild.ListBuildBatches": [
            {
                "action": "codebuild:ListBuildBatches"
            }
        ],
        "CodeBuild.ListBuildBatchesForProject": [
            {
                "action": "codebuild:ListBuildBatchesForProject"
            }
        ],
        "CodeBuild.ListBuilds": [
            {
                "action": "codebuild:ListBuilds"
            }
        ],
        "CodeBuild.ListBuildsForProject": [
            {
                "action": "codebuild:ListBuildsForProject"
            }
        ],
        "CodeBuild.ListCuratedEnvironmentImages": [
            {
                "action": "codebuild:ListCuratedEnvironmentImages"
            }
        ],
        "CodeBuild.ListProjects": [
            {
                "action": "codebuild:ListProjects"
            }
        ],
        "CodeBuild.ListReportGroups": [
            {
                "action": "codebuild:ListReportGroups"
            }
        ],
        "CodeBuild.ListReports": [
            {
                "action": "codebuild:ListReports"
            }
        ],
        "CodeBuild.ListReportsForReportGroup": [
            {
                "action": "codebuild:ListReportsForReportGroup"
            }
        ],
        "CodeBuild.ListSharedProjects": [
            {
                "action": "codebuild:ListSharedProjects"
            }
        ],
        "CodeBuild.ListSharedReportGroups": [
            {
                "action": "codebuild:ListSharedReportGroups"
            }
        ],
        "CodeBuild.ListSourceCredentials": [
            {
                "action": "codebuild:ListSourceCredentials"
            }
        ],
        "CodeBuild.PutResourcePolicy": [
            {
                "action": "codebuild:PutResourcePolicy"
            }
        ],
        "CodeBuild.RetryBuild": [
            {
                "action": "codebuild:RetryBuild"
            }
        ],
        "CodeBuild.RetryBuildBatch": [
            {
                "action": "codebuild:RetryBuildBatch"
            }
        ],
        "CodeBuild.StartBuild": [
            {
                "action": "codebuild:StartBuild"
            }
        ],
        "CodeBuild.StartBuildBatch": [
            {
                "action": "codebuild:StartBuildBatch"
            }
        ],
        "CodeBuild.StopBuild": [
            {
                "action": "codebuild:StopBuild"
            }
        ],
        "CodeBuild.StopBuildBatch": [
            {
                "action": "codebuild:StopBuildBatch"
            }
        ],
        "CodeBuild.UpdateProject": [
            {
                "action": "codebuild:UpdateProject"
            }
        ],
        "CodeBuild.UpdateReportGroup": [
            {
                "action": "codebuild:UpdateReportGroup"
            }
        ],
        "CodeBuild.UpdateWebhook": [
            {
                "action": "codebuild:UpdateWebhook"
            }
        ],
        "CodeCommit.AssociateApprovalRuleTemplateWithRepository": [
            {
                "action": "codecommit:AssociateApprovalRuleTemplateWithRepository"
            }
        ],
        "CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories": [
            {
                "action": "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories"
            }
        ],
        "CodeCommit.BatchDescribeMergeConflicts": [
            {
                "action": "codecommit:BatchDescribeMergeConflicts"
            }
        ],
        "CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories": [
            {
                "action": "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories"
            }
        ],
        "CodeCommit.BatchGetCommits": [
            {
                "action": "codecommit:BatchGetCommits"
            }
        ],
        "CodeCommit.BatchGetRepositories": [
            {
                "action": "codecommit:BatchGetRepositories"
            }
        ],
        "CodeCommit.CreateApprovalRuleTemplate": [
            {
                "action": "codecommit:CreateApprovalRuleTemplate"
            }
        ],
        "CodeCommit.CreateBranch": [
            {
                "action": "codecommit:CreateBranch",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.CreateCommit": [
            {
                "action": "codecommit:CreateCommit",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.CreatePullRequest": [
            {
                "action": "codecommit:CreatePullRequest"
            }
        ],
        "CodeCommit.CreatePullRequestApprovalRule": [
            {
                "action": "codecommit:CreatePullRequestApprovalRule"
            }
        ],
        "CodeCommit.CreateRepository": [
            {
                "action": "codecommit:CreateRepository",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.CreateUnreferencedMergeCommit": [
            {
                "action": "codecommit:CreateUnreferencedMergeCommit",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.DeleteApprovalRuleTemplate": [
            {
                "action": "codecommit:DeleteApprovalRuleTemplate"
            }
        ],
        "CodeCommit.DeleteBranch": [
            {
                "action": "codecommit:DeleteBranch",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.DeleteCommentContent": [
            {
                "action": "codecommit:DeleteCommentContent"
            }
        ],
        "CodeCommit.DeleteFile": [
            {
                "action": "codecommit:DeleteFile",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.DeletePullRequestApprovalRule": [
            {
                "action": "codecommit:DeletePullRequestApprovalRule"
            }
        ],
        "CodeCommit.DeleteRepository": [
            {
                "action": "codecommit:DeleteRepository",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.DescribeMergeConflicts": [
            {
                "action": "codecommit:DescribeMergeConflicts",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.DescribePullRequestEvents": [
            {
                "action": "codecommit:DescribePullRequestEvents"
            }
        ],
        "CodeCommit.DisassociateApprovalRuleTemplateFromRepository": [
            {
                "action": "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.EvaluatePullRequestApprovalRules": [
            {
                "action": "codecommit:EvaluatePullRequestApprovalRules"
            }
        ],
        "CodeCommit.GetApprovalRuleTemplate": [
            {
                "action": "codecommit:GetApprovalRuleTemplate"
            }
        ],
        "CodeCommit.GetBlob": [
            {
                "action": "codecommit:GetBlob",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetBranch": [
            {
                "action": "codecommit:GetBranch",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetComment": [
            {
                "action": "codecommit:GetComment"
            }
        ],
        "CodeCommit.GetCommentReactions": [
            {
                "action": "codecommit:GetCommentReactions"
            }
        ],
        "CodeCommit.GetCommentsForComparedCommit": [
            {
                "action": "codecommit:GetCommentsForComparedCommit",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetCommentsForPullRequest": [
            {
                "action": "codecommit:GetCommentsForPullRequest",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetCommit": [
            {
                "action": "codecommit:GetCommit",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetDifferences": [
            {
                "action": "codecommit:GetDifferences",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetFile": [
            {
                "action": "codecommit:GetFile",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetFolder": [
            {
                "action": "codecommit:GetFolder",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetMergeCommit": [
            {
                "action": "codecommit:GetMergeCommit",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetMergeConflicts": [
            {
                "action": "codecommit:GetMergeConflicts",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetMergeOptions": [
            {
                "action": "codecommit:GetMergeOptions",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetPullRequest": [
            {
                "action": "codecommit:GetPullRequest"
            }
        ],
        "CodeCommit.GetPullRequestApprovalStates": [
            {
                "action": "codecommit:GetPullRequestApprovalStates"
            }
        ],
        "CodeCommit.GetPullRequestOverrideState": [
            {
                "action": "codecommit:GetPullRequestOverrideState"
            }
        ],
        "CodeCommit.GetRepository": [
            {
                "action": "codecommit:GetRepository",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.GetRepositoryTriggers": [
            {
                "action": "codecommit:GetRepositoryTriggers",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.ListApprovalRuleTemplates": [
            {
                "action": "codecommit:ListApprovalRuleTemplates"
            }
        ],
        "CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository": [
            {
                "action": "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.ListBranches": [
            {
                "action": "codecommit:ListBranches",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.ListPullRequests": [
            {
                "action": "codecommit:ListPullRequests",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.ListRepositories": [
            {
                "action": "codecommit:ListRepositories"
            }
        ],
        "CodeCommit.ListRepositoriesForApprovalRuleTemplate": [
            {
                "action": "codecommit:ListRepositoriesForApprovalRuleTemplate"
            }
        ],
        "CodeCommit.ListTagsForResource": [
            {
                "action": "codecommit:ListTagsForResource"
            }
        ],
        "CodeCommit.MergeBranchesByFastForward": [
            {
                "action": "codecommit:MergeBranchesByFastForward",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.MergeBranchesBySquash": [
            {
                "action": "codecommit:MergeBranchesBySquash",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.MergeBranchesByThreeWay": [
            {
                "action": "codecommit:MergeBranchesByThreeWay",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.MergePullRequestByFastForward": [
            {
                "action": "codecommit:MergePullRequestByFastForward",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.MergePullRequestBySquash": [
            {
                "action": "codecommit:MergePullRequestBySquash",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.MergePullRequestByThreeWay": [
            {
                "action": "codecommit:MergePullRequestByThreeWay",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.OverridePullRequestApprovalRules": [
            {
                "action": "codecommit:OverridePullRequestApprovalRules"
            }
        ],
        "CodeCommit.PostCommentForComparedCommit": [
            {
                "action": "codecommit:PostCommentForComparedCommit",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.PostCommentForPullRequest": [
            {
                "action": "codecommit:PostCommentForPullRequest",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.PostCommentReply": [
            {
                "action": "codecommit:PostCommentReply"
            }
        ],
        "CodeCommit.PutCommentReaction": [
            {
                "action": "codecommit:PutCommentReaction"
            }
        ],
        "CodeCommit.PutFile": [
            {
                "action": "codecommit:PutFile",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.PutRepositoryTriggers": [
            {
                "action": "codecommit:PutRepositoryTriggers",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.TagResource": [
            {
                "action": "codecommit:TagResource"
            }
        ],
        "CodeCommit.TestRepositoryTriggers": [
            {
                "action": "codecommit:TestRepositoryTriggers",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.UntagResource": [
            {
                "action": "codecommit:UntagResource"
            }
        ],
        "CodeCommit.UpdateApprovalRuleTemplateContent": [
            {
                "action": "codecommit:UpdateApprovalRuleTemplateContent"
            }
        ],
        "CodeCommit.UpdateApprovalRuleTemplateDescription": [
            {
                "action": "codecommit:UpdateApprovalRuleTemplateDescription"
            }
        ],
        "CodeCommit.UpdateApprovalRuleTemplateName": [
            {
                "action": "codecommit:UpdateApprovalRuleTemplateName"
            }
        ],
        "CodeCommit.UpdateComment": [
            {
                "action": "codecommit:UpdateComment"
            }
        ],
        "CodeCommit.UpdateDefaultBranch": [
            {
                "action": "codecommit:UpdateDefaultBranch",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.UpdatePullRequestApprovalRuleContent": [
            {
                "action": "codecommit:UpdatePullRequestApprovalRuleContent"
            }
        ],
        "CodeCommit.UpdatePullRequestApprovalState": [
            {
                "action": "codecommit:UpdatePullRequestApprovalState"
            }
        ],
        "CodeCommit.UpdatePullRequestDescription": [
            {
                "action": "codecommit:UpdatePullRequestDescription"
            }
        ],
        "CodeCommit.UpdatePullRequestStatus": [
            {
                "action": "codecommit:UpdatePullRequestStatus"
            }
        ],
        "CodeCommit.UpdatePullRequestTitle": [
            {
                "action": "codecommit:UpdatePullRequestTitle"
            }
        ],
        "CodeCommit.UpdateRepositoryDescription": [
            {
                "action": "codecommit:UpdateRepositoryDescription",
                "resource_mappings": {
                    "RepositoryName": {
                        "template": "${repositoryName}"
                    }
                }
            }
        ],
        "CodeCommit.UpdateRepositoryName": [
            {
                "action": "codecommit:UpdateRepositoryName"
            }
        ],
        "CodeDeploy.AddTagsToOnPremisesInstances": [
            {
                "action": "codedeploy:AddTagsToOnPremisesInstances"
            }
        ],
        "CodeDeploy.BatchGetApplicationRevisions": [
            {
                "action": "codedeploy:BatchGetApplicationRevisions",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.BatchGetApplications": [
            {
                "action": "codedeploy:BatchGetApplications"
            }
        ],
        "CodeDeploy.BatchGetDeploymentGroups": [
            {
                "action": "codedeploy:BatchGetDeploymentGroups"
            }
        ],
        "CodeDeploy.BatchGetDeploymentInstances": [
            {
                "action": "codedeploy:BatchGetDeploymentInstances"
            }
        ],
        "CodeDeploy.BatchGetDeploymentTargets": [
            {
                "action": "codedeploy:BatchGetDeploymentTargets"
            }
        ],
        "CodeDeploy.BatchGetDeployments": [
            {
                "action": "codedeploy:BatchGetDeployments"
            }
        ],
        "CodeDeploy.BatchGetOnPremisesInstances": [
            {
                "action": "codedeploy:BatchGetOnPremisesInstances"
            }
        ],
        "CodeDeploy.ContinueDeployment": [
            {
                "action": "codedeploy:ContinueDeployment"
            }
        ],
        "CodeDeploy.CreateApplication": [
            {
                "action": "codedeploy:CreateApplication",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.CreateDeployment": [
            {
                "action": "codedeploy:CreateDeployment",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    },
                    "DeploymentGroupName": {
                        "template": "${deploymentGroupName}"
                    }
                }
            }
        ],
        "CodeDeploy.CreateDeploymentConfig": [
            {
                "action": "codedeploy:CreateDeploymentConfig",
                "resource_mappings": {
                    "DeploymentConfigurationName": {
                        "template": "${deploymentConfigName}"
                    }
                }
            }
        ],
        "CodeDeploy.CreateDeploymentGroup": [
            {
                "action": "codedeploy:CreateDeploymentGroup",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    },
                    "DeploymentGroupName": {
                        "template": "${deploymentGroupName}"
                    }
                }
            }
        ],
        "CodeDeploy.DeleteApplication": [
            {
                "action": "codedeploy:DeleteApplication",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.DeleteDeploymentConfig": [
            {
                "action": "codedeploy:DeleteDeploymentConfig",
                "resource_mappings": {
                    "DeploymentConfigurationName": {
                        "template": "${deploymentConfigName}"
                    }
                }
            }
        ],
        "CodeDeploy.DeleteDeploymentGroup": [
            {
                "action": "codedeploy:DeleteDeploymentGroup",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    },
                    "DeploymentGroupName": {
                        "template": "${deploymentGroupName}"
                    }
                }
            }
        ],
        "CodeDeploy.DeleteGitHubAccountToken": [
            {
                "action": "codedeploy:DeleteGitHubAccountToken"
            }
        ],
        "CodeDeploy.DeleteResourcesByExternalId": [
            {
                "action": "codedeploy:DeleteResourcesByExternalId"
            }
        ],
        "CodeDeploy.DeregisterOnPremisesInstance": [
            {
                "action": "codedeploy:DeregisterOnPremisesInstance",
                "resource_mappings": {
                    "InstanceName": {
                        "template": "${instanceName}"
                    }
                }
            }
        ],
        "CodeDeploy.GetApplication": [
            {
                "action": "codedeploy:GetApplication",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.GetApplicationRevision": [
            {
                "action": "codedeploy:GetApplicationRevision",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.GetDeployment": [
            {
                "action": "codedeploy:GetDeployment"
            }
        ],
        "CodeDeploy.GetDeploymentConfig": [
            {
                "action": "codedeploy:GetDeploymentConfig",
                "resource_mappings": {
                    "DeploymentConfigurationName": {
                        "template": "${deploymentConfigName}"
                    }
                }
            }
        ],
        "CodeDeploy.GetDeploymentGroup": [
            {
                "action": "codedeploy:GetDeploymentGroup",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    },
                    "DeploymentGroupName": {
                        "template": "${deploymentGroupName}"
                    }
                }
            }
        ],
        "CodeDeploy.GetDeploymentInstance": [
            {
                "action": "codedeploy:GetDeploymentInstance"
            }
        ],
        "CodeDeploy.GetDeploymentTarget": [
            {
                "action": "codedeploy:GetDeploymentTarget"
            }
        ],
        "CodeDeploy.GetOnPremisesInstance": [
            {
                "action": "codedeploy:GetOnPremisesInstance",
                "resource_mappings": {
                    "InstanceName": {
                        "template": "${instanceName}"
                    }
                }
            }
        ],
        "CodeDeploy.ListApplicationRevisions": [
            {
                "action": "codedeploy:ListApplicationRevisions",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.ListApplications": [
            {
                "action": "codedeploy:ListApplications"
            }
        ],
        "CodeDeploy.ListDeploymentConfigs": [
            {
                "action": "codedeploy:ListDeploymentConfigs"
            }
        ],
        "CodeDeploy.ListDeploymentGroups": [
            {
                "action": "codedeploy:ListDeploymentGroups",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.ListDeploymentInstances": [
            {
                "action": "codedeploy:ListDeploymentInstances"
            }
        ],
        "CodeDeploy.ListDeploymentTargets": [
            {
                "action": "codedeploy:ListDeploymentTargets"
            }
        ],
        "CodeDeploy.ListDeployments": [
            {
                "action": "codedeploy:ListDeployments",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    },
                    "DeploymentGroupName": {
                        "template": "${deploymentGroupName}"
                    }
                }
            }
        ],
        "CodeDeploy.ListGitHubAccountTokenNames": [
            {
                "action": "codedeploy:ListGitHubAccountTokenNames"
            }
        ],
        "CodeDeploy.ListOnPremisesInstances": [
            {
                "action": "codedeploy:ListOnPremisesInstances"
            }
        ],
        "CodeDeploy.ListTagsForResource": [
            {
                "action": "codedeploy:ListTagsForResource"
            }
        ],
        "CodeDeploy.PutLifecycleEventHookExecutionStatus": [
            {
                "action": "codedeploy:PutLifecycleEventHookExecutionStatus"
            }
        ],
        "CodeDeploy.RegisterApplicationRevision": [
            {
                "action": "codedeploy:RegisterApplicationRevision",
                "resource_mappings": {
                    "ApplicationName": {
                        "template": "${applicationName}"
                    }
                }
            }
        ],
        "CodeDeploy.RegisterOnPremisesInstance": [
            {
                "action": "codedeploy:RegisterOnPremisesInstance",
                "resource_mappings": {
                    "InstanceName": {
                        "template": "${instanceName}"
                    }
                }
            }
        ],
        "CodeDeploy.RemoveTagsFromOnPremisesInstances": [
            {
                "action": "codedeploy:RemoveTagsFromOnPremisesInstances"
            }
        ],
        "CodeDeploy.SkipWaitTimeForInstanceTermination": [
            {
                "action": "codedeploy:SkipWaitTimeForInstanceTermination"
            }
        ],
        "CodeDeploy.StopDeployment": [
            {
                "action": "codedeploy:StopDeployment"
            }
        ],
        "CodeDeploy.TagResource": [
            {
                "action": "codedeploy:TagResource"
            }
        ],
        "CodeDeploy.UntagResource": [
            {
                "action": "codedeploy:UntagResource"
            }
        ],
        "CodeDeploy.UpdateApplication": [
            {
                "action": "codedeploy:UpdateApplication"
            }
        ],
        "CodeDeploy.UpdateDeploymentGroup": [
            {
                "action": "codedeploy:UpdateDeploymentGroup"
            }
        ],
        "CodePipeline.AcknowledgeJob": [
            {
                "action": "codepipeline:AcknowledgeJob"
            }
        ],
        "CodePipeline.AcknowledgeThirdPartyJob": [
            {
                "action": "codepipeline:AcknowledgeThirdPartyJob"
            }
        ],
        "CodePipeline.CreateCustomActionType": [
            {
                "action": "codepipeline:CreateCustomActionType"
            }
        ],
        "CodePipeline.CreatePipeline": [
            {
                "action": "codepipeline:CreatePipeline",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipeline.name}"
                    }
                }
            }
        ],
        "CodePipeline.DeleteCustomActionType": [
            {
                "action": "codepipeline:DeleteCustomActionType"
            }
        ],
        "CodePipeline.DeletePipeline": [
            {
                "action": "codepipeline:DeletePipeline",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${name}"
                    }
                }
            }
        ],
        "CodePipeline.DeleteWebhook": [
            {
                "action": "codepipeline:DeleteWebhook",
                "resource_mappings": {
                    "WebhookName": {
                        "template": "${name}"
                    }
                }
            }
        ],
        "CodePipeline.DeregisterWebhookWithThirdParty": [
            {
                "action": "codepipeline:DeregisterWebhookWithThirdParty",
                "resource_mappings": {
                    "WebhookName": {
                        "template": "${webhookName}"
                    }
                }
            }
        ],
        "CodePipeline.DisableStageTransition": [
            {
                "action": "codepipeline:DisableStageTransition",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    },
                    "StageName": {
                        "template": "${stageName}"
                    }
                }
            }
        ],
        "CodePipeline.EnableStageTransition": [
            {
                "action": "codepipeline:EnableStageTransition",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    },
                    "StageName": {
                        "template": "${stageName}"
                    }
                }
            }
        ],
        "CodePipeline.GetJobDetails": [
            {
                "action": "codepipeline:GetJobDetails"
            }
        ],
        "CodePipeline.GetPipeline": [
            {
                "action": "codepipeline:GetPipeline",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${name}"
                    }
                }
            }
        ],
        "CodePipeline.GetPipelineExecution": [
            {
                "action": "codepipeline:GetPipelineExecution",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    }
                }
            }
        ],
        "CodePipeline.GetPipelineState": [
            {
                "action": "codepipeline:GetPipelineState",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${name}"
                    }
                }
            }
        ],
        "CodePipeline.GetThirdPartyJobDetails": [
            {
                "action": "codepipeline:GetThirdPartyJobDetails"
            }
        ],
        "CodePipeline.ListActionExecutions": [
            {
                "action": "codepipeline:ListActionExecutions",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    }
                }
            }
        ],
        "CodePipeline.ListActionTypes": [
            {
                "action": "codepipeline:ListActionTypes"
            }
        ],
        "CodePipeline.ListPipelineExecutions": [
            {
                "action": "codepipeline:ListPipelineExecutions",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    }
                }
            }
        ],
        "CodePipeline.ListPipelines": [
            {
                "action": "codepipeline:ListPipelines"
            }
        ],
        "CodePipeline.ListTagsForResource": [
            {
                "action": "codepipeline:ListTagsForResource"
            }
        ],
        "CodePipeline.ListWebhooks": [
            {
                "action": "codepipeline:ListWebhooks"
            }
        ],
        "CodePipeline.PollForJobs": [
            {
                "action": "codepipeline:PollForJobs",
                "resource_mappings": {
                    "Owner": {
                        "template": "${actionTypeId.owner}"
                    },
                    "Category": {
                        "template": "${actionTypeId.category}"
                    },
                    "Provider": {
                        "template": "${actionTypeId.provider}"
                    },
                    "Version": {
                        "template": "${actionTypeId.version}"
                    }
                }
            }
        ],
        "CodePipeline.PollForThirdPartyJobs": [
            {
                "action": "codepipeline:PollForThirdPartyJobs"
            }
        ],
        "CodePipeline.PutActionRevision": [
            {
                "action": "codepipeline:PutActionRevision",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    },
                    "StageName": {
                        "template": "${stageName}"
                    },
                    "ActionName": {
                        "template": "${actionName}"
                    }
                }
            }
        ],
        "CodePipeline.PutApprovalResult": [
            {
                "action": "codepipeline:PutApprovalResult",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    },
                    "StageName": {
                        "template": "${stageName}"
                    },
                    "ActionName": {
                        "template": "${actionName}"
                    }
                }
            }
        ],
        "CodePipeline.PutJobFailureResult": [
            {
                "action": "codepipeline:PutJobFailureResult"
            }
        ],
        "CodePipeline.PutJobSuccessResult": [
            {
                "action": "codepipeline:PutJobSuccessResult"
            }
        ],
        "CodePipeline.PutThirdPartyJobFailureResult": [
            {
                "action": "codepipeline:PutThirdPartyJobFailureResult"
            }
        ],
        "CodePipeline.PutThirdPartyJobSuccessResult": [
            {
                "action": "codepipeline:PutThirdPartyJobSuccessResult"
            }
        ],
        "CodePipeline.PutWebhook": [
            {
                "action": "codepipeline:PutWebhook"
            }
        ],
        "CodePipeline.RegisterWebhookWithThirdParty": [
            {
                "action": "codepipeline:RegisterWebhookWithThirdParty",
                "resource_mappings": {
                    "WebhookName": {
                        "template": "${webhookName}"
                    }
                }
            }
        ],
        "CodePipeline.RetryStageExecution": [
            {
                "action": "codepipeline:RetryStageExecution",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    },
                    "StageName": {
                        "template": "${stageName}"
                    }
                }
            }
        ],
        "CodePipeline.StartPipelineExecution": [
            {
                "action": "codepipeline:StartPipelineExecution",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${name}"
                    }
                }
            }
        ],
        "CodePipeline.StopPipelineExecution": [
            {
                "action": "codepipeline:StopPipelineExecution",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipelineName}"
                    }
                }
            }
        ],
        "CodePipeline.TagResource": [
            {
                "action": "codepipeline:TagResource"
            }
        ],
        "CodePipeline.UntagResource": [
            {
                "action": "codepipeline:UntagResource"
            }
        ],
        "CodePipeline.UpdatePipeline": [
            {
                "action": "codepipeline:UpdatePipeline",
                "resource_mappings": {
                    "PipelineName": {
                        "template": "${pipeline.name}"
                    }
                }
            }
        ],
        "CognitoIdentityServiceProvider.AddCustomAttributes": [
            {
                "action": "cognito-idp:AddCustomAttributes"
            }
        ],
        "CognitoIdentityServiceProvider.AdminAddUserToGroup": [
            {
                "action": "cognito-idp:AdminAddUserToGroup"
            }
        ],
        "CognitoIdentityServiceProvider.AdminConfirmSignUp": [
            {
                "action": "cognito-idp:AdminConfirmSignUp"
            }
        ],
        "CognitoIdentityServiceProvider.AdminCreateUser": [
            {
                "action": "cognito-idp:AdminCreateUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminDeleteUser": [
            {
                "action": "cognito-idp:AdminDeleteUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminDeleteUserAttributes": [
            {
                "action": "cognito-idp:AdminDeleteUserAttributes"
            }
        ],
        "CognitoIdentityServiceProvider.AdminDisableProviderForUser": [
            {
                "action": "cognito-idp:AdminDisableProviderForUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminDisableUser": [
            {
                "action": "cognito-idp:AdminDisableUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminEnableUser": [
            {
                "action": "cognito-idp:AdminEnableUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminForgetDevice": [
            {
                "action": "cognito-idp:AdminForgetDevice"
            }
        ],
        "CognitoIdentityServiceProvider.AdminGetDevice": [
            {
                "action": "cognito-idp:AdminGetDevice"
            }
        ],
        "CognitoIdentityServiceProvider.AdminGetUser": [
            {
                "action": "cognito-idp:AdminGetUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminInitiateAuth": [
            {
                "action": "cognito-idp:AdminInitiateAuth"
            }
        ],
        "CognitoIdentityServiceProvider.AdminLinkProviderForUser": [
            {
                "action": "cognito-idp:AdminLinkProviderForUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminListDevices": [
            {
                "action": "cognito-idp:AdminListDevices"
            }
        ],
        "CognitoIdentityServiceProvider.AdminListGroupsForUser": [
            {
                "action": "cognito-idp:AdminListGroupsForUser"
            }
        ],
        "CognitoIdentityServiceProvider.AdminListUserAuthEvents": [
            {
                "action": "cognito-idp:AdminListUserAuthEvents"
            }
        ],
        "CognitoIdentityServiceProvider.AdminRemoveUserFromGroup": [
            {
                "action": "cognito-idp:AdminRemoveUserFromGroup"
            }
        ],
        "CognitoIdentityServiceProvider.AdminResetUserPassword": [
            {
                "action": "cognito-idp:AdminResetUserPassword"
            }
        ],
        "CognitoIdentityServiceProvider.AdminRespondToAuthChallenge": [
            {
                "action": "cognito-idp:AdminRespondToAuthChallenge"
            }
        ],
        "CognitoIdentityServiceProvider.AdminSetUserMFAPreference": [
            {
                "action": "cognito-idp:AdminSetUserMFAPreference"
            }
        ],
        "CognitoIdentityServiceProvider.AdminSetUserPassword": [
            {
                "action": "cognito-idp:AdminSetUserPassword"
            }
        ],
        "CognitoIdentityServiceProvider.AdminSetUserSettings": [
            {
                "action": "cognito-idp:AdminSetUserSettings"
            }
        ],
        "CognitoIdentityServiceProvider.AdminUpdateAuthEventFeedback": [
            {
                "action": "cognito-idp:AdminUpdateAuthEventFeedback"
            }
        ],
        "CognitoIdentityServiceProvider.AdminUpdateDeviceStatus": [
            {
                "action": "cognito-idp:AdminUpdateDeviceStatus"
            }
        ],
        "CognitoIdentityServiceProvider.AdminUpdateUserAttributes": [
            {
                "action": "cognito-idp:AdminUpdateUserAttributes"
            }
        ],
        "CognitoIdentityServiceProvider.AdminUserGlobalSignOut": [
            {
                "action": "cognito-idp:AdminUserGlobalSignOut"
            }
        ],
        "CognitoIdentityServiceProvider.AssociateSoftwareToken": [
            {
                "action": "cognito-idp:AssociateSoftwareToken"
            }
        ],
        "CognitoIdentityServiceProvider.ChangePassword": [
            {
                "action": "cognito-idp:ChangePassword"
            }
        ],
        "CognitoIdentityServiceProvider.ConfirmDevice": [
            {
                "action": "cognito-idp:ConfirmDevice"
            }
        ],
        "CognitoIdentityServiceProvider.ConfirmForgotPassword": [
            {
                "action": "cognito-idp:ConfirmForgotPassword"
            }
        ],
        "CognitoIdentityServiceProvider.ConfirmSignUp": [
            {
                "action": "cognito-idp:ConfirmSignUp"
            }
        ],
        "CognitoIdentityServiceProvider.CreateGroup": [
            {
                "action": "cognito-idp:CreateGroup"
            }
        ],
        "CognitoIdentityServiceProvider.CreateIdentityProvider": [
            {
                "action": "cognito-idp:CreateIdentityProvider"
            }
        ],
        "CognitoIdentityServiceProvider.CreateResourceServer": [
            {
                "action": "cognito-idp:CreateResourceServer"
            }
        ],
        "CognitoIdentityServiceProvider.CreateUserImportJob": [
            {
                "action": "cognito-idp:CreateUserImportJob"
            }
        ],
        "CognitoIdentityServiceProvider.CreateUserPool": [
            {
                "action": "cognito-idp:CreateUserPool"
            }
        ],
        "CognitoIdentityServiceProvider.CreateUserPoolClient": [
            {
                "action": "cognito-idp:CreateUserPoolClient"
            }
        ],
        "CognitoIdentityServiceProvider.CreateUserPoolDomain": [
            {
                "action": "cognito-idp:CreateUserPoolDomain"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteGroup": [
            {
                "action": "cognito-idp:DeleteGroup"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteIdentityProvider": [
            {
                "action": "cognito-idp:DeleteIdentityProvider"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteResourceServer": [
            {
                "action": "cognito-idp:DeleteResourceServer"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteUser": [
            {
                "action": "cognito-idp:DeleteUser"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteUserAttributes": [
            {
                "action": "cognito-idp:DeleteUserAttributes"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteUserPool": [
            {
                "action": "cognito-idp:DeleteUserPool"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteUserPoolClient": [
            {
                "action": "cognito-idp:DeleteUserPoolClient"
            }
        ],
        "CognitoIdentityServiceProvider.DeleteUserPoolDomain": [
            {
                "action": "cognito-idp:DeleteUserPoolDomain"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeIdentityProvider": [
            {
                "action": "cognito-idp:DescribeIdentityProvider"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeResourceServer": [
            {
                "action": "cognito-idp:DescribeResourceServer"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeRiskConfiguration": [
            {
                "action": "cognito-idp:DescribeRiskConfiguration"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeUserImportJob": [
            {
                "action": "cognito-idp:DescribeUserImportJob"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeUserPool": [
            {
                "action": "cognito-idp:DescribeUserPool"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeUserPoolClient": [
            {
                "action": "cognito-idp:DescribeUserPoolClient"
            }
        ],
        "CognitoIdentityServiceProvider.DescribeUserPoolDomain": [
            {
                "action": "cognito-idp:DescribeUserPoolDomain"
            }
        ],
        "CognitoIdentityServiceProvider.ForgetDevice": [
            {
                "action": "cognito-idp:ForgetDevice"
            }
        ],
        "CognitoIdentityServiceProvider.ForgotPassword": [
            {
                "action": "cognito-idp:ForgotPassword"
            }
        ],
        "CognitoIdentityServiceProvider.GetCSVHeader": [
            {
                "action": "cognito-idp:GetCSVHeader"
            }
        ],
        "CognitoIdentityServiceProvider.GetDevice": [
            {
                "action": "cognito-idp:GetDevice"
            }
        ],
        "CognitoIdentityServiceProvider.GetGroup": [
            {
                "action": "cognito-idp:GetGroup"
            }
        ],
        "CognitoIdentityServiceProvider.GetIdentityProviderByIdentifier": [
            {
                "action": "cognito-idp:GetIdentityProviderByIdentifier"
            }
        ],
        "CognitoIdentityServiceProvider.GetSigningCertificate": [
            {
                "action": "cognito-idp:GetSigningCertificate"
            }
        ],
        "CognitoIdentityServiceProvider.GetUICustomization": [
            {
                "action": "cognito-idp:GetUICustomization"
            }
        ],
        "CognitoIdentityServiceProvider.GetUser": [
            {
                "action": "cognito-idp:GetUser"
            }
        ],
        "CognitoIdentityServiceProvider.GetUserAttributeVerificationCode": [
            {
                "action": "cognito-idp:GetUserAttributeVerificationCode"
            }
        ],
        "CognitoIdentityServiceProvider.GetUserPoolMfaConfig": [
            {
                "action": "cognito-idp:GetUserPoolMfaConfig"
            }
        ],
        "CognitoIdentityServiceProvider.GlobalSignOut": [
            {
                "action": "cognito-idp:GlobalSignOut"
            }
        ],
        "CognitoIdentityServiceProvider.InitiateAuth": [
            {
                "action": "cognito-idp:InitiateAuth"
            }
        ],
        "CognitoIdentityServiceProvider.ListDevices": [
            {
                "action": "cognito-idp:ListDevices"
            }
        ],
        "CognitoIdentityServiceProvider.ListGroups": [
            {
                "action": "cognito-idp:ListGroups"
            }
        ],
        "CognitoIdentityServiceProvider.ListIdentityProviders": [
            {
                "action": "cognito-idp:ListIdentityProviders"
            }
        ],
        "CognitoIdentityServiceProvider.ListResourceServers": [
            {
                "action": "cognito-idp:ListResourceServers"
            }
        ],
        "CognitoIdentityServiceProvider.ListTagsForResource": [
            {
                "action": "cognito-idp:ListTagsForResource"
            }
        ],
        "CognitoIdentityServiceProvider.ListUserImportJobs": [
            {
                "action": "cognito-idp:ListUserImportJobs"
            }
        ],
        "CognitoIdentityServiceProvider.ListUserPoolClients": [
            {
                "action": "cognito-idp:ListUserPoolClients"
            }
        ],
        "CognitoIdentityServiceProvider.ListUserPools": [
            {
                "action": "cognito-idp:ListUserPools"
            }
        ],
        "CognitoIdentityServiceProvider.ListUsers": [
            {
                "action": "cognito-idp:ListUsers"
            }
        ],
        "CognitoIdentityServiceProvider.ListUsersInGroup": [
            {
                "action": "cognito-idp:ListUsersInGroup"
            }
        ],
        "CognitoIdentityServiceProvider.ResendConfirmationCode": [
            {
                "action": "cognito-idp:ResendConfirmationCode"
            }
        ],
        "CognitoIdentityServiceProvider.RespondToAuthChallenge": [
            {
                "action": "cognito-idp:RespondToAuthChallenge"
            }
        ],
        "CognitoIdentityServiceProvider.SetRiskConfiguration": [
            {
                "action": "cognito-idp:SetRiskConfiguration"
            }
        ],
        "CognitoIdentityServiceProvider.SetUICustomization": [
            {
                "action": "cognito-idp:SetUICustomization"
            }
        ],
        "CognitoIdentityServiceProvider.SetUserMFAPreference": [
            {
                "action": "cognito-idp:SetUserMFAPreference"
            }
        ],
        "CognitoIdentityServiceProvider.SetUserPoolMfaConfig": [
            {
                "action": "cognito-idp:SetUserPoolMfaConfig"
            }
        ],
        "CognitoIdentityServiceProvider.SetUserSettings": [
            {
                "action": "cognito-idp:SetUserSettings"
            }
        ],
        "CognitoIdentityServiceProvider.SignUp": [
            {
                "action": "cognito-idp:SignUp"
            }
        ],
        "CognitoIdentityServiceProvider.StartUserImportJob": [
            {
                "action": "cognito-idp:StartUserImportJob"
            }
        ],
        "CognitoIdentityServiceProvider.StopUserImportJob": [
            {
                "action": "cognito-idp:StopUserImportJob"
            }
        ],
        "CognitoIdentityServiceProvider.TagResource": [
            {
                "action": "cognito-idp:TagResource"
            }
        ],
        "CognitoIdentityServiceProvider.UntagResource": [
            {
                "action": "cognito-idp:UntagResource"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateAuthEventFeedback": [
            {
                "action": "cognito-idp:UpdateAuthEventFeedback"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateDeviceStatus": [
            {
                "action": "cognito-idp:UpdateDeviceStatus"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateGroup": [
            {
                "action": "cognito-idp:UpdateGroup"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateIdentityProvider": [
            {
                "action": "cognito-idp:UpdateIdentityProvider"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateResourceServer": [
            {
                "action": "cognito-idp:UpdateResourceServer"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateUserAttributes": [
            {
                "action": "cognito-idp:UpdateUserAttributes"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateUserPool": [
            {
                "action": "cognito-idp:UpdateUserPool"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateUserPoolClient": [
            {
                "action": "cognito-idp:UpdateUserPoolClient"
            }
        ],
        "CognitoIdentityServiceProvider.UpdateUserPoolDomain": [
            {
                "action": "cognito-idp:UpdateUserPoolDomain"
            }
        ],
        "CognitoIdentityServiceProvider.VerifySoftwareToken": [
            {
                "action": "cognito-idp:VerifySoftwareToken"
            }
        ],
        "CognitoIdentityServiceProvider.VerifyUserAttribute": [
            {
                "action": "cognito-idp:VerifyUserAttribute"
            }
        ],
        "CognitoSync.BulkPublish": [
            {
                "action": "cognito-sync:BulkPublish"
            }
        ],
        "CognitoSync.DeleteDataset": [
            {
                "action": "cognito-sync:DeleteDataset"
            }
        ],
        "CognitoSync.DescribeDataset": [
            {
                "action": "cognito-sync:DescribeDataset"
            }
        ],
        "CognitoSync.DescribeIdentityPoolUsage": [
            {
                "action": "cognito-sync:DescribeIdentityPoolUsage"
            }
        ],
        "CognitoSync.DescribeIdentityUsage": [
            {
                "action": "cognito-sync:DescribeIdentityUsage"
            }
        ],
        "CognitoSync.GetBulkPublishDetails": [
            {
                "action": "cognito-sync:GetBulkPublishDetails"
            }
        ],
        "CognitoSync.GetCognitoEvents": [
            {
                "action": "cognito-sync:GetCognitoEvents"
            }
        ],
        "CognitoSync.GetIdentityPoolConfiguration": [
            {
                "action": "cognito-sync:GetIdentityPoolConfiguration"
            }
        ],
        "CognitoSync.ListDatasets": [
            {
                "action": "cognito-sync:ListDatasets"
            }
        ],
        "CognitoSync.ListIdentityPoolUsage": [
            {
                "action": "cognito-sync:ListIdentityPoolUsage"
            }
        ],
        "CognitoSync.ListRecords": [
            {
                "action": "cognito-sync:ListRecords"
            }
        ],
        "CognitoSync.RegisterDevice": [
            {
                "action": "cognito-sync:RegisterDevice"
            }
        ],
        "CognitoSync.SetCognitoEvents": [
            {
                "action": "cognito-sync:SetCognitoEvents"
            }
        ],
        "CognitoSync.SetIdentityPoolConfiguration": [
            {
                "action": "cognito-sync:SetIdentityPoolConfiguration"
            }
        ],
        "CognitoSync.SubscribeToDataset": [
            {
                "action": "cognito-sync:SubscribeToDataset"
            }
        ],
        "CognitoSync.UnsubscribeFromDataset": [
            {
                "action": "cognito-sync:UnsubscribeFromDataset"
            }
        ],
        "CognitoSync.UpdateRecords": [
            {
                "action": "cognito-sync:UpdateRecords"
            }
        ],
        "ConfigService.BatchGetAggregateResourceConfig": [
            {
                "action": "config:BatchGetAggregateResourceConfig"
            }
        ],
        "ConfigService.BatchGetResourceConfig": [
            {
                "action": "config:BatchGetResourceConfig"
            }
        ],
        "ConfigService.DeleteAggregationAuthorization": [
            {
                "action": "config:DeleteAggregationAuthorization"
            }
        ],
        "ConfigService.DeleteConfigRule": [
            {
                "action": "config:DeleteConfigRule"
            }
        ],
        "ConfigService.DeleteConfigurationAggregator": [
            {
                "action": "config:DeleteConfigurationAggregator"
            }
        ],
        "ConfigService.DeleteConfigurationRecorder": [
            {
                "action": "config:DeleteConfigurationRecorder"
            }
        ],
        "ConfigService.DeleteConformancePack": [
            {
                "action": "config:DeleteConformancePack"
            }
        ],
        "ConfigService.DeleteDeliveryChannel": [
            {
                "action": "config:DeleteDeliveryChannel"
            }
        ],
        "ConfigService.DeleteEvaluationResults": [
            {
                "action": "config:DeleteEvaluationResults"
            }
        ],
        "ConfigService.DeleteOrganizationConfigRule": [
            {
                "action": "config:DeleteOrganizationConfigRule"
            }
        ],
        "ConfigService.DeleteOrganizationConformancePack": [
            {
                "action": "config:DeleteOrganizationConformancePack"
            }
        ],
        "ConfigService.DeletePendingAggregationRequest": [
            {
                "action": "config:DeletePendingAggregationRequest"
            }
        ],
        "ConfigService.DeleteRemediationConfiguration": [
            {
                "action": "config:DeleteRemediationConfiguration"
            }
        ],
        "ConfigService.DeleteRemediationExceptions": [
            {
                "action": "config:DeleteRemediationExceptions"
            }
        ],
        "ConfigService.DeleteResourceConfig": [
            {
                "action": "config:DeleteResourceConfig"
            }
        ],
        "ConfigService.DeleteRetentionConfiguration": [
            {
                "action": "config:DeleteRetentionConfiguration"
            }
        ],
        "ConfigService.DeleteStoredQuery": [
            {
                "action": "config:DeleteStoredQuery"
            }
        ],
        "ConfigService.DeliverConfigSnapshot": [
            {
                "action": "config:DeliverConfigSnapshot"
            }
        ],
        "ConfigService.DescribeAggregateComplianceByConfigRules": [
            {
                "action": "config:DescribeAggregateComplianceByConfigRules"
            }
        ],
        "ConfigService.DescribeAggregationAuthorizations": [
            {
                "action": "config:DescribeAggregationAuthorizations"
            }
        ],
        "ConfigService.DescribeComplianceByConfigRule": [
            {
                "action": "config:DescribeComplianceByConfigRule"
            }
        ],
        "ConfigService.DescribeComplianceByResource": [
            {
                "action": "config:DescribeComplianceByResource"
            }
        ],
        "ConfigService.DescribeConfigRuleEvaluationStatus": [
            {
                "action": "config:DescribeConfigRuleEvaluationStatus"
            }
        ],
        "ConfigService.DescribeConfigRules": [
            {
                "action": "config:DescribeConfigRules"
            }
        ],
        "ConfigService.DescribeConfigurationAggregatorSourcesStatus": [
            {
                "action": "config:DescribeConfigurationAggregatorSourcesStatus"
            }
        ],
        "ConfigService.DescribeConfigurationAggregators": [
            {
                "action": "config:DescribeConfigurationAggregators"
            }
        ],
        "ConfigService.DescribeConfigurationRecorderStatus": [
            {
                "action": "config:DescribeConfigurationRecorderStatus"
            }
        ],
        "ConfigService.DescribeConfigurationRecorders": [
            {
                "action": "config:DescribeConfigurationRecorders"
            }
        ],
        "ConfigService.DescribeConformancePackCompliance": [
            {
                "action": "config:DescribeConformancePackCompliance"
            }
        ],
        "ConfigService.DescribeConformancePackStatus": [
            {
                "action": "config:DescribeConformancePackStatus"
            }
        ],
        "ConfigService.DescribeConformancePacks": [
            {
                "action": "config:DescribeConformancePacks"
            }
        ],
        "ConfigService.DescribeDeliveryChannelStatus": [
            {
                "action": "config:DescribeDeliveryChannelStatus"
            }
        ],
        "ConfigService.DescribeDeliveryChannels": [
            {
                "action": "config:DescribeDeliveryChannels"
            }
        ],
        "ConfigService.DescribeOrganizationConfigRuleStatuses": [
            {
                "action": "config:DescribeOrganizationConfigRuleStatuses"
            }
        ],
        "ConfigService.DescribeOrganizationConfigRules": [
            {
                "action": "config:DescribeOrganizationConfigRules"
            }
        ],
        "ConfigService.DescribeOrganizationConformancePackStatuses": [
            {
                "action": "config:DescribeOrganizationConformancePackStatuses"
            }
        ],
        "ConfigService.DescribeOrganizationConformancePacks": [
            {
                "action": "config:DescribeOrganizationConformancePacks"
            }
        ],
        "ConfigService.DescribePendingAggregationRequests": [
            {
                "action": "config:DescribePendingAggregationRequests"
            }
        ],
        "ConfigService.DescribeRemediationConfigurations": [
            {
                "action": "config:DescribeRemediationConfigurations"
            }
        ],
        "ConfigService.DescribeRemediationExceptions": [
            {
                "action": "config:DescribeRemediationExceptions"
            }
        ],
        "ConfigService.DescribeRemediationExecutionStatus": [
            {
                "action": "config:DescribeRemediationExecutionStatus"
            }
        ],
        "ConfigService.DescribeRetentionConfigurations": [
            {
                "action": "config:DescribeRetentionConfigurations"
            }
        ],
        "ConfigService.GetAggregateComplianceDetailsByConfigRule": [
            {
                "action": "config:GetAggregateComplianceDetailsByConfigRule"
            }
        ],
        "ConfigService.GetAggregateConfigRuleComplianceSummary": [
            {
                "action": "config:GetAggregateConfigRuleComplianceSummary"
            }
        ],
        "ConfigService.GetAggregateDiscoveredResourceCounts": [
            {
                "action": "config:GetAggregateDiscoveredResourceCounts"
            }
        ],
        "ConfigService.GetAggregateResourceConfig": [
            {
                "action": "config:GetAggregateResourceConfig"
            }
        ],
        "ConfigService.GetComplianceDetailsByConfigRule": [
            {
                "action": "config:GetComplianceDetailsByConfigRule"
            }
        ],
        "ConfigService.GetComplianceDetailsByResource": [
            {
                "action": "config:GetComplianceDetailsByResource"
            }
        ],
        "ConfigService.GetComplianceSummaryByConfigRule": [
            {
                "action": "config:GetComplianceSummaryByConfigRule"
            }
        ],
        "ConfigService.GetComplianceSummaryByResourceType": [
            {
                "action": "config:GetComplianceSummaryByResourceType"
            }
        ],
        "ConfigService.GetConformancePackComplianceDetails": [
            {
                "action": "config:GetConformancePackComplianceDetails"
            }
        ],
        "ConfigService.GetConformancePackComplianceSummary": [
            {
                "action": "config:GetConformancePackComplianceSummary"
            }
        ],
        "ConfigService.GetDiscoveredResourceCounts": [
            {
                "action": "config:GetDiscoveredResourceCounts"
            }
        ],
        "ConfigService.GetOrganizationConfigRuleDetailedStatus": [
            {
                "action": "config:GetOrganizationConfigRuleDetailedStatus"
            }
        ],
        "ConfigService.GetOrganizationConformancePackDetailedStatus": [
            {
                "action": "config:GetOrganizationConformancePackDetailedStatus"
            }
        ],
        "ConfigService.GetResourceConfigHistory": [
            {
                "action": "config:GetResourceConfigHistory"
            }
        ],
        "ConfigService.GetStoredQuery": [
            {
                "action": "config:GetStoredQuery"
            }
        ],
        "ConfigService.ListAggregateDiscoveredResources": [
            {
                "action": "config:ListAggregateDiscoveredResources"
            }
        ],
        "ConfigService.ListDiscoveredResources": [
            {
                "action": "config:ListDiscoveredResources"
            }
        ],
        "ConfigService.ListStoredQueries": [
            {
                "action": "config:ListStoredQueries"
            }
        ],
        "ConfigService.ListTagsForResource": [
            {
                "action": "config:ListTagsForResource"
            }
        ],
        "ConfigService.PutAggregationAuthorization": [
            {
                "action": "config:PutAggregationAuthorization"
            }
        ],
        "ConfigService.PutConfigRule": [
            {
                "action": "config:PutConfigRule"
            }
        ],
        "ConfigService.PutConfigurationAggregator": [
            {
                "action": "config:PutConfigurationAggregator"
            }
        ],
        "ConfigService.PutConfigurationRecorder": [
            {
                "action": "config:PutConfigurationRecorder"
            }
        ],
        "ConfigService.PutConformancePack": [
            {
                "action": "config:PutConformancePack"
            }
        ],
        "ConfigService.PutDeliveryChannel": [
            {
                "action": "config:PutDeliveryChannel"
            }
        ],
        "ConfigService.PutEvaluations": [
            {
                "action": "config:PutEvaluations"
            }
        ],
        "ConfigService.PutExternalEvaluation": [
            {
                "action": "config:PutExternalEvaluation"
            }
        ],
        "ConfigService.PutOrganizationConfigRule": [
            {
                "action": "config:PutOrganizationConfigRule"
            }
        ],
        "ConfigService.PutOrganizationConformancePack": [
            {
                "action": "config:PutOrganizationConformancePack"
            }
        ],
        "ConfigService.PutRemediationConfigurations": [
            {
                "action": "config:PutRemediationConfigurations"
            }
        ],
        "ConfigService.PutRemediationExceptions": [
            {
                "action": "config:PutRemediationExceptions"
            }
        ],
        "ConfigService.PutResourceConfig": [
            {
                "action": "config:PutResourceConfig"
            }
        ],
        "ConfigService.PutRetentionConfiguration": [
            {
                "action": "config:PutRetentionConfiguration"
            }
        ],
        "ConfigService.PutStoredQuery": [
            {
                "action": "config:PutStoredQuery"
            }
        ],
        "ConfigService.SelectAggregateResourceConfig": [
            {
                "action": "config:SelectAggregateResourceConfig"
            }
        ],
        "ConfigService.SelectResourceConfig": [
            {
                "action": "config:SelectResourceConfig"
            }
        ],
        "ConfigService.StartConfigRulesEvaluation": [
            {
                "action": "config:StartConfigRulesEvaluation"
            }
        ],
        "ConfigService.StartConfigurationRecorder": [
            {
                "action": "config:StartConfigurationRecorder"
            }
        ],
        "ConfigService.StartRemediationExecution": [
            {
                "action": "config:StartRemediationExecution"
            }
        ],
        "ConfigService.StopConfigurationRecorder": [
            {
                "action": "config:StopConfigurationRecorder"
            }
        ],
        "ConfigService.TagResource": [
            {
                "action": "config:TagResource"
            }
        ],
        "ConfigService.UntagResource": [
            {
                "action": "config:UntagResource"
            }
        ],
        "CUR.DeleteReportDefinition": [
            {
                "action": "cur:DeleteReportDefinition"
            }
        ],
        "CUR.DescribeReportDefinitions": [
            {
                "action": "cur:DescribeReportDefinitions"
            }
        ],
        "CUR.ModifyReportDefinition": [
            {
                "action": "cur:ModifyReportDefinition"
            }
        ],
        "CUR.PutReportDefinition": [
            {
                "action": "cur:PutReportDefinition"
            }
        ],
        "DataPipeline.ActivatePipeline": [
            {
                "action": "datapipeline:ActivatePipeline"
            }
        ],
        "DataPipeline.AddTags": [
            {
                "action": "datapipeline:AddTags"
            }
        ],
        "DataPipeline.CreatePipeline": [
            {
                "action": "datapipeline:CreatePipeline"
            }
        ],
        "DataPipeline.DeactivatePipeline": [
            {
                "action": "datapipeline:DeactivatePipeline"
            }
        ],
        "DataPipeline.DeletePipeline": [
            {
                "action": "datapipeline:DeletePipeline"
            }
        ],
        "DataPipeline.DescribeObjects": [
            {
                "action": "datapipeline:DescribeObjects"
            }
        ],
        "DataPipeline.DescribePipelines": [
            {
                "action": "datapipeline:DescribePipelines"
            }
        ],
        "DataPipeline.EvaluateExpression": [
            {
                "action": "datapipeline:EvaluateExpression"
            }
        ],
        "DataPipeline.GetPipelineDefinition": [
            {
                "action": "datapipeline:GetPipelineDefinition"
            }
        ],
        "DataPipeline.ListPipelines": [
            {
                "action": "datapipeline:ListPipelines"
            }
        ],
        "DataPipeline.PollForTask": [
            {
                "action": "datapipeline:PollForTask"
            }
        ],
        "DataPipeline.PutPipelineDefinition": [
            {
                "action": "datapipeline:PutPipelineDefinition"
            }
        ],
        "DataPipeline.QueryObjects": [
            {
                "action": "datapipeline:QueryObjects"
            }
        ],
        "DataPipeline.RemoveTags": [
            {
                "action": "datapipeline:RemoveTags"
            }
        ],
        "DataPipeline.ReportTaskProgress": [
            {
                "action": "datapipeline:ReportTaskProgress"
            }
        ],
        "DataPipeline.ReportTaskRunnerHeartbeat": [
            {
                "action": "datapipeline:ReportTaskRunnerHeartbeat"
            }
        ],
        "DataPipeline.SetStatus": [
            {
                "action": "datapipeline:SetStatus"
            }
        ],
        "DataPipeline.SetTaskStatus": [
            {
                "action": "datapipeline:SetTaskStatus"
            }
        ],
        "DataPipeline.ValidatePipelineDefinition": [
            {
                "action": "datapipeline:ValidatePipelineDefinition"
            }
        ],
        "DeviceFarm.CreateDevicePool": [
            {
                "action": "devicefarm:CreateDevicePool"
            }
        ],
        "DeviceFarm.CreateInstanceProfile": [
            {
                "action": "devicefarm:CreateInstanceProfile"
            }
        ],
        "DeviceFarm.CreateNetworkProfile": [
            {
                "action": "devicefarm:CreateNetworkProfile"
            }
        ],
        "DeviceFarm.CreateProject": [
            {
                "action": "devicefarm:CreateProject"
            }
        ],
        "DeviceFarm.CreateRemoteAccessSession": [
            {
                "action": "devicefarm:CreateRemoteAccessSession"
            }
        ],
        "DeviceFarm.CreateTestGridProject": [
            {
                "action": "devicefarm:CreateTestGridProject"
            }
        ],
        "DeviceFarm.CreateTestGridUrl": [
            {
                "action": "devicefarm:CreateTestGridUrl"
            }
        ],
        "DeviceFarm.CreateUpload": [
            {
                "action": "devicefarm:CreateUpload"
            }
        ],
        "DeviceFarm.CreateVPCEConfiguration": [
            {
                "action": "devicefarm:CreateVPCEConfiguration"
            }
        ],
        "DeviceFarm.DeleteDevicePool": [
            {
                "action": "devicefarm:DeleteDevicePool"
            }
        ],
        "DeviceFarm.DeleteInstanceProfile": [
            {
                "action": "devicefarm:DeleteInstanceProfile"
            }
        ],
        "DeviceFarm.DeleteNetworkProfile": [
            {
                "action": "devicefarm:DeleteNetworkProfile"
            }
        ],
        "DeviceFarm.DeleteProject": [
            {
                "action": "devicefarm:DeleteProject"
            }
        ],
        "DeviceFarm.DeleteRemoteAccessSession": [
            {
                "action": "devicefarm:DeleteRemoteAccessSession"
            }
        ],
        "DeviceFarm.DeleteRun": [
            {
                "action": "devicefarm:DeleteRun"
            }
        ],
        "DeviceFarm.DeleteTestGridProject": [
            {
                "action": "devicefarm:DeleteTestGridProject"
            }
        ],
        "DeviceFarm.DeleteUpload": [
            {
                "action": "devicefarm:DeleteUpload"
            }
        ],
        "DeviceFarm.DeleteVPCEConfiguration": [
            {
                "action": "devicefarm:DeleteVPCEConfiguration"
            }
        ],
        "DeviceFarm.GetAccountSettings": [
            {
                "action": "devicefarm:GetAccountSettings"
            }
        ],
        "DeviceFarm.GetDevice": [
            {
                "action": "devicefarm:GetDevice"
            }
        ],
        "DeviceFarm.GetDeviceInstance": [
            {
                "action": "devicefarm:GetDeviceInstance"
            }
        ],
        "DeviceFarm.GetDevicePool": [
            {
                "action": "devicefarm:GetDevicePool"
            }
        ],
        "DeviceFarm.GetDevicePoolCompatibility": [
            {
                "action": "devicefarm:GetDevicePoolCompatibility"
            }
        ],
        "DeviceFarm.GetInstanceProfile": [
            {
                "action": "devicefarm:GetInstanceProfile"
            }
        ],
        "DeviceFarm.GetJob": [
            {
                "action": "devicefarm:GetJob"
            }
        ],
        "DeviceFarm.GetNetworkProfile": [
            {
                "action": "devicefarm:GetNetworkProfile"
            }
        ],
        "DeviceFarm.GetOfferingStatus": [
            {
                "action": "devicefarm:GetOfferingStatus"
            }
        ],
        "DeviceFarm.GetProject": [
            {
                "action": "devicefarm:GetProject"
            }
        ],
        "DeviceFarm.GetRemoteAccessSession": [
            {
                "action": "devicefarm:GetRemoteAccessSession"
            }
        ],
        "DeviceFarm.GetRun": [
            {
                "action": "devicefarm:GetRun"
            }
        ],
        "DeviceFarm.GetSuite": [
            {
                "action": "devicefarm:GetSuite"
            }
        ],
        "DeviceFarm.GetTest": [
            {
                "action": "devicefarm:GetTest"
            }
        ],
        "DeviceFarm.GetTestGridProject": [
            {
                "action": "devicefarm:GetTestGridProject"
            }
        ],
        "DeviceFarm.GetTestGridSession": [
            {
                "action": "devicefarm:GetTestGridSession"
            }
        ],
        "DeviceFarm.GetUpload": [
            {
                "action": "devicefarm:GetUpload"
            }
        ],
        "DeviceFarm.GetVPCEConfiguration": [
            {
                "action": "devicefarm:GetVPCEConfiguration"
            }
        ],
        "DeviceFarm.InstallToRemoteAccessSession": [
            {
                "action": "devicefarm:InstallToRemoteAccessSession"
            }
        ],
        "DeviceFarm.ListArtifacts": [
            {
                "action": "devicefarm:ListArtifacts"
            }
        ],
        "DeviceFarm.ListDeviceInstances": [
            {
                "action": "devicefarm:ListDeviceInstances"
            }
        ],
        "DeviceFarm.ListDevicePools": [
            {
                "action": "devicefarm:ListDevicePools"
            }
        ],
        "DeviceFarm.ListDevices": [
            {
                "action": "devicefarm:ListDevices"
            }
        ],
        "DeviceFarm.ListInstanceProfiles": [
            {
                "action": "devicefarm:ListInstanceProfiles"
            }
        ],
        "DeviceFarm.ListJobs": [
            {
                "action": "devicefarm:ListJobs"
            }
        ],
        "DeviceFarm.ListNetworkProfiles": [
            {
                "action": "devicefarm:ListNetworkProfiles"
            }
        ],
        "DeviceFarm.ListOfferingPromotions": [
            {
                "action": "devicefarm:ListOfferingPromotions"
            }
        ],
        "DeviceFarm.ListOfferingTransactions": [
            {
                "action": "devicefarm:ListOfferingTransactions"
            }
        ],
        "DeviceFarm.ListOfferings": [
            {
                "action": "devicefarm:ListOfferings"
            }
        ],
        "DeviceFarm.ListProjects": [
            {
                "action": "devicefarm:ListProjects"
            }
        ],
        "DeviceFarm.ListRemoteAccessSessions": [
            {
                "action": "devicefarm:ListRemoteAccessSessions"
            }
        ],
        "DeviceFarm.ListRuns": [
            {
                "action": "devicefarm:ListRuns"
            }
        ],
        "DeviceFarm.ListSamples": [
            {
                "action": "devicefarm:ListSamples"
            }
        ],
        "DeviceFarm.ListSuites": [
            {
                "action": "devicefarm:ListSuites"
            }
        ],
        "DeviceFarm.ListTagsForResource": [
            {
                "action": "devicefarm:ListTagsForResource"
            }
        ],
        "DeviceFarm.ListTestGridProjects": [
            {
                "action": "devicefarm:ListTestGridProjects"
            }
        ],
        "DeviceFarm.ListTestGridSessionActions": [
            {
                "action": "devicefarm:ListTestGridSessionActions"
            }
        ],
        "DeviceFarm.ListTestGridSessionArtifacts": [
            {
                "action": "devicefarm:ListTestGridSessionArtifacts"
            }
        ],
        "DeviceFarm.ListTestGridSessions": [
            {
                "action": "devicefarm:ListTestGridSessions"
            }
        ],
        "DeviceFarm.ListTests": [
            {
                "action": "devicefarm:ListTests"
            }
        ],
        "DeviceFarm.ListUniqueProblems": [
            {
                "action": "devicefarm:ListUniqueProblems"
            }
        ],
        "DeviceFarm.ListUploads": [
            {
                "action": "devicefarm:ListUploads"
            }
        ],
        "DeviceFarm.ListVPCEConfigurations": [
            {
                "action": "devicefarm:ListVPCEConfigurations"
            }
        ],
        "DeviceFarm.PurchaseOffering": [
            {
                "action": "devicefarm:PurchaseOffering"
            }
        ],
        "DeviceFarm.RenewOffering": [
            {
                "action": "devicefarm:RenewOffering"
            }
        ],
        "DeviceFarm.ScheduleRun": [
            {
                "action": "devicefarm:ScheduleRun"
            }
        ],
        "DeviceFarm.StopJob": [
            {
                "action": "devicefarm:StopJob"
            }
        ],
        "DeviceFarm.StopRemoteAccessSession": [
            {
                "action": "devicefarm:StopRemoteAccessSession"
            }
        ],
        "DeviceFarm.StopRun": [
            {
                "action": "devicefarm:StopRun"
            }
        ],
        "DeviceFarm.TagResource": [
            {
                "action": "devicefarm:TagResource"
            }
        ],
        "DeviceFarm.UntagResource": [
            {
                "action": "devicefarm:UntagResource"
            }
        ],
        "DeviceFarm.UpdateDeviceInstance": [
            {
                "action": "devicefarm:UpdateDeviceInstance"
            }
        ],
        "DeviceFarm.UpdateDevicePool": [
            {
                "action": "devicefarm:UpdateDevicePool"
            }
        ],
        "DeviceFarm.UpdateInstanceProfile": [
            {
                "action": "devicefarm:UpdateInstanceProfile"
            }
        ],
        "DeviceFarm.UpdateNetworkProfile": [
            {
                "action": "devicefarm:UpdateNetworkProfile"
            }
        ],
        "DeviceFarm.UpdateProject": [
            {
                "action": "devicefarm:UpdateProject"
            }
        ],
        "DeviceFarm.UpdateTestGridProject": [
            {
                "action": "devicefarm:UpdateTestGridProject"
            }
        ],
        "DeviceFarm.UpdateUpload": [
            {
                "action": "devicefarm:UpdateUpload"
            }
        ],
        "DeviceFarm.UpdateVPCEConfiguration": [
            {
                "action": "devicefarm:UpdateVPCEConfiguration"
            }
        ],
        "DirectConnect.AcceptDirectConnectGatewayAssociationProposal": [
            {
                "action": "directconnect:AcceptDirectConnectGatewayAssociationProposal"
            }
        ],
        "DirectConnect.AllocateConnectionOnInterconnect": [
            {
                "action": "directconnect:AllocateConnectionOnInterconnect"
            }
        ],
        "DirectConnect.AllocateHostedConnection": [
            {
                "action": "directconnect:AllocateHostedConnection"
            }
        ],
        "DirectConnect.AllocatePrivateVirtualInterface": [
            {
                "action": "directconnect:AllocatePrivateVirtualInterface"
            }
        ],
        "DirectConnect.AllocatePublicVirtualInterface": [
            {
                "action": "directconnect:AllocatePublicVirtualInterface"
            }
        ],
        "DirectConnect.AllocateTransitVirtualInterface": [
            {
                "action": "directconnect:AllocateTransitVirtualInterface"
            }
        ],
        "DirectConnect.AssociateConnectionWithLag": [
            {
                "action": "directconnect:AssociateConnectionWithLag"
            }
        ],
        "DirectConnect.AssociateHostedConnection": [
            {
                "action": "directconnect:AssociateHostedConnection"
            }
        ],
        "DirectConnect.AssociateVirtualInterface": [
            {
                "action": "directconnect:AssociateVirtualInterface"
            }
        ],
        "DirectConnect.ConfirmConnection": [
            {
                "action": "directconnect:ConfirmConnection"
            }
        ],
        "DirectConnect.ConfirmPrivateVirtualInterface": [
            {
                "action": "directconnect:ConfirmPrivateVirtualInterface"
            }
        ],
        "DirectConnect.ConfirmPublicVirtualInterface": [
            {
                "action": "directconnect:ConfirmPublicVirtualInterface"
            }
        ],
        "DirectConnect.ConfirmTransitVirtualInterface": [
            {
                "action": "directconnect:ConfirmTransitVirtualInterface"
            }
        ],
        "DirectConnect.CreateBGPPeer": [
            {
                "action": "directconnect:CreateBGPPeer"
            }
        ],
        "DirectConnect.CreateConnection": [
            {
                "action": "directconnect:CreateConnection"
            }
        ],
        "DirectConnect.CreateDirectConnectGateway": [
            {
                "action": "directconnect:CreateDirectConnectGateway"
            }
        ],
        "DirectConnect.CreateDirectConnectGatewayAssociation": [
            {
                "action": "directconnect:CreateDirectConnectGatewayAssociation"
            }
        ],
        "DirectConnect.CreateDirectConnectGatewayAssociationProposal": [
            {
                "action": "directconnect:CreateDirectConnectGatewayAssociationProposal"
            }
        ],
        "DirectConnect.CreateInterconnect": [
            {
                "action": "directconnect:CreateInterconnect"
            }
        ],
        "DirectConnect.CreateLag": [
            {
                "action": "directconnect:CreateLag"
            }
        ],
        "DirectConnect.CreatePrivateVirtualInterface": [
            {
                "action": "directconnect:CreatePrivateVirtualInterface"
            }
        ],
        "DirectConnect.CreatePublicVirtualInterface": [
            {
                "action": "directconnect:CreatePublicVirtualInterface"
            }
        ],
        "DirectConnect.CreateTransitVirtualInterface": [
            {
                "action": "directconnect:CreateTransitVirtualInterface"
            }
        ],
        "DirectConnect.DeleteBGPPeer": [
            {
                "action": "directconnect:DeleteBGPPeer"
            }
        ],
        "DirectConnect.DeleteConnection": [
            {
                "action": "directconnect:DeleteConnection"
            }
        ],
        "DirectConnect.DeleteDirectConnectGateway": [
            {
                "action": "directconnect:DeleteDirectConnectGateway"
            }
        ],
        "DirectConnect.DeleteDirectConnectGatewayAssociation": [
            {
                "action": "directconnect:DeleteDirectConnectGatewayAssociation"
            }
        ],
        "DirectConnect.DeleteDirectConnectGatewayAssociationProposal": [
            {
                "action": "directconnect:DeleteDirectConnectGatewayAssociationProposal"
            }
        ],
        "DirectConnect.DeleteInterconnect": [
            {
                "action": "directconnect:DeleteInterconnect"
            }
        ],
        "DirectConnect.DeleteLag": [
            {
                "action": "directconnect:DeleteLag"
            }
        ],
        "DirectConnect.DeleteVirtualInterface": [
            {
                "action": "directconnect:DeleteVirtualInterface"
            }
        ],
        "DirectConnect.DescribeConnectionLoa": [
            {
                "action": "directconnect:DescribeConnectionLoa",
                "resource_mappings": {
                    "ConnectionId": {
                        "template": "${connectionId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeConnections": [
            {
                "action": "directconnect:DescribeConnections",
                "resource_mappings": {
                    "ConnectionId": {
                        "template": "${connectionId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeConnectionsOnInterconnect": [
            {
                "action": "directconnect:DescribeConnectionsOnInterconnect"
            }
        ],
        "DirectConnect.DescribeDirectConnectGatewayAssociationProposals": [
            {
                "action": "directconnect:DescribeDirectConnectGatewayAssociationProposals",
                "resource_mappings": {
                    "DirectConnectGatewayId": {
                        "template": "${directConnectGatewayId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeDirectConnectGatewayAssociations": [
            {
                "action": "directconnect:DescribeDirectConnectGatewayAssociations",
                "resource_mappings": {
                    "DirectConnectGatewayId": {
                        "template": "${directConnectGatewayId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeDirectConnectGatewayAttachments": [
            {
                "action": "directconnect:DescribeDirectConnectGatewayAttachments",
                "resource_mappings": {
                    "DirectConnectGatewayId": {
                        "template": "${directConnectGatewayId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeDirectConnectGateways": [
            {
                "action": "directconnect:DescribeDirectConnectGateways",
                "resource_mappings": {
                    "DirectConnectGatewayId": {
                        "template": "${directConnectGatewayId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeHostedConnections": [
            {
                "action": "directconnect:DescribeHostedConnections"
            }
        ],
        "DirectConnect.DescribeInterconnectLoa": [
            {
                "action": "directconnect:DescribeInterconnectLoa"
            }
        ],
        "DirectConnect.DescribeInterconnects": [
            {
                "action": "directconnect:DescribeInterconnects"
            }
        ],
        "DirectConnect.DescribeLags": [
            {
                "action": "directconnect:DescribeLags",
                "resource_mappings": {
                    "LagId": {
                        "template": "${lagId}"
                    }
                }
            }
        ],
        "DirectConnect.DescribeLoa": [
            {
                "action": "directconnect:DescribeLoa"
            }
        ],
        "DirectConnect.DescribeLocations": [
            {
                "action": "directconnect:DescribeLocations"
            }
        ],
        "DirectConnect.DescribeTags": [
            {
                "action": "directconnect:DescribeTags"
            }
        ],
        "DirectConnect.DescribeVirtualGateways": [
            {
                "action": "directconnect:DescribeVirtualGateways"
            }
        ],
        "DirectConnect.DescribeVirtualInterfaces": [
            {
                "action": "directconnect:DescribeVirtualInterfaces"
            }
        ],
        "DirectConnect.DisassociateConnectionFromLag": [
            {
                "action": "directconnect:DisassociateConnectionFromLag",
                "resource_mappings": {
                    "ConnectionId": {
                        "template": "${connectionId}"
                    },
                    "LagId": {
                        "template": "${lagId}"
                    }
                }
            }
        ],
        "DirectConnect.ListVirtualInterfaceTestHistory": [
            {
                "action": "directconnect:ListVirtualInterfaceTestHistory",
                "resource_mappings": {
                    "VirtualInterfaceId": {
                        "template": "${virtualInterfaceId}"
                    }
                }
            }
        ],
        "DirectConnect.StartBgpFailoverTest": [
            {
                "action": "directconnect:StartBgpFailoverTest",
                "resource_mappings": {
                    "VirtualInterfaceId": {
                        "template": "${virtualInterfaceId}"
                    }
                }
            }
        ],
        "DirectConnect.StopBgpFailoverTest": [
            {
                "action": "directconnect:StopBgpFailoverTest",
                "resource_mappings": {
                    "VirtualInterfaceId": {
                        "template": "${virtualInterfaceId}"
                    }
                }
            }
        ],
        "DirectConnect.TagResource": [
            {
                "action": "directconnect:TagResource"
            }
        ],
        "DirectConnect.UntagResource": [
            {
                "action": "directconnect:UntagResource"
            }
        ],
        "DirectConnect.UpdateDirectConnectGatewayAssociation": [
            {
                "action": "directconnect:UpdateDirectConnectGatewayAssociation"
            }
        ],
        "DirectConnect.UpdateLag": [
            {
                "action": "directconnect:UpdateLag",
                "resource_mappings": {
                    "LagId": {
                        "template": "${lagId}"
                    }
                }
            }
        ],
        "DirectConnect.UpdateVirtualInterfaceAttributes": [
            {
                "action": "directconnect:UpdateVirtualInterfaceAttributes",
                "resource_mappings": {
                    "VirtualInterfaceId": {
                        "template": "${virtualInterfaceId}"
                    }
                }
            }
        ],
        "DirectoryService.AcceptSharedDirectory": [
            {
                "action": "ds:AcceptSharedDirectory"
            }
        ],
        "DirectoryService.AddIpRoutes": [
            {
                "action": "ds:AddIpRoutes"
            }
        ],
        "DirectoryService.AddTagsToResource": [
            {
                "action": "ds:AddTagsToResource"
            }
        ],
        "DirectoryService.CancelSchemaExtension": [
            {
                "action": "ds:CancelSchemaExtension"
            }
        ],
        "DirectoryService.ConnectDirectory": [
            {
                "action": "ds:ConnectDirectory"
            }
        ],
        "DirectoryService.CreateAlias": [
            {
                "action": "ds:CreateAlias"
            }
        ],
        "DirectoryService.CreateComputer": [
            {
                "action": "ds:CreateComputer"
            }
        ],
        "DirectoryService.CreateConditionalForwarder": [
            {
                "action": "ds:CreateConditionalForwarder"
            }
        ],
        "DirectoryService.CreateDirectory": [
            {
                "action": "ds:CreateDirectory"
            }
        ],
        "DirectoryService.CreateLogSubscription": [
            {
                "action": "ds:CreateLogSubscription"
            }
        ],
        "DirectoryService.CreateMicrosoftAD": [
            {
                "action": "ds:CreateMicrosoftAD"
            }
        ],
        "DirectoryService.CreateSnapshot": [
            {
                "action": "ds:CreateSnapshot"
            }
        ],
        "DirectoryService.CreateTrust": [
            {
                "action": "ds:CreateTrust"
            }
        ],
        "DirectoryService.DeleteConditionalForwarder": [
            {
                "action": "ds:DeleteConditionalForwarder"
            }
        ],
        "DirectoryService.DeleteDirectory": [
            {
                "action": "ds:DeleteDirectory"
            }
        ],
        "DirectoryService.DeleteLogSubscription": [
            {
                "action": "ds:DeleteLogSubscription"
            }
        ],
        "DirectoryService.DeleteSnapshot": [
            {
                "action": "ds:DeleteSnapshot"
            }
        ],
        "DirectoryService.DeleteTrust": [
            {
                "action": "ds:DeleteTrust"
            }
        ],
        "DirectoryService.DeregisterCertificate": [
            {
                "action": "ds:DeregisterCertificate"
            }
        ],
        "DirectoryService.DeregisterEventTopic": [
            {
                "action": "ds:DeregisterEventTopic"
            }
        ],
        "DirectoryService.DescribeCertificate": [
            {
                "action": "ds:DescribeCertificate"
            }
        ],
        "DirectoryService.DescribeConditionalForwarders": [
            {
                "action": "ds:DescribeConditionalForwarders"
            }
        ],
        "DirectoryService.DescribeDirectories": [
            {
                "action": "ds:DescribeDirectories"
            }
        ],
        "DirectoryService.DescribeDomainControllers": [
            {
                "action": "ds:DescribeDomainControllers"
            }
        ],
        "DirectoryService.DescribeEventTopics": [
            {
                "action": "ds:DescribeEventTopics"
            }
        ],
        "DirectoryService.DescribeLDAPSSettings": [
            {
                "action": "ds:DescribeLDAPSSettings"
            }
        ],
        "DirectoryService.DescribeSharedDirectories": [
            {
                "action": "ds:DescribeSharedDirectories"
            }
        ],
        "DirectoryService.DescribeSnapshots": [
            {
                "action": "ds:DescribeSnapshots"
            }
        ],
        "DirectoryService.DescribeTrusts": [
            {
                "action": "ds:DescribeTrusts"
            }
        ],
        "DirectoryService.DisableLDAPS": [
            {
                "action": "ds:DisableLDAPS"
            }
        ],
        "DirectoryService.DisableRadius": [
            {
                "action": "ds:DisableRadius"
            }
        ],
        "DirectoryService.DisableSso": [
            {
                "action": "ds:DisableSso"
            }
        ],
        "DirectoryService.EnableLDAPS": [
            {
                "action": "ds:EnableLDAPS"
            }
        ],
        "DirectoryService.EnableRadius": [
            {
                "action": "ds:EnableRadius"
            }
        ],
        "DirectoryService.EnableSso": [
            {
                "action": "ds:EnableSso"
            }
        ],
        "DirectoryService.GetDirectoryLimits": [
            {
                "action": "ds:GetDirectoryLimits"
            }
        ],
        "DirectoryService.GetSnapshotLimits": [
            {
                "action": "ds:GetSnapshotLimits"
            }
        ],
        "DirectoryService.ListCertificates": [
            {
                "action": "ds:ListCertificates"
            }
        ],
        "DirectoryService.ListIpRoutes": [
            {
                "action": "ds:ListIpRoutes"
            }
        ],
        "DirectoryService.ListLogSubscriptions": [
            {
                "action": "ds:ListLogSubscriptions"
            }
        ],
        "DirectoryService.ListSchemaExtensions": [
            {
                "action": "ds:ListSchemaExtensions"
            }
        ],
        "DirectoryService.ListTagsForResource": [
            {
                "action": "ds:ListTagsForResource"
            }
        ],
        "DirectoryService.RegisterCertificate": [
            {
                "action": "ds:RegisterCertificate"
            }
        ],
        "DirectoryService.RegisterEventTopic": [
            {
                "action": "ds:RegisterEventTopic"
            }
        ],
        "DirectoryService.RejectSharedDirectory": [
            {
                "action": "ds:RejectSharedDirectory"
            }
        ],
        "DirectoryService.RemoveIpRoutes": [
            {
                "action": "ds:RemoveIpRoutes"
            }
        ],
        "DirectoryService.RemoveTagsFromResource": [
            {
                "action": "ds:RemoveTagsFromResource"
            }
        ],
        "DirectoryService.ResetUserPassword": [
            {
                "action": "ds:ResetUserPassword"
            }
        ],
        "DirectoryService.RestoreFromSnapshot": [
            {
                "action": "ds:RestoreFromSnapshot"
            }
        ],
        "DirectoryService.ShareDirectory": [
            {
                "action": "ds:ShareDirectory"
            }
        ],
        "DirectoryService.StartSchemaExtension": [
            {
                "action": "ds:StartSchemaExtension"
            }
        ],
        "DirectoryService.UnshareDirectory": [
            {
                "action": "ds:UnshareDirectory"
            }
        ],
        "DirectoryService.UpdateConditionalForwarder": [
            {
                "action": "ds:UpdateConditionalForwarder"
            }
        ],
        "DirectoryService.UpdateNumberOfDomainControllers": [
            {
                "action": "ds:UpdateNumberOfDomainControllers"
            }
        ],
        "DirectoryService.UpdateRadius": [
            {
                "action": "ds:UpdateRadius"
            }
        ],
        "DirectoryService.UpdateTrust": [
            {
                "action": "ds:UpdateTrust"
            }
        ],
        "DirectoryService.VerifyTrust": [
            {
                "action": "ds:VerifyTrust"
            }
        ],
        "Discovery.AssociateConfigurationItemsToApplication": [
            {
                "action": "discovery:AssociateConfigurationItemsToApplication"
            }
        ],
        "Discovery.BatchDeleteImportData": [
            {
                "action": "discovery:BatchDeleteImportData"
            }
        ],
        "Discovery.CreateApplication": [
            {
                "action": "discovery:CreateApplication"
            }
        ],
        "Discovery.CreateTags": [
            {
                "action": "discovery:CreateTags"
            }
        ],
        "Discovery.DeleteApplications": [
            {
                "action": "discovery:DeleteApplications"
            }
        ],
        "Discovery.DeleteTags": [
            {
                "action": "discovery:DeleteTags"
            }
        ],
        "Discovery.DescribeAgents": [
            {
                "action": "discovery:DescribeAgents"
            }
        ],
        "Discovery.DescribeConfigurations": [
            {
                "action": "discovery:DescribeConfigurations"
            }
        ],
        "Discovery.DescribeContinuousExports": [
            {
                "action": "discovery:DescribeContinuousExports"
            }
        ],
        "Discovery.DescribeExportConfigurations": [
            {
                "action": "discovery:DescribeExportConfigurations"
            }
        ],
        "Discovery.DescribeExportTasks": [
            {
                "action": "discovery:DescribeExportTasks"
            }
        ],
        "Discovery.DescribeImportTasks": [
            {
                "action": "discovery:DescribeImportTasks"
            }
        ],
        "Discovery.DescribeTags": [
            {
                "action": "discovery:DescribeTags"
            }
        ],
        "Discovery.DisassociateConfigurationItemsFromApplication": [
            {
                "action": "discovery:DisassociateConfigurationItemsFromApplication"
            }
        ],
        "Discovery.ExportConfigurations": [
            {
                "action": "discovery:ExportConfigurations"
            }
        ],
        "Discovery.GetDiscoverySummary": [
            {
                "action": "discovery:GetDiscoverySummary"
            }
        ],
        "Discovery.ListConfigurations": [
            {
                "action": "discovery:ListConfigurations"
            }
        ],
        "Discovery.ListServerNeighbors": [
            {
                "action": "discovery:ListServerNeighbors"
            }
        ],
        "Discovery.StartContinuousExport": [
            {
                "action": "discovery:StartContinuousExport"
            }
        ],
        "Discovery.StartDataCollectionByAgentIds": [
            {
                "action": "discovery:StartDataCollectionByAgentIds"
            }
        ],
        "Discovery.StartExportTask": [
            {
                "action": "discovery:StartExportTask"
            }
        ],
        "Discovery.StartImportTask": [
            {
                "action": "discovery:StartImportTask"
            }
        ],
        "Discovery.StopContinuousExport": [
            {
                "action": "discovery:StopContinuousExport"
            }
        ],
        "Discovery.StopDataCollectionByAgentIds": [
            {
                "action": "discovery:StopDataCollectionByAgentIds"
            }
        ],
        "Discovery.UpdateApplication": [
            {
                "action": "discovery:UpdateApplication"
            }
        ],
        "DMS.AddTagsToResource": [
            {
                "action": "dms:AddTagsToResource"
            }
        ],
        "DMS.ApplyPendingMaintenanceAction": [
            {
                "action": "dms:ApplyPendingMaintenanceAction"
            }
        ],
        "DMS.CancelReplicationTaskAssessmentRun": [
            {
                "action": "dms:CancelReplicationTaskAssessmentRun"
            }
        ],
        "DMS.CreateEndpoint": [
            {
                "action": "dms:CreateEndpoint"
            }
        ],
        "DMS.CreateEventSubscription": [
            {
                "action": "dms:CreateEventSubscription"
            }
        ],
        "DMS.CreateReplicationInstance": [
            {
                "action": "dms:CreateReplicationInstance"
            }
        ],
        "DMS.CreateReplicationSubnetGroup": [
            {
                "action": "dms:CreateReplicationSubnetGroup"
            }
        ],
        "DMS.CreateReplicationTask": [
            {
                "action": "dms:CreateReplicationTask"
            }
        ],
        "DMS.DeleteCertificate": [
            {
                "action": "dms:DeleteCertificate"
            }
        ],
        "DMS.DeleteEndpoint": [
            {
                "action": "dms:DeleteEndpoint"
            }
        ],
        "DMS.DeleteEventSubscription": [
            {
                "action": "dms:DeleteEventSubscription"
            }
        ],
        "DMS.DeleteReplicationInstance": [
            {
                "action": "dms:DeleteReplicationInstance"
            }
        ],
        "DMS.DeleteReplicationSubnetGroup": [
            {
                "action": "dms:DeleteReplicationSubnetGroup"
            }
        ],
        "DMS.DeleteReplicationTask": [
            {
                "action": "dms:DeleteReplicationTask"
            }
        ],
        "DMS.DeleteReplicationTaskAssessmentRun": [
            {
                "action": "dms:DeleteReplicationTaskAssessmentRun"
            }
        ],
        "DMS.DescribeAccountAttributes": [
            {
                "action": "dms:DescribeAccountAttributes"
            }
        ],
        "DMS.DescribeApplicableIndividualAssessments": [
            {
                "action": "dms:DescribeApplicableIndividualAssessments"
            }
        ],
        "DMS.DescribeCertificates": [
            {
                "action": "dms:DescribeCertificates"
            }
        ],
        "DMS.DescribeConnections": [
            {
                "action": "dms:DescribeConnections"
            }
        ],
        "DMS.DescribeEndpointTypes": [
            {
                "action": "dms:DescribeEndpointTypes"
            }
        ],
        "DMS.DescribeEndpoints": [
            {
                "action": "dms:DescribeEndpoints"
            }
        ],
        "DMS.DescribeEventCategories": [
            {
                "action": "dms:DescribeEventCategories"
            }
        ],
        "DMS.DescribeEventSubscriptions": [
            {
                "action": "dms:DescribeEventSubscriptions"
            }
        ],
        "DMS.DescribeEvents": [
            {
                "action": "dms:DescribeEvents"
            }
        ],
        "DMS.DescribeOrderableReplicationInstances": [
            {
                "action": "dms:DescribeOrderableReplicationInstances"
            }
        ],
        "DMS.DescribeRefreshSchemasStatus": [
            {
                "action": "dms:DescribeRefreshSchemasStatus"
            }
        ],
        "DMS.DescribeReplicationInstanceTaskLogs": [
            {
                "action": "dms:DescribeReplicationInstanceTaskLogs"
            }
        ],
        "DMS.DescribeReplicationInstances": [
            {
                "action": "dms:DescribeReplicationInstances"
            }
        ],
        "DMS.DescribeReplicationSubnetGroups": [
            {
                "action": "dms:DescribeReplicationSubnetGroups"
            }
        ],
        "DMS.DescribeReplicationTaskAssessmentResults": [
            {
                "action": "dms:DescribeReplicationTaskAssessmentResults"
            }
        ],
        "DMS.DescribeReplicationTaskAssessmentRuns": [
            {
                "action": "dms:DescribeReplicationTaskAssessmentRuns"
            }
        ],
        "DMS.DescribeReplicationTaskIndividualAssessments": [
            {
                "action": "dms:DescribeReplicationTaskIndividualAssessments"
            }
        ],
        "DMS.DescribeReplicationTasks": [
            {
                "action": "dms:DescribeReplicationTasks"
            }
        ],
        "DMS.DescribeSchemas": [
            {
                "action": "dms:DescribeSchemas"
            }
        ],
        "DMS.DescribeTableStatistics": [
            {
                "action": "dms:DescribeTableStatistics"
            }
        ],
        "DMS.ImportCertificate": [
            {
                "action": "dms:ImportCertificate"
            }
        ],
        "DMS.ListTagsForResource": [
            {
                "action": "dms:ListTagsForResource"
            }
        ],
        "DMS.ModifyEndpoint": [
            {
                "action": "dms:ModifyEndpoint"
            }
        ],
        "DMS.ModifyEventSubscription": [
            {
                "action": "dms:ModifyEventSubscription"
            }
        ],
        "DMS.ModifyReplicationInstance": [
            {
                "action": "dms:ModifyReplicationInstance"
            }
        ],
        "DMS.ModifyReplicationSubnetGroup": [
            {
                "action": "dms:ModifyReplicationSubnetGroup"
            }
        ],
        "DMS.ModifyReplicationTask": [
            {
                "action": "dms:ModifyReplicationTask"
            }
        ],
        "DMS.RebootReplicationInstance": [
            {
                "action": "dms:RebootReplicationInstance"
            }
        ],
        "DMS.RefreshSchemas": [
            {
                "action": "dms:RefreshSchemas"
            }
        ],
        "DMS.ReloadTables": [
            {
                "action": "dms:ReloadTables"
            }
        ],
        "DMS.RemoveTagsFromResource": [
            {
                "action": "dms:RemoveTagsFromResource"
            }
        ],
        "DMS.StartReplicationTask": [
            {
                "action": "dms:StartReplicationTask"
            }
        ],
        "DMS.StartReplicationTaskAssessment": [
            {
                "action": "dms:StartReplicationTaskAssessment"
            }
        ],
        "DMS.StartReplicationTaskAssessmentRun": [
            {
                "action": "dms:StartReplicationTaskAssessmentRun"
            }
        ],
        "DMS.StopReplicationTask": [
            {
                "action": "dms:StopReplicationTask"
            }
        ],
        "DMS.TestConnection": [
            {
                "action": "dms:TestConnection"
            }
        ],
        "DynamoDB.BatchGetItem": [
            {
                "action": "dynamodb:BatchGetItem"
            }
        ],
        "DynamoDB.BatchWriteItem": [
            {
                "action": "dynamodb:BatchWriteItem"
            }
        ],
        "DynamoDB.CreateBackup": [
            {
                "action": "dynamodb:CreateBackup",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.CreateGlobalTable": [
            {
                "action": "dynamodb:CreateGlobalTable"
            }
        ],
        "DynamoDB.CreateTable": [
            {
                "action": "dynamodb:CreateTable",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DeleteBackup": [
            {
                "action": "dynamodb:DeleteBackup"
            }
        ],
        "DynamoDB.DeleteItem": [
            {
                "action": "dynamodb:DeleteItem",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DeleteTable": [
            {
                "action": "dynamodb:DeleteTable",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeBackup": [
            {
                "action": "dynamodb:DescribeBackup"
            }
        ],
        "DynamoDB.DescribeContinuousBackups": [
            {
                "action": "dynamodb:DescribeContinuousBackups",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeContributorInsights": [
            {
                "action": "dynamodb:DescribeContributorInsights",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    },
                    "IndexName": {
                        "template": "${IndexName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeExport": [
            {
                "action": "dynamodb:DescribeExport"
            }
        ],
        "DynamoDB.DescribeGlobalTable": [
            {
                "action": "dynamodb:DescribeGlobalTable",
                "resource_mappings": {
                    "GlobalTableName": {
                        "template": "${GlobalTableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeGlobalTableSettings": [
            {
                "action": "dynamodb:DescribeGlobalTableSettings",
                "resource_mappings": {
                    "GlobalTableName": {
                        "template": "${GlobalTableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeKinesisStreamingDestination": [
            {
                "action": "dynamodb:DescribeKinesisStreamingDestination",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeLimits": [
            {
                "action": "dynamodb:DescribeLimits"
            }
        ],
        "DynamoDB.DescribeTable": [
            {
                "action": "dynamodb:DescribeTable",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeTableReplicaAutoScaling": [
            {
                "action": "dynamodb:DescribeTableReplicaAutoScaling",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DescribeTimeToLive": [
            {
                "action": "dynamodb:DescribeTimeToLive",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.DisableKinesisStreamingDestination": [
            {
                "action": "dynamodb:DisableKinesisStreamingDestination"
            }
        ],
        "DynamoDB.EnableKinesisStreamingDestination": [
            {
                "action": "dynamodb:EnableKinesisStreamingDestination"
            }
        ],
        "DynamoDB.ExportTableToPointInTime": [
            {
                "action": "dynamodb:ExportTableToPointInTime"
            }
        ],
        "DynamoDB.GetItem": [
            {
                "action": "dynamodb:GetItem",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.ListBackups": [
            {
                "action": "dynamodb:ListBackups"
            }
        ],
        "DynamoDB.ListContributorInsights": [
            {
                "action": "dynamodb:ListContributorInsights"
            }
        ],
        "DynamoDB.ListExports": [
            {
                "action": "dynamodb:ListExports"
            }
        ],
        "DynamoDB.ListGlobalTables": [
            {
                "action": "dynamodb:ListGlobalTables"
            }
        ],
        "DynamoDB.ListTables": [
            {
                "action": "dynamodb:ListTables"
            }
        ],
        "DynamoDB.ListTagsOfResource": [
            {
                "action": "dynamodb:ListTagsOfResource"
            }
        ],
        "DynamoDB.PutItem": [
            {
                "action": "dynamodb:PutItem",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.Query": [
            {
                "action": "dynamodb:Query",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    },
                    "IndexName": {
                        "template": "${IndexName}"
                    }
                }
            }
        ],
        "DynamoDB.RestoreTableFromBackup": [
            {
                "action": "dynamodb:RestoreTableFromBackup"
            }
        ],
        "DynamoDB.RestoreTableToPointInTime": [
            {
                "action": "dynamodb:RestoreTableToPointInTime"
            }
        ],
        "DynamoDB.Scan": [
            {
                "action": "dynamodb:Scan",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    },
                    "IndexName": {
                        "template": "${IndexName}"
                    }
                }
            }
        ],
        "DynamoDB.TagResource": [
            {
                "action": "dynamodb:TagResource"
            }
        ],
        "DynamoDB.UntagResource": [
            {
                "action": "dynamodb:UntagResource"
            }
        ],
        "DynamoDB.UpdateContinuousBackups": [
            {
                "action": "dynamodb:UpdateContinuousBackups",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.UpdateContributorInsights": [
            {
                "action": "dynamodb:UpdateContributorInsights",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    },
                    "IndexName": {
                        "template": "${IndexName}"
                    }
                }
            }
        ],
        "DynamoDB.UpdateGlobalTable": [
            {
                "action": "dynamodb:UpdateGlobalTable"
            }
        ],
        "DynamoDB.UpdateGlobalTableSettings": [
            {
                "action": "dynamodb:UpdateGlobalTableSettings"
            }
        ],
        "DynamoDB.UpdateItem": [
            {
                "action": "dynamodb:UpdateItem",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.UpdateTable": [
            {
                "action": "dynamodb:UpdateTable",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.UpdateTableReplicaAutoScaling": [
            {
                "action": "dynamodb:UpdateTableReplicaAutoScaling",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDB.UpdateTimeToLive": [
            {
                "action": "dynamodb:UpdateTimeToLive",
                "resource_mappings": {
                    "TableName": {
                        "template": "${TableName}"
                    }
                }
            }
        ],
        "DynamoDBStreams.DescribeStream": [
            {
                "action": "dynamodb:DescribeStream"
            }
        ],
        "DynamoDBStreams.GetRecords": [
            {
                "action": "dynamodb:GetRecords"
            }
        ],
        "DynamoDBStreams.GetShardIterator": [
            {
                "action": "dynamodb:GetShardIterator"
            }
        ],
        "DynamoDBStreams.ListStreams": [
            {
                "action": "dynamodb:ListStreams"
            }
        ],
        "EC2.AcceptReservedInstancesExchangeQuote": [
            {
                "action": "ec2:AcceptReservedInstancesExchangeQuote"
            }
        ],
        "EC2.AcceptTransitGatewayMulticastDomainAssociations": [
            {
                "action": "ec2:AcceptTransitGatewayMulticastDomainAssociations"
            }
        ],
        "EC2.AcceptTransitGatewayPeeringAttachment": [
            {
                "action": "ec2:AcceptTransitGatewayPeeringAttachment",
                "resource_mappings": {
                    "TransitGatewayAttachmentId": {
                        "template": "${TransitGatewayAttachmentId}"
                    }
                }
            }
        ],
        "EC2.AcceptTransitGatewayVpcAttachment": [
            {
                "action": "ec2:AcceptTransitGatewayVpcAttachment",
                "resource_mappings": {
                    "TransitGatewayAttachmentId": {
                        "template": "${TransitGatewayAttachmentId}"
                    }
                }
            }
        ],
        "EC2.AcceptVpcEndpointConnections": [
            {
                "action": "ec2:AcceptVpcEndpointConnections"
            }
        ],
        "EC2.AcceptVpcPeeringConnection": [
            {
                "action": "ec2:AcceptVpcPeeringConnection"
            }
        ],
        "EC2.AdvertiseByoipCidr": [
            {
                "action": "ec2:AdvertiseByoipCidr"
            }
        ],
        "EC2.AllocateAddress": [
            {
                "action": "ec2:AllocateAddress"
            }
        ],
        "EC2.AllocateHosts": [
            {
                "action": "ec2:AllocateHosts"
            }
        ],
        "EC2.ApplySecurityGroupsToClientVpnTargetNetwork": [
            {
                "action": "ec2:ApplySecurityGroupsToClientVpnTargetNetwork"
            }
        ],
        "EC2.AssignIpv6Addresses": [
            {
                "action": "ec2:AssignIpv6Addresses",
                "resource_mappings": {
                    "NetworkInterfaceId": {
                        "template": "${NetworkInterfaceId}"
                    }
                }
            }
        ],
        "EC2.AssignPrivateIpAddresses": [
            {
                "action": "ec2:AssignPrivateIpAddresses",
                "resource_mappings": {
                    "NetworkInterfaceId": {
                        "template": "${NetworkInterfaceId}"
                    }
                }
            }
        ],
        "EC2.AssociateAddress": [
            {
                "action": "ec2:AssociateAddress",
                "resource_mappings": {
                    "AllocationId": {
                        "template": "${AllocationId}"
                    },
                    "InstanceId": {
                        "template": "${InstanceId}"
                    },
                    "NetworkInterfaceId": {
                        "template": "${NetworkInterfaceId}"
                    }
                }
            }
        ],
        "EC2.AssociateClientVpnTargetNetwork": [
            {
                "action": "ec2:AssociateClientVpnTargetNetwork",
                "resource_mappings": {
                    "ClientVpnEndpointId": {
                        "template": "${ClientVpnEndpointId}"
                    },
                    "SubnetId": {
                        "template": "${SubnetId}"
                    }
                }
            }
        ],
        "EC2.AssociateDhcpOptions": [
            {
                "action": "ec2:AssociateDhcpOptions",
                "resource_mappings": {
                    "VpcId": {
                        "template": "${VpcId}"
                    }
                }
            }
        ],
        "EC2.AssociateEnclaveCertificateIamRole": [
            {
                "action": "ec2:AssociateEnclaveCertificateIamRole"
            }
        ],
        "EC2.AssociateIamInstanceProfile": [
            {
                "action": "ec2:AssociateIamInstanceProfile",
                "resource_mappings": {
                    "InstanceId": {
                        "template": "${InstanceId}"
                    }
                }
            }
        ],
        "EC2.AssociateRouteTable": [
            {
                "action": "ec2:AssociateRouteTable"
            }
        ],
        "EC2.AssociateSubnetCidrBlock": [
            {
                "action": "ec2:AssociateSubnetCidrBlock",
                "resource_mappings": {
                    "SubnetId": {
                        "template": "${SubnetId}"
                    }
                }
            }
        ],
        "EC2.AssociateTransitGatewayMulticastDomain": [
            {
                "action": "ec2:AssociateTransitGatewayMulticastDomain"
            }
        ],
        "EC2.AssociateTransitGatewayRouteTable": [
            {
                "action": "ec2:AssociateTransitGatewayRouteTable",
                "resource_mappings": {
                    "TransitGatewayAttachmentId": {
                        "template": "${TransitGatewayAttachmentId}"
                    },
                    "TransitGatewayRouteTableId": {
                        "template": "${TransitGatewayRouteTableId}"
                    }
                }
            }
        ],
        "EC2.AssociateVpcCidrBlock": [
            {
                "action": "ec2:AssociateVpcCidrBlock"
            }
        ],
        "EC2.AttachClassicLinkVpc": [
            {
                "action": "ec2:AttachClassicLinkVpc"
            }
        ],
        "EC2.AttachInternetGateway": [
            {
                "action": "ec2:AttachInternetGateway",
                "resource_mappings": {
                    "InternetGatewayId": {
                        "template": "${InternetGatewayId}"
                    },
                    "VpcId": {
                        "template": "${VpcId}"
                    }
                }
            }
        ],
        "EC2.AttachNetworkInterface": [
            {
                "action": "ec2:AttachNetworkInterface",
                "resource_mappings": {
                    "InstanceId": {
                        "template": "${InstanceId}"
                    },
                    "NetworkInterfaceId": {
                        "template": "${NetworkInterfaceId}"
                    }
                }
            }
        ],
        "EC2.AttachVolume": [
            {
                "action": "ec2:AttachVolume",
                "resource_mappings": {
                    "InstanceId": {
                        "template": "${InstanceId}"
                    },
                    "VolumeId": {
                        "template": "${VolumeId}"
                    }
                }
            }
        ],
        "EC2.AttachVpnGateway": [
            {
                "action": "ec2:AttachVpnGateway",
                "resource_mappings": {
                    "VpcId": {
                        "template": "${VpcId}"
                    },
                    "VpnGatewayId": {
                        "template": "${VpnGatewayId}"
                    }
                }
            }
        ],
        "EC2.AuthorizeClientVpnIngress": [
            {
                "action": "ec2:AuthorizeClientVpnIngress",
                "resource_mappings": {
                    "ClientVpnEndpointId": {
                        "template": "${ClientVpnEndpointId}"
                    }
                }
            }
        ],
        "EC2.AuthorizeSecurityGroupEgress": [
            {
                "action": "ec2:AuthorizeSecurityGroupEgress"
            }
        ],
        "EC2.AuthorizeSecurityGroupIngress": [
            {
                "action": "ec2:AuthorizeSecurityGroupIngress"
            }
        ],
        "EC2.BundleInstance": [
            {
                "action": "ec2:BundleInstance"
            }
        ],
        "EC2.CancelBundleTask": [
            {
                "action": "ec2:CancelBundleTask"
            }
        ],
        "EC2.CancelCapacityReservation": [
            {
                "action": "ec2:CancelCapacityReservation"
            }
        ],
        "EC2.CancelConversionTask": [
            {
                "action": "ec2:CancelConversionTask"
            }
        ],
        "EC2.CancelExportTask": [
            {
                "action": "ec2:CancelExportTask"
            }
        ],
        "EC2.CancelImportTask": [
            {
                "action": "ec2:CancelImportTask"
            }
        ],
        "EC2.CancelReservedInstancesListing": [
            {
                "action": "ec2:CancelReservedInstancesListing"
            }
        ],
        "EC2.CancelSpotFleetRequests": [
            {
                "action": "ec2:CancelSpotFleetRequests"
            }
        ],
        "EC2.CancelSpotInstanceRequests": [
            {
                "action": "ec2:CancelSpotInstanceRequests"
            }
        ],
        "EC2.ConfirmProductInstance": [
            {
                "action": "ec2:ConfirmProductInstance"
            }
        ],
        "EC2.CopyFpgaImage": [
            {
                "action": "ec2:CopyFpgaImage"
            }
        ],
        "EC2.CopyImage": [
            {
                "action": "ec2:CopyImage"
            }
        ],
        "EC2.CopySnapshot": [
            {
                "action": "ec2:CopySnapshot"
            }
        ],
        "EC2.CreateCapacityReservation": [
            {
                "action": "ec2:CreateCapacityReservation"
            }
        ],
        "EC2.CreateCarrierGateway": [
            {
                "action": "ec2:CreateCarrierGateway"
            }
        ],
        "EC2.CreateClientVpnEndpoint": [
            {
                "action": "ec2:CreateClientVpnEndpoint"
            }
        ],
        "EC2.CreateClientVpnRoute": [
            {
                "action": "ec2:CreateClientVpnRoute"
            }
        ],
        "EC2.CreateCustomerGateway": [
            {
                "action": "ec2:CreateCustomerGateway"
            }
        ],
        "EC2.CreateDefaultSubnet": [
            {
                "action": "ec2:CreateDefaultSubnet"
            }
        ],
        "EC2.CreateDefaultVpc": [
            {
                "action": "ec2:CreateDefaultVpc"
            }
        ],
        "EC2.CreateDhcpOptions": [
            {
                "action": "ec2:CreateDhcpOptions"
            }
        ],
        "EC2.CreateEgressOnlyInternetGateway": [
            {
                "action": "ec2:CreateEgressOnlyInternetGateway"
            }
        ],
        "EC2.CreateFleet": [
            {
                "action": "ec2:CreateFleet"
            }
        ],
        "EC2.CreateFlowLogs": [
            {
                "action": "ec2:CreateFlowLogs"
            }
        ],
        "EC2.CreateFpgaImage": [
            {
                "action": "ec2:CreateFpgaImage"
            }
        ],
        "EC2.CreateImage": [
            {
                "action": "ec2:CreateImage"
            }
        ],
        "EC2.CreateInstanceExportTask": [
            {
                "action": "ec2:CreateInstanceExportTask"
            }
        ],
        "EC2.CreateInternetGateway": [
            {
                "action": "ec2:CreateInternetGateway"
            }
        ],
        "EC2.CreateKeyPair": [
            {
                "action": "ec2:CreateKeyPair"
            }
        ],
        "EC2.CreateLaunchTemplate": [
            {
                "action": "ec2:CreateLaunchTemplate"
            }
        ],
        "EC2.CreateLaunchTemplateVersion": [
            {
                "action": "ec2:CreateLaunchTemplateVersion"
            }
        ],
        "EC2.CreateLocalGatewayRoute": [
            {
                "action": "ec2:CreateLocalGatewayRoute"
            }
        ],
        "EC2.CreateLocalGatewayRouteTableVpcAssociation": [
            {
                "action": "ec2:CreateLocalGatewayRouteTableVpcAssociation"
            }
        ],
        "EC2.CreateManagedPrefixList": [
            {
                "action": "ec2:CreateManagedPrefixList"
            }
        ],
        "EC2.CreateNatGateway": [
            {
                "action": "ec2:CreateNatGateway"
            }
        ],
        "EC2.CreateNetworkAcl": [
            {
                "action": "ec2:CreateNetworkAcl"
            }
        ],
        "EC2.CreateNetworkAclEntry": [
            {
                "action": "ec2:CreateNetworkAclEntry"
            }
        ],
        "EC2.CreateNetworkInsightsPath": [
            {
                "action": "ec2:CreateNetworkInsightsPath"
            }
        ],
        "EC2.CreateNetworkInterface": [
            {
                "action": "ec2:CreateNetworkInterface"
            }
        ],
        "EC2.CreateNetworkInterfacePermission": [
            {
                "action": "ec2:CreateNetworkInterfacePermission"
            }
        ],
        "EC2.CreatePlacementGroup": [
            {
                "action": "ec2:CreatePlacementGroup"
            }
        ],
        "EC2.CreateReservedInstancesListing": [
            {
                "action": "ec2:CreateReservedInstancesListing"
            }
        ],
        "EC2.CreateRoute": [
            {
                "action": "ec2:CreateRoute"
            }
        ],
        "EC2.CreateRouteTable": [
            {
                "action": "ec2:CreateRouteTable"
            }
        ],
        "EC2.CreateSecurityGroup": [
            {
                "action": "ec2:CreateSecurityGroup"
            }
        ],
        "EC2.CreateSnapshot": [
            {
                "action": "ec2:CreateSnapshot"
            }
        ],
        "EC2.CreateSnapshots": [
            {
                "action": "ec2:CreateSnapshots"
            }
        ],
        "EC2.CreateSpotDatafeedSubscription": [
            {
                "action": "ec2:CreateSpotDatafeedSubscription"
            }
        ],
        "EC2.CreateSubnet": [
            {
                "action": "ec2:CreateSubnet"
            }
        ],
        "EC2.CreateTags": [
            {
                "action": "ec2:CreateTags"
            }
        ],
        "EC2.CreateTrafficMirrorFilter": [
            {
                "action": "ec2:CreateTrafficMirrorFilter"
            }
        ],
        "EC2.CreateTrafficMirrorFilterRule": [
            {
                "action": "ec2:CreateTrafficMirrorFilterRule"
            }
        ],
        "EC2.CreateTrafficMirrorSession": [
            {
                "action": "ec2:CreateTrafficMirrorSession"
            }
        ],
        "EC2.CreateTrafficMirrorTarget": [
            {
                "action": "ec2:CreateTrafficMirrorTarget"
            }
        ],
        "EC2.CreateTransitGateway": [
            {
                "action": "ec2:CreateTransitGateway"
            }
        ],
        "EC2.CreateTransitGatewayConnect": [
            {
                "action": "ec2:CreateTransitGatewayConnect"
            }
        ],
        "EC2.CreateTransitGatewayConnectPeer": [
            {
                "action": "ec2:CreateTransitGatewayConnectPeer"
            }
        ],
        "EC2.CreateTransitGatewayMulticastDomain": [
            {
                "action": "ec2:CreateTransitGatewayMulticastDomain"
            }
        ],
        "EC2.CreateTransitGatewayPeeringAttachment": [
            {
                "action": "ec2:CreateTransitGatewayPeeringAttachment"
            }
        ],
        "EC2.CreateTransitGatewayPrefixListReference": [
            {
                "action": "ec2:CreateTransitGatewayPrefixListReference"
            }
        ],
        "EC2.CreateTransitGatewayRoute": [
            {
                "action": "ec2:CreateTransitGatewayRoute"
            }
        ],
        "EC2.CreateTransitGatewayRouteTable": [
            {
                "action": "ec2:CreateTransitGatewayRouteTable"
            }
        ],
        "EC2.CreateTransitGatewayVpcAttachment": [
            {
                "action": "ec2:CreateTransitGatewayVpcAttachment"
            }
        ],
        "EC2.CreateVolume": [
            {
                "action": "ec2:CreateVolume"
            }
        ],
        "EC2.CreateVpc": [
            {
                "action": "ec2:CreateVpc"
            }
        ],
        "EC2.CreateVpcEndpoint": [
            {
                "action": "ec2:CreateVpcEndpoint"
            }
        ],
        "EC2.CreateVpcEndpointConnectionNotification": [
            {
                "action": "ec2:CreateVpcEndpointConnectionNotification"
            }
        ],
        "EC2.CreateVpcEndpointServiceConfiguration": [
            {
                "action": "ec2:CreateVpcEndpointServiceConfiguration"
            }
        ],
        "EC2.CreateVpcPeeringConnection": [
            {
                "action": "ec2:CreateVpcPeeringConnection"
            }
        ],
        "EC2.CreateVpnConnection": [
            {
                "action": "ec2:CreateVpnConnection"
            }
        ],
        "EC2.CreateVpnConnectionRoute": [
            {
                "action": "ec2:CreateVpnConnectionRoute"
            }
        ],
        "EC2.CreateVpnGateway": [
            {
                "action": "ec2:CreateVpnGateway"
            }
        ],
        "EC2.DeleteCarrierGateway": [
            {
                "action": "ec2:DeleteCarrierGateway"
            }
        ],
        "EC2.DeleteClientVpnEndpoint": [
            {
                "action": "ec2:DeleteClientVpnEndpoint"
            }
        ],
        "EC2.DeleteClientVpnRoute": [
            {
                "action": "ec2:DeleteClientVpnRoute"
            }
        ],
        "EC2.DeleteCustomerGateway": [
            {
                "action": "ec2:DeleteCustomerGateway"
            }
        ],
        "EC2.DeleteDhcpOptions": [
            {
                "action": "ec2:DeleteDhcpOptions"
            }
        ],
        "EC2.DeleteEgressOnlyInternetGateway": [
            {
                "action": "ec2:DeleteEgressOnlyInternetGateway"
            }
        ],
        "EC2.DeleteFleets": [
            {
                "action": "ec2:DeleteFleets"
            }
        ],
        "EC2.DeleteFlowLogs": [
            {
                "action": "ec2:DeleteFlowLogs"
            }
        ],
        "EC2.DeleteFpgaImage": [
            {
                "action": "ec2:DeleteFpgaImage"
            }
        ],
        "EC2.DeleteInternetGateway": [
            {
                "action": "ec2:DeleteInternetGateway"
            }
        ],
        "EC2.DeleteKeyPair": [
            {
                "action": "ec2:DeleteKeyPair"
            }
        ],
        "EC2.DeleteLaunchTemplate": [
            {
                "action": "ec2:DeleteLaunchTemplate"
            }
        ],
        "EC2.DeleteLaunchTemplateVersions": [
            {
                "action": "ec2:DeleteLaunchTemplateVersions"
            }
        ],
        "EC2.DeleteLocalGatewayRoute": [
            {
                "action": "ec2:DeleteLocalGatewayRoute"
            }
        ],
        "EC2.DeleteLocalGatewayRouteTableVpcAssociation": [
            {
                "action": "ec2:DeleteLocalGatewayRouteTableVpcAssociation"
            }
        ],
        "EC2.DeleteManagedPrefixList": [
            {
                "action": "ec2:DeleteManagedPrefixList"
            }
        ],
        "EC2.DeleteNatGateway": [
            {
                "action": "ec2:DeleteNatGateway"
            }
        ],
        "EC2.DeleteNetworkAcl": [
            {
                "action": "ec2:DeleteNetworkAcl"
            }
        ],
        "EC2.DeleteNetworkAclEntry": [
            {
                "action": "ec2:DeleteNetworkAclEntry"
            }
        ],
        "EC2.DeleteNetworkInsightsAnalysis": [
            {
                "action": "ec2:DeleteNetworkInsightsAnalysis"
            }
        ],
        "EC2.DeleteNetworkInsightsPath": [
            {
                "action": "ec2:DeleteNetworkInsightsPath"
            }
        ],
        "EC2.DeleteNetworkInterface": [
            {
                "action": "ec2:DeleteNetworkInterface"
            }
        ],
        "EC2.DeleteNetworkInterfacePermission": [
            {
                "action": "ec2:DeleteNetworkInterfacePermission"
            }
        ],
        "EC2.DeletePlacementGroup": [
            {
                "action": "ec2:DeletePlacementGroup"
            }
        ],
        "EC2.DeleteQueuedReservedInstances": [
            {
                "action": "ec2:DeleteQueuedReservedInstances"
            }
        ],
        "EC2.DeleteRoute": [
            {
                "action": "ec2:DeleteRoute"
            }
        ],
        "EC2.DeleteRouteTable": [
            {
                "action": "ec2:DeleteRouteTable"
            }
        ],
        "EC2.DeleteSecurityGroup": [
            {
                "action": "ec2:DeleteSecurityGroup"
            }
        ],
        "EC2.DeleteSnapshot": [
            {
                "action": "ec2:DeleteSnapshot"
            }
        ],
        "EC2.DeleteSpotDatafeedSubscription": [
            {
                "action": "ec2:DeleteSpotDatafeedSubscription"
            }
        ],
        "EC2.DeleteSubnet": [
            {
                "action": "ec2:DeleteSubnet"
            }
        ],
        "EC2.DeleteTags": [
            {
                "action": "ec2:DeleteTags"
            }
        ],
        "EC2.DeleteTrafficMirrorFilter": [
            {
                "action": "ec2:DeleteTrafficMirrorFilter"
            }
        ],
        "EC2.DeleteTrafficMirrorFilterRule": [
            {
                "action": "ec2:DeleteTrafficMirrorFilterRule"
            }
        ],
        "EC2.DeleteTrafficMirrorSession": [
            {
                "action": "ec2:DeleteTrafficMirrorSession"
            }
        ],
        "EC2.DeleteTrafficMirrorTarget": [
            {
                "action": "ec2:DeleteTrafficMirrorTarget"
            }
        ],
        "EC2.DeleteTransitGateway": [
            {
                "action": "ec2:DeleteTransitGateway"
            }
        ],
        "EC2.DeleteTransitGatewayConnect": [
            {
                "action": "ec2:DeleteTransitGatewayConnect"
            }
        ],
        "EC2.DeleteTransitGatewayConnectPeer": [
            {
                "action": "ec2:DeleteTransitGatewayConnectPeer"
            }
        ],
        "EC2.DeleteTransitGatewayMulticastDomain": [
            {
                "action": "ec2:DeleteTransitGatewayMulticastDomain"
            }
        ],
        "EC2.DeleteTransitGatewayPeeringAttachment": [
            {
                "action": "ec2:DeleteTransitGatewayPeeringAttachment"
            }
        ],
        "EC2.DeleteTransitGatewayPrefixListReference": [
            {
                "action": "ec2:DeleteTransitGatewayPrefixListReference"
            }
        ],
        "EC2.DeleteTransitGatewayRoute": [
            {
                "action": "ec2:DeleteTransitGatewayRoute"
            }
        ],
        "EC2.DeleteTransitGatewayRouteTable": [
            {
                "action": "ec2:DeleteTransitGatewayRouteTable"
            }
        ],
        "EC2.DeleteTransitGatewayVpcAttachment": [
            {
                "action": "ec2:DeleteTransitGatewayVpcAttachment"
            }
        ],
        "EC2.DeleteVolume": [
            {
                "action": "ec2:DeleteVolume"
            }
        ],
        "EC2.DeleteVpc": [
            {
                "action": "ec2:DeleteVpc"
            }
        ],
        "EC2.DeleteVpcEndpointConnectionNotifications": [
            {
                "action": "ec2:DeleteVpcEndpointConnectionNotifications"
            }
        ],
        "EC2.DeleteVpcEndpointServiceConfigurations": [
            {
                "action": "ec2:DeleteVpcEndpointServiceConfigurations"
            }
        ],
        "EC2.DeleteVpcEndpoints": [
            {
                "action": "ec2:DeleteVpcEndpoints"
            }
        ],
        "EC2.DeleteVpcPeeringConnection": [
            {
                "action": "ec2:DeleteVpcPeeringConnection"
            }
        ],
        "EC2.DeleteVpnConnection": [
            {
                "action": "ec2:DeleteVpnConnection"
            }
        ],
        "EC2.DeleteVpnConnectionRoute": [
            {
                "action": "ec2:DeleteVpnConnectionRoute"
            }
        ],
        "EC2.DeleteVpnGateway": [
            {
                "action": "ec2:DeleteVpnGateway"
            }
        ],
        "EC2.DeprovisionByoipCidr": [
            {
                "action": "ec2:DeprovisionByoipCidr"
            }
        ],
        "EC2.DeregisterImage": [
            {
                "action": "ec2:DeregisterImage"
            }
        ],
        "EC2.DeregisterInstanceEventNotificationAttributes": [
            {
                "action": "ec2:DeregisterInstanceEventNotificationAttributes"
            }
        ],
        "EC2.DeregisterTransitGatewayMulticastGroupMembers": [
            {
                "action": "ec2:DeregisterTransitGatewayMulticastGroupMembers"
            }
        ],
        "EC2.DeregisterTransitGatewayMulticastGroupSources": [
            {
                "action": "ec2:DeregisterTransitGatewayMulticastGroupSources"
            }
        ],
        "EC2.DescribeAccountAttributes": [
            {
                "action": "ec2:DescribeAccountAttributes"
            }
        ],
        "EC2.DescribeAddresses": [
            {
                "action": "ec2:DescribeAddresses"
            }
        ],
        "EC2.DescribeAggregateIdFormat": [
            {
                "action": "ec2:DescribeAggregateIdFormat"
            }
        ],
        "EC2.DescribeAvailabilityZones": [
            {
                "action": "ec2:DescribeAvailabilityZones"
            }
        ],
        "EC2.DescribeBundleTasks": [
            {
                "action": "ec2:DescribeBundleTasks"
            }
        ],
        "EC2.DescribeByoipCidrs": [
            {
                "action": "ec2:DescribeByoipCidrs"
            }
        ],
        "EC2.DescribeCapacityReservations": [
            {
                "action": "ec2:DescribeCapacityReservations"
            }
        ],
        "EC2.DescribeCarrierGateways": [
            {
                "action": "ec2:DescribeCarrierGateways"
            }
        ],
        "EC2.DescribeClassicLinkInstances": [
            {
                "action": "ec2:DescribeClassicLinkInstances"
            }
        ],
        "EC2.DescribeClientVpnAuthorizationRules": [
            {
                "action": "ec2:DescribeClientVpnAuthorizationRules"
            }
        ],
        "EC2.DescribeClientVpnConnections": [
            {
                "action": "ec2:DescribeClientVpnConnections"
            }
        ],
        "EC2.DescribeClientVpnEndpoints": [
            {
                "action": "ec2:DescribeClientVpnEndpoints"
            }
        ],
        "EC2.DescribeClientVpnRoutes": [
            {
                "action": "ec2:DescribeClientVpnRoutes"
            }
        ],
        "EC2.DescribeClientVpnTargetNetworks": [
            {
                "action": "ec2:DescribeClientVpnTargetNetworks"
            }
        ],
        "EC2.DescribeCoipPools": [
            {
                "action": "ec2:DescribeCoipPools"
            }
        ],
        "EC2.DescribeConversionTasks": [
            {
                "action": "ec2:DescribeConversionTasks"
            }
        ],
        "EC2.DescribeCustomerGateways": [
            {
                "action": "ec2:DescribeCustomerGateways"
            }
        ],
        "EC2.DescribeDhcpOptions": [
            {
                "action": "ec2:DescribeDhcpOptions"
            }
        ],
        "EC2.DescribeEgressOnlyInternetGateways": [
            {
                "action": "ec2:DescribeEgressOnlyInternetGateways"
            }
        ],
        "EC2.DescribeElasticGpus": [
            {
                "action": "ec2:DescribeElasticGpus"
            }
        ],
        "EC2.DescribeExportImageTasks": [
            {
                "action": "ec2:DescribeExportImageTasks"
            }
        ],
        "EC2.DescribeExportTasks": [
            {
                "action": "ec2:DescribeExportTasks"
            }
        ],
        "EC2.DescribeFastSnapshotRestores": [
            {
                "action": "ec2:DescribeFastSnapshotRestores"
            }
        ],
        "EC2.DescribeFleetHistory": [
            {
                "action": "ec2:DescribeFleetHistory"
            }
        ],
        "EC2.DescribeFleetInstances": [
            {
                "action": "ec2:DescribeFleetInstances"
            }
        ],
        "EC2.DescribeFleets": [
            {
                "action": "ec2:DescribeFleets"
            }
        ],
        "EC2.DescribeFlowLogs": [
            {
                "action": "ec2:DescribeFlowLogs"
            }
        ],
        "EC2.DescribeFpgaImageAttribute": [
            {
                "action": "ec2:DescribeFpgaImageAttribute"
            }
        ],
        "EC2.DescribeFpgaImages": [
            {
                "action": "ec2:DescribeFpgaImages"
            }
        ],
        "EC2.DescribeHostReservationOfferings": [
            {
                "action": "ec2:DescribeHostReservationOfferings"
            }
        ],
        "EC2.DescribeHostReservations": [
            {
                "action": "ec2:DescribeHostReservations"
            }
        ],
        "EC2.DescribeHosts": [
            {
                "action": "ec2:DescribeHosts"
            }
        ],
        "EC2.DescribeIamInstanceProfileAssociations": [
            {
                "action": "ec2:DescribeIamInstanceProfileAssociations"
            }
        ],
        "EC2.DescribeIdFormat": [
            {
                "action": "ec2:DescribeIdFormat"
            }
        ],
        "EC2.DescribeIdentityIdFormat": [
            {
                "action": "ec2:DescribeIdentityIdFormat"
            }
        ],
        "EC2.DescribeImageAttribute": [
            {
                "action": "ec2:DescribeImageAttribute"
            }
        ],
        "EC2.DescribeImages": [
            {
                "action": "ec2:DescribeImages"
            }
        ],
        "EC2.DescribeImportImageTasks": [
            {
                "action": "ec2:DescribeImportImageTasks"
            }
        ],
        "EC2.DescribeImportSnapshotTasks": [
            {
                "action": "ec2:DescribeImportSnapshotTasks"
            }
        ],
        "EC2.DescribeInstanceAttribute": [
            {
                "action": "ec2:DescribeInstanceAttribute"
            }
        ],
        "EC2.DescribeInstanceCreditSpecifications": [
            {
                "action": "ec2:DescribeInstanceCreditSpecifications"
            }
        ],
        "EC2.DescribeInstanceEventNotificationAttributes": [
            {
                "action": "ec2:DescribeInstanceEventNotificationAttributes"
            }
        ],
        "EC2.DescribeInstanceStatus": [
            {
                "action": "ec2:DescribeInstanceStatus"
            }
        ],
        "EC2.DescribeInstanceTypeOfferings": [
            {
                "action": "ec2:DescribeInstanceTypeOfferings"
            }
        ],
        "EC2.DescribeInstanceTypes": [
            {
                "action": "ec2:DescribeInstanceTypes"
            }
        ],
        "EC2.DescribeInstances": [
            {
                "action": "ec2:DescribeInstances"
            }
        ],
        "EC2.DescribeInternetGateways": [
            {
                "action": "ec2:DescribeInternetGateways"
            }
        ],
        "EC2.DescribeIpv6Pools": [
            {
                "action": "ec2:DescribeIpv6Pools"
            }
        ],
        "EC2.DescribeKeyPairs": [
            {
                "action": "ec2:DescribeKeyPairs"
            }
        ],
        "EC2.DescribeLaunchTemplateVersions": [
            {
                "action": "ec2:DescribeLaunchTemplateVersions"
            }
        ],
        "EC2.DescribeLaunchTemplates": [
            {
                "action": "ec2:DescribeLaunchTemplates"
            }
        ],
        "EC2.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": [
            {
                "action": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations"
            }
        ],
        "EC2.DescribeLocalGatewayRouteTableVpcAssociations": [
            {
                "action": "ec2:DescribeLocalGatewayRouteTableVpcAssociations"
            }
        ],
        "EC2.DescribeLocalGatewayRouteTables": [
            {
                "action": "ec2:DescribeLocalGatewayRouteTables"
            }
        ],
        "EC2.DescribeLocalGatewayVirtualInterfaceGroups": [
            {
                "action": "ec2:DescribeLocalGatewayVirtualInterfaceGroups"
            }
        ],
        "EC2.DescribeLocalGatewayVirtualInterfaces": [
            {
                "action": "ec2:DescribeLocalGatewayVirtualInterfaces"
            }
        ],
        "EC2.DescribeLocalGateways": [
            {
                "action": "ec2:DescribeLocalGateways"
            }
        ],
        "EC2.DescribeManagedPrefixLists": [
            {
                "action": "ec2:DescribeManagedPrefixLists"
            }
        ],
        "EC2.DescribeMovingAddresses": [
            {
                "action": "ec2:DescribeMovingAddresses"
            }
        ],
        "EC2.DescribeNatGateways": [
            {
                "action": "ec2:DescribeNatGateways"
            }
        ],
        "EC2.DescribeNetworkAcls": [
            {
                "action": "ec2:DescribeNetworkAcls"
            }
        ],
        "EC2.DescribeNetworkInsightsAnalyses": [
            {
                "action": "ec2:DescribeNetworkInsightsAnalyses"
            }
        ],
        "EC2.DescribeNetworkInsightsPaths": [
            {
                "action": "ec2:DescribeNetworkInsightsPaths"
            }
        ],
        "EC2.DescribeNetworkInterfaceAttribute": [
            {
                "action": "ec2:DescribeNetworkInterfaceAttribute"
            }
        ],
        "EC2.DescribeNetworkInterfacePermissions": [
            {
                "action": "ec2:DescribeNetworkInterfacePermissions"
            }
        ],
        "EC2.DescribeNetworkInterfaces": [
            {
                "action": "ec2:DescribeNetworkInterfaces"
            }
        ],
        "EC2.DescribePlacementGroups": [
            {
                "action": "ec2:DescribePlacementGroups"
            }
        ],
        "EC2.DescribePrefixLists": [
            {
                "action": "ec2:DescribePrefixLists"
            }
        ],
        "EC2.DescribePrincipalIdFormat": [
            {
                "action": "ec2:DescribePrincipalIdFormat"
            }
        ],
        "EC2.DescribePublicIpv4Pools": [
            {
                "action": "ec2:DescribePublicIpv4Pools"
            }
        ],
        "EC2.DescribeRegions": [
            {
                "action": "ec2:DescribeRegions"
            }
        ],
        "EC2.DescribeReservedInstances": [
            {
                "action": "ec2:DescribeReservedInstances"
            }
        ],
        "EC2.DescribeReservedInstancesListings": [
            {
                "action": "ec2:DescribeReservedInstancesListings"
            }
        ],
        "EC2.DescribeReservedInstancesModifications": [
            {
                "action": "ec2:DescribeReservedInstancesModifications"
            }
        ],
        "EC2.DescribeReservedInstancesOfferings": [
            {
                "action": "ec2:DescribeReservedInstancesOfferings"
            }
        ],
        "EC2.DescribeRouteTables": [
            {
                "action": "ec2:DescribeRouteTables"
            }
        ],
        "EC2.DescribeScheduledInstanceAvailability": [
            {
                "action": "ec2:DescribeScheduledInstanceAvailability"
            }
        ],
        "EC2.DescribeScheduledInstances": [
            {
                "action": "ec2:DescribeScheduledInstances"
            }
        ],
        "EC2.DescribeSecurityGroupReferences": [
            {
                "action": "ec2:DescribeSecurityGroupReferences"
            }
        ],
        "EC2.DescribeSecurityGroups": [
            {
                "action": "ec2:DescribeSecurityGroups"
            }
        ],
        "EC2.DescribeSnapshotAttribute": [
            {
                "action": "ec2:DescribeSnapshotAttribute"
            }
        ],
        "EC2.DescribeSnapshots": [
            {
                "action": "ec2:DescribeSnapshots"
            }
        ],
        "EC2.DescribeSpotDatafeedSubscription": [
            {
                "action": "ec2:DescribeSpotDatafeedSubscription"
            }
        ],
        "EC2.DescribeSpotFleetInstances": [
            {
                "action": "ec2:DescribeSpotFleetInstances"
            }
        ],
        "EC2.DescribeSpotFleetRequestHistory": [
            {
                "action": "ec2:DescribeSpotFleetRequestHistory"
            }
        ],
        "EC2.DescribeSpotFleetRequests": [
            {
                "action": "ec2:DescribeSpotFleetRequests"
            }
        ],
        "EC2.DescribeSpotInstanceRequests": [
            {
                "action": "ec2:DescribeSpotInstanceRequests"
            }
        ],
        "EC2.DescribeSpotPriceHistory": [
            {
                "action": "ec2:DescribeSpotPriceHistory"
            }
        ],
        "EC2.DescribeStaleSecurityGroups": [
            {
                "action": "ec2:DescribeStaleSecurityGroups"
            }
        ],
        "EC2.DescribeSubnets": [
            {
                "action": "ec2:DescribeSubnets"
            }
        ],
        "EC2.DescribeTags": [
            {
                "action": "ec2:DescribeTags"
            }
        ],
        "EC2.DescribeTrafficMirrorFilters": [
            {
                "action": "ec2:DescribeTrafficMirrorFilters"
            }
        ],
        "EC2.DescribeTrafficMirrorSessions": [
            {
                "action": "ec2:DescribeTrafficMirrorSessions"
            }
        ],
        "EC2.DescribeTrafficMirrorTargets": [
            {
                "action": "ec2:DescribeTrafficMirrorTargets"
            }
        ],
        "EC2.DescribeTransitGatewayAttachments": [
            {
                "action": "ec2:DescribeTransitGatewayAttachments"
            }
        ],
        "EC2.DescribeTransitGatewayConnectPeers": [
            {
                "action": "ec2:DescribeTransitGatewayConnectPeers"
            }
        ],
        "EC2.DescribeTransitGatewayConnects": [
            {
                "action": "ec2:DescribeTransitGatewayConnects"
            }
        ],
        "EC2.DescribeTransitGatewayMulticastDomains": [
            {
                "action": "ec2:DescribeTransitGatewayMulticastDomains"
            }
        ],
        "EC2.DescribeTransitGatewayPeeringAttachments": [
            {
                "action": "ec2:DescribeTransitGatewayPeeringAttachments"
            }
        ],
        "EC2.DescribeTransitGatewayRouteTables": [
            {
                "action": "ec2:DescribeTransitGatewayRouteTables"
            }
        ],
        "EC2.DescribeTransitGatewayVpcAttachments": [
            {
                "action": "ec2:DescribeTransitGatewayVpcAttachments"
            }
        ],
        "EC2.DescribeTransitGateways": [
            {
                "action": "ec2:DescribeTransitGateways"
            }
        ],
        "EC2.DescribeVolumeAttribute": [
            {
                "action": "ec2:DescribeVolumeAttribute"
            }
        ],
        "EC2.DescribeVolumeStatus": [
            {
                "action": "ec2:DescribeVolumeStatus"
            }
        ],
        "EC2.DescribeVolumes": [
            {
                "action": "ec2:DescribeVolumes"
            }
        ],
        "EC2.DescribeVolumesModifications": [
            {
                "action": "ec2:DescribeVolumesModifications"
            }
        ],
        "EC2.DescribeVpcAttribute": [
            {
                "action": "ec2:DescribeVpcAttribute"
            }
        ],
        "EC2.DescribeVpcClassicLink": [
            {
                "action": "ec2:DescribeVpcClassicLink"
            }
        ],
        "EC2.DescribeVpcClassicLinkDnsSupport": [
            {
                "action": "ec2:DescribeVpcClassicLinkDnsSupport"
            }
        ],
        "EC2.DescribeVpcEndpointConnectionNotifications": [
            {
                "action": "ec2:DescribeVpcEndpointConnectionNotifications"
            }
        ],
        "EC2.DescribeVpcEndpointConnections": [
            {
                "action": "ec2:DescribeVpcEndpointConnections"
            }
        ],
        "EC2.DescribeVpcEndpointServiceConfigurations": [
            {
                "action": "ec2:DescribeVpcEndpointServiceConfigurations"
            }
        ],
        "EC2.DescribeVpcEndpointServicePermissions": [
            {
                "action": "ec2:DescribeVpcEndpointServicePermissions"
            }
        ],
        "EC2.DescribeVpcEndpointServices": [
            {
                "action": "ec2:DescribeVpcEndpointServices"
            }
        ],
        "EC2.DescribeVpcEndpoints": [
            {
                "action": "ec2:DescribeVpcEndpoints"
            }
        ],
        "EC2.DescribeVpcPeeringConnections": [
            {
                "action": "ec2:DescribeVpcPeeringConnections"
            }
        ],
        "EC2.DescribeVpcs": [
            {
                "action": "ec2:DescribeVpcs"
            }
        ],
        "EC2.DescribeVpnConnections": [
            {
                "action": "ec2:DescribeVpnConnections"
            }
        ],
        "EC2.DescribeVpnGateways": [
            {
                "action": "ec2:DescribeVpnGateways"
            }
        ],
        "EC2.DetachClassicLinkVpc": [
            {
                "action": "ec2:DetachClassicLinkVpc"
            }
        ],
        "EC2.DetachInternetGateway": [
            {
                "action": "ec2:DetachInternetGateway"
            }
        ],
        "EC2.DetachNetworkInterface": [
            {
                "action": "ec2:DetachNetworkInterface"
            }
        ],
        "EC2.DetachVolume": [
            {
                "action": "ec2:DetachVolume"
            }
        ],
        "EC2.DetachVpnGateway": [
            {
                "action": "ec2:DetachVpnGateway"
            }
        ],
        "EC2.DisableEbsEncryptionByDefault": [
            {
                "action": "ec2:DisableEbsEncryptionByDefault"
            }
        ],
        "EC2.DisableFastSnapshotRestores": [
            {
                "action": "ec2:DisableFastSnapshotRestores"
            }
        ],
        "EC2.DisableTransitGatewayRouteTablePropagation": [
            {
                "action": "ec2:DisableTransitGatewayRouteTablePropagation"
            }
        ],
        "EC2.DisableVgwRoutePropagation": [
            {
                "action": "ec2:DisableVgwRoutePropagation"
            }
        ],
        "EC2.DisableVpcClassicLink": [
            {
                "action": "ec2:DisableVpcClassicLink"
            }
        ],
        "EC2.DisableVpcClassicLinkDnsSupport": [
            {
                "action": "ec2:DisableVpcClassicLinkDnsSupport"
            }
        ],
        "EC2.DisassociateAddress": [
            {
                "action": "ec2:DisassociateAddress"
            }
        ],
        "EC2.DisassociateClientVpnTargetNetwork": [
            {
                "action": "ec2:DisassociateClientVpnTargetNetwork"
            }
        ],
        "EC2.DisassociateEnclaveCertificateIamRole": [
            {
                "action": "ec2:DisassociateEnclaveCertificateIamRole"
            }
        ],
        "EC2.DisassociateIamInstanceProfile": [
            {
                "action": "ec2:DisassociateIamInstanceProfile"
            }
        ],
        "EC2.DisassociateRouteTable": [
            {
                "action": "ec2:DisassociateRouteTable"
            }
        ],
        "EC2.DisassociateSubnetCidrBlock": [
            {
                "action": "ec2:DisassociateSubnetCidrBlock"
            }
        ],
        "EC2.DisassociateTransitGatewayMulticastDomain": [
            {
                "action": "ec2:DisassociateTransitGatewayMulticastDomain"
            }
        ],
        "EC2.DisassociateTransitGatewayRouteTable": [
            {
                "action": "ec2:DisassociateTransitGatewayRouteTable"
            }
        ],
        "EC2.DisassociateVpcCidrBlock": [
            {
                "action": "ec2:DisassociateVpcCidrBlock"
            }
        ],
        "EC2.EnableEbsEncryptionByDefault": [
            {
                "action": "ec2:EnableEbsEncryptionByDefault"
            }
        ],
        "EC2.EnableFastSnapshotRestores": [
            {
                "action": "ec2:EnableFastSnapshotRestores"
            }
        ],
        "EC2.EnableTransitGatewayRouteTablePropagation": [
            {
                "action": "ec2:EnableTransitGatewayRouteTablePropagation"
            }
        ],
        "EC2.EnableVgwRoutePropagation": [
            {
                "action": "ec2:EnableVgwRoutePropagation"
            }
        ],
        "EC2.EnableVolumeIO": [
            {
                "action": "ec2:EnableVolumeIO"
            }
        ],
        "EC2.EnableVpcClassicLink": [
            {
                "action": "ec2:EnableVpcClassicLink"
            }
        ],
        "EC2.EnableVpcClassicLinkDnsSupport": [
            {
                "action": "ec2:EnableVpcClassicLinkDnsSupport"
            }
        ],
        "EC2.ExportClientVpnClientCertificateRevocationList": [
            {
                "action": "ec2:ExportClientVpnClientCertificateRevocationList"
            }
        ],
        "EC2.ExportClientVpnClientConfiguration": [
            {
                "action": "ec2:ExportClientVpnClientConfiguration"
            }
        ],
        "EC2.ExportImage": [
            {
                "action": "ec2:ExportImage"
            }
        ],
        "EC2.ExportTransitGatewayRoutes": [
            {
                "action": "ec2:ExportTransitGatewayRoutes"
            }
        ],
        "EC2.GetAssociatedEnclaveCertificateIamRoles": [
            {
                "action": "ec2:GetAssociatedEnclaveCertificateIamRoles"
            }
        ],
        "EC2.GetAssociatedIpv6PoolCidrs": [
            {
                "action": "ec2:GetAssociatedIpv6PoolCidrs"
            }
        ],
        "EC2.GetCapacityReservationUsage": [
            {
                "action": "ec2:GetCapacityReservationUsage"
            }
        ],
        "EC2.GetCoipPoolUsage": [
            {
                "action": "ec2:GetCoipPoolUsage"
            }
        ],
        "EC2.GetConsoleOutput": [
            {
                "action": "ec2:GetConsoleOutput"
            }
        ],
        "EC2.GetConsoleScreenshot": [
            {
                "action": "ec2:GetConsoleScreenshot"
            }
        ],
        "EC2.GetDefaultCreditSpecification": [
            {
                "action": "ec2:GetDefaultCreditSpecification"
            }
        ],
        "EC2.GetEbsDefaultKmsKeyId": [
            {
                "action": "ec2:GetEbsDefaultKmsKeyId"
            }
        ],
        "EC2.GetEbsEncryptionByDefault": [
            {
                "action": "ec2:GetEbsEncryptionByDefault"
            }
        ],
        "EC2.GetGroupsForCapacityReservation": [
            {
                "action": "ec2:GetGroupsForCapacityReservation"
            }
        ],
        "EC2.GetHostReservationPurchasePreview": [
            {
                "action": "ec2:GetHostReservationPurchasePreview"
            }
        ],
        "EC2.GetLaunchTemplateData": [
            {
                "action": "ec2:GetLaunchTemplateData"
            }
        ],
        "EC2.GetManagedPrefixListAssociations": [
            {
                "action": "ec2:GetManagedPrefixListAssociations"
            }
        ],
        "EC2.GetManagedPrefixListEntries": [
            {
                "action": "ec2:GetManagedPrefixListEntries"
            }
        ],
        "EC2.GetPasswordData": [
            {
                "action": "ec2:GetPasswordData"
            }
        ],
        "EC2.GetReservedInstancesExchangeQuote": [
            {
                "action": "ec2:GetReservedInstancesExchangeQuote"
            }
        ],
        "EC2.GetTransitGatewayAttachmentPropagations": [
            {
                "action": "ec2:GetTransitGatewayAttachmentPropagations"
            }
        ],
        "EC2.GetTransitGatewayMulticastDomainAssociations": [
            {
                "action": "ec2:GetTransitGatewayMulticastDomainAssociations"
            }
        ],
        "EC2.GetTransitGatewayPrefixListReferences": [
            {
                "action": "ec2:GetTransitGatewayPrefixListReferences"
            }
        ],
        "EC2.GetTransitGatewayRouteTableAssociations": [
            {
                "action": "ec2:GetTransitGatewayRouteTableAssociations"
            }
        ],
        "EC2.GetTransitGatewayRouteTablePropagations": [
            {
                "action": "ec2:GetTransitGatewayRouteTablePropagations"
            }
        ],
        "EC2.ImportClientVpnClientCertificateRevocationList": [
            {
                "action": "ec2:ImportClientVpnClientCertificateRevocationList"
            }
        ],
        "EC2.ImportImage": [
            {
                "action": "ec2:ImportImage"
            }
        ],
        "EC2.ImportInstance": [
            {
                "action": "ec2:ImportInstance"
            }
        ],
        "EC2.ImportKeyPair": [
            {
                "action": "ec2:ImportKeyPair"
            }
        ],
        "EC2.ImportSnapshot": [
            {
                "action": "ec2:ImportSnapshot"
            }
        ],
        "EC2.ImportVolume": [
            {
                "action": "ec2:ImportVolume"
            }
        ],
        "EC2.ModifyAvailabilityZoneGroup": [
            {
                "action": "ec2:ModifyAvailabilityZoneGroup"
            }
        ],
        "EC2.ModifyCapacityReservation": [
            {
                "action": "ec2:ModifyCapacityReservation"
            }
        ],
        "EC2.ModifyClientVpnEndpoint": [
            {
                "action": "ec2:ModifyClientVpnEndpoint"
            }
        ],
        "EC2.ModifyDefaultCreditSpecification": [
            {
                "action": "ec2:ModifyDefaultCreditSpecification"
            }
        ],
        "EC2.ModifyEbsDefaultKmsKeyId": [
            {
                "action": "ec2:ModifyEbsDefaultKmsKeyId"
            }
        ],
        "EC2.ModifyFleet": [
            {
                "action": "ec2:ModifyFleet"
            }
        ],
        "EC2.ModifyFpgaImageAttribute": [
            {
                "action": "ec2:ModifyFpgaImageAttribute"
            }
        ],
        "EC2.ModifyHosts": [
            {
                "action": "ec2:ModifyHosts"
            }
        ],
        "EC2.ModifyIdFormat": [
            {
                "action": "ec2:ModifyIdFormat"
            }
        ],
        "EC2.ModifyIdentityIdFormat": [
            {
                "action": "ec2:ModifyIdentityIdFormat"
            }
        ],
        "EC2.ModifyImageAttribute": [
            {
                "action": "ec2:ModifyImageAttribute"
            }
        ],
        "EC2.ModifyInstanceAttribute": [
            {
                "action": "ec2:ModifyInstanceAttribute"
            }
        ],
        "EC2.ModifyInstanceCapacityReservationAttributes": [
            {
                "action": "ec2:ModifyInstanceCapacityReservationAttributes"
            }
        ],
        "EC2.ModifyInstanceCreditSpecification": [
            {
                "action": "ec2:ModifyInstanceCreditSpecification"
            }
        ],
        "EC2.ModifyInstanceEventStartTime": [
            {
                "action": "ec2:ModifyInstanceEventStartTime"
            }
        ],
        "EC2.ModifyInstanceMetadataOptions": [
            {
                "action": "ec2:ModifyInstanceMetadataOptions"
            }
        ],
        "EC2.ModifyInstancePlacement": [
            {
                "action": "ec2:ModifyInstancePlacement"
            }
        ],
        "EC2.ModifyLaunchTemplate": [
            {
                "action": "ec2:ModifyLaunchTemplate"
            }
        ],
        "EC2.ModifyManagedPrefixList": [
            {
                "action": "ec2:ModifyManagedPrefixList"
            }
        ],
        "EC2.ModifyNetworkInterfaceAttribute": [
            {
                "action": "ec2:ModifyNetworkInterfaceAttribute"
            }
        ],
        "EC2.ModifyReservedInstances": [
            {
                "action": "ec2:ModifyReservedInstances"
            }
        ],
        "EC2.ModifySnapshotAttribute": [
            {
                "action": "ec2:ModifySnapshotAttribute"
            }
        ],
        "EC2.ModifySpotFleetRequest": [
            {
                "action": "ec2:ModifySpotFleetRequest"
            }
        ],
        "EC2.ModifySubnetAttribute": [
            {
                "action": "ec2:ModifySubnetAttribute"
            }
        ],
        "EC2.ModifyTrafficMirrorFilterNetworkServices": [
            {
                "action": "ec2:ModifyTrafficMirrorFilterNetworkServices"
            }
        ],
        "EC2.ModifyTrafficMirrorFilterRule": [
            {
                "action": "ec2:ModifyTrafficMirrorFilterRule"
            }
        ],
        "EC2.ModifyTrafficMirrorSession": [
            {
                "action": "ec2:ModifyTrafficMirrorSession"
            }
        ],
        "EC2.ModifyTransitGateway": [
            {
                "action": "ec2:ModifyTransitGateway"
            }
        ],
        "EC2.ModifyTransitGatewayPrefixListReference": [
            {
                "action": "ec2:ModifyTransitGatewayPrefixListReference"
            }
        ],
        "EC2.ModifyTransitGatewayVpcAttachment": [
            {
                "action": "ec2:ModifyTransitGatewayVpcAttachment"
            }
        ],
        "EC2.ModifyVolume": [
            {
                "action": "ec2:ModifyVolume"
            }
        ],
        "EC2.ModifyVolumeAttribute": [
            {
                "action": "ec2:ModifyVolumeAttribute"
            }
        ],
        "EC2.ModifyVpcAttribute": [
            {
                "action": "ec2:ModifyVpcAttribute"
            }
        ],
        "EC2.ModifyVpcEndpoint": [
            {
                "action": "ec2:ModifyVpcEndpoint"
            }
        ],
        "EC2.ModifyVpcEndpointConnectionNotification": [
            {
                "action": "ec2:ModifyVpcEndpointConnectionNotification"
            }
        ],
        "EC2.ModifyVpcEndpointServiceConfiguration": [
            {
                "action": "ec2:ModifyVpcEndpointServiceConfiguration"
            }
        ],
        "EC2.ModifyVpcEndpointServicePermissions": [
            {
                "action": "ec2:ModifyVpcEndpointServicePermissions"
            }
        ],
        "EC2.ModifyVpcPeeringConnectionOptions": [
            {
                "action": "ec2:ModifyVpcPeeringConnectionOptions"
            }
        ],
        "EC2.ModifyVpcTenancy": [
            {
                "action": "ec2:ModifyVpcTenancy"
            }
        ],
        "EC2.ModifyVpnConnection": [
            {
                "action": "ec2:ModifyVpnConnection"
            }
        ],
        "EC2.ModifyVpnConnectionOptions": [
            {
                "action": "ec2:ModifyVpnConnectionOptions"
            }
        ],
        "EC2.ModifyVpnTunnelCertificate": [
            {
                "action": "ec2:ModifyVpnTunnelCertificate"
            }
        ],
        "EC2.ModifyVpnTunnelOptions": [
            {
                "action": "ec2:ModifyVpnTunnelOptions"
            }
        ],
        "EC2.MonitorInstances": [
            {
                "action": "ec2:MonitorInstances"
            }
        ],
        "EC2.MoveAddressToVpc": [
            {
                "action": "ec2:MoveAddressToVpc"
            }
        ],
        "EC2.ProvisionByoipCidr": [
            {
                "action": "ec2:ProvisionByoipCidr"
            }
        ],
        "EC2.PurchaseHostReservation": [
            {
                "action": "ec2:PurchaseHostReservation"
            }
        ],
        "EC2.PurchaseReservedInstancesOffering": [
            {
                "action": "ec2:PurchaseReservedInstancesOffering"
            }
        ],
        "EC2.PurchaseScheduledInstances": [
            {
                "action": "ec2:PurchaseScheduledInstances"
            }
        ],
        "EC2.RebootInstances": [
            {
                "action": "ec2:RebootInstances"
            }
        ],
        "EC2.RegisterImage": [
            {
                "action": "ec2:RegisterImage"
            }
        ],
        "EC2.RegisterInstanceEventNotificationAttributes": [
            {
                "action": "ec2:RegisterInstanceEventNotificationAttributes"
            }
        ],
        "EC2.RegisterTransitGatewayMulticastGroupMembers": [
            {
                "action": "ec2:RegisterTransitGatewayMulticastGroupMembers"
            }
        ],
        "EC2.RegisterTransitGatewayMulticastGroupSources": [
            {
                "action": "ec2:RegisterTransitGatewayMulticastGroupSources"
            }
        ],
        "EC2.RejectTransitGatewayMulticastDomainAssociations": [
            {
                "action": "ec2:RejectTransitGatewayMulticastDomainAssociations"
            }
        ],
        "EC2.RejectTransitGatewayPeeringAttachment": [
            {
                "action": "ec2:RejectTransitGatewayPeeringAttachment"
            }
        ],
        "EC2.RejectTransitGatewayVpcAttachment": [
            {
                "action": "ec2:RejectTransitGatewayVpcAttachment"
            }
        ],
        "EC2.RejectVpcEndpointConnections": [
            {
                "action": "ec2:RejectVpcEndpointConnections"
            }
        ],
        "EC2.RejectVpcPeeringConnection": [
            {
                "action": "ec2:RejectVpcPeeringConnection"
            }
        ],
        "EC2.ReleaseAddress": [
            {
                "action": "ec2:ReleaseAddress"
            }
        ],
        "EC2.ReleaseHosts": [
            {
                "action": "ec2:ReleaseHosts"
            }
        ],
        "EC2.ReplaceIamInstanceProfileAssociation": [
            {
                "action": "ec2:ReplaceIamInstanceProfileAssociation"
            }
        ],
        "EC2.ReplaceNetworkAclAssociation": [
            {
                "action": "ec2:ReplaceNetworkAclAssociation"
            }
        ],
        "EC2.ReplaceNetworkAclEntry": [
            {
                "action": "ec2:ReplaceNetworkAclEntry"
            }
        ],
        "EC2.ReplaceRoute": [
            {
                "action": "ec2:ReplaceRoute"
            }
        ],
        "EC2.ReplaceRouteTableAssociation": [
            {
                "action": "ec2:ReplaceRouteTableAssociation"
            }
        ],
        "EC2.ReplaceTransitGatewayRoute": [
            {
                "action": "ec2:ReplaceTransitGatewayRoute"
            }
        ],
        "EC2.ReportInstanceStatus": [
            {
                "action": "ec2:ReportInstanceStatus"
            }
        ],
        "EC2.RequestSpotFleet": [
            {
                "action": "ec2:RequestSpotFleet"
            }
        ],
        "EC2.RequestSpotInstances": [
            {
                "action": "ec2:RequestSpotInstances"
            }
        ],
        "EC2.ResetEbsDefaultKmsKeyId": [
            {
                "action": "ec2:ResetEbsDefaultKmsKeyId"
            }
        ],
        "EC2.ResetFpgaImageAttribute": [
            {
                "action": "ec2:ResetFpgaImageAttribute"
            }
        ],
        "EC2.ResetImageAttribute": [
            {
                "action": "ec2:ResetImageAttribute"
            }
        ],
        "EC2.ResetInstanceAttribute": [
            {
                "action": "ec2:ResetInstanceAttribute"
            }
        ],
        "EC2.ResetNetworkInterfaceAttribute": [
            {
                "action": "ec2:ResetNetworkInterfaceAttribute"
            }
        ],
        "EC2.ResetSnapshotAttribute": [
            {
                "action": "ec2:ResetSnapshotAttribute"
            }
        ],
        "EC2.RestoreAddressToClassic": [
            {
                "action": "ec2:RestoreAddressToClassic"
            }
        ],
        "EC2.RestoreManagedPrefixListVersion": [
            {
                "action": "ec2:RestoreManagedPrefixListVersion"
            }
        ],
        "EC2.RevokeClientVpnIngress": [
            {
                "action": "ec2:RevokeClientVpnIngress"
            }
        ],
        "EC2.RevokeSecurityGroupEgress": [
            {
                "action": "ec2:RevokeSecurityGroupEgress"
            }
        ],
        "EC2.RevokeSecurityGroupIngress": [
            {
                "action": "ec2:RevokeSecurityGroupIngress"
            }
        ],
        "EC2.RunInstances": [
            {
                "action": "ec2:RunInstances"
            }
        ],
        "EC2.RunScheduledInstances": [
            {
                "action": "ec2:RunScheduledInstances"
            }
        ],
        "EC2.SearchLocalGatewayRoutes": [
            {
                "action": "ec2:SearchLocalGatewayRoutes"
            }
        ],
        "EC2.SearchTransitGatewayMulticastGroups": [
            {
                "action": "ec2:SearchTransitGatewayMulticastGroups"
            }
        ],
        "EC2.SearchTransitGatewayRoutes": [
            {
                "action": "ec2:SearchTransitGatewayRoutes"
            }
        ],
        "EC2.SendDiagnosticInterrupt": [
            {
                "action": "ec2:SendDiagnosticInterrupt"
            }
        ],
        "EC2.StartInstances": [
            {
                "action": "ec2:StartInstances"
            }
        ],
        "EC2.StartNetworkInsightsAnalysis": [
            {
                "action": "ec2:StartNetworkInsightsAnalysis"
            }
        ],
        "EC2.StartVpcEndpointServicePrivateDnsVerification": [
            {
                "action": "ec2:StartVpcEndpointServicePrivateDnsVerification"
            }
        ],
        "EC2.StopInstances": [
            {
                "action": "ec2:StopInstances"
            }
        ],
        "EC2.TerminateClientVpnConnections": [
            {
                "action": "ec2:TerminateClientVpnConnections"
            }
        ],
        "EC2.TerminateInstances": [
            {
                "action": "ec2:TerminateInstances"
            }
        ],
        "EC2.UnassignIpv6Addresses": [
            {
                "action": "ec2:UnassignIpv6Addresses"
            }
        ],
        "EC2.UnassignPrivateIpAddresses": [
            {
                "action": "ec2:UnassignPrivateIpAddresses"
            }
        ],
        "EC2.UnmonitorInstances": [
            {
                "action": "ec2:UnmonitorInstances"
            }
        ],
        "EC2.UpdateSecurityGroupRuleDescriptionsEgress": [
            {
                "action": "ec2:UpdateSecurityGroupRuleDescriptionsEgress"
            }
        ],
        "EC2.UpdateSecurityGroupRuleDescriptionsIngress": [
            {
                "action": "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
            }
        ],
        "EC2.WithdrawByoipCidr": [
            {
                "action": "ec2:WithdrawByoipCidr"
            }
        ],
        "ECR.BatchCheckLayerAvailability": [
            {
                "action": "ecr:BatchCheckLayerAvailability"
            }
        ],
        "ECR.BatchDeleteImage": [
            {
                "action": "ecr:BatchDeleteImage"
            }
        ],
        "ECR.BatchGetImage": [
            {
                "action": "ecr:BatchGetImage"
            }
        ],
        "ECR.CompleteLayerUpload": [
            {
                "action": "ecr:CompleteLayerUpload"
            }
        ],
        "ECR.CreateRepository": [
            {
                "action": "ecr:CreateRepository"
            }
        ],
        "ECR.DeleteLifecyclePolicy": [
            {
                "action": "ecr:DeleteLifecyclePolicy"
            }
        ],
        "ECR.DeleteRegistryPolicy": [
            {
                "action": "ecr:DeleteRegistryPolicy"
            }
        ],
        "ECR.DeleteRepository": [
            {
                "action": "ecr:DeleteRepository"
            }
        ],
        "ECR.DeleteRepositoryPolicy": [
            {
                "action": "ecr:DeleteRepositoryPolicy"
            }
        ],
        "ECR.DescribeImageScanFindings": [
            {
                "action": "ecr:DescribeImageScanFindings"
            }
        ],
        "ECR.DescribeImages": [
            {
                "action": "ecr:DescribeImages"
            }
        ],
        "ECR.DescribeRegistry": [
            {
                "action": "ecr:DescribeRegistry"
            }
        ],
        "ECR.DescribeRepositories": [
            {
                "action": "ecr:DescribeRepositories"
            }
        ],
        "ECR.GetAuthorizationToken": [
            {
                "action": "ecr:GetAuthorizationToken"
            }
        ],
        "ECR.GetDownloadUrlForLayer": [
            {
                "action": "ecr:GetDownloadUrlForLayer"
            }
        ],
        "ECR.GetLifecyclePolicy": [
            {
                "action": "ecr:GetLifecyclePolicy"
            }
        ],
        "ECR.GetLifecyclePolicyPreview": [
            {
                "action": "ecr:GetLifecyclePolicyPreview"
            }
        ],
        "ECR.GetRegistryPolicy": [
            {
                "action": "ecr:GetRegistryPolicy"
            }
        ],
        "ECR.GetRepositoryPolicy": [
            {
                "action": "ecr:GetRepositoryPolicy"
            }
        ],
        "ECR.InitiateLayerUpload": [
            {
                "action": "ecr:InitiateLayerUpload"
            }
        ],
        "ECR.ListImages": [
            {
                "action": "ecr:ListImages"
            }
        ],
        "ECR.ListTagsForResource": [
            {
                "action": "ecr:ListTagsForResource"
            }
        ],
        "ECR.PutImage": [
            {
                "action": "ecr:PutImage"
            }
        ],
        "ECR.PutImageScanningConfiguration": [
            {
                "action": "ecr:PutImageScanningConfiguration"
            }
        ],
        "ECR.PutImageTagMutability": [
            {
                "action": "ecr:PutImageTagMutability"
            }
        ],
        "ECR.PutLifecyclePolicy": [
            {
                "action": "ecr:PutLifecyclePolicy"
            }
        ],
        "ECR.PutRegistryPolicy": [
            {
                "action": "ecr:PutRegistryPolicy"
            }
        ],
        "ECR.PutReplicationConfiguration": [
            {
                "action": "ecr:PutReplicationConfiguration"
            }
        ],
        "ECR.SetRepositoryPolicy": [
            {
                "action": "ecr:SetRepositoryPolicy"
            }
        ],
        "ECR.StartImageScan": [
            {
                "action": "ecr:StartImageScan"
            }
        ],
        "ECR.StartLifecyclePolicyPreview": [
            {
                "action": "ecr:StartLifecyclePolicyPreview"
            }
        ],
        "ECR.TagResource": [
            {
                "action": "ecr:TagResource"
            }
        ],
        "ECR.UntagResource": [
            {
                "action": "ecr:UntagResource"
            }
        ],
        "ECR.UploadLayerPart": [
            {
                "action": "ecr:UploadLayerPart"
            }
        ],
        "ECS.CreateCapacityProvider": [
            {
                "action": "ecs:CreateCapacityProvider"
            }
        ],
        "ECS.CreateCluster": [
            {
                "action": "ecs:CreateCluster"
            }
        ],
        "ECS.CreateService": [
            {
                "action": "ecs:CreateService"
            }
        ],
        "ECS.CreateTaskSet": [
            {
                "action": "ecs:CreateTaskSet"
            }
        ],
        "ECS.DeleteAccountSetting": [
            {
                "action": "ecs:DeleteAccountSetting"
            }
        ],
        "ECS.DeleteAttributes": [
            {
                "action": "ecs:DeleteAttributes"
            }
        ],
        "ECS.DeleteCapacityProvider": [
            {
                "action": "ecs:DeleteCapacityProvider"
            }
        ],
        "ECS.DeleteCluster": [
            {
                "action": "ecs:DeleteCluster"
            }
        ],
        "ECS.DeleteService": [
            {
                "action": "ecs:DeleteService"
            }
        ],
        "ECS.DeleteTaskSet": [
            {
                "action": "ecs:DeleteTaskSet"
            }
        ],
        "ECS.DeregisterContainerInstance": [
            {
                "action": "ecs:DeregisterContainerInstance"
            }
        ],
        "ECS.DeregisterTaskDefinition": [
            {
                "action": "ecs:DeregisterTaskDefinition"
            }
        ],
        "ECS.DescribeCapacityProviders": [
            {
                "action": "ecs:DescribeCapacityProviders"
            }
        ],
        "ECS.DescribeClusters": [
            {
                "action": "ecs:DescribeClusters"
            }
        ],
        "ECS.DescribeContainerInstances": [
            {
                "action": "ecs:DescribeContainerInstances"
            }
        ],
        "ECS.DescribeServices": [
            {
                "action": "ecs:DescribeServices"
            }
        ],
        "ECS.DescribeTaskDefinition": [
            {
                "action": "ecs:DescribeTaskDefinition"
            }
        ],
        "ECS.DescribeTaskSets": [
            {
                "action": "ecs:DescribeTaskSets"
            }
        ],
        "ECS.DescribeTasks": [
            {
                "action": "ecs:DescribeTasks"
            }
        ],
        "ECS.DiscoverPollEndpoint": [
            {
                "action": "ecs:DiscoverPollEndpoint"
            }
        ],
        "ECS.ListAccountSettings": [
            {
                "action": "ecs:ListAccountSettings"
            }
        ],
        "ECS.ListAttributes": [
            {
                "action": "ecs:ListAttributes"
            }
        ],
        "ECS.ListClusters": [
            {
                "action": "ecs:ListClusters"
            }
        ],
        "ECS.ListContainerInstances": [
            {
                "action": "ecs:ListContainerInstances"
            }
        ],
        "ECS.ListServices": [
            {
                "action": "ecs:ListServices"
            }
        ],
        "ECS.ListTagsForResource": [
            {
                "action": "ecs:ListTagsForResource"
            }
        ],
        "ECS.ListTaskDefinitionFamilies": [
            {
                "action": "ecs:ListTaskDefinitionFamilies"
            }
        ],
        "ECS.ListTaskDefinitions": [
            {
                "action": "ecs:ListTaskDefinitions"
            }
        ],
        "ECS.ListTasks": [
            {
                "action": "ecs:ListTasks"
            }
        ],
        "ECS.PutAccountSetting": [
            {
                "action": "ecs:PutAccountSetting"
            }
        ],
        "ECS.PutAccountSettingDefault": [
            {
                "action": "ecs:PutAccountSettingDefault"
            }
        ],
        "ECS.PutAttributes": [
            {
                "action": "ecs:PutAttributes"
            }
        ],
        "ECS.PutClusterCapacityProviders": [
            {
                "action": "ecs:PutClusterCapacityProviders"
            }
        ],
        "ECS.RegisterContainerInstance": [
            {
                "action": "ecs:RegisterContainerInstance"
            }
        ],
        "ECS.RegisterTaskDefinition": [
            {
                "action": "ecs:RegisterTaskDefinition"
            }
        ],
        "ECS.RunTask": [
            {
                "action": "ecs:RunTask"
            }
        ],
        "ECS.StartTask": [
            {
                "action": "ecs:StartTask"
            }
        ],
        "ECS.StopTask": [
            {
                "action": "ecs:StopTask"
            }
        ],
        "ECS.SubmitAttachmentStateChanges": [
            {
                "action": "ecs:SubmitAttachmentStateChanges"
            }
        ],
        "ECS.SubmitContainerStateChange": [
            {
                "action": "ecs:SubmitContainerStateChange"
            }
        ],
        "ECS.SubmitTaskStateChange": [
            {
                "action": "ecs:SubmitTaskStateChange"
            }
        ],
        "ECS.TagResource": [
            {
                "action": "ecs:TagResource"
            }
        ],
        "ECS.UntagResource": [
            {
                "action": "ecs:UntagResource"
            }
        ],
        "ECS.UpdateClusterSettings": [
            {
                "action": "ecs:UpdateClusterSettings"
            }
        ],
        "ECS.UpdateContainerAgent": [
            {
                "action": "ecs:UpdateContainerAgent"
            }
        ],
        "ECS.UpdateContainerInstancesState": [
            {
                "action": "ecs:UpdateContainerInstancesState"
            }
        ],
        "ECS.UpdateService": [
            {
                "action": "ecs:UpdateService"
            }
        ],
        "ECS.UpdateServicePrimaryTaskSet": [
            {
                "action": "ecs:UpdateServicePrimaryTaskSet"
            }
        ],
        "ECS.UpdateTaskSet": [
            {
                "action": "ecs:UpdateTaskSet"
            }
        ],
        "EFS.CreateAccessPoint": [
            {
                "action": "elasticfilesystem:CreateAccessPoint"
            }
        ],
        "EFS.CreateFileSystem": [
            {
                "action": "elasticfilesystem:CreateFileSystem"
            }
        ],
        "EFS.CreateMountTarget": [
            {
                "action": "elasticfilesystem:CreateMountTarget"
            }
        ],
        "EFS.CreateTags": [
            {
                "action": "elasticfilesystem:CreateTags"
            }
        ],
        "EFS.DeleteAccessPoint": [
            {
                "action": "elasticfilesystem:DeleteAccessPoint"
            }
        ],
        "EFS.DeleteFileSystem": [
            {
                "action": "elasticfilesystem:DeleteFileSystem"
            }
        ],
        "EFS.DeleteFileSystemPolicy": [
            {
                "action": "elasticfilesystem:DeleteFileSystemPolicy"
            }
        ],
        "EFS.DeleteMountTarget": [
            {
                "action": "elasticfilesystem:DeleteMountTarget"
            }
        ],
        "EFS.DeleteTags": [
            {
                "action": "elasticfilesystem:DeleteTags"
            }
        ],
        "EFS.DescribeAccessPoints": [
            {
                "action": "elasticfilesystem:DescribeAccessPoints"
            }
        ],
        "EFS.DescribeBackupPolicy": [
            {
                "action": "elasticfilesystem:DescribeBackupPolicy"
            }
        ],
        "EFS.DescribeFileSystemPolicy": [
            {
                "action": "elasticfilesystem:DescribeFileSystemPolicy"
            }
        ],
        "EFS.DescribeFileSystems": [
            {
                "action": "elasticfilesystem:DescribeFileSystems"
            }
        ],
        "EFS.DescribeLifecycleConfiguration": [
            {
                "action": "elasticfilesystem:DescribeLifecycleConfiguration"
            }
        ],
        "EFS.DescribeMountTargetSecurityGroups": [
            {
                "action": "elasticfilesystem:DescribeMountTargetSecurityGroups"
            }
        ],
        "EFS.DescribeMountTargets": [
            {
                "action": "elasticfilesystem:DescribeMountTargets"
            }
        ],
        "EFS.DescribeTags": [
            {
                "action": "elasticfilesystem:DescribeTags"
            }
        ],
        "EFS.ListTagsForResource": [
            {
                "action": "elasticfilesystem:ListTagsForResource"
            }
        ],
        "EFS.ModifyMountTargetSecurityGroups": [
            {
                "action": "elasticfilesystem:ModifyMountTargetSecurityGroups"
            }
        ],
        "EFS.PutBackupPolicy": [
            {
                "action": "elasticfilesystem:PutBackupPolicy"
            }
        ],
        "EFS.PutFileSystemPolicy": [
            {
                "action": "elasticfilesystem:PutFileSystemPolicy"
            }
        ],
        "EFS.PutLifecycleConfiguration": [
            {
                "action": "elasticfilesystem:PutLifecycleConfiguration"
            }
        ],
        "EFS.TagResource": [
            {
                "action": "elasticfilesystem:TagResource"
            }
        ],
        "EFS.UntagResource": [
            {
                "action": "elasticfilesystem:UntagResource"
            }
        ],
        "EFS.UpdateFileSystem": [
            {
                "action": "elasticfilesystem:UpdateFileSystem"
            }
        ],
        "ElastiCache.AddTagsToResource": [
            {
                "action": "elasticache:AddTagsToResource"
            }
        ],
        "ElastiCache.AuthorizeCacheSecurityGroupIngress": [
            {
                "action": "elasticache:AuthorizeCacheSecurityGroupIngress"
            }
        ],
        "ElastiCache.BatchApplyUpdateAction": [
            {
                "action": "elasticache:BatchApplyUpdateAction"
            }
        ],
        "ElastiCache.BatchStopUpdateAction": [
            {
                "action": "elasticache:BatchStopUpdateAction"
            }
        ],
        "ElastiCache.CompleteMigration": [
            {
                "action": "elasticache:CompleteMigration"
            }
        ],
        "ElastiCache.CopySnapshot": [
            {
                "action": "elasticache:CopySnapshot"
            }
        ],
        "ElastiCache.CreateCacheCluster": [
            {
                "action": "elasticache:CreateCacheCluster"
            }
        ],
        "ElastiCache.CreateCacheParameterGroup": [
            {
                "action": "elasticache:CreateCacheParameterGroup"
            }
        ],
        "ElastiCache.CreateCacheSecurityGroup": [
            {
                "action": "elasticache:CreateCacheSecurityGroup"
            }
        ],
        "ElastiCache.CreateCacheSubnetGroup": [
            {
                "action": "elasticache:CreateCacheSubnetGroup"
            }
        ],
        "ElastiCache.CreateGlobalReplicationGroup": [
            {
                "action": "elasticache:CreateGlobalReplicationGroup"
            }
        ],
        "ElastiCache.CreateReplicationGroup": [
            {
                "action": "elasticache:CreateReplicationGroup"
            }
        ],
        "ElastiCache.CreateSnapshot": [
            {
                "action": "elasticache:CreateSnapshot"
            }
        ],
        "ElastiCache.CreateUser": [
            {
                "action": "elasticache:CreateUser"
            }
        ],
        "ElastiCache.CreateUserGroup": [
            {
                "action": "elasticache:CreateUserGroup"
            }
        ],
        "ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup": [
            {
                "action": "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup"
            }
        ],
        "ElastiCache.DecreaseReplicaCount": [
            {
                "action": "elasticache:DecreaseReplicaCount"
            }
        ],
        "ElastiCache.DeleteCacheCluster": [
            {
                "action": "elasticache:DeleteCacheCluster"
            }
        ],
        "ElastiCache.DeleteCacheParameterGroup": [
            {
                "action": "elasticache:DeleteCacheParameterGroup"
            }
        ],
        "ElastiCache.DeleteCacheSecurityGroup": [
            {
                "action": "elasticache:DeleteCacheSecurityGroup"
            }
        ],
        "ElastiCache.DeleteCacheSubnetGroup": [
            {
                "action": "elasticache:DeleteCacheSubnetGroup"
            }
        ],
        "ElastiCache.DeleteGlobalReplicationGroup": [
            {
                "action": "elasticache:DeleteGlobalReplicationGroup"
            }
        ],
        "ElastiCache.DeleteReplicationGroup": [
            {
                "action": "elasticache:DeleteReplicationGroup"
            }
        ],
        "ElastiCache.DeleteSnapshot": [
            {
                "action": "elasticache:DeleteSnapshot"
            }
        ],
        "ElastiCache.DeleteUser": [
            {
                "action": "elasticache:DeleteUser"
            }
        ],
        "ElastiCache.DeleteUserGroup": [
            {
                "action": "elasticache:DeleteUserGroup"
            }
        ],
        "ElastiCache.DescribeCacheClusters": [
            {
                "action": "elasticache:DescribeCacheClusters"
            }
        ],
        "ElastiCache.DescribeCacheEngineVersions": [
            {
                "action": "elasticache:DescribeCacheEngineVersions"
            }
        ],
        "ElastiCache.DescribeCacheParameterGroups": [
            {
                "action": "elasticache:DescribeCacheParameterGroups"
            }
        ],
        "ElastiCache.DescribeCacheParameters": [
            {
                "action": "elasticache:DescribeCacheParameters"
            }
        ],
        "ElastiCache.DescribeCacheSecurityGroups": [
            {
                "action": "elasticache:DescribeCacheSecurityGroups"
            }
        ],
        "ElastiCache.DescribeCacheSubnetGroups": [
            {
                "action": "elasticache:DescribeCacheSubnetGroups"
            }
        ],
        "ElastiCache.DescribeEngineDefaultParameters": [
            {
                "action": "elasticache:DescribeEngineDefaultParameters"
            }
        ],
        "ElastiCache.DescribeEvents": [
            {
                "action": "elasticache:DescribeEvents"
            }
        ],
        "ElastiCache.DescribeGlobalReplicationGroups": [
            {
                "action": "elasticache:DescribeGlobalReplicationGroups"
            }
        ],
        "ElastiCache.DescribeReplicationGroups": [
            {
                "action": "elasticache:DescribeReplicationGroups"
            }
        ],
        "ElastiCache.DescribeReservedCacheNodes": [
            {
                "action": "elasticache:DescribeReservedCacheNodes"
            }
        ],
        "ElastiCache.DescribeReservedCacheNodesOfferings": [
            {
                "action": "elasticache:DescribeReservedCacheNodesOfferings"
            }
        ],
        "ElastiCache.DescribeServiceUpdates": [
            {
                "action": "elasticache:DescribeServiceUpdates"
            }
        ],
        "ElastiCache.DescribeSnapshots": [
            {
                "action": "elasticache:DescribeSnapshots"
            }
        ],
        "ElastiCache.DescribeUpdateActions": [
            {
                "action": "elasticache:DescribeUpdateActions"
            }
        ],
        "ElastiCache.DescribeUserGroups": [
            {
                "action": "elasticache:DescribeUserGroups"
            }
        ],
        "ElastiCache.DescribeUsers": [
            {
                "action": "elasticache:DescribeUsers"
            }
        ],
        "ElastiCache.DisassociateGlobalReplicationGroup": [
            {
                "action": "elasticache:DisassociateGlobalReplicationGroup"
            }
        ],
        "ElastiCache.FailoverGlobalReplicationGroup": [
            {
                "action": "elasticache:FailoverGlobalReplicationGroup"
            }
        ],
        "ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup": [
            {
                "action": "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup"
            }
        ],
        "ElastiCache.IncreaseReplicaCount": [
            {
                "action": "elasticache:IncreaseReplicaCount"
            }
        ],
        "ElastiCache.ListAllowedNodeTypeModifications": [
            {
                "action": "elasticache:ListAllowedNodeTypeModifications"
            }
        ],
        "ElastiCache.ListTagsForResource": [
            {
                "action": "elasticache:ListTagsForResource"
            }
        ],
        "ElastiCache.ModifyCacheCluster": [
            {
                "action": "elasticache:ModifyCacheCluster"
            }
        ],
        "ElastiCache.ModifyCacheParameterGroup": [
            {
                "action": "elasticache:ModifyCacheParameterGroup"
            }
        ],
        "ElastiCache.ModifyCacheSubnetGroup": [
            {
                "action": "elasticache:ModifyCacheSubnetGroup"
            }
        ],
        "ElastiCache.ModifyGlobalReplicationGroup": [
            {
                "action": "elasticache:ModifyGlobalReplicationGroup"
            }
        ],
        "ElastiCache.ModifyReplicationGroup": [
            {
                "action": "elasticache:ModifyReplicationGroup"
            }
        ],
        "ElastiCache.ModifyReplicationGroupShardConfiguration": [
            {
                "action": "elasticache:ModifyReplicationGroupShardConfiguration"
            }
        ],
        "ElastiCache.ModifyUser": [
            {
                "action": "elasticache:ModifyUser"
            }
        ],
        "ElastiCache.ModifyUserGroup": [
            {
                "action": "elasticache:ModifyUserGroup"
            }
        ],
        "ElastiCache.PurchaseReservedCacheNodesOffering": [
            {
                "action": "elasticache:PurchaseReservedCacheNodesOffering"
            }
        ],
        "ElastiCache.RebalanceSlotsInGlobalReplicationGroup": [
            {
                "action": "elasticache:RebalanceSlotsInGlobalReplicationGroup"
            }
        ],
        "ElastiCache.RebootCacheCluster": [
            {
                "action": "elasticache:RebootCacheCluster"
            }
        ],
        "ElastiCache.RemoveTagsFromResource": [
            {
                "action": "elasticache:RemoveTagsFromResource"
            }
        ],
        "ElastiCache.ResetCacheParameterGroup": [
            {
                "action": "elasticache:ResetCacheParameterGroup"
            }
        ],
        "ElastiCache.RevokeCacheSecurityGroupIngress": [
            {
                "action": "elasticache:RevokeCacheSecurityGroupIngress"
            }
        ],
        "ElastiCache.StartMigration": [
            {
                "action": "elasticache:StartMigration"
            }
        ],
        "ElastiCache.TestFailover": [
            {
                "action": "elasticache:TestFailover"
            }
        ],
        "ElasticBeanstalk.AbortEnvironmentUpdate": [
            {
                "action": "elasticbeanstalk:AbortEnvironmentUpdate"
            }
        ],
        "ElasticBeanstalk.ApplyEnvironmentManagedAction": [
            {
                "action": "elasticbeanstalk:ApplyEnvironmentManagedAction"
            }
        ],
        "ElasticBeanstalk.AssociateEnvironmentOperationsRole": [
            {
                "action": "elasticbeanstalk:AssociateEnvironmentOperationsRole"
            }
        ],
        "ElasticBeanstalk.CheckDNSAvailability": [
            {
                "action": "elasticbeanstalk:CheckDNSAvailability"
            }
        ],
        "ElasticBeanstalk.ComposeEnvironments": [
            {
                "action": "elasticbeanstalk:ComposeEnvironments"
            }
        ],
        "ElasticBeanstalk.CreateApplication": [
            {
                "action": "elasticbeanstalk:CreateApplication"
            }
        ],
        "ElasticBeanstalk.CreateApplicationVersion": [
            {
                "action": "elasticbeanstalk:CreateApplicationVersion"
            }
        ],
        "ElasticBeanstalk.CreateConfigurationTemplate": [
            {
                "action": "elasticbeanstalk:CreateConfigurationTemplate"
            }
        ],
        "ElasticBeanstalk.CreateEnvironment": [
            {
                "action": "elasticbeanstalk:CreateEnvironment"
            }
        ],
        "ElasticBeanstalk.CreatePlatformVersion": [
            {
                "action": "elasticbeanstalk:CreatePlatformVersion"
            }
        ],
        "ElasticBeanstalk.CreateStorageLocation": [
            {
                "action": "elasticbeanstalk:CreateStorageLocation"
            }
        ],
        "ElasticBeanstalk.DeleteApplication": [
            {
                "action": "elasticbeanstalk:DeleteApplication"
            }
        ],
        "ElasticBeanstalk.DeleteApplicationVersion": [
            {
                "action": "elasticbeanstalk:DeleteApplicationVersion"
            }
        ],
        "ElasticBeanstalk.DeleteConfigurationTemplate": [
            {
                "action": "elasticbeanstalk:DeleteConfigurationTemplate"
            }
        ],
        "ElasticBeanstalk.DeleteEnvironmentConfiguration": [
            {
                "action": "elasticbeanstalk:DeleteEnvironmentConfiguration"
            }
        ],
        "ElasticBeanstalk.DeletePlatformVersion": [
            {
                "action": "elasticbeanstalk:DeletePlatformVersion"
            }
        ],
        "ElasticBeanstalk.DescribeAccountAttributes": [
            {
                "action": "elasticbeanstalk:DescribeAccountAttributes"
            }
        ],
        "ElasticBeanstalk.DescribeApplicationVersions": [
            {
                "action": "elasticbeanstalk:DescribeApplicationVersions"
            }
        ],
        "ElasticBeanstalk.DescribeApplications": [
            {
                "action": "elasticbeanstalk:DescribeApplications"
            }
        ],
        "ElasticBeanstalk.DescribeConfigurationOptions": [
            {
                "action": "elasticbeanstalk:DescribeConfigurationOptions"
            }
        ],
        "ElasticBeanstalk.DescribeConfigurationSettings": [
            {
                "action": "elasticbeanstalk:DescribeConfigurationSettings"
            }
        ],
        "ElasticBeanstalk.DescribeEnvironmentHealth": [
            {
                "action": "elasticbeanstalk:DescribeEnvironmentHealth"
            }
        ],
        "ElasticBeanstalk.DescribeEnvironmentManagedActionHistory": [
            {
                "action": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory"
            }
        ],
        "ElasticBeanstalk.DescribeEnvironmentManagedActions": [
            {
                "action": "elasticbeanstalk:DescribeEnvironmentManagedActions"
            }
        ],
        "ElasticBeanstalk.DescribeEnvironmentResources": [
            {
                "action": "elasticbeanstalk:DescribeEnvironmentResources"
            }
        ],
        "ElasticBeanstalk.DescribeEnvironments": [
            {
                "action": "elasticbeanstalk:DescribeEnvironments"
            }
        ],
        "ElasticBeanstalk.DescribeEvents": [
            {
                "action": "elasticbeanstalk:DescribeEvents"
            }
        ],
        "ElasticBeanstalk.DescribeInstancesHealth": [
            {
                "action": "elasticbeanstalk:DescribeInstancesHealth"
            }
        ],
        "ElasticBeanstalk.DescribePlatformVersion": [
            {
                "action": "elasticbeanstalk:DescribePlatformVersion"
            }
        ],
        "ElasticBeanstalk.DisassociateEnvironmentOperationsRole": [
            {
                "action": "elasticbeanstalk:DisassociateEnvironmentOperationsRole"
            }
        ],
        "ElasticBeanstalk.ListAvailableSolutionStacks": [
            {
                "action": "elasticbeanstalk:ListAvailableSolutionStacks"
            }
        ],
        "ElasticBeanstalk.ListPlatformBranches": [
            {
                "action": "elasticbeanstalk:ListPlatformBranches"
            }
        ],
        "ElasticBeanstalk.ListPlatformVersions": [
            {
                "action": "elasticbeanstalk:ListPlatformVersions"
            }
        ],
        "ElasticBeanstalk.ListTagsForResource": [
            {
                "action": "elasticbeanstalk:ListTagsForResource"
            }
        ],
        "ElasticBeanstalk.RebuildEnvironment": [
            {
                "action": "elasticbeanstalk:RebuildEnvironment"
            }
        ],
        "ElasticBeanstalk.RequestEnvironmentInfo": [
            {
                "action": "elasticbeanstalk:RequestEnvironmentInfo"
            }
        ],
        "ElasticBeanstalk.RestartAppServer": [
            {
                "action": "elasticbeanstalk:RestartAppServer"
            }
        ],
        "ElasticBeanstalk.RetrieveEnvironmentInfo": [
            {
                "action": "elasticbeanstalk:RetrieveEnvironmentInfo"
            }
        ],
        "ElasticBeanstalk.SwapEnvironmentCNAMEs": [
            {
                "action": "elasticbeanstalk:SwapEnvironmentCNAMEs"
            }
        ],
        "ElasticBeanstalk.TerminateEnvironment": [
            {
                "action": "elasticbeanstalk:TerminateEnvironment"
            }
        ],
        "ElasticBeanstalk.UpdateApplication": [
            {
                "action": "elasticbeanstalk:UpdateApplication"
            }
        ],
        "ElasticBeanstalk.UpdateApplicationResourceLifecycle": [
            {
                "action": "elasticbeanstalk:UpdateApplicationResourceLifecycle"
            }
        ],
        "ElasticBeanstalk.UpdateApplicationVersion": [
            {
                "action": "elasticbeanstalk:UpdateApplicationVersion"
            }
        ],
        "ElasticBeanstalk.UpdateConfigurationTemplate": [
            {
                "action": "elasticbeanstalk:UpdateConfigurationTemplate"
            }
        ],
        "ElasticBeanstalk.UpdateEnvironment": [
            {
                "action": "elasticbeanstalk:UpdateEnvironment"
            }
        ],
        "ElasticBeanstalk.ValidateConfigurationSettings": [
            {
                "action": "elasticbeanstalk:ValidateConfigurationSettings"
            }
        ],
        "ELB.AddTags": [
            {
                "action": "elasticloadbalancing:AddTags"
            }
        ],
        "ELB.ApplySecurityGroupsToLoadBalancer": [
            {
                "action": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
            }
        ],
        "ELB.AttachLoadBalancerToSubnets": [
            {
                "action": "elasticloadbalancing:AttachLoadBalancerToSubnets"
            }
        ],
        "ELB.ConfigureHealthCheck": [
            {
                "action": "elasticloadbalancing:ConfigureHealthCheck"
            }
        ],
        "ELB.CreateAppCookieStickinessPolicy": [
            {
                "action": "elasticloadbalancing:CreateAppCookieStickinessPolicy"
            }
        ],
        "ELB.CreateLBCookieStickinessPolicy": [
            {
                "action": "elasticloadbalancing:CreateLBCookieStickinessPolicy"
            }
        ],
        "ELB.CreateLoadBalancer": [
            {
                "action": "elasticloadbalancing:CreateLoadBalancer"
            }
        ],
        "ELB.CreateLoadBalancerListeners": [
            {
                "action": "elasticloadbalancing:CreateLoadBalancerListeners"
            }
        ],
        "ELB.CreateLoadBalancerPolicy": [
            {
                "action": "elasticloadbalancing:CreateLoadBalancerPolicy"
            }
        ],
        "ELB.DeleteLoadBalancer": [
            {
                "action": "elasticloadbalancing:DeleteLoadBalancer"
            }
        ],
        "ELB.DeleteLoadBalancerListeners": [
            {
                "action": "elasticloadbalancing:DeleteLoadBalancerListeners"
            }
        ],
        "ELB.DeleteLoadBalancerPolicy": [
            {
                "action": "elasticloadbalancing:DeleteLoadBalancerPolicy"
            }
        ],
        "ELB.DeregisterInstancesFromLoadBalancer": [
            {
                "action": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
            }
        ],
        "ELB.DescribeAccountLimits": [
            {
                "action": "elasticloadbalancing:DescribeAccountLimits"
            }
        ],
        "ELB.DescribeInstanceHealth": [
            {
                "action": "elasticloadbalancing:DescribeInstanceHealth"
            }
        ],
        "ELB.DescribeLoadBalancerAttributes": [
            {
                "action": "elasticloadbalancing:DescribeLoadBalancerAttributes"
            }
        ],
        "ELB.DescribeLoadBalancerPolicies": [
            {
                "action": "elasticloadbalancing:DescribeLoadBalancerPolicies"
            }
        ],
        "ELB.DescribeLoadBalancerPolicyTypes": [
            {
                "action": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes"
            }
        ],
        "ELB.DescribeLoadBalancers": [
            {
                "action": "elasticloadbalancing:DescribeLoadBalancers"
            }
        ],
        "ELB.DescribeTags": [
            {
                "action": "elasticloadbalancing:DescribeTags"
            }
        ],
        "ELB.DetachLoadBalancerFromSubnets": [
            {
                "action": "elasticloadbalancing:DetachLoadBalancerFromSubnets"
            }
        ],
        "ELB.DisableAvailabilityZonesForLoadBalancer": [
            {
                "action": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer"
            }
        ],
        "ELB.EnableAvailabilityZonesForLoadBalancer": [
            {
                "action": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer"
            }
        ],
        "ELB.ModifyLoadBalancerAttributes": [
            {
                "action": "elasticloadbalancing:ModifyLoadBalancerAttributes"
            }
        ],
        "ELB.RegisterInstancesWithLoadBalancer": [
            {
                "action": "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
            }
        ],
        "ELB.RemoveTags": [
            {
                "action": "elasticloadbalancing:RemoveTags"
            }
        ],
        "ELB.SetLoadBalancerListenerSSLCertificate": [
            {
                "action": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate"
            }
        ],
        "ELB.SetLoadBalancerPoliciesForBackendServer": [
            {
                "action": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
            }
        ],
        "ELB.SetLoadBalancerPoliciesOfListener": [
            {
                "action": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
            }
        ],
        "ELBv2.AddListenerCertificates": [
            {
                "action": "elasticloadbalancing:AddListenerCertificates"
            }
        ],
        "ELBv2.AddTags": [
            {
                "action": "elasticloadbalancing:AddTags"
            }
        ],
        "ELBv2.CreateListener": [
            {
                "action": "elasticloadbalancing:CreateListener"
            }
        ],
        "ELBv2.CreateLoadBalancer": [
            {
                "action": "elasticloadbalancing:CreateLoadBalancer"
            }
        ],
        "ELBv2.CreateRule": [
            {
                "action": "elasticloadbalancing:CreateRule"
            }
        ],
        "ELBv2.CreateTargetGroup": [
            {
                "action": "elasticloadbalancing:CreateTargetGroup"
            }
        ],
        "ELBv2.DeleteListener": [
            {
                "action": "elasticloadbalancing:DeleteListener"
            }
        ],
        "ELBv2.DeleteLoadBalancer": [
            {
                "action": "elasticloadbalancing:DeleteLoadBalancer"
            }
        ],
        "ELBv2.DeleteRule": [
            {
                "action": "elasticloadbalancing:DeleteRule"
            }
        ],
        "ELBv2.DeleteTargetGroup": [
            {
                "action": "elasticloadbalancing:DeleteTargetGroup"
            }
        ],
        "ELBv2.DeregisterTargets": [
            {
                "action": "elasticloadbalancing:DeregisterTargets"
            }
        ],
        "ELBv2.DescribeAccountLimits": [
            {
                "action": "elasticloadbalancing:DescribeAccountLimits"
            }
        ],
        "ELBv2.DescribeListenerCertificates": [
            {
                "action": "elasticloadbalancing:DescribeListenerCertificates"
            }
        ],
        "ELBv2.DescribeListeners": [
            {
                "action": "elasticloadbalancing:DescribeListeners"
            }
        ],
        "ELBv2.DescribeLoadBalancerAttributes": [
            {
                "action": "elasticloadbalancing:DescribeLoadBalancerAttributes"
            }
        ],
        "ELBv2.DescribeLoadBalancers": [
            {
                "action": "elasticloadbalancing:DescribeLoadBalancers"
            }
        ],
        "ELBv2.DescribeRules": [
            {
                "action": "elasticloadbalancing:DescribeRules"
            }
        ],
        "ELBv2.DescribeSSLPolicies": [
            {
                "action": "elasticloadbalancing:DescribeSSLPolicies"
            }
        ],
        "ELBv2.DescribeTags": [
            {
                "action": "elasticloadbalancing:DescribeTags"
            }
        ],
        "ELBv2.DescribeTargetGroupAttributes": [
            {
                "action": "elasticloadbalancing:DescribeTargetGroupAttributes"
            }
        ],
        "ELBv2.DescribeTargetGroups": [
            {
                "action": "elasticloadbalancing:DescribeTargetGroups"
            }
        ],
        "ELBv2.DescribeTargetHealth": [
            {
                "action": "elasticloadbalancing:DescribeTargetHealth"
            }
        ],
        "ELBv2.ModifyListener": [
            {
                "action": "elasticloadbalancing:ModifyListener"
            }
        ],
        "ELBv2.ModifyLoadBalancerAttributes": [
            {
                "action": "elasticloadbalancing:ModifyLoadBalancerAttributes"
            }
        ],
        "ELBv2.ModifyRule": [
            {
                "action": "elasticloadbalancing:ModifyRule"
            }
        ],
        "ELBv2.ModifyTargetGroup": [
            {
                "action": "elasticloadbalancing:ModifyTargetGroup"
            }
        ],
        "ELBv2.ModifyTargetGroupAttributes": [
            {
                "action": "elasticloadbalancing:ModifyTargetGroupAttributes"
            }
        ],
        "ELBv2.RegisterTargets": [
            {
                "action": "elasticloadbalancing:RegisterTargets"
            }
        ],
        "ELBv2.RemoveListenerCertificates": [
            {
                "action": "elasticloadbalancing:RemoveListenerCertificates"
            }
        ],
        "ELBv2.RemoveTags": [
            {
                "action": "elasticloadbalancing:RemoveTags"
            }
        ],
        "ELBv2.SetIpAddressType": [
            {
                "action": "elasticloadbalancing:SetIpAddressType"
            }
        ],
        "ELBv2.SetRulePriorities": [
            {
                "action": "elasticloadbalancing:SetRulePriorities"
            }
        ],
        "ELBv2.SetSecurityGroups": [
            {
                "action": "elasticloadbalancing:SetSecurityGroups"
            }
        ],
        "ELBv2.SetSubnets": [
            {
                "action": "elasticloadbalancing:SetSubnets"
            }
        ],
        "EMR.AddInstanceFleet": [
            {
                "action": "elasticmapreduce:AddInstanceFleet"
            }
        ],
        "EMR.AddInstanceGroups": [
            {
                "action": "elasticmapreduce:AddInstanceGroups"
            }
        ],
        "EMR.AddJobFlowSteps": [
            {
                "action": "elasticmapreduce:AddJobFlowSteps"
            }
        ],
        "EMR.AddTags": [
            {
                "action": "elasticmapreduce:AddTags"
            }
        ],
        "EMR.CancelSteps": [
            {
                "action": "elasticmapreduce:CancelSteps"
            }
        ],
        "EMR.CreateSecurityConfiguration": [
            {
                "action": "elasticmapreduce:CreateSecurityConfiguration"
            }
        ],
        "EMR.DeleteSecurityConfiguration": [
            {
                "action": "elasticmapreduce:DeleteSecurityConfiguration"
            }
        ],
        "EMR.DescribeCluster": [
            {
                "action": "elasticmapreduce:DescribeCluster"
            }
        ],
        "EMR.DescribeJobFlows": [
            {
                "action": "elasticmapreduce:DescribeJobFlows"
            }
        ],
        "EMR.DescribeSecurityConfiguration": [
            {
                "action": "elasticmapreduce:DescribeSecurityConfiguration"
            }
        ],
        "EMR.DescribeStep": [
            {
                "action": "elasticmapreduce:DescribeStep"
            }
        ],
        "EMR.GetBlockPublicAccessConfiguration": [
            {
                "action": "elasticmapreduce:GetBlockPublicAccessConfiguration"
            }
        ],
        "EMR.GetManagedScalingPolicy": [
            {
                "action": "elasticmapreduce:GetManagedScalingPolicy"
            }
        ],
        "EMR.ListBootstrapActions": [
            {
                "action": "elasticmapreduce:ListBootstrapActions"
            }
        ],
        "EMR.ListClusters": [
            {
                "action": "elasticmapreduce:ListClusters"
            }
        ],
        "EMR.ListInstanceFleets": [
            {
                "action": "elasticmapreduce:ListInstanceFleets"
            }
        ],
        "EMR.ListInstanceGroups": [
            {
                "action": "elasticmapreduce:ListInstanceGroups"
            }
        ],
        "EMR.ListInstances": [
            {
                "action": "elasticmapreduce:ListInstances"
            }
        ],
        "EMR.ListSecurityConfigurations": [
            {
                "action": "elasticmapreduce:ListSecurityConfigurations"
            }
        ],
        "EMR.ListSteps": [
            {
                "action": "elasticmapreduce:ListSteps"
            }
        ],
        "EMR.ModifyCluster": [
            {
                "action": "elasticmapreduce:ModifyCluster"
            }
        ],
        "EMR.ModifyInstanceFleet": [
            {
                "action": "elasticmapreduce:ModifyInstanceFleet"
            }
        ],
        "EMR.ModifyInstanceGroups": [
            {
                "action": "elasticmapreduce:ModifyInstanceGroups"
            }
        ],
        "EMR.PutAutoScalingPolicy": [
            {
                "action": "elasticmapreduce:PutAutoScalingPolicy"
            }
        ],
        "EMR.PutBlockPublicAccessConfiguration": [
            {
                "action": "elasticmapreduce:PutBlockPublicAccessConfiguration"
            }
        ],
        "EMR.PutManagedScalingPolicy": [
            {
                "action": "elasticmapreduce:PutManagedScalingPolicy"
            }
        ],
        "EMR.RemoveAutoScalingPolicy": [
            {
                "action": "elasticmapreduce:RemoveAutoScalingPolicy"
            }
        ],
        "EMR.RemoveManagedScalingPolicy": [
            {
                "action": "elasticmapreduce:RemoveManagedScalingPolicy"
            }
        ],
        "EMR.RemoveTags": [
            {
                "action": "elasticmapreduce:RemoveTags"
            }
        ],
        "EMR.RunJobFlow": [
            {
                "action": "elasticmapreduce:RunJobFlow"
            }
        ],
        "EMR.SetTerminationProtection": [
            {
                "action": "elasticmapreduce:SetTerminationProtection"
            }
        ],
        "EMR.TerminateJobFlows": [
            {
                "action": "elasticmapreduce:TerminateJobFlows"
            }
        ],
        "ES.AcceptInboundCrossClusterSearchConnection": [
            {
                "action": "es:AcceptInboundCrossClusterSearchConnection"
            }
        ],
        "ES.AddTags": [
            {
                "action": "es:AddTags"
            }
        ],
        "ES.CreateElasticsearchDomain": [
            {
                "action": "es:CreateElasticsearchDomain"
            }
        ],
        "ES.CreateOutboundCrossClusterSearchConnection": [
            {
                "action": "es:CreateOutboundCrossClusterSearchConnection"
            }
        ],
        "ES.DeleteElasticsearchDomain": [
            {
                "action": "es:DeleteElasticsearchDomain"
            }
        ],
        "ES.DeleteElasticsearchServiceRole": [
            {
                "action": "es:DeleteElasticsearchServiceRole"
            }
        ],
        "ES.DeleteInboundCrossClusterSearchConnection": [
            {
                "action": "es:DeleteInboundCrossClusterSearchConnection"
            }
        ],
        "ES.DeleteOutboundCrossClusterSearchConnection": [
            {
                "action": "es:DeleteOutboundCrossClusterSearchConnection"
            }
        ],
        "ES.DescribeElasticsearchDomain": [
            {
                "action": "es:DescribeElasticsearchDomain"
            }
        ],
        "ES.DescribeElasticsearchDomainConfig": [
            {
                "action": "es:DescribeElasticsearchDomainConfig"
            }
        ],
        "ES.DescribeElasticsearchDomains": [
            {
                "action": "es:DescribeElasticsearchDomains"
            }
        ],
        "ES.DescribeElasticsearchInstanceTypeLimits": [
            {
                "action": "es:DescribeElasticsearchInstanceTypeLimits"
            }
        ],
        "ES.DescribeInboundCrossClusterSearchConnections": [
            {
                "action": "es:DescribeInboundCrossClusterSearchConnections"
            }
        ],
        "ES.DescribeOutboundCrossClusterSearchConnections": [
            {
                "action": "es:DescribeOutboundCrossClusterSearchConnections"
            }
        ],
        "ES.DescribeReservedElasticsearchInstanceOfferings": [
            {
                "action": "es:DescribeReservedElasticsearchInstanceOfferings"
            }
        ],
        "ES.DescribeReservedElasticsearchInstances": [
            {
                "action": "es:DescribeReservedElasticsearchInstances"
            }
        ],
        "ES.GetCompatibleElasticsearchVersions": [
            {
                "action": "es:GetCompatibleElasticsearchVersions"
            }
        ],
        "ES.GetUpgradeHistory": [
            {
                "action": "es:GetUpgradeHistory"
            }
        ],
        "ES.GetUpgradeStatus": [
            {
                "action": "es:GetUpgradeStatus"
            }
        ],
        "ES.ListDomainNames": [
            {
                "action": "es:ListDomainNames"
            }
        ],
        "ES.ListElasticsearchInstanceTypes": [
            {
                "action": "es:ListElasticsearchInstanceTypes"
            }
        ],
        "ES.ListElasticsearchVersions": [
            {
                "action": "es:ListElasticsearchVersions"
            }
        ],
        "ES.ListTags": [
            {
                "action": "es:ListTags"
            }
        ],
        "ES.PurchaseReservedElasticsearchInstanceOffering": [
            {
                "action": "es:PurchaseReservedElasticsearchInstanceOffering"
            }
        ],
        "ES.RejectInboundCrossClusterSearchConnection": [
            {
                "action": "es:RejectInboundCrossClusterSearchConnection"
            }
        ],
        "ES.RemoveTags": [
            {
                "action": "es:RemoveTags"
            }
        ],
        "ES.UpdateElasticsearchDomainConfig": [
            {
                "action": "es:UpdateElasticsearchDomainConfig"
            }
        ],
        "ES.UpgradeElasticsearchDomain": [
            {
                "action": "es:UpgradeElasticsearchDomain"
            }
        ],
        "ElasticTranscoder.CancelJob": [
            {
                "action": "elastictranscoder:CancelJob"
            }
        ],
        "ElasticTranscoder.CreateJob": [
            {
                "action": "elastictranscoder:CreateJob"
            }
        ],
        "ElasticTranscoder.CreatePipeline": [
            {
                "action": "elastictranscoder:CreatePipeline"
            }
        ],
        "ElasticTranscoder.CreatePreset": [
            {
                "action": "elastictranscoder:CreatePreset"
            }
        ],
        "ElasticTranscoder.DeletePipeline": [
            {
                "action": "elastictranscoder:DeletePipeline"
            }
        ],
        "ElasticTranscoder.DeletePreset": [
            {
                "action": "elastictranscoder:DeletePreset"
            }
        ],
        "ElasticTranscoder.ListJobsByPipeline": [
            {
                "action": "elastictranscoder:ListJobsByPipeline"
            }
        ],
        "ElasticTranscoder.ListJobsByStatus": [
            {
                "action": "elastictranscoder:ListJobsByStatus"
            }
        ],
        "ElasticTranscoder.ListPipelines": [
            {
                "action": "elastictranscoder:ListPipelines"
            }
        ],
        "ElasticTranscoder.ListPresets": [
            {
                "action": "elastictranscoder:ListPresets"
            }
        ],
        "ElasticTranscoder.ReadJob": [
            {
                "action": "elastictranscoder:ReadJob"
            }
        ],
        "ElasticTranscoder.ReadPipeline": [
            {
                "action": "elastictranscoder:ReadPipeline"
            }
        ],
        "ElasticTranscoder.ReadPreset": [
            {
                "action": "elastictranscoder:ReadPreset"
            }
        ],
        "ElasticTranscoder.TestRole": [
            {
                "action": "elastictranscoder:TestRole"
            }
        ],
        "ElasticTranscoder.UpdatePipeline": [
            {
                "action": "elastictranscoder:UpdatePipeline"
            }
        ],
        "ElasticTranscoder.UpdatePipelineNotifications": [
            {
                "action": "elastictranscoder:UpdatePipelineNotifications"
            }
        ],
        "ElasticTranscoder.UpdatePipelineStatus": [
            {
                "action": "elastictranscoder:UpdatePipelineStatus"
            }
        ],
        "Firehose.CreateDeliveryStream": [
            {
                "action": "firehose:CreateDeliveryStream"
            }
        ],
        "Firehose.DeleteDeliveryStream": [
            {
                "action": "firehose:DeleteDeliveryStream"
            }
        ],
        "Firehose.DescribeDeliveryStream": [
            {
                "action": "firehose:DescribeDeliveryStream"
            }
        ],
        "Firehose.ListDeliveryStreams": [
            {
                "action": "firehose:ListDeliveryStreams"
            }
        ],
        "Firehose.ListTagsForDeliveryStream": [
            {
                "action": "firehose:ListTagsForDeliveryStream"
            }
        ],
        "Firehose.PutRecord": [
            {
                "action": "firehose:PutRecord"
            }
        ],
        "Firehose.PutRecordBatch": [
            {
                "action": "firehose:PutRecordBatch"
            }
        ],
        "Firehose.StartDeliveryStreamEncryption": [
            {
                "action": "firehose:StartDeliveryStreamEncryption"
            }
        ],
        "Firehose.StopDeliveryStreamEncryption": [
            {
                "action": "firehose:StopDeliveryStreamEncryption"
            }
        ],
        "Firehose.TagDeliveryStream": [
            {
                "action": "firehose:TagDeliveryStream"
            }
        ],
        "Firehose.UntagDeliveryStream": [
            {
                "action": "firehose:UntagDeliveryStream"
            }
        ],
        "Firehose.UpdateDestination": [
            {
                "action": "firehose:UpdateDestination"
            }
        ],
        "GameLift.AcceptMatch": [
            {
                "action": "gamelift:AcceptMatch"
            }
        ],
        "GameLift.ClaimGameServer": [
            {
                "action": "gamelift:ClaimGameServer"
            }
        ],
        "GameLift.CreateAlias": [
            {
                "action": "gamelift:CreateAlias"
            }
        ],
        "GameLift.CreateBuild": [
            {
                "action": "gamelift:CreateBuild"
            }
        ],
        "GameLift.CreateFleet": [
            {
                "action": "gamelift:CreateFleet"
            }
        ],
        "GameLift.CreateGameServerGroup": [
            {
                "action": "gamelift:CreateGameServerGroup"
            }
        ],
        "GameLift.CreateGameSession": [
            {
                "action": "gamelift:CreateGameSession"
            }
        ],
        "GameLift.CreateGameSessionQueue": [
            {
                "action": "gamelift:CreateGameSessionQueue"
            }
        ],
        "GameLift.CreateMatchmakingConfiguration": [
            {
                "action": "gamelift:CreateMatchmakingConfiguration"
            }
        ],
        "GameLift.CreateMatchmakingRuleSet": [
            {
                "action": "gamelift:CreateMatchmakingRuleSet"
            }
        ],
        "GameLift.CreatePlayerSession": [
            {
                "action": "gamelift:CreatePlayerSession"
            }
        ],
        "GameLift.CreatePlayerSessions": [
            {
                "action": "gamelift:CreatePlayerSessions"
            }
        ],
        "GameLift.CreateScript": [
            {
                "action": "gamelift:CreateScript"
            }
        ],
        "GameLift.CreateVpcPeeringAuthorization": [
            {
                "action": "gamelift:CreateVpcPeeringAuthorization"
            }
        ],
        "GameLift.CreateVpcPeeringConnection": [
            {
                "action": "gamelift:CreateVpcPeeringConnection"
            }
        ],
        "GameLift.DeleteAlias": [
            {
                "action": "gamelift:DeleteAlias"
            }
        ],
        "GameLift.DeleteBuild": [
            {
                "action": "gamelift:DeleteBuild"
            }
        ],
        "GameLift.DeleteFleet": [
            {
                "action": "gamelift:DeleteFleet"
            }
        ],
        "GameLift.DeleteGameServerGroup": [
            {
                "action": "gamelift:DeleteGameServerGroup"
            }
        ],
        "GameLift.DeleteGameSessionQueue": [
            {
                "action": "gamelift:DeleteGameSessionQueue"
            }
        ],
        "GameLift.DeleteMatchmakingConfiguration": [
            {
                "action": "gamelift:DeleteMatchmakingConfiguration"
            }
        ],
        "GameLift.DeleteMatchmakingRuleSet": [
            {
                "action": "gamelift:DeleteMatchmakingRuleSet"
            }
        ],
        "GameLift.DeleteScalingPolicy": [
            {
                "action": "gamelift:DeleteScalingPolicy"
            }
        ],
        "GameLift.DeleteScript": [
            {
                "action": "gamelift:DeleteScript"
            }
        ],
        "GameLift.DeleteVpcPeeringAuthorization": [
            {
                "action": "gamelift:DeleteVpcPeeringAuthorization"
            }
        ],
        "GameLift.DeleteVpcPeeringConnection": [
            {
                "action": "gamelift:DeleteVpcPeeringConnection"
            }
        ],
        "GameLift.DeregisterGameServer": [
            {
                "action": "gamelift:DeregisterGameServer"
            }
        ],
        "GameLift.DescribeAlias": [
            {
                "action": "gamelift:DescribeAlias"
            }
        ],
        "GameLift.DescribeBuild": [
            {
                "action": "gamelift:DescribeBuild"
            }
        ],
        "GameLift.DescribeEC2InstanceLimits": [
            {
                "action": "gamelift:DescribeEC2InstanceLimits"
            }
        ],
        "GameLift.DescribeFleetAttributes": [
            {
                "action": "gamelift:DescribeFleetAttributes"
            }
        ],
        "GameLift.DescribeFleetCapacity": [
            {
                "action": "gamelift:DescribeFleetCapacity"
            }
        ],
        "GameLift.DescribeFleetEvents": [
            {
                "action": "gamelift:DescribeFleetEvents"
            }
        ],
        "GameLift.DescribeFleetPortSettings": [
            {
                "action": "gamelift:DescribeFleetPortSettings"
            }
        ],
        "GameLift.DescribeFleetUtilization": [
            {
                "action": "gamelift:DescribeFleetUtilization"
            }
        ],
        "GameLift.DescribeGameServer": [
            {
                "action": "gamelift:DescribeGameServer"
            }
        ],
        "GameLift.DescribeGameServerGroup": [
            {
                "action": "gamelift:DescribeGameServerGroup"
            }
        ],
        "GameLift.DescribeGameServerInstances": [
            {
                "action": "gamelift:DescribeGameServerInstances"
            }
        ],
        "GameLift.DescribeGameSessionDetails": [
            {
                "action": "gamelift:DescribeGameSessionDetails"
            }
        ],
        "GameLift.DescribeGameSessionPlacement": [
            {
                "action": "gamelift:DescribeGameSessionPlacement"
            }
        ],
        "GameLift.DescribeGameSessionQueues": [
            {
                "action": "gamelift:DescribeGameSessionQueues"
            }
        ],
        "GameLift.DescribeGameSessions": [
            {
                "action": "gamelift:DescribeGameSessions"
            }
        ],
        "GameLift.DescribeInstances": [
            {
                "action": "gamelift:DescribeInstances"
            }
        ],
        "GameLift.DescribeMatchmaking": [
            {
                "action": "gamelift:DescribeMatchmaking"
            }
        ],
        "GameLift.DescribeMatchmakingConfigurations": [
            {
                "action": "gamelift:DescribeMatchmakingConfigurations"
            }
        ],
        "GameLift.DescribeMatchmakingRuleSets": [
            {
                "action": "gamelift:DescribeMatchmakingRuleSets"
            }
        ],
        "GameLift.DescribePlayerSessions": [
            {
                "action": "gamelift:DescribePlayerSessions"
            }
        ],
        "GameLift.DescribeRuntimeConfiguration": [
            {
                "action": "gamelift:DescribeRuntimeConfiguration"
            }
        ],
        "GameLift.DescribeScalingPolicies": [
            {
                "action": "gamelift:DescribeScalingPolicies"
            }
        ],
        "GameLift.DescribeScript": [
            {
                "action": "gamelift:DescribeScript"
            }
        ],
        "GameLift.DescribeVpcPeeringAuthorizations": [
            {
                "action": "gamelift:DescribeVpcPeeringAuthorizations"
            }
        ],
        "GameLift.DescribeVpcPeeringConnections": [
            {
                "action": "gamelift:DescribeVpcPeeringConnections"
            }
        ],
        "GameLift.GetGameSessionLogUrl": [
            {
                "action": "gamelift:GetGameSessionLogUrl"
            }
        ],
        "GameLift.GetInstanceAccess": [
            {
                "action": "gamelift:GetInstanceAccess"
            }
        ],
        "GameLift.ListAliases": [
            {
                "action": "gamelift:ListAliases"
            }
        ],
        "GameLift.ListBuilds": [
            {
                "action": "gamelift:ListBuilds"
            }
        ],
        "GameLift.ListFleets": [
            {
                "action": "gamelift:ListFleets"
            }
        ],
        "GameLift.ListGameServerGroups": [
            {
                "action": "gamelift:ListGameServerGroups"
            }
        ],
        "GameLift.ListGameServers": [
            {
                "action": "gamelift:ListGameServers"
            }
        ],
        "GameLift.ListScripts": [
            {
                "action": "gamelift:ListScripts"
            }
        ],
        "GameLift.ListTagsForResource": [
            {
                "action": "gamelift:ListTagsForResource"
            }
        ],
        "GameLift.PutScalingPolicy": [
            {
                "action": "gamelift:PutScalingPolicy"
            }
        ],
        "GameLift.RegisterGameServer": [
            {
                "action": "gamelift:RegisterGameServer"
            }
        ],
        "GameLift.RequestUploadCredentials": [
            {
                "action": "gamelift:RequestUploadCredentials"
            }
        ],
        "GameLift.ResolveAlias": [
            {
                "action": "gamelift:ResolveAlias"
            }
        ],
        "GameLift.ResumeGameServerGroup": [
            {
                "action": "gamelift:ResumeGameServerGroup"
            }
        ],
        "GameLift.SearchGameSessions": [
            {
                "action": "gamelift:SearchGameSessions"
            }
        ],
        "GameLift.StartFleetActions": [
            {
                "action": "gamelift:StartFleetActions"
            }
        ],
        "GameLift.StartGameSessionPlacement": [
            {
                "action": "gamelift:StartGameSessionPlacement"
            }
        ],
        "GameLift.StartMatchBackfill": [
            {
                "action": "gamelift:StartMatchBackfill"
            }
        ],
        "GameLift.StartMatchmaking": [
            {
                "action": "gamelift:StartMatchmaking"
            }
        ],
        "GameLift.StopFleetActions": [
            {
                "action": "gamelift:StopFleetActions"
            }
        ],
        "GameLift.StopGameSessionPlacement": [
            {
                "action": "gamelift:StopGameSessionPlacement"
            }
        ],
        "GameLift.StopMatchmaking": [
            {
                "action": "gamelift:StopMatchmaking"
            }
        ],
        "GameLift.SuspendGameServerGroup": [
            {
                "action": "gamelift:SuspendGameServerGroup"
            }
        ],
        "GameLift.TagResource": [
            {
                "action": "gamelift:TagResource"
            }
        ],
        "GameLift.UntagResource": [
            {
                "action": "gamelift:UntagResource"
            }
        ],
        "GameLift.UpdateAlias": [
            {
                "action": "gamelift:UpdateAlias"
            }
        ],
        "GameLift.UpdateBuild": [
            {
                "action": "gamelift:UpdateBuild"
            }
        ],
        "GameLift.UpdateFleetAttributes": [
            {
                "action": "gamelift:UpdateFleetAttributes"
            }
        ],
        "GameLift.UpdateFleetCapacity": [
            {
                "action": "gamelift:UpdateFleetCapacity"
            }
        ],
        "GameLift.UpdateFleetPortSettings": [
            {
                "action": "gamelift:UpdateFleetPortSettings"
            }
        ],
        "GameLift.UpdateGameServer": [
            {
                "action": "gamelift:UpdateGameServer"
            }
        ],
        "GameLift.UpdateGameServerGroup": [
            {
                "action": "gamelift:UpdateGameServerGroup"
            }
        ],
        "GameLift.UpdateGameSession": [
            {
                "action": "gamelift:UpdateGameSession"
            }
        ],
        "GameLift.UpdateGameSessionQueue": [
            {
                "action": "gamelift:UpdateGameSessionQueue"
            }
        ],
        "GameLift.UpdateMatchmakingConfiguration": [
            {
                "action": "gamelift:UpdateMatchmakingConfiguration"
            }
        ],
        "GameLift.UpdateRuntimeConfiguration": [
            {
                "action": "gamelift:UpdateRuntimeConfiguration"
            }
        ],
        "GameLift.UpdateScript": [
            {
                "action": "gamelift:UpdateScript"
            }
        ],
        "GameLift.ValidateMatchmakingRuleSet": [
            {
                "action": "gamelift:ValidateMatchmakingRuleSet"
            }
        ],
        "Glacier.AbortMultipartUpload": [
            {
                "action": "glacier:AbortMultipartUpload"
            }
        ],
        "Glacier.AbortVaultLock": [
            {
                "action": "glacier:AbortVaultLock"
            }
        ],
        "Glacier.AddTagsToVault": [
            {
                "action": "glacier:AddTagsToVault"
            }
        ],
        "Glacier.CompleteMultipartUpload": [
            {
                "action": "glacier:CompleteMultipartUpload"
            }
        ],
        "Glacier.CompleteVaultLock": [
            {
                "action": "glacier:CompleteVaultLock"
            }
        ],
        "Glacier.CreateVault": [
            {
                "action": "glacier:CreateVault"
            }
        ],
        "Glacier.DeleteArchive": [
            {
                "action": "glacier:DeleteArchive"
            }
        ],
        "Glacier.DeleteVault": [
            {
                "action": "glacier:DeleteVault"
            }
        ],
        "Glacier.DeleteVaultAccessPolicy": [
            {
                "action": "glacier:DeleteVaultAccessPolicy"
            }
        ],
        "Glacier.DeleteVaultNotifications": [
            {
                "action": "glacier:DeleteVaultNotifications"
            }
        ],
        "Glacier.DescribeJob": [
            {
                "action": "glacier:DescribeJob"
            }
        ],
        "Glacier.DescribeVault": [
            {
                "action": "glacier:DescribeVault"
            }
        ],
        "Glacier.GetDataRetrievalPolicy": [
            {
                "action": "glacier:GetDataRetrievalPolicy"
            }
        ],
        "Glacier.GetJobOutput": [
            {
                "action": "glacier:GetJobOutput"
            }
        ],
        "Glacier.GetVaultAccessPolicy": [
            {
                "action": "glacier:GetVaultAccessPolicy"
            }
        ],
        "Glacier.GetVaultLock": [
            {
                "action": "glacier:GetVaultLock"
            }
        ],
        "Glacier.GetVaultNotifications": [
            {
                "action": "glacier:GetVaultNotifications"
            }
        ],
        "Glacier.InitiateJob": [
            {
                "action": "glacier:InitiateJob"
            }
        ],
        "Glacier.InitiateMultipartUpload": [
            {
                "action": "glacier:InitiateMultipartUpload"
            }
        ],
        "Glacier.InitiateVaultLock": [
            {
                "action": "glacier:InitiateVaultLock"
            }
        ],
        "Glacier.ListJobs": [
            {
                "action": "glacier:ListJobs"
            }
        ],
        "Glacier.ListMultipartUploads": [
            {
                "action": "glacier:ListMultipartUploads"
            }
        ],
        "Glacier.ListParts": [
            {
                "action": "glacier:ListParts"
            }
        ],
        "Glacier.ListProvisionedCapacity": [
            {
                "action": "glacier:ListProvisionedCapacity"
            }
        ],
        "Glacier.ListTagsForVault": [
            {
                "action": "glacier:ListTagsForVault"
            }
        ],
        "Glacier.ListVaults": [
            {
                "action": "glacier:ListVaults"
            }
        ],
        "Glacier.PurchaseProvisionedCapacity": [
            {
                "action": "glacier:PurchaseProvisionedCapacity"
            }
        ],
        "Glacier.RemoveTagsFromVault": [
            {
                "action": "glacier:RemoveTagsFromVault"
            }
        ],
        "Glacier.SetDataRetrievalPolicy": [
            {
                "action": "glacier:SetDataRetrievalPolicy"
            }
        ],
        "Glacier.SetVaultAccessPolicy": [
            {
                "action": "glacier:SetVaultAccessPolicy"
            }
        ],
        "Glacier.SetVaultNotifications": [
            {
                "action": "glacier:SetVaultNotifications"
            }
        ],
        "Glacier.UploadArchive": [
            {
                "action": "glacier:UploadArchive"
            }
        ],
        "Glacier.UploadMultipartPart": [
            {
                "action": "glacier:UploadMultipartPart"
            }
        ],
        "Health.DescribeAffectedAccountsForOrganization": [
            {
                "action": "health:DescribeAffectedAccountsForOrganization"
            }
        ],
        "Health.DescribeAffectedEntities": [
            {
                "action": "health:DescribeAffectedEntities"
            }
        ],
        "Health.DescribeAffectedEntitiesForOrganization": [
            {
                "action": "health:DescribeAffectedEntitiesForOrganization"
            }
        ],
        "Health.DescribeEntityAggregates": [
            {
                "action": "health:DescribeEntityAggregates"
            }
        ],
        "Health.DescribeEventAggregates": [
            {
                "action": "health:DescribeEventAggregates"
            }
        ],
        "Health.DescribeEventDetails": [
            {
                "action": "health:DescribeEventDetails"
            }
        ],
        "Health.DescribeEventDetailsForOrganization": [
            {
                "action": "health:DescribeEventDetailsForOrganization"
            }
        ],
        "Health.DescribeEventTypes": [
            {
                "action": "health:DescribeEventTypes"
            }
        ],
        "Health.DescribeEvents": [
            {
                "action": "health:DescribeEvents"
            }
        ],
        "Health.DescribeEventsForOrganization": [
            {
                "action": "health:DescribeEventsForOrganization"
            }
        ],
        "Health.DescribeHealthServiceStatusForOrganization": [
            {
                "action": "health:DescribeHealthServiceStatusForOrganization"
            }
        ],
        "Health.DisableHealthServiceAccessForOrganization": [
            {
                "action": "health:DisableHealthServiceAccessForOrganization"
            }
        ],
        "Health.EnableHealthServiceAccessForOrganization": [
            {
                "action": "health:EnableHealthServiceAccessForOrganization"
            }
        ],
        "IAM.AddClientIDToOpenIDConnectProvider": [
            {
                "action": "iam:AddClientIDToOpenIDConnectProvider"
            }
        ],
        "IAM.AddRoleToInstanceProfile": [
            {
                "action": "iam:AddRoleToInstanceProfile"
            }
        ],
        "IAM.AddUserToGroup": [
            {
                "action": "iam:AddUserToGroup"
            }
        ],
        "IAM.AttachGroupPolicy": [
            {
                "action": "iam:AttachGroupPolicy"
            }
        ],
        "IAM.AttachRolePolicy": [
            {
                "action": "iam:AttachRolePolicy"
            }
        ],
        "IAM.AttachUserPolicy": [
            {
                "action": "iam:AttachUserPolicy"
            }
        ],
        "IAM.ChangePassword": [
            {
                "action": "iam:ChangePassword"
            }
        ],
        "IAM.CreateAccessKey": [
            {
                "action": "iam:CreateAccessKey"
            }
        ],
        "IAM.CreateAccountAlias": [
            {
                "action": "iam:CreateAccountAlias"
            }
        ],
        "IAM.CreateGroup": [
            {
                "action": "iam:CreateGroup"
            }
        ],
        "IAM.CreateInstanceProfile": [
            {
                "action": "iam:CreateInstanceProfile"
            }
        ],
        "IAM.CreateLoginProfile": [
            {
                "action": "iam:CreateLoginProfile"
            }
        ],
        "IAM.CreateOpenIDConnectProvider": [
            {
                "action": "iam:CreateOpenIDConnectProvider"
            }
        ],
        "IAM.CreatePolicy": [
            {
                "action": "iam:CreatePolicy"
            }
        ],
        "IAM.CreatePolicyVersion": [
            {
                "action": "iam:CreatePolicyVersion"
            }
        ],
        "IAM.CreateRole": [
            {
                "action": "iam:CreateRole"
            }
        ],
        "IAM.CreateSAMLProvider": [
            {
                "action": "iam:CreateSAMLProvider"
            }
        ],
        "IAM.CreateServiceLinkedRole": [
            {
                "action": "iam:CreateServiceLinkedRole"
            }
        ],
        "IAM.CreateServiceSpecificCredential": [
            {
                "action": "iam:CreateServiceSpecificCredential"
            }
        ],
        "IAM.CreateUser": [
            {
                "action": "iam:CreateUser"
            }
        ],
        "IAM.CreateVirtualMFADevice": [
            {
                "action": "iam:CreateVirtualMFADevice"
            }
        ],
        "IAM.DeactivateMFADevice": [
            {
                "action": "iam:DeactivateMFADevice"
            }
        ],
        "IAM.DeleteAccessKey": [
            {
                "action": "iam:DeleteAccessKey"
            }
        ],
        "IAM.DeleteAccountAlias": [
            {
                "action": "iam:DeleteAccountAlias"
            }
        ],
        "IAM.DeleteAccountPasswordPolicy": [
            {
                "action": "iam:DeleteAccountPasswordPolicy"
            }
        ],
        "IAM.DeleteGroup": [
            {
                "action": "iam:DeleteGroup"
            }
        ],
        "IAM.DeleteGroupPolicy": [
            {
                "action": "iam:DeleteGroupPolicy"
            }
        ],
        "IAM.DeleteInstanceProfile": [
            {
                "action": "iam:DeleteInstanceProfile"
            }
        ],
        "IAM.DeleteLoginProfile": [
            {
                "action": "iam:DeleteLoginProfile"
            }
        ],
        "IAM.DeleteOpenIDConnectProvider": [
            {
                "action": "iam:DeleteOpenIDConnectProvider"
            }
        ],
        "IAM.DeletePolicy": [
            {
                "action": "iam:DeletePolicy"
            }
        ],
        "IAM.DeletePolicyVersion": [
            {
                "action": "iam:DeletePolicyVersion"
            }
        ],
        "IAM.DeleteRole": [
            {
                "action": "iam:DeleteRole"
            }
        ],
        "IAM.DeleteRolePermissionsBoundary": [
            {
                "action": "iam:DeleteRolePermissionsBoundary"
            }
        ],
        "IAM.DeleteRolePolicy": [
            {
                "action": "iam:DeleteRolePolicy"
            }
        ],
        "IAM.DeleteSAMLProvider": [
            {
                "action": "iam:DeleteSAMLProvider"
            }
        ],
        "IAM.DeleteSSHPublicKey": [
            {
                "action": "iam:DeleteSSHPublicKey"
            }
        ],
        "IAM.DeleteServerCertificate": [
            {
                "action": "iam:DeleteServerCertificate"
            }
        ],
        "IAM.DeleteServiceLinkedRole": [
            {
                "action": "iam:DeleteServiceLinkedRole"
            }
        ],
        "IAM.DeleteServiceSpecificCredential": [
            {
                "action": "iam:DeleteServiceSpecificCredential"
            }
        ],
        "IAM.DeleteSigningCertificate": [
            {
                "action": "iam:DeleteSigningCertificate"
            }
        ],
        "IAM.DeleteUser": [
            {
                "action": "iam:DeleteUser"
            }
        ],
        "IAM.DeleteUserPermissionsBoundary": [
            {
                "action": "iam:DeleteUserPermissionsBoundary"
            }
        ],
        "IAM.DeleteUserPolicy": [
            {
                "action": "iam:DeleteUserPolicy"
            }
        ],
        "IAM.DeleteVirtualMFADevice": [
            {
                "action": "iam:DeleteVirtualMFADevice"
            }
        ],
        "IAM.DetachGroupPolicy": [
            {
                "action": "iam:DetachGroupPolicy"
            }
        ],
        "IAM.DetachRolePolicy": [
            {
                "action": "iam:DetachRolePolicy"
            }
        ],
        "IAM.DetachUserPolicy": [
            {
                "action": "iam:DetachUserPolicy"
            }
        ],
        "IAM.EnableMFADevice": [
            {
                "action": "iam:EnableMFADevice"
            }
        ],
        "IAM.GenerateCredentialReport": [
            {
                "action": "iam:GenerateCredentialReport"
            }
        ],
        "IAM.GenerateOrganizationsAccessReport": [
            {
                "action": "iam:GenerateOrganizationsAccessReport"
            }
        ],
        "IAM.GenerateServiceLastAccessedDetails": [
            {
                "action": "iam:GenerateServiceLastAccessedDetails"
            }
        ],
        "IAM.GetAccessKeyLastUsed": [
            {
                "action": "iam:GetAccessKeyLastUsed"
            }
        ],
        "IAM.GetAccountAuthorizationDetails": [
            {
                "action": "iam:GetAccountAuthorizationDetails"
            }
        ],
        "IAM.GetAccountPasswordPolicy": [
            {
                "action": "iam:GetAccountPasswordPolicy"
            }
        ],
        "IAM.GetAccountSummary": [
            {
                "action": "iam:GetAccountSummary"
            }
        ],
        "IAM.GetContextKeysForCustomPolicy": [
            {
                "action": "iam:GetContextKeysForCustomPolicy"
            }
        ],
        "IAM.GetContextKeysForPrincipalPolicy": [
            {
                "action": "iam:GetContextKeysForPrincipalPolicy"
            }
        ],
        "IAM.GetCredentialReport": [
            {
                "action": "iam:GetCredentialReport"
            }
        ],
        "IAM.GetGroup": [
            {
                "action": "iam:GetGroup"
            }
        ],
        "IAM.GetGroupPolicy": [
            {
                "action": "iam:GetGroupPolicy"
            }
        ],
        "IAM.GetInstanceProfile": [
            {
                "action": "iam:GetInstanceProfile"
            }
        ],
        "IAM.GetLoginProfile": [
            {
                "action": "iam:GetLoginProfile"
            }
        ],
        "IAM.GetOpenIDConnectProvider": [
            {
                "action": "iam:GetOpenIDConnectProvider"
            }
        ],
        "IAM.GetOrganizationsAccessReport": [
            {
                "action": "iam:GetOrganizationsAccessReport"
            }
        ],
        "IAM.GetPolicy": [
            {
                "action": "iam:GetPolicy"
            }
        ],
        "IAM.GetPolicyVersion": [
            {
                "action": "iam:GetPolicyVersion"
            }
        ],
        "IAM.GetRole": [
            {
                "action": "iam:GetRole"
            }
        ],
        "IAM.GetRolePolicy": [
            {
                "action": "iam:GetRolePolicy"
            }
        ],
        "IAM.GetSAMLProvider": [
            {
                "action": "iam:GetSAMLProvider"
            }
        ],
        "IAM.GetSSHPublicKey": [
            {
                "action": "iam:GetSSHPublicKey"
            }
        ],
        "IAM.GetServerCertificate": [
            {
                "action": "iam:GetServerCertificate"
            }
        ],
        "IAM.GetServiceLastAccessedDetails": [
            {
                "action": "iam:GetServiceLastAccessedDetails"
            }
        ],
        "IAM.GetServiceLastAccessedDetailsWithEntities": [
            {
                "action": "iam:GetServiceLastAccessedDetailsWithEntities"
            }
        ],
        "IAM.GetServiceLinkedRoleDeletionStatus": [
            {
                "action": "iam:GetServiceLinkedRoleDeletionStatus"
            }
        ],
        "IAM.GetUser": [
            {
                "action": "iam:GetUser"
            }
        ],
        "IAM.GetUserPolicy": [
            {
                "action": "iam:GetUserPolicy"
            }
        ],
        "IAM.ListAccessKeys": [
            {
                "action": "iam:ListAccessKeys"
            }
        ],
        "IAM.ListAccountAliases": [
            {
                "action": "iam:ListAccountAliases"
            }
        ],
        "IAM.ListAttachedGroupPolicies": [
            {
                "action": "iam:ListAttachedGroupPolicies"
            }
        ],
        "IAM.ListAttachedRolePolicies": [
            {
                "action": "iam:ListAttachedRolePolicies"
            }
        ],
        "IAM.ListAttachedUserPolicies": [
            {
                "action": "iam:ListAttachedUserPolicies"
            }
        ],
        "IAM.ListEntitiesForPolicy": [
            {
                "action": "iam:ListEntitiesForPolicy"
            }
        ],
        "IAM.ListGroupPolicies": [
            {
                "action": "iam:ListGroupPolicies"
            }
        ],
        "IAM.ListGroups": [
            {
                "action": "iam:ListGroups"
            }
        ],
        "IAM.ListGroupsForUser": [
            {
                "action": "iam:ListGroupsForUser"
            }
        ],
        "IAM.ListInstanceProfiles": [
            {
                "action": "iam:ListInstanceProfiles"
            }
        ],
        "IAM.ListInstanceProfilesForRole": [
            {
                "action": "iam:ListInstanceProfilesForRole"
            }
        ],
        "IAM.ListMFADevices": [
            {
                "action": "iam:ListMFADevices"
            }
        ],
        "IAM.ListOpenIDConnectProviders": [
            {
                "action": "iam:ListOpenIDConnectProviders"
            }
        ],
        "IAM.ListPolicies": [
            {
                "action": "iam:ListPolicies"
            }
        ],
        "IAM.ListPoliciesGrantingServiceAccess": [
            {
                "action": "iam:ListPoliciesGrantingServiceAccess"
            }
        ],
        "IAM.ListPolicyVersions": [
            {
                "action": "iam:ListPolicyVersions"
            }
        ],
        "IAM.ListRolePolicies": [
            {
                "action": "iam:ListRolePolicies"
            }
        ],
        "IAM.ListRoleTags": [
            {
                "action": "iam:ListRoleTags"
            }
        ],
        "IAM.ListRoles": [
            {
                "action": "iam:ListRoles"
            }
        ],
        "IAM.ListSAMLProviders": [
            {
                "action": "iam:ListSAMLProviders"
            }
        ],
        "IAM.ListSSHPublicKeys": [
            {
                "action": "iam:ListSSHPublicKeys"
            }
        ],
        "IAM.ListServerCertificates": [
            {
                "action": "iam:ListServerCertificates"
            }
        ],
        "IAM.ListServiceSpecificCredentials": [
            {
                "action": "iam:ListServiceSpecificCredentials"
            }
        ],
        "IAM.ListSigningCertificates": [
            {
                "action": "iam:ListSigningCertificates"
            }
        ],
        "IAM.ListUserPolicies": [
            {
                "action": "iam:ListUserPolicies"
            }
        ],
        "IAM.ListUserTags": [
            {
                "action": "iam:ListUserTags"
            }
        ],
        "IAM.ListUsers": [
            {
                "action": "iam:ListUsers"
            }
        ],
        "IAM.ListVirtualMFADevices": [
            {
                "action": "iam:ListVirtualMFADevices"
            }
        ],
        "IAM.PutGroupPolicy": [
            {
                "action": "iam:PutGroupPolicy"
            }
        ],
        "IAM.PutRolePermissionsBoundary": [
            {
                "action": "iam:PutRolePermissionsBoundary"
            }
        ],
        "IAM.PutRolePolicy": [
            {
                "action": "iam:PutRolePolicy"
            }
        ],
        "IAM.PutUserPermissionsBoundary": [
            {
                "action": "iam:PutUserPermissionsBoundary"
            }
        ],
        "IAM.PutUserPolicy": [
            {
                "action": "iam:PutUserPolicy"
            }
        ],
        "IAM.RemoveClientIDFromOpenIDConnectProvider": [
            {
                "action": "iam:RemoveClientIDFromOpenIDConnectProvider"
            }
        ],
        "IAM.RemoveRoleFromInstanceProfile": [
            {
                "action": "iam:RemoveRoleFromInstanceProfile"
            }
        ],
        "IAM.RemoveUserFromGroup": [
            {
                "action": "iam:RemoveUserFromGroup"
            }
        ],
        "IAM.ResetServiceSpecificCredential": [
            {
                "action": "iam:ResetServiceSpecificCredential"
            }
        ],
        "IAM.ResyncMFADevice": [
            {
                "action": "iam:ResyncMFADevice"
            }
        ],
        "IAM.SetDefaultPolicyVersion": [
            {
                "action": "iam:SetDefaultPolicyVersion"
            }
        ],
        "IAM.SetSecurityTokenServicePreferences": [
            {
                "action": "iam:SetSecurityTokenServicePreferences"
            }
        ],
        "IAM.SimulateCustomPolicy": [
            {
                "action": "iam:SimulateCustomPolicy"
            }
        ],
        "IAM.SimulatePrincipalPolicy": [
            {
                "action": "iam:SimulatePrincipalPolicy"
            }
        ],
        "IAM.TagRole": [
            {
                "action": "iam:TagRole"
            }
        ],
        "IAM.TagUser": [
            {
                "action": "iam:TagUser"
            }
        ],
        "IAM.UntagRole": [
            {
                "action": "iam:UntagRole"
            }
        ],
        "IAM.UntagUser": [
            {
                "action": "iam:UntagUser"
            }
        ],
        "IAM.UpdateAccessKey": [
            {
                "action": "iam:UpdateAccessKey"
            }
        ],
        "IAM.UpdateAccountPasswordPolicy": [
            {
                "action": "iam:UpdateAccountPasswordPolicy"
            }
        ],
        "IAM.UpdateAssumeRolePolicy": [
            {
                "action": "iam:UpdateAssumeRolePolicy"
            }
        ],
        "IAM.UpdateGroup": [
            {
                "action": "iam:UpdateGroup"
            }
        ],
        "IAM.UpdateLoginProfile": [
            {
                "action": "iam:UpdateLoginProfile"
            }
        ],
        "IAM.UpdateOpenIDConnectProviderThumbprint": [
            {
                "action": "iam:UpdateOpenIDConnectProviderThumbprint"
            }
        ],
        "IAM.UpdateRole": [
            {
                "action": "iam:UpdateRole"
            }
        ],
        "IAM.UpdateRoleDescription": [
            {
                "action": "iam:UpdateRoleDescription"
            }
        ],
        "IAM.UpdateSAMLProvider": [
            {
                "action": "iam:UpdateSAMLProvider"
            }
        ],
        "IAM.UpdateSSHPublicKey": [
            {
                "action": "iam:UpdateSSHPublicKey"
            }
        ],
        "IAM.UpdateServerCertificate": [
            {
                "action": "iam:UpdateServerCertificate"
            }
        ],
        "IAM.UpdateServiceSpecificCredential": [
            {
                "action": "iam:UpdateServiceSpecificCredential"
            }
        ],
        "IAM.UpdateSigningCertificate": [
            {
                "action": "iam:UpdateSigningCertificate"
            }
        ],
        "IAM.UpdateUser": [
            {
                "action": "iam:UpdateUser"
            }
        ],
        "IAM.UploadSSHPublicKey": [
            {
                "action": "iam:UploadSSHPublicKey"
            }
        ],
        "IAM.UploadServerCertificate": [
            {
                "action": "iam:UploadServerCertificate"
            }
        ],
        "IAM.UploadSigningCertificate": [
            {
                "action": "iam:UploadSigningCertificate"
            }
        ],
        "ImportExport.CancelJob": [
            {
                "action": "importexport:CancelJob"
            }
        ],
        "ImportExport.CreateJob": [
            {
                "action": "importexport:CreateJob"
            }
        ],
        "ImportExport.GetShippingLabel": [
            {
                "action": "importexport:GetShippingLabel"
            }
        ],
        "ImportExport.GetStatus": [
            {
                "action": "importexport:GetStatus"
            }
        ],
        "ImportExport.ListJobs": [
            {
                "action": "importexport:ListJobs"
            }
        ],
        "ImportExport.UpdateJob": [
            {
                "action": "importexport:UpdateJob"
            }
        ],
        "Inspector.AddAttributesToFindings": [
            {
                "action": "inspector:AddAttributesToFindings"
            }
        ],
        "Inspector.CreateAssessmentTarget": [
            {
                "action": "inspector:CreateAssessmentTarget"
            }
        ],
        "Inspector.CreateAssessmentTemplate": [
            {
                "action": "inspector:CreateAssessmentTemplate"
            }
        ],
        "Inspector.CreateResourceGroup": [
            {
                "action": "inspector:CreateResourceGroup"
            }
        ],
        "Inspector.DeleteAssessmentRun": [
            {
                "action": "inspector:DeleteAssessmentRun"
            }
        ],
        "Inspector.DeleteAssessmentTarget": [
            {
                "action": "inspector:DeleteAssessmentTarget"
            }
        ],
        "Inspector.DeleteAssessmentTemplate": [
            {
                "action": "inspector:DeleteAssessmentTemplate"
            }
        ],
        "Inspector.DescribeAssessmentRuns": [
            {
                "action": "inspector:DescribeAssessmentRuns"
            }
        ],
        "Inspector.DescribeAssessmentTargets": [
            {
                "action": "inspector:DescribeAssessmentTargets"
            }
        ],
        "Inspector.DescribeAssessmentTemplates": [
            {
                "action": "inspector:DescribeAssessmentTemplates"
            }
        ],
        "Inspector.DescribeCrossAccountAccessRole": [
            {
                "action": "inspector:DescribeCrossAccountAccessRole"
            }
        ],
        "Inspector.DescribeFindings": [
            {
                "action": "inspector:DescribeFindings"
            }
        ],
        "Inspector.DescribeResourceGroups": [
            {
                "action": "inspector:DescribeResourceGroups"
            }
        ],
        "Inspector.DescribeRulesPackages": [
            {
                "action": "inspector:DescribeRulesPackages"
            }
        ],
        "Inspector.GetTelemetryMetadata": [
            {
                "action": "inspector:GetTelemetryMetadata"
            }
        ],
        "Inspector.ListAssessmentRunAgents": [
            {
                "action": "inspector:ListAssessmentRunAgents"
            }
        ],
        "Inspector.ListAssessmentRuns": [
            {
                "action": "inspector:ListAssessmentRuns"
            }
        ],
        "Inspector.ListAssessmentTargets": [
            {
                "action": "inspector:ListAssessmentTargets"
            }
        ],
        "Inspector.ListAssessmentTemplates": [
            {
                "action": "inspector:ListAssessmentTemplates"
            }
        ],
        "Inspector.ListEventSubscriptions": [
            {
                "action": "inspector:ListEventSubscriptions"
            }
        ],
        "Inspector.ListFindings": [
            {
                "action": "inspector:ListFindings"
            }
        ],
        "Inspector.ListRulesPackages": [
            {
                "action": "inspector:ListRulesPackages"
            }
        ],
        "Inspector.ListTagsForResource": [
            {
                "action": "inspector:ListTagsForResource"
            }
        ],
        "Inspector.PreviewAgents": [
            {
                "action": "inspector:PreviewAgents"
            }
        ],
        "Inspector.RegisterCrossAccountAccessRole": [
            {
                "action": "inspector:RegisterCrossAccountAccessRole"
            }
        ],
        "Inspector.RemoveAttributesFromFindings": [
            {
                "action": "inspector:RemoveAttributesFromFindings"
            }
        ],
        "Inspector.SetTagsForResource": [
            {
                "action": "inspector:SetTagsForResource"
            }
        ],
        "Inspector.StartAssessmentRun": [
            {
                "action": "inspector:StartAssessmentRun"
            }
        ],
        "Inspector.StopAssessmentRun": [
            {
                "action": "inspector:StopAssessmentRun"
            }
        ],
        "Inspector.SubscribeToEvent": [
            {
                "action": "inspector:SubscribeToEvent"
            }
        ],
        "Inspector.UnsubscribeFromEvent": [
            {
                "action": "inspector:UnsubscribeFromEvent"
            }
        ],
        "Inspector.UpdateAssessmentTarget": [
            {
                "action": "inspector:UpdateAssessmentTarget"
            }
        ],
        "Iot.AcceptCertificateTransfer": [
            {
                "action": "iot:AcceptCertificateTransfer"
            }
        ],
        "Iot.AddThingToBillingGroup": [
            {
                "action": "iot:AddThingToBillingGroup"
            }
        ],
        "Iot.AddThingToThingGroup": [
            {
                "action": "iot:AddThingToThingGroup"
            }
        ],
        "Iot.AssociateTargetsWithJob": [
            {
                "action": "iot:AssociateTargetsWithJob"
            }
        ],
        "Iot.AttachPolicy": [
            {
                "action": "iot:AttachPolicy"
            }
        ],
        "Iot.AttachPrincipalPolicy": [
            {
                "action": "iot:AttachPrincipalPolicy"
            }
        ],
        "Iot.AttachSecurityProfile": [
            {
                "action": "iot:AttachSecurityProfile"
            }
        ],
        "Iot.AttachThingPrincipal": [
            {
                "action": "iot:AttachThingPrincipal"
            }
        ],
        "Iot.CancelAuditMitigationActionsTask": [
            {
                "action": "iot:CancelAuditMitigationActionsTask"
            }
        ],
        "Iot.CancelAuditTask": [
            {
                "action": "iot:CancelAuditTask"
            }
        ],
        "Iot.CancelCertificateTransfer": [
            {
                "action": "iot:CancelCertificateTransfer"
            }
        ],
        "Iot.CancelJob": [
            {
                "action": "iot:CancelJob"
            }
        ],
        "Iot.CancelJobExecution": [
            {
                "action": "iot:CancelJobExecution"
            }
        ],
        "Iot.ClearDefaultAuthorizer": [
            {
                "action": "iot:ClearDefaultAuthorizer"
            }
        ],
        "Iot.CreateAuditSuppression": [
            {
                "action": "iot:CreateAuditSuppression"
            }
        ],
        "Iot.CreateAuthorizer": [
            {
                "action": "iot:CreateAuthorizer"
            }
        ],
        "Iot.CreateBillingGroup": [
            {
                "action": "iot:CreateBillingGroup"
            }
        ],
        "Iot.CreateCertificateFromCsr": [
            {
                "action": "iot:CreateCertificateFromCsr"
            }
        ],
        "Iot.CreateDimension": [
            {
                "action": "iot:CreateDimension"
            }
        ],
        "Iot.CreateDomainConfiguration": [
            {
                "action": "iot:CreateDomainConfiguration"
            }
        ],
        "Iot.CreateDynamicThingGroup": [
            {
                "action": "iot:CreateDynamicThingGroup"
            }
        ],
        "Iot.CreateJob": [
            {
                "action": "iot:CreateJob"
            }
        ],
        "Iot.CreateKeysAndCertificate": [
            {
                "action": "iot:CreateKeysAndCertificate"
            }
        ],
        "Iot.CreateMitigationAction": [
            {
                "action": "iot:CreateMitigationAction"
            }
        ],
        "Iot.CreateOTAUpdate": [
            {
                "action": "iot:CreateOTAUpdate"
            }
        ],
        "Iot.CreatePolicy": [
            {
                "action": "iot:CreatePolicy"
            }
        ],
        "Iot.CreatePolicyVersion": [
            {
                "action": "iot:CreatePolicyVersion"
            }
        ],
        "Iot.CreateProvisioningClaim": [
            {
                "action": "iot:CreateProvisioningClaim"
            }
        ],
        "Iot.CreateProvisioningTemplate": [
            {
                "action": "iot:CreateProvisioningTemplate"
            }
        ],
        "Iot.CreateProvisioningTemplateVersion": [
            {
                "action": "iot:CreateProvisioningTemplateVersion"
            }
        ],
        "Iot.CreateRoleAlias": [
            {
                "action": "iot:CreateRoleAlias"
            }
        ],
        "Iot.CreateScheduledAudit": [
            {
                "action": "iot:CreateScheduledAudit"
            }
        ],
        "Iot.CreateSecurityProfile": [
            {
                "action": "iot:CreateSecurityProfile"
            }
        ],
        "Iot.CreateStream": [
            {
                "action": "iot:CreateStream"
            }
        ],
        "Iot.CreateThing": [
            {
                "action": "iot:CreateThing"
            }
        ],
        "Iot.CreateThingGroup": [
            {
                "action": "iot:CreateThingGroup"
            }
        ],
        "Iot.CreateThingType": [
            {
                "action": "iot:CreateThingType"
            }
        ],
        "Iot.CreateTopicRule": [
            {
                "action": "iot:CreateTopicRule"
            }
        ],
        "Iot.DeleteAccountAuditConfiguration": [
            {
                "action": "iot:DeleteAccountAuditConfiguration"
            }
        ],
        "Iot.DeleteAuditSuppression": [
            {
                "action": "iot:DeleteAuditSuppression"
            }
        ],
        "Iot.DeleteAuthorizer": [
            {
                "action": "iot:DeleteAuthorizer"
            }
        ],
        "Iot.DeleteBillingGroup": [
            {
                "action": "iot:DeleteBillingGroup"
            }
        ],
        "Iot.DeleteCACertificate": [
            {
                "action": "iot:DeleteCACertificate"
            }
        ],
        "Iot.DeleteCertificate": [
            {
                "action": "iot:DeleteCertificate"
            }
        ],
        "Iot.DeleteDimension": [
            {
                "action": "iot:DeleteDimension"
            }
        ],
        "Iot.DeleteDomainConfiguration": [
            {
                "action": "iot:DeleteDomainConfiguration"
            }
        ],
        "Iot.DeleteDynamicThingGroup": [
            {
                "action": "iot:DeleteDynamicThingGroup"
            }
        ],
        "Iot.DeleteJob": [
            {
                "action": "iot:DeleteJob"
            }
        ],
        "Iot.DeleteJobExecution": [
            {
                "action": "iot:DeleteJobExecution"
            }
        ],
        "Iot.DeleteMitigationAction": [
            {
                "action": "iot:DeleteMitigationAction"
            }
        ],
        "Iot.DeleteOTAUpdate": [
            {
                "action": "iot:DeleteOTAUpdate"
            }
        ],
        "Iot.DeletePolicy": [
            {
                "action": "iot:DeletePolicy"
            }
        ],
        "Iot.DeletePolicyVersion": [
            {
                "action": "iot:DeletePolicyVersion"
            }
        ],
        "Iot.DeleteProvisioningTemplate": [
            {
                "action": "iot:DeleteProvisioningTemplate"
            }
        ],
        "Iot.DeleteProvisioningTemplateVersion": [
            {
                "action": "iot:DeleteProvisioningTemplateVersion"
            }
        ],
        "Iot.DeleteRegistrationCode": [
            {
                "action": "iot:DeleteRegistrationCode"
            }
        ],
        "Iot.DeleteRoleAlias": [
            {
                "action": "iot:DeleteRoleAlias"
            }
        ],
        "Iot.DeleteScheduledAudit": [
            {
                "action": "iot:DeleteScheduledAudit"
            }
        ],
        "Iot.DeleteSecurityProfile": [
            {
                "action": "iot:DeleteSecurityProfile"
            }
        ],
        "Iot.DeleteStream": [
            {
                "action": "iot:DeleteStream"
            }
        ],
        "Iot.DeleteThing": [
            {
                "action": "iot:DeleteThing"
            }
        ],
        "Iot.DeleteThingGroup": [
            {
                "action": "iot:DeleteThingGroup"
            }
        ],
        "Iot.DeleteThingType": [
            {
                "action": "iot:DeleteThingType"
            }
        ],
        "Iot.DeleteTopicRule": [
            {
                "action": "iot:DeleteTopicRule"
            }
        ],
        "Iot.DeleteV2LoggingLevel": [
            {
                "action": "iot:DeleteV2LoggingLevel"
            }
        ],
        "Iot.DeprecateThingType": [
            {
                "action": "iot:DeprecateThingType"
            }
        ],
        "Iot.DescribeAccountAuditConfiguration": [
            {
                "action": "iot:DescribeAccountAuditConfiguration"
            }
        ],
        "Iot.DescribeAuditFinding": [
            {
                "action": "iot:DescribeAuditFinding"
            }
        ],
        "Iot.DescribeAuditMitigationActionsTask": [
            {
                "action": "iot:DescribeAuditMitigationActionsTask"
            }
        ],
        "Iot.DescribeAuditSuppression": [
            {
                "action": "iot:DescribeAuditSuppression"
            }
        ],
        "Iot.DescribeAuditTask": [
            {
                "action": "iot:DescribeAuditTask"
            }
        ],
        "Iot.DescribeAuthorizer": [
            {
                "action": "iot:DescribeAuthorizer"
            }
        ],
        "Iot.DescribeBillingGroup": [
            {
                "action": "iot:DescribeBillingGroup"
            }
        ],
        "Iot.DescribeCACertificate": [
            {
                "action": "iot:DescribeCACertificate"
            }
        ],
        "Iot.DescribeCertificate": [
            {
                "action": "iot:DescribeCertificate"
            }
        ],
        "Iot.DescribeDefaultAuthorizer": [
            {
                "action": "iot:DescribeDefaultAuthorizer"
            }
        ],
        "Iot.DescribeDimension": [
            {
                "action": "iot:DescribeDimension"
            }
        ],
        "Iot.DescribeDomainConfiguration": [
            {
                "action": "iot:DescribeDomainConfiguration"
            }
        ],
        "Iot.DescribeEndpoint": [
            {
                "action": "iot:DescribeEndpoint"
            }
        ],
        "Iot.DescribeEventConfigurations": [
            {
                "action": "iot:DescribeEventConfigurations"
            }
        ],
        "Iot.DescribeIndex": [
            {
                "action": "iot:DescribeIndex"
            }
        ],
        "Iot.DescribeJob": [
            {
                "action": "iot:DescribeJob"
            }
        ],
        "Iot.DescribeJobExecution": [
            {
                "action": "iot:DescribeJobExecution"
            }
        ],
        "Iot.DescribeMitigationAction": [
            {
                "action": "iot:DescribeMitigationAction"
            }
        ],
        "Iot.DescribeProvisioningTemplate": [
            {
                "action": "iot:DescribeProvisioningTemplate"
            }
        ],
        "Iot.DescribeProvisioningTemplateVersion": [
            {
                "action": "iot:DescribeProvisioningTemplateVersion"
            }
        ],
        "Iot.DescribeRoleAlias": [
            {
                "action": "iot:DescribeRoleAlias"
            }
        ],
        "Iot.DescribeScheduledAudit": [
            {
                "action": "iot:DescribeScheduledAudit"
            }
        ],
        "Iot.DescribeSecurityProfile": [
            {
                "action": "iot:DescribeSecurityProfile"
            }
        ],
        "Iot.DescribeStream": [
            {
                "action": "iot:DescribeStream"
            }
        ],
        "Iot.DescribeThing": [
            {
                "action": "iot:DescribeThing"
            }
        ],
        "Iot.DescribeThingGroup": [
            {
                "action": "iot:DescribeThingGroup"
            }
        ],
        "Iot.DescribeThingRegistrationTask": [
            {
                "action": "iot:DescribeThingRegistrationTask"
            }
        ],
        "Iot.DescribeThingType": [
            {
                "action": "iot:DescribeThingType"
            }
        ],
        "Iot.DetachPolicy": [
            {
                "action": "iot:DetachPolicy"
            }
        ],
        "Iot.DetachPrincipalPolicy": [
            {
                "action": "iot:DetachPrincipalPolicy"
            }
        ],
        "Iot.DetachSecurityProfile": [
            {
                "action": "iot:DetachSecurityProfile"
            }
        ],
        "Iot.DetachThingPrincipal": [
            {
                "action": "iot:DetachThingPrincipal"
            }
        ],
        "Iot.DisableTopicRule": [
            {
                "action": "iot:DisableTopicRule"
            }
        ],
        "Iot.EnableTopicRule": [
            {
                "action": "iot:EnableTopicRule"
            }
        ],
        "Iot.GetCardinality": [
            {
                "action": "iot:GetCardinality"
            }
        ],
        "Iot.GetEffectivePolicies": [
            {
                "action": "iot:GetEffectivePolicies"
            }
        ],
        "Iot.GetIndexingConfiguration": [
            {
                "action": "iot:GetIndexingConfiguration"
            }
        ],
        "Iot.GetJobDocument": [
            {
                "action": "iot:GetJobDocument"
            }
        ],
        "Iot.GetLoggingOptions": [
            {
                "action": "iot:GetLoggingOptions"
            }
        ],
        "Iot.GetOTAUpdate": [
            {
                "action": "iot:GetOTAUpdate"
            }
        ],
        "Iot.GetPercentiles": [
            {
                "action": "iot:GetPercentiles"
            }
        ],
        "Iot.GetPolicy": [
            {
                "action": "iot:GetPolicy"
            }
        ],
        "Iot.GetPolicyVersion": [
            {
                "action": "iot:GetPolicyVersion"
            }
        ],
        "Iot.GetRegistrationCode": [
            {
                "action": "iot:GetRegistrationCode"
            }
        ],
        "Iot.GetStatistics": [
            {
                "action": "iot:GetStatistics"
            }
        ],
        "Iot.GetTopicRule": [
            {
                "action": "iot:GetTopicRule"
            }
        ],
        "Iot.GetV2LoggingOptions": [
            {
                "action": "iot:GetV2LoggingOptions"
            }
        ],
        "Iot.ListActiveViolations": [
            {
                "action": "iot:ListActiveViolations"
            }
        ],
        "Iot.ListAttachedPolicies": [
            {
                "action": "iot:ListAttachedPolicies"
            }
        ],
        "Iot.ListAuditFindings": [
            {
                "action": "iot:ListAuditFindings"
            }
        ],
        "Iot.ListAuditMitigationActionsExecutions": [
            {
                "action": "iot:ListAuditMitigationActionsExecutions"
            }
        ],
        "Iot.ListAuditMitigationActionsTasks": [
            {
                "action": "iot:ListAuditMitigationActionsTasks"
            }
        ],
        "Iot.ListAuditSuppressions": [
            {
                "action": "iot:ListAuditSuppressions"
            }
        ],
        "Iot.ListAuditTasks": [
            {
                "action": "iot:ListAuditTasks"
            }
        ],
        "Iot.ListAuthorizers": [
            {
                "action": "iot:ListAuthorizers"
            }
        ],
        "Iot.ListBillingGroups": [
            {
                "action": "iot:ListBillingGroups"
            }
        ],
        "Iot.ListCACertificates": [
            {
                "action": "iot:ListCACertificates"
            }
        ],
        "Iot.ListCertificates": [
            {
                "action": "iot:ListCertificates"
            }
        ],
        "Iot.ListCertificatesByCA": [
            {
                "action": "iot:ListCertificatesByCA"
            }
        ],
        "Iot.ListDimensions": [
            {
                "action": "iot:ListDimensions"
            }
        ],
        "Iot.ListDomainConfigurations": [
            {
                "action": "iot:ListDomainConfigurations"
            }
        ],
        "Iot.ListIndices": [
            {
                "action": "iot:ListIndices"
            }
        ],
        "Iot.ListJobExecutionsForJob": [
            {
                "action": "iot:ListJobExecutionsForJob"
            }
        ],
        "Iot.ListJobExecutionsForThing": [
            {
                "action": "iot:ListJobExecutionsForThing"
            }
        ],
        "Iot.ListJobs": [
            {
                "action": "iot:ListJobs"
            }
        ],
        "Iot.ListMitigationActions": [
            {
                "action": "iot:ListMitigationActions"
            }
        ],
        "Iot.ListOTAUpdates": [
            {
                "action": "iot:ListOTAUpdates"
            }
        ],
        "Iot.ListOutgoingCertificates": [
            {
                "action": "iot:ListOutgoingCertificates"
            }
        ],
        "Iot.ListPolicies": [
            {
                "action": "iot:ListPolicies"
            }
        ],
        "Iot.ListPolicyPrincipals": [
            {
                "action": "iot:ListPolicyPrincipals"
            }
        ],
        "Iot.ListPolicyVersions": [
            {
                "action": "iot:ListPolicyVersions"
            }
        ],
        "Iot.ListPrincipalPolicies": [
            {
                "action": "iot:ListPrincipalPolicies"
            }
        ],
        "Iot.ListPrincipalThings": [
            {
                "action": "iot:ListPrincipalThings"
            }
        ],
        "Iot.ListProvisioningTemplateVersions": [
            {
                "action": "iot:ListProvisioningTemplateVersions"
            }
        ],
        "Iot.ListProvisioningTemplates": [
            {
                "action": "iot:ListProvisioningTemplates"
            }
        ],
        "Iot.ListRoleAliases": [
            {
                "action": "iot:ListRoleAliases"
            }
        ],
        "Iot.ListScheduledAudits": [
            {
                "action": "iot:ListScheduledAudits"
            }
        ],
        "Iot.ListSecurityProfiles": [
            {
                "action": "iot:ListSecurityProfiles"
            }
        ],
        "Iot.ListSecurityProfilesForTarget": [
            {
                "action": "iot:ListSecurityProfilesForTarget"
            }
        ],
        "Iot.ListStreams": [
            {
                "action": "iot:ListStreams"
            }
        ],
        "Iot.ListTagsForResource": [
            {
                "action": "iot:ListTagsForResource"
            }
        ],
        "Iot.ListTargetsForPolicy": [
            {
                "action": "iot:ListTargetsForPolicy"
            }
        ],
        "Iot.ListTargetsForSecurityProfile": [
            {
                "action": "iot:ListTargetsForSecurityProfile"
            }
        ],
        "Iot.ListThingGroups": [
            {
                "action": "iot:ListThingGroups"
            }
        ],
        "Iot.ListThingGroupsForThing": [
            {
                "action": "iot:ListThingGroupsForThing"
            }
        ],
        "Iot.ListThingPrincipals": [
            {
                "action": "iot:ListThingPrincipals"
            }
        ],
        "Iot.ListThingRegistrationTaskReports": [
            {
                "action": "iot:ListThingRegistrationTaskReports"
            }
        ],
        "Iot.ListThingRegistrationTasks": [
            {
                "action": "iot:ListThingRegistrationTasks"
            }
        ],
        "Iot.ListThingTypes": [
            {
                "action": "iot:ListThingTypes"
            }
        ],
        "Iot.ListThings": [
            {
                "action": "iot:ListThings"
            }
        ],
        "Iot.ListThingsInBillingGroup": [
            {
                "action": "iot:ListThingsInBillingGroup"
            }
        ],
        "Iot.ListThingsInThingGroup": [
            {
                "action": "iot:ListThingsInThingGroup"
            }
        ],
        "Iot.ListTopicRules": [
            {
                "action": "iot:ListTopicRules"
            }
        ],
        "Iot.ListV2LoggingLevels": [
            {
                "action": "iot:ListV2LoggingLevels"
            }
        ],
        "Iot.ListViolationEvents": [
            {
                "action": "iot:ListViolationEvents"
            }
        ],
        "Iot.RegisterCACertificate": [
            {
                "action": "iot:RegisterCACertificate"
            }
        ],
        "Iot.RegisterCertificate": [
            {
                "action": "iot:RegisterCertificate"
            }
        ],
        "Iot.RegisterCertificateWithoutCA": [
            {
                "action": "iot:RegisterCertificateWithoutCA"
            }
        ],
        "Iot.RegisterThing": [
            {
                "action": "iot:RegisterThing"
            }
        ],
        "Iot.RejectCertificateTransfer": [
            {
                "action": "iot:RejectCertificateTransfer"
            }
        ],
        "Iot.RemoveThingFromBillingGroup": [
            {
                "action": "iot:RemoveThingFromBillingGroup"
            }
        ],
        "Iot.RemoveThingFromThingGroup": [
            {
                "action": "iot:RemoveThingFromThingGroup"
            }
        ],
        "Iot.ReplaceTopicRule": [
            {
                "action": "iot:ReplaceTopicRule"
            }
        ],
        "Iot.SearchIndex": [
            {
                "action": "iot:SearchIndex"
            }
        ],
        "Iot.SetDefaultAuthorizer": [
            {
                "action": "iot:SetDefaultAuthorizer"
            }
        ],
        "Iot.SetDefaultPolicyVersion": [
            {
                "action": "iot:SetDefaultPolicyVersion"
            }
        ],
        "Iot.SetLoggingOptions": [
            {
                "action": "iot:SetLoggingOptions"
            }
        ],
        "Iot.SetV2LoggingLevel": [
            {
                "action": "iot:SetV2LoggingLevel"
            }
        ],
        "Iot.SetV2LoggingOptions": [
            {
                "action": "iot:SetV2LoggingOptions"
            }
        ],
        "Iot.StartAuditMitigationActionsTask": [
            {
                "action": "iot:StartAuditMitigationActionsTask"
            }
        ],
        "Iot.StartOnDemandAuditTask": [
            {
                "action": "iot:StartOnDemandAuditTask"
            }
        ],
        "Iot.StartThingRegistrationTask": [
            {
                "action": "iot:StartThingRegistrationTask"
            }
        ],
        "Iot.StopThingRegistrationTask": [
            {
                "action": "iot:StopThingRegistrationTask"
            }
        ],
        "Iot.TagResource": [
            {
                "action": "iot:TagResource"
            }
        ],
        "Iot.TestAuthorization": [
            {
                "action": "iot:TestAuthorization"
            }
        ],
        "Iot.TestInvokeAuthorizer": [
            {
                "action": "iot:TestInvokeAuthorizer"
            }
        ],
        "Iot.TransferCertificate": [
            {
                "action": "iot:TransferCertificate"
            }
        ],
        "Iot.UntagResource": [
            {
                "action": "iot:UntagResource"
            }
        ],
        "Iot.UpdateAccountAuditConfiguration": [
            {
                "action": "iot:UpdateAccountAuditConfiguration"
            }
        ],
        "Iot.UpdateAuditSuppression": [
            {
                "action": "iot:UpdateAuditSuppression"
            }
        ],
        "Iot.UpdateAuthorizer": [
            {
                "action": "iot:UpdateAuthorizer"
            }
        ],
        "Iot.UpdateBillingGroup": [
            {
                "action": "iot:UpdateBillingGroup"
            }
        ],
        "Iot.UpdateCACertificate": [
            {
                "action": "iot:UpdateCACertificate"
            }
        ],
        "Iot.UpdateCertificate": [
            {
                "action": "iot:UpdateCertificate"
            }
        ],
        "Iot.UpdateDimension": [
            {
                "action": "iot:UpdateDimension"
            }
        ],
        "Iot.UpdateDomainConfiguration": [
            {
                "action": "iot:UpdateDomainConfiguration"
            }
        ],
        "Iot.UpdateDynamicThingGroup": [
            {
                "action": "iot:UpdateDynamicThingGroup"
            }
        ],
        "Iot.UpdateEventConfigurations": [
            {
                "action": "iot:UpdateEventConfigurations"
            }
        ],
        "Iot.UpdateIndexingConfiguration": [
            {
                "action": "iot:UpdateIndexingConfiguration"
            }
        ],
        "Iot.UpdateJob": [
            {
                "action": "iot:UpdateJob"
            }
        ],
        "Iot.UpdateMitigationAction": [
            {
                "action": "iot:UpdateMitigationAction"
            }
        ],
        "Iot.UpdateProvisioningTemplate": [
            {
                "action": "iot:UpdateProvisioningTemplate"
            }
        ],
        "Iot.UpdateRoleAlias": [
            {
                "action": "iot:UpdateRoleAlias"
            }
        ],
        "Iot.UpdateScheduledAudit": [
            {
                "action": "iot:UpdateScheduledAudit"
            }
        ],
        "Iot.UpdateSecurityProfile": [
            {
                "action": "iot:UpdateSecurityProfile"
            }
        ],
        "Iot.UpdateStream": [
            {
                "action": "iot:UpdateStream"
            }
        ],
        "Iot.UpdateThing": [
            {
                "action": "iot:UpdateThing"
            }
        ],
        "Iot.UpdateThingGroup": [
            {
                "action": "iot:UpdateThingGroup"
            }
        ],
        "Iot.UpdateThingGroupsForThing": [
            {
                "action": "iot:UpdateThingGroupsForThing"
            }
        ],
        "Iot.ValidateSecurityProfileBehaviors": [
            {
                "action": "iot:ValidateSecurityProfileBehaviors"
            }
        ],
        "IotData.DeleteThingShadow": [
            {
                "action": "iot:DeleteThingShadow"
            }
        ],
        "IotData.GetThingShadow": [
            {
                "action": "iot:GetThingShadow"
            }
        ],
        "IotData.ListNamedShadowsForThing": [
            {
                "action": "iot:ListNamedShadowsForThing"
            }
        ],
        "IotData.Publish": [
            {
                "action": "iot:Publish"
            }
        ],
        "IotData.UpdateThingShadow": [
            {
                "action": "iot:UpdateThingShadow"
            }
        ],
        "Kinesis.AddTagsToStream": [
            {
                "action": "kinesis:AddTagsToStream"
            }
        ],
        "Kinesis.CreateStream": [
            {
                "action": "kinesis:CreateStream"
            }
        ],
        "Kinesis.DecreaseStreamRetentionPeriod": [
            {
                "action": "kinesis:DecreaseStreamRetentionPeriod"
            }
        ],
        "Kinesis.DeleteStream": [
            {
                "action": "kinesis:DeleteStream"
            }
        ],
        "Kinesis.DeregisterStreamConsumer": [
            {
                "action": "kinesis:DeregisterStreamConsumer"
            }
        ],
        "Kinesis.DescribeLimits": [
            {
                "action": "kinesis:DescribeLimits"
            }
        ],
        "Kinesis.DescribeStream": [
            {
                "action": "kinesis:DescribeStream"
            }
        ],
        "Kinesis.DescribeStreamConsumer": [
            {
                "action": "kinesis:DescribeStreamConsumer"
            }
        ],
        "Kinesis.DescribeStreamSummary": [
            {
                "action": "kinesis:DescribeStreamSummary"
            }
        ],
        "Kinesis.DisableEnhancedMonitoring": [
            {
                "action": "kinesis:DisableEnhancedMonitoring"
            }
        ],
        "Kinesis.EnableEnhancedMonitoring": [
            {
                "action": "kinesis:EnableEnhancedMonitoring"
            }
        ],
        "Kinesis.GetRecords": [
            {
                "action": "kinesis:GetRecords"
            }
        ],
        "Kinesis.GetShardIterator": [
            {
                "action": "kinesis:GetShardIterator"
            }
        ],
        "Kinesis.IncreaseStreamRetentionPeriod": [
            {
                "action": "kinesis:IncreaseStreamRetentionPeriod"
            }
        ],
        "Kinesis.ListShards": [
            {
                "action": "kinesis:ListShards"
            }
        ],
        "Kinesis.ListStreamConsumers": [
            {
                "action": "kinesis:ListStreamConsumers"
            }
        ],
        "Kinesis.ListStreams": [
            {
                "action": "kinesis:ListStreams"
            }
        ],
        "Kinesis.ListTagsForStream": [
            {
                "action": "kinesis:ListTagsForStream"
            }
        ],
        "Kinesis.MergeShards": [
            {
                "action": "kinesis:MergeShards"
            }
        ],
        "Kinesis.PutRecord": [
            {
                "action": "kinesis:PutRecord"
            }
        ],
        "Kinesis.PutRecords": [
            {
                "action": "kinesis:PutRecords"
            }
        ],
        "Kinesis.RegisterStreamConsumer": [
            {
                "action": "kinesis:RegisterStreamConsumer"
            }
        ],
        "Kinesis.RemoveTagsFromStream": [
            {
                "action": "kinesis:RemoveTagsFromStream"
            }
        ],
        "Kinesis.SplitShard": [
            {
                "action": "kinesis:SplitShard"
            }
        ],
        "Kinesis.StartStreamEncryption": [
            {
                "action": "kinesis:StartStreamEncryption"
            }
        ],
        "Kinesis.StopStreamEncryption": [
            {
                "action": "kinesis:StopStreamEncryption"
            }
        ],
        "Kinesis.UpdateShardCount": [
            {
                "action": "kinesis:UpdateShardCount"
            }
        ],
        "KinesisAnalytics.AddApplicationCloudWatchLoggingOption": [
            {
                "action": "kinesisanalytics:AddApplicationCloudWatchLoggingOption"
            }
        ],
        "KinesisAnalytics.AddApplicationInput": [
            {
                "action": "kinesisanalytics:AddApplicationInput"
            }
        ],
        "KinesisAnalytics.AddApplicationInputProcessingConfiguration": [
            {
                "action": "kinesisanalytics:AddApplicationInputProcessingConfiguration"
            }
        ],
        "KinesisAnalytics.AddApplicationOutput": [
            {
                "action": "kinesisanalytics:AddApplicationOutput"
            }
        ],
        "KinesisAnalytics.AddApplicationReferenceDataSource": [
            {
                "action": "kinesisanalytics:AddApplicationReferenceDataSource"
            }
        ],
        "KinesisAnalytics.CreateApplication": [
            {
                "action": "kinesisanalytics:CreateApplication"
            }
        ],
        "KinesisAnalytics.DeleteApplication": [
            {
                "action": "kinesisanalytics:DeleteApplication"
            }
        ],
        "KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption": [
            {
                "action": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption"
            }
        ],
        "KinesisAnalytics.DeleteApplicationInputProcessingConfiguration": [
            {
                "action": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration"
            }
        ],
        "KinesisAnalytics.DeleteApplicationOutput": [
            {
                "action": "kinesisanalytics:DeleteApplicationOutput"
            }
        ],
        "KinesisAnalytics.DeleteApplicationReferenceDataSource": [
            {
                "action": "kinesisanalytics:DeleteApplicationReferenceDataSource"
            }
        ],
        "KinesisAnalytics.DescribeApplication": [
            {
                "action": "kinesisanalytics:DescribeApplication"
            }
        ],
        "KinesisAnalytics.DiscoverInputSchema": [
            {
                "action": "kinesisanalytics:DiscoverInputSchema"
            }
        ],
        "KinesisAnalytics.ListApplications": [
            {
                "action": "kinesisanalytics:ListApplications"
            }
        ],
        "KinesisAnalytics.ListTagsForResource": [
            {
                "action": "kinesisanalytics:ListTagsForResource"
            }
        ],
        "KinesisAnalytics.StartApplication": [
            {
                "action": "kinesisanalytics:StartApplication"
            }
        ],
        "KinesisAnalytics.StopApplication": [
            {
                "action": "kinesisanalytics:StopApplication"
            }
        ],
        "KinesisAnalytics.TagResource": [
            {
                "action": "kinesisanalytics:TagResource"
            }
        ],
        "KinesisAnalytics.UntagResource": [
            {
                "action": "kinesisanalytics:UntagResource"
            }
        ],
        "KinesisAnalytics.UpdateApplication": [
            {
                "action": "kinesisanalytics:UpdateApplication"
            }
        ],
        "KMS.CancelKeyDeletion": [
            {
                "action": "kms:CancelKeyDeletion"
            }
        ],
        "KMS.ConnectCustomKeyStore": [
            {
                "action": "kms:ConnectCustomKeyStore"
            }
        ],
        "KMS.CreateAlias": [
            {
                "action": "kms:CreateAlias"
            }
        ],
        "KMS.CreateCustomKeyStore": [
            {
                "action": "kms:CreateCustomKeyStore"
            }
        ],
        "KMS.CreateGrant": [
            {
                "action": "kms:CreateGrant"
            }
        ],
        "KMS.CreateKey": [
            {
                "action": "kms:CreateKey"
            }
        ],
        "KMS.Decrypt": [
            {
                "action": "kms:Decrypt"
            }
        ],
        "KMS.DeleteAlias": [
            {
                "action": "kms:DeleteAlias"
            }
        ],
        "KMS.DeleteCustomKeyStore": [
            {
                "action": "kms:DeleteCustomKeyStore"
            }
        ],
        "KMS.DeleteImportedKeyMaterial": [
            {
                "action": "kms:DeleteImportedKeyMaterial"
            }
        ],
        "KMS.DescribeCustomKeyStores": [
            {
                "action": "kms:DescribeCustomKeyStores"
            }
        ],
        "KMS.DescribeKey": [
            {
                "action": "kms:DescribeKey"
            }
        ],
        "KMS.DisableKey": [
            {
                "action": "kms:DisableKey"
            }
        ],
        "KMS.DisableKeyRotation": [
            {
                "action": "kms:DisableKeyRotation"
            }
        ],
        "KMS.DisconnectCustomKeyStore": [
            {
                "action": "kms:DisconnectCustomKeyStore"
            }
        ],
        "KMS.EnableKey": [
            {
                "action": "kms:EnableKey"
            }
        ],
        "KMS.EnableKeyRotation": [
            {
                "action": "kms:EnableKeyRotation"
            }
        ],
        "KMS.Encrypt": [
            {
                "action": "kms:Encrypt"
            }
        ],
        "KMS.GenerateDataKey": [
            {
                "action": "kms:GenerateDataKey"
            }
        ],
        "KMS.GenerateDataKeyPair": [
            {
                "action": "kms:GenerateDataKeyPair"
            }
        ],
        "KMS.GenerateDataKeyPairWithoutPlaintext": [
            {
                "action": "kms:GenerateDataKeyPairWithoutPlaintext"
            }
        ],
        "KMS.GenerateDataKeyWithoutPlaintext": [
            {
                "action": "kms:GenerateDataKeyWithoutPlaintext"
            }
        ],
        "KMS.GenerateRandom": [
            {
                "action": "kms:GenerateRandom"
            }
        ],
        "KMS.GetKeyPolicy": [
            {
                "action": "kms:GetKeyPolicy"
            }
        ],
        "KMS.GetKeyRotationStatus": [
            {
                "action": "kms:GetKeyRotationStatus"
            }
        ],
        "KMS.GetParametersForImport": [
            {
                "action": "kms:GetParametersForImport"
            }
        ],
        "KMS.GetPublicKey": [
            {
                "action": "kms:GetPublicKey"
            }
        ],
        "KMS.ImportKeyMaterial": [
            {
                "action": "kms:ImportKeyMaterial"
            }
        ],
        "KMS.ListAliases": [
            {
                "action": "kms:ListAliases"
            }
        ],
        "KMS.ListGrants": [
            {
                "action": "kms:ListGrants"
            }
        ],
        "KMS.ListKeyPolicies": [
            {
                "action": "kms:ListKeyPolicies"
            }
        ],
        "KMS.ListKeys": [
            {
                "action": "kms:ListKeys"
            }
        ],
        "KMS.ListResourceTags": [
            {
                "action": "kms:ListResourceTags"
            }
        ],
        "KMS.ListRetirableGrants": [
            {
                "action": "kms:ListRetirableGrants"
            }
        ],
        "KMS.PutKeyPolicy": [
            {
                "action": "kms:PutKeyPolicy"
            }
        ],
        "KMS.RetireGrant": [
            {
                "action": "kms:RetireGrant"
            }
        ],
        "KMS.RevokeGrant": [
            {
                "action": "kms:RevokeGrant"
            }
        ],
        "KMS.ScheduleKeyDeletion": [
            {
                "action": "kms:ScheduleKeyDeletion"
            }
        ],
        "KMS.Sign": [
            {
                "action": "kms:Sign"
            }
        ],
        "KMS.TagResource": [
            {
                "action": "kms:TagResource"
            }
        ],
        "KMS.UntagResource": [
            {
                "action": "kms:UntagResource"
            }
        ],
        "KMS.UpdateAlias": [
            {
                "action": "kms:UpdateAlias"
            }
        ],
        "KMS.UpdateCustomKeyStore": [
            {
                "action": "kms:UpdateCustomKeyStore"
            }
        ],
        "KMS.UpdateKeyDescription": [
            {
                "action": "kms:UpdateKeyDescription"
            }
        ],
        "KMS.Verify": [
            {
                "action": "kms:Verify"
            }
        ],
        "Lambda.AddLayerVersionPermission": [
            {
                "action": "lambda:AddLayerVersionPermission"
            }
        ],
        "Lambda.AddPermission": [
            {
                "action": "lambda:AddPermission"
            }
        ],
        "Lambda.CreateAlias": [
            {
                "action": "lambda:CreateAlias"
            }
        ],
        "Lambda.CreateCodeSigningConfig": [
            {
                "action": "lambda:CreateCodeSigningConfig"
            }
        ],
        "Lambda.CreateEventSourceMapping": [
            {
                "action": "lambda:CreateEventSourceMapping"
            }
        ],
        "Lambda.CreateFunction": [
            {
                "action": "lambda:CreateFunction"
            }
        ],
        "Lambda.DeleteAlias": [
            {
                "action": "lambda:DeleteAlias"
            }
        ],
        "Lambda.DeleteCodeSigningConfig": [
            {
                "action": "lambda:DeleteCodeSigningConfig"
            }
        ],
        "Lambda.DeleteEventSourceMapping": [
            {
                "action": "lambda:DeleteEventSourceMapping"
            }
        ],
        "Lambda.DeleteFunction": [
            {
                "action": "lambda:DeleteFunction"
            }
        ],
        "Lambda.DeleteFunctionCodeSigningConfig": [
            {
                "action": "lambda:DeleteFunctionCodeSigningConfig"
            }
        ],
        "Lambda.DeleteFunctionConcurrency": [
            {
                "action": "lambda:DeleteFunctionConcurrency"
            }
        ],
        "Lambda.DeleteFunctionEventInvokeConfig": [
            {
                "action": "lambda:DeleteFunctionEventInvokeConfig"
            }
        ],
        "Lambda.DeleteLayerVersion": [
            {
                "action": "lambda:DeleteLayerVersion"
            }
        ],
        "Lambda.DeleteProvisionedConcurrencyConfig": [
            {
                "action": "lambda:DeleteProvisionedConcurrencyConfig"
            }
        ],
        "Lambda.GetAccountSettings": [
            {
                "action": "lambda:GetAccountSettings"
            }
        ],
        "Lambda.GetAlias": [
            {
                "action": "lambda:GetAlias"
            }
        ],
        "Lambda.GetCodeSigningConfig": [
            {
                "action": "lambda:GetCodeSigningConfig"
            }
        ],
        "Lambda.GetEventSourceMapping": [
            {
                "action": "lambda:GetEventSourceMapping"
            }
        ],
        "Lambda.GetFunction": [
            {
                "action": "lambda:GetFunction"
            }
        ],
        "Lambda.GetFunctionCodeSigningConfig": [
            {
                "action": "lambda:GetFunctionCodeSigningConfig"
            }
        ],
        "Lambda.GetFunctionConcurrency": [
            {
                "action": "lambda:GetFunctionConcurrency"
            }
        ],
        "Lambda.GetFunctionConfiguration": [
            {
                "action": "lambda:GetFunctionConfiguration"
            }
        ],
        "Lambda.GetFunctionEventInvokeConfig": [
            {
                "action": "lambda:GetFunctionEventInvokeConfig"
            }
        ],
        "Lambda.GetLayerVersion": [
            {
                "action": "lambda:GetLayerVersion"
            }
        ],
        "Lambda.GetLayerVersionPolicy": [
            {
                "action": "lambda:GetLayerVersionPolicy"
            }
        ],
        "Lambda.GetPolicy": [
            {
                "action": "lambda:GetPolicy"
            }
        ],
        "Lambda.GetProvisionedConcurrencyConfig": [
            {
                "action": "lambda:GetProvisionedConcurrencyConfig"
            }
        ],
        "Lambda.InvokeAsync": [
            {
                "action": "lambda:InvokeAsync"
            }
        ],
        "Lambda.ListAliases": [
            {
                "action": "lambda:ListAliases"
            }
        ],
        "Lambda.ListCodeSigningConfigs": [
            {
                "action": "lambda:ListCodeSigningConfigs"
            }
        ],
        "Lambda.ListEventSourceMappings": [
            {
                "action": "lambda:ListEventSourceMappings"
            }
        ],
        "Lambda.ListFunctionEventInvokeConfigs": [
            {
                "action": "lambda:ListFunctionEventInvokeConfigs"
            }
        ],
        "Lambda.ListFunctions": [
            {
                "action": "lambda:ListFunctions"
            }
        ],
        "Lambda.ListFunctionsByCodeSigningConfig": [
            {
                "action": "lambda:ListFunctionsByCodeSigningConfig"
            }
        ],
        "Lambda.ListLayerVersions": [
            {
                "action": "lambda:ListLayerVersions"
            }
        ],
        "Lambda.ListLayers": [
            {
                "action": "lambda:ListLayers"
            }
        ],
        "Lambda.ListProvisionedConcurrencyConfigs": [
            {
                "action": "lambda:ListProvisionedConcurrencyConfigs"
            }
        ],
        "Lambda.ListTags": [
            {
                "action": "lambda:ListTags"
            }
        ],
        "Lambda.ListVersionsByFunction": [
            {
                "action": "lambda:ListVersionsByFunction"
            }
        ],
        "Lambda.PublishLayerVersion": [
            {
                "action": "lambda:PublishLayerVersion"
            }
        ],
        "Lambda.PublishVersion": [
            {
                "action": "lambda:PublishVersion"
            }
        ],
        "Lambda.PutFunctionCodeSigningConfig": [
            {
                "action": "lambda:PutFunctionCodeSigningConfig"
            }
        ],
        "Lambda.PutFunctionConcurrency": [
            {
                "action": "lambda:PutFunctionConcurrency"
            }
        ],
        "Lambda.PutFunctionEventInvokeConfig": [
            {
                "action": "lambda:PutFunctionEventInvokeConfig"
            }
        ],
        "Lambda.PutProvisionedConcurrencyConfig": [
            {
                "action": "lambda:PutProvisionedConcurrencyConfig"
            }
        ],
        "Lambda.RemoveLayerVersionPermission": [
            {
                "action": "lambda:RemoveLayerVersionPermission"
            }
        ],
        "Lambda.RemovePermission": [
            {
                "action": "lambda:RemovePermission"
            }
        ],
        "Lambda.TagResource": [
            {
                "action": "lambda:TagResource"
            }
        ],
        "Lambda.UntagResource": [
            {
                "action": "lambda:UntagResource"
            }
        ],
        "Lambda.UpdateAlias": [
            {
                "action": "lambda:UpdateAlias"
            }
        ],
        "Lambda.UpdateCodeSigningConfig": [
            {
                "action": "lambda:UpdateCodeSigningConfig"
            }
        ],
        "Lambda.UpdateEventSourceMapping": [
            {
                "action": "lambda:UpdateEventSourceMapping"
            }
        ],
        "Lambda.UpdateFunctionCode": [
            {
                "action": "lambda:UpdateFunctionCode"
            }
        ],
        "Lambda.UpdateFunctionConfiguration": [
            {
                "action": "lambda:UpdateFunctionConfiguration"
            }
        ],
        "Lambda.UpdateFunctionEventInvokeConfig": [
            {
                "action": "lambda:UpdateFunctionEventInvokeConfig"
            }
        ],
        "LexRuntime.DeleteSession": [
            {
                "action": "lex:DeleteSession"
            }
        ],
        "LexRuntime.GetSession": [
            {
                "action": "lex:GetSession"
            }
        ],
        "LexRuntime.PostContent": [
            {
                "action": "lex:PostContent"
            }
        ],
        "LexRuntime.PostText": [
            {
                "action": "lex:PostText"
            }
        ],
        "LexRuntime.PutSession": [
            {
                "action": "lex:PutSession"
            }
        ],
        "Lightsail.AllocateStaticIp": [
            {
                "action": "lightsail:AllocateStaticIp"
            }
        ],
        "Lightsail.AttachDisk": [
            {
                "action": "lightsail:AttachDisk"
            }
        ],
        "Lightsail.AttachInstancesToLoadBalancer": [
            {
                "action": "lightsail:AttachInstancesToLoadBalancer"
            }
        ],
        "Lightsail.AttachLoadBalancerTlsCertificate": [
            {
                "action": "lightsail:AttachLoadBalancerTlsCertificate"
            }
        ],
        "Lightsail.AttachStaticIp": [
            {
                "action": "lightsail:AttachStaticIp"
            }
        ],
        "Lightsail.CloseInstancePublicPorts": [
            {
                "action": "lightsail:CloseInstancePublicPorts"
            }
        ],
        "Lightsail.CopySnapshot": [
            {
                "action": "lightsail:CopySnapshot"
            }
        ],
        "Lightsail.CreateCloudFormationStack": [
            {
                "action": "lightsail:CreateCloudFormationStack"
            }
        ],
        "Lightsail.CreateDisk": [
            {
                "action": "lightsail:CreateDisk"
            }
        ],
        "Lightsail.CreateDiskFromSnapshot": [
            {
                "action": "lightsail:CreateDiskFromSnapshot"
            }
        ],
        "Lightsail.CreateDiskSnapshot": [
            {
                "action": "lightsail:CreateDiskSnapshot"
            }
        ],
        "Lightsail.CreateDomain": [
            {
                "action": "lightsail:CreateDomain"
            }
        ],
        "Lightsail.CreateDomainEntry": [
            {
                "action": "lightsail:CreateDomainEntry"
            }
        ],
        "Lightsail.CreateInstanceSnapshot": [
            {
                "action": "lightsail:CreateInstanceSnapshot"
            }
        ],
        "Lightsail.CreateInstances": [
            {
                "action": "lightsail:CreateInstances"
            }
        ],
        "Lightsail.CreateInstancesFromSnapshot": [
            {
                "action": "lightsail:CreateInstancesFromSnapshot"
            }
        ],
        "Lightsail.CreateKeyPair": [
            {
                "action": "lightsail:CreateKeyPair"
            }
        ],
        "Lightsail.CreateLoadBalancer": [
            {
                "action": "lightsail:CreateLoadBalancer"
            }
        ],
        "Lightsail.CreateLoadBalancerTlsCertificate": [
            {
                "action": "lightsail:CreateLoadBalancerTlsCertificate"
            }
        ],
        "Lightsail.CreateRelationalDatabase": [
            {
                "action": "lightsail:CreateRelationalDatabase"
            }
        ],
        "Lightsail.CreateRelationalDatabaseFromSnapshot": [
            {
                "action": "lightsail:CreateRelationalDatabaseFromSnapshot"
            }
        ],
        "Lightsail.CreateRelationalDatabaseSnapshot": [
            {
                "action": "lightsail:CreateRelationalDatabaseSnapshot"
            }
        ],
        "Lightsail.DeleteDisk": [
            {
                "action": "lightsail:DeleteDisk"
            }
        ],
        "Lightsail.DeleteDiskSnapshot": [
            {
                "action": "lightsail:DeleteDiskSnapshot"
            }
        ],
        "Lightsail.DeleteDomain": [
            {
                "action": "lightsail:DeleteDomain"
            }
        ],
        "Lightsail.DeleteDomainEntry": [
            {
                "action": "lightsail:DeleteDomainEntry"
            }
        ],
        "Lightsail.DeleteInstance": [
            {
                "action": "lightsail:DeleteInstance"
            }
        ],
        "Lightsail.DeleteInstanceSnapshot": [
            {
                "action": "lightsail:DeleteInstanceSnapshot"
            }
        ],
        "Lightsail.DeleteKeyPair": [
            {
                "action": "lightsail:DeleteKeyPair"
            }
        ],
        "Lightsail.DeleteKnownHostKeys": [
            {
                "action": "lightsail:DeleteKnownHostKeys"
            }
        ],
        "Lightsail.DeleteLoadBalancer": [
            {
                "action": "lightsail:DeleteLoadBalancer"
            }
        ],
        "Lightsail.DeleteLoadBalancerTlsCertificate": [
            {
                "action": "lightsail:DeleteLoadBalancerTlsCertificate"
            }
        ],
        "Lightsail.DeleteRelationalDatabase": [
            {
                "action": "lightsail:DeleteRelationalDatabase"
            }
        ],
        "Lightsail.DeleteRelationalDatabaseSnapshot": [
            {
                "action": "lightsail:DeleteRelationalDatabaseSnapshot"
            }
        ],
        "Lightsail.DetachDisk": [
            {
                "action": "lightsail:DetachDisk"
            }
        ],
        "Lightsail.DetachInstancesFromLoadBalancer": [
            {
                "action": "lightsail:DetachInstancesFromLoadBalancer"
            }
        ],
        "Lightsail.DetachStaticIp": [
            {
                "action": "lightsail:DetachStaticIp"
            }
        ],
        "Lightsail.DownloadDefaultKeyPair": [
            {
                "action": "lightsail:DownloadDefaultKeyPair"
            }
        ],
        "Lightsail.ExportSnapshot": [
            {
                "action": "lightsail:ExportSnapshot"
            }
        ],
        "Lightsail.GetActiveNames": [
            {
                "action": "lightsail:GetActiveNames"
            }
        ],
        "Lightsail.GetBlueprints": [
            {
                "action": "lightsail:GetBlueprints"
            }
        ],
        "Lightsail.GetBundles": [
            {
                "action": "lightsail:GetBundles"
            }
        ],
        "Lightsail.GetCloudFormationStackRecords": [
            {
                "action": "lightsail:GetCloudFormationStackRecords"
            }
        ],
        "Lightsail.GetDisk": [
            {
                "action": "lightsail:GetDisk"
            }
        ],
        "Lightsail.GetDiskSnapshot": [
            {
                "action": "lightsail:GetDiskSnapshot"
            }
        ],
        "Lightsail.GetDiskSnapshots": [
            {
                "action": "lightsail:GetDiskSnapshots"
            }
        ],
        "Lightsail.GetDisks": [
            {
                "action": "lightsail:GetDisks"
            }
        ],
        "Lightsail.GetDomain": [
            {
                "action": "lightsail:GetDomain"
            }
        ],
        "Lightsail.GetDomains": [
            {
                "action": "lightsail:GetDomains"
            }
        ],
        "Lightsail.GetExportSnapshotRecords": [
            {
                "action": "lightsail:GetExportSnapshotRecords"
            }
        ],
        "Lightsail.GetInstance": [
            {
                "action": "lightsail:GetInstance"
            }
        ],
        "Lightsail.GetInstanceAccessDetails": [
            {
                "action": "lightsail:GetInstanceAccessDetails"
            }
        ],
        "Lightsail.GetInstanceMetricData": [
            {
                "action": "lightsail:GetInstanceMetricData"
            }
        ],
        "Lightsail.GetInstancePortStates": [
            {
                "action": "lightsail:GetInstancePortStates"
            }
        ],
        "Lightsail.GetInstanceSnapshot": [
            {
                "action": "lightsail:GetInstanceSnapshot"
            }
        ],
        "Lightsail.GetInstanceSnapshots": [
            {
                "action": "lightsail:GetInstanceSnapshots"
            }
        ],
        "Lightsail.GetInstanceState": [
            {
                "action": "lightsail:GetInstanceState"
            }
        ],
        "Lightsail.GetInstances": [
            {
                "action": "lightsail:GetInstances"
            }
        ],
        "Lightsail.GetKeyPair": [
            {
                "action": "lightsail:GetKeyPair"
            }
        ],
        "Lightsail.GetKeyPairs": [
            {
                "action": "lightsail:GetKeyPairs"
            }
        ],
        "Lightsail.GetLoadBalancer": [
            {
                "action": "lightsail:GetLoadBalancer"
            }
        ],
        "Lightsail.GetLoadBalancerMetricData": [
            {
                "action": "lightsail:GetLoadBalancerMetricData"
            }
        ],
        "Lightsail.GetLoadBalancerTlsCertificates": [
            {
                "action": "lightsail:GetLoadBalancerTlsCertificates"
            }
        ],
        "Lightsail.GetLoadBalancers": [
            {
                "action": "lightsail:GetLoadBalancers"
            }
        ],
        "Lightsail.GetOperation": [
            {
                "action": "lightsail:GetOperation"
            }
        ],
        "Lightsail.GetOperations": [
            {
                "action": "lightsail:GetOperations"
            }
        ],
        "Lightsail.GetOperationsForResource": [
            {
                "action": "lightsail:GetOperationsForResource"
            }
        ],
        "Lightsail.GetRegions": [
            {
                "action": "lightsail:GetRegions"
            }
        ],
        "Lightsail.GetRelationalDatabase": [
            {
                "action": "lightsail:GetRelationalDatabase"
            }
        ],
        "Lightsail.GetRelationalDatabaseBlueprints": [
            {
                "action": "lightsail:GetRelationalDatabaseBlueprints"
            }
        ],
        "Lightsail.GetRelationalDatabaseBundles": [
            {
                "action": "lightsail:GetRelationalDatabaseBundles"
            }
        ],
        "Lightsail.GetRelationalDatabaseEvents": [
            {
                "action": "lightsail:GetRelationalDatabaseEvents"
            }
        ],
        "Lightsail.GetRelationalDatabaseLogEvents": [
            {
                "action": "lightsail:GetRelationalDatabaseLogEvents"
            }
        ],
        "Lightsail.GetRelationalDatabaseLogStreams": [
            {
                "action": "lightsail:GetRelationalDatabaseLogStreams"
            }
        ],
        "Lightsail.GetRelationalDatabaseMasterUserPassword": [
            {
                "action": "lightsail:GetRelationalDatabaseMasterUserPassword"
            }
        ],
        "Lightsail.GetRelationalDatabaseMetricData": [
            {
                "action": "lightsail:GetRelationalDatabaseMetricData"
            }
        ],
        "Lightsail.GetRelationalDatabaseParameters": [
            {
                "action": "lightsail:GetRelationalDatabaseParameters"
            }
        ],
        "Lightsail.GetRelationalDatabaseSnapshot": [
            {
                "action": "lightsail:GetRelationalDatabaseSnapshot"
            }
        ],
        "Lightsail.GetRelationalDatabaseSnapshots": [
            {
                "action": "lightsail:GetRelationalDatabaseSnapshots"
            }
        ],
        "Lightsail.GetRelationalDatabases": [
            {
                "action": "lightsail:GetRelationalDatabases"
            }
        ],
        "Lightsail.GetStaticIp": [
            {
                "action": "lightsail:GetStaticIp"
            }
        ],
        "Lightsail.GetStaticIps": [
            {
                "action": "lightsail:GetStaticIps"
            }
        ],
        "Lightsail.ImportKeyPair": [
            {
                "action": "lightsail:ImportKeyPair"
            }
        ],
        "Lightsail.IsVpcPeered": [
            {
                "action": "lightsail:IsVpcPeered"
            }
        ],
        "Lightsail.OpenInstancePublicPorts": [
            {
                "action": "lightsail:OpenInstancePublicPorts"
            }
        ],
        "Lightsail.PeerVpc": [
            {
                "action": "lightsail:PeerVpc"
            }
        ],
        "Lightsail.PutInstancePublicPorts": [
            {
                "action": "lightsail:PutInstancePublicPorts"
            }
        ],
        "Lightsail.RebootInstance": [
            {
                "action": "lightsail:RebootInstance"
            }
        ],
        "Lightsail.RebootRelationalDatabase": [
            {
                "action": "lightsail:RebootRelationalDatabase"
            }
        ],
        "Lightsail.ReleaseStaticIp": [
            {
                "action": "lightsail:ReleaseStaticIp"
            }
        ],
        "Lightsail.StartInstance": [
            {
                "action": "lightsail:StartInstance"
            }
        ],
        "Lightsail.StartRelationalDatabase": [
            {
                "action": "lightsail:StartRelationalDatabase"
            }
        ],
        "Lightsail.StopInstance": [
            {
                "action": "lightsail:StopInstance"
            }
        ],
        "Lightsail.StopRelationalDatabase": [
            {
                "action": "lightsail:StopRelationalDatabase"
            }
        ],
        "Lightsail.TagResource": [
            {
                "action": "lightsail:TagResource"
            }
        ],
        "Lightsail.UnpeerVpc": [
            {
                "action": "lightsail:UnpeerVpc"
            }
        ],
        "Lightsail.UntagResource": [
            {
                "action": "lightsail:UntagResource"
            }
        ],
        "Lightsail.UpdateDomainEntry": [
            {
                "action": "lightsail:UpdateDomainEntry"
            }
        ],
        "Lightsail.UpdateLoadBalancerAttribute": [
            {
                "action": "lightsail:UpdateLoadBalancerAttribute"
            }
        ],
        "Lightsail.UpdateRelationalDatabase": [
            {
                "action": "lightsail:UpdateRelationalDatabase"
            }
        ],
        "Lightsail.UpdateRelationalDatabaseParameters": [
            {
                "action": "lightsail:UpdateRelationalDatabaseParameters"
            }
        ],
        "MachineLearning.AddTags": [
            {
                "action": "machinelearning:AddTags"
            }
        ],
        "MachineLearning.CreateBatchPrediction": [
            {
                "action": "machinelearning:CreateBatchPrediction"
            }
        ],
        "MachineLearning.CreateDataSourceFromRDS": [
            {
                "action": "machinelearning:CreateDataSourceFromRDS"
            }
        ],
        "MachineLearning.CreateDataSourceFromRedshift": [
            {
                "action": "machinelearning:CreateDataSourceFromRedshift"
            }
        ],
        "MachineLearning.CreateDataSourceFromS3": [
            {
                "action": "machinelearning:CreateDataSourceFromS3"
            }
        ],
        "MachineLearning.CreateEvaluation": [
            {
                "action": "machinelearning:CreateEvaluation"
            }
        ],
        "MachineLearning.CreateMLModel": [
            {
                "action": "machinelearning:CreateMLModel"
            }
        ],
        "MachineLearning.CreateRealtimeEndpoint": [
            {
                "action": "machinelearning:CreateRealtimeEndpoint"
            }
        ],
        "MachineLearning.DeleteBatchPrediction": [
            {
                "action": "machinelearning:DeleteBatchPrediction"
            }
        ],
        "MachineLearning.DeleteDataSource": [
            {
                "action": "machinelearning:DeleteDataSource"
            }
        ],
        "MachineLearning.DeleteEvaluation": [
            {
                "action": "machinelearning:DeleteEvaluation"
            }
        ],
        "MachineLearning.DeleteMLModel": [
            {
                "action": "machinelearning:DeleteMLModel"
            }
        ],
        "MachineLearning.DeleteRealtimeEndpoint": [
            {
                "action": "machinelearning:DeleteRealtimeEndpoint"
            }
        ],
        "MachineLearning.DeleteTags": [
            {
                "action": "machinelearning:DeleteTags"
            }
        ],
        "MachineLearning.DescribeBatchPredictions": [
            {
                "action": "machinelearning:DescribeBatchPredictions"
            }
        ],
        "MachineLearning.DescribeDataSources": [
            {
                "action": "machinelearning:DescribeDataSources"
            }
        ],
        "MachineLearning.DescribeEvaluations": [
            {
                "action": "machinelearning:DescribeEvaluations"
            }
        ],
        "MachineLearning.DescribeMLModels": [
            {
                "action": "machinelearning:DescribeMLModels"
            }
        ],
        "MachineLearning.DescribeTags": [
            {
                "action": "machinelearning:DescribeTags"
            }
        ],
        "MachineLearning.GetBatchPrediction": [
            {
                "action": "machinelearning:GetBatchPrediction"
            }
        ],
        "MachineLearning.GetDataSource": [
            {
                "action": "machinelearning:GetDataSource"
            }
        ],
        "MachineLearning.GetEvaluation": [
            {
                "action": "machinelearning:GetEvaluation"
            }
        ],
        "MachineLearning.GetMLModel": [
            {
                "action": "machinelearning:GetMLModel"
            }
        ],
        "MachineLearning.Predict": [
            {
                "action": "machinelearning:Predict"
            }
        ],
        "MachineLearning.UpdateBatchPrediction": [
            {
                "action": "machinelearning:UpdateBatchPrediction"
            }
        ],
        "MachineLearning.UpdateDataSource": [
            {
                "action": "machinelearning:UpdateDataSource"
            }
        ],
        "MachineLearning.UpdateEvaluation": [
            {
                "action": "machinelearning:UpdateEvaluation"
            }
        ],
        "MachineLearning.UpdateMLModel": [
            {
                "action": "machinelearning:UpdateMLModel"
            }
        ],
        "MarketplaceCommerceAnalytics.GenerateDataSet": [
            {
                "action": "marketplacecommerceanalytics:GenerateDataSet"
            }
        ],
        "MarketplaceCommerceAnalytics.StartSupportDataExport": [
            {
                "action": "marketplacecommerceanalytics:StartSupportDataExport"
            }
        ],
        "MarketplaceMetering.BatchMeterUsage": [
            {
                "action": "aws-marketplace:BatchMeterUsage"
            }
        ],
        "MarketplaceMetering.MeterUsage": [
            {
                "action": "aws-marketplace:MeterUsage"
            }
        ],
        "MarketplaceMetering.RegisterUsage": [
            {
                "action": "aws-marketplace:RegisterUsage"
            }
        ],
        "MarketplaceMetering.ResolveCustomer": [
            {
                "action": "aws-marketplace:ResolveCustomer"
            }
        ],
        "MTurk.AcceptQualificationRequest": [
            {
                "action": "mechanicalturk:AcceptQualificationRequest"
            }
        ],
        "MTurk.ApproveAssignment": [
            {
                "action": "mechanicalturk:ApproveAssignment"
            }
        ],
        "MTurk.AssociateQualificationWithWorker": [
            {
                "action": "mechanicalturk:AssociateQualificationWithWorker"
            }
        ],
        "MTurk.CreateAdditionalAssignmentsForHIT": [
            {
                "action": "mechanicalturk:CreateAdditionalAssignmentsForHIT"
            }
        ],
        "MTurk.CreateHIT": [
            {
                "action": "mechanicalturk:CreateHIT"
            }
        ],
        "MTurk.CreateHITType": [
            {
                "action": "mechanicalturk:CreateHITType"
            }
        ],
        "MTurk.CreateHITWithHITType": [
            {
                "action": "mechanicalturk:CreateHITWithHITType"
            }
        ],
        "MTurk.CreateQualificationType": [
            {
                "action": "mechanicalturk:CreateQualificationType"
            }
        ],
        "MTurk.CreateWorkerBlock": [
            {
                "action": "mechanicalturk:CreateWorkerBlock"
            }
        ],
        "MTurk.DeleteHIT": [
            {
                "action": "mechanicalturk:DeleteHIT"
            }
        ],
        "MTurk.DeleteQualificationType": [
            {
                "action": "mechanicalturk:DeleteQualificationType"
            }
        ],
        "MTurk.DeleteWorkerBlock": [
            {
                "action": "mechanicalturk:DeleteWorkerBlock"
            }
        ],
        "MTurk.DisassociateQualificationFromWorker": [
            {
                "action": "mechanicalturk:DisassociateQualificationFromWorker"
            }
        ],
        "MTurk.GetAccountBalance": [
            {
                "action": "mechanicalturk:GetAccountBalance"
            }
        ],
        "MTurk.GetAssignment": [
            {
                "action": "mechanicalturk:GetAssignment"
            }
        ],
        "MTurk.GetFileUploadURL": [
            {
                "action": "mechanicalturk:GetFileUploadURL"
            }
        ],
        "MTurk.GetHIT": [
            {
                "action": "mechanicalturk:GetHIT"
            }
        ],
        "MTurk.GetQualificationScore": [
            {
                "action": "mechanicalturk:GetQualificationScore"
            }
        ],
        "MTurk.GetQualificationType": [
            {
                "action": "mechanicalturk:GetQualificationType"
            }
        ],
        "MTurk.ListAssignmentsForHIT": [
            {
                "action": "mechanicalturk:ListAssignmentsForHIT"
            }
        ],
        "MTurk.ListBonusPayments": [
            {
                "action": "mechanicalturk:ListBonusPayments"
            }
        ],
        "MTurk.ListHITs": [
            {
                "action": "mechanicalturk:ListHITs"
            }
        ],
        "MTurk.ListHITsForQualificationType": [
            {
                "action": "mechanicalturk:ListHITsForQualificationType"
            }
        ],
        "MTurk.ListQualificationRequests": [
            {
                "action": "mechanicalturk:ListQualificationRequests"
            }
        ],
        "MTurk.ListQualificationTypes": [
            {
                "action": "mechanicalturk:ListQualificationTypes"
            }
        ],
        "MTurk.ListReviewPolicyResultsForHIT": [
            {
                "action": "mechanicalturk:ListReviewPolicyResultsForHIT"
            }
        ],
        "MTurk.ListReviewableHITs": [
            {
                "action": "mechanicalturk:ListReviewableHITs"
            }
        ],
        "MTurk.ListWorkerBlocks": [
            {
                "action": "mechanicalturk:ListWorkerBlocks"
            }
        ],
        "MTurk.ListWorkersWithQualificationType": [
            {
                "action": "mechanicalturk:ListWorkersWithQualificationType"
            }
        ],
        "MTurk.NotifyWorkers": [
            {
                "action": "mechanicalturk:NotifyWorkers"
            }
        ],
        "MTurk.RejectAssignment": [
            {
                "action": "mechanicalturk:RejectAssignment"
            }
        ],
        "MTurk.RejectQualificationRequest": [
            {
                "action": "mechanicalturk:RejectQualificationRequest"
            }
        ],
        "MTurk.SendBonus": [
            {
                "action": "mechanicalturk:SendBonus"
            }
        ],
        "MTurk.SendTestEventNotification": [
            {
                "action": "mechanicalturk:SendTestEventNotification"
            }
        ],
        "MTurk.UpdateExpirationForHIT": [
            {
                "action": "mechanicalturk:UpdateExpirationForHIT"
            }
        ],
        "MTurk.UpdateHITReviewStatus": [
            {
                "action": "mechanicalturk:UpdateHITReviewStatus"
            }
        ],
        "MTurk.UpdateHITTypeOfHIT": [
            {
                "action": "mechanicalturk:UpdateHITTypeOfHIT"
            }
        ],
        "MTurk.UpdateNotificationSettings": [
            {
                "action": "mechanicalturk:UpdateNotificationSettings"
            }
        ],
        "MTurk.UpdateQualificationType": [
            {
                "action": "mechanicalturk:UpdateQualificationType"
            }
        ],
        "MobileAnalytics.PutEvents": [
            {
                "action": "mobileanalytics:PutEvents"
            }
        ],
        "OpsWorks.AssignInstance": [
            {
                "action": "opsworks:AssignInstance"
            }
        ],
        "OpsWorks.AssignVolume": [
            {
                "action": "opsworks:AssignVolume"
            }
        ],
        "OpsWorks.AssociateElasticIp": [
            {
                "action": "opsworks:AssociateElasticIp"
            }
        ],
        "OpsWorks.AttachElasticLoadBalancer": [
            {
                "action": "opsworks:AttachElasticLoadBalancer"
            }
        ],
        "OpsWorks.CloneStack": [
            {
                "action": "opsworks:CloneStack"
            }
        ],
        "OpsWorks.CreateApp": [
            {
                "action": "opsworks:CreateApp"
            }
        ],
        "OpsWorks.CreateDeployment": [
            {
                "action": "opsworks:CreateDeployment"
            }
        ],
        "OpsWorks.CreateInstance": [
            {
                "action": "opsworks:CreateInstance"
            }
        ],
        "OpsWorks.CreateLayer": [
            {
                "action": "opsworks:CreateLayer"
            }
        ],
        "OpsWorks.CreateStack": [
            {
                "action": "opsworks:CreateStack"
            }
        ],
        "OpsWorks.CreateUserProfile": [
            {
                "action": "opsworks:CreateUserProfile"
            }
        ],
        "OpsWorks.DeleteApp": [
            {
                "action": "opsworks:DeleteApp"
            }
        ],
        "OpsWorks.DeleteInstance": [
            {
                "action": "opsworks:DeleteInstance"
            }
        ],
        "OpsWorks.DeleteLayer": [
            {
                "action": "opsworks:DeleteLayer"
            }
        ],
        "OpsWorks.DeleteStack": [
            {
                "action": "opsworks:DeleteStack"
            }
        ],
        "OpsWorks.DeleteUserProfile": [
            {
                "action": "opsworks:DeleteUserProfile"
            }
        ],
        "OpsWorks.DeregisterEcsCluster": [
            {
                "action": "opsworks:DeregisterEcsCluster"
            }
        ],
        "OpsWorks.DeregisterElasticIp": [
            {
                "action": "opsworks:DeregisterElasticIp"
            }
        ],
        "OpsWorks.DeregisterInstance": [
            {
                "action": "opsworks:DeregisterInstance"
            }
        ],
        "OpsWorks.DeregisterRdsDbInstance": [
            {
                "action": "opsworks:DeregisterRdsDbInstance"
            }
        ],
        "OpsWorks.DeregisterVolume": [
            {
                "action": "opsworks:DeregisterVolume"
            }
        ],
        "OpsWorks.DescribeAgentVersions": [
            {
                "action": "opsworks:DescribeAgentVersions"
            }
        ],
        "OpsWorks.DescribeApps": [
            {
                "action": "opsworks:DescribeApps"
            }
        ],
        "OpsWorks.DescribeCommands": [
            {
                "action": "opsworks:DescribeCommands"
            }
        ],
        "OpsWorks.DescribeDeployments": [
            {
                "action": "opsworks:DescribeDeployments"
            }
        ],
        "OpsWorks.DescribeEcsClusters": [
            {
                "action": "opsworks:DescribeEcsClusters"
            }
        ],
        "OpsWorks.DescribeElasticIps": [
            {
                "action": "opsworks:DescribeElasticIps"
            }
        ],
        "OpsWorks.DescribeElasticLoadBalancers": [
            {
                "action": "opsworks:DescribeElasticLoadBalancers"
            }
        ],
        "OpsWorks.DescribeInstances": [
            {
                "action": "opsworks:DescribeInstances"
            }
        ],
        "OpsWorks.DescribeLayers": [
            {
                "action": "opsworks:DescribeLayers"
            }
        ],
        "OpsWorks.DescribeLoadBasedAutoScaling": [
            {
                "action": "opsworks:DescribeLoadBasedAutoScaling"
            }
        ],
        "OpsWorks.DescribeMyUserProfile": [
            {
                "action": "opsworks:DescribeMyUserProfile"
            }
        ],
        "OpsWorks.DescribePermissions": [
            {
                "action": "opsworks:DescribePermissions"
            }
        ],
        "OpsWorks.DescribeRaidArrays": [
            {
                "action": "opsworks:DescribeRaidArrays"
            }
        ],
        "OpsWorks.DescribeRdsDbInstances": [
            {
                "action": "opsworks:DescribeRdsDbInstances"
            }
        ],
        "OpsWorks.DescribeServiceErrors": [
            {
                "action": "opsworks:DescribeServiceErrors"
            }
        ],
        "OpsWorks.DescribeStackProvisioningParameters": [
            {
                "action": "opsworks:DescribeStackProvisioningParameters"
            }
        ],
        "OpsWorks.DescribeStackSummary": [
            {
                "action": "opsworks:DescribeStackSummary"
            }
        ],
        "OpsWorks.DescribeStacks": [
            {
                "action": "opsworks:DescribeStacks"
            }
        ],
        "OpsWorks.DescribeTimeBasedAutoScaling": [
            {
                "action": "opsworks:DescribeTimeBasedAutoScaling"
            }
        ],
        "OpsWorks.DescribeUserProfiles": [
            {
                "action": "opsworks:DescribeUserProfiles"
            }
        ],
        "OpsWorks.DescribeVolumes": [
            {
                "action": "opsworks:DescribeVolumes"
            }
        ],
        "OpsWorks.DetachElasticLoadBalancer": [
            {
                "action": "opsworks:DetachElasticLoadBalancer"
            }
        ],
        "OpsWorks.DisassociateElasticIp": [
            {
                "action": "opsworks:DisassociateElasticIp"
            }
        ],
        "OpsWorks.GetHostnameSuggestion": [
            {
                "action": "opsworks:GetHostnameSuggestion"
            }
        ],
        "OpsWorks.GrantAccess": [
            {
                "action": "opsworks:GrantAccess"
            }
        ],
        "OpsWorks.ListTags": [
            {
                "action": "opsworks:ListTags"
            }
        ],
        "OpsWorks.RebootInstance": [
            {
                "action": "opsworks:RebootInstance"
            }
        ],
        "OpsWorks.RegisterEcsCluster": [
            {
                "action": "opsworks:RegisterEcsCluster"
            }
        ],
        "OpsWorks.RegisterElasticIp": [
            {
                "action": "opsworks:RegisterElasticIp"
            }
        ],
        "OpsWorks.RegisterInstance": [
            {
                "action": "opsworks:RegisterInstance"
            }
        ],
        "OpsWorks.RegisterRdsDbInstance": [
            {
                "action": "opsworks:RegisterRdsDbInstance"
            }
        ],
        "OpsWorks.RegisterVolume": [
            {
                "action": "opsworks:RegisterVolume"
            }
        ],
        "OpsWorks.SetLoadBasedAutoScaling": [
            {
                "action": "opsworks:SetLoadBasedAutoScaling"
            }
        ],
        "OpsWorks.SetPermission": [
            {
                "action": "opsworks:SetPermission"
            }
        ],
        "OpsWorks.SetTimeBasedAutoScaling": [
            {
                "action": "opsworks:SetTimeBasedAutoScaling"
            }
        ],
        "OpsWorks.StartInstance": [
            {
                "action": "opsworks:StartInstance"
            }
        ],
        "OpsWorks.StartStack": [
            {
                "action": "opsworks:StartStack"
            }
        ],
        "OpsWorks.StopInstance": [
            {
                "action": "opsworks:StopInstance"
            }
        ],
        "OpsWorks.StopStack": [
            {
                "action": "opsworks:StopStack"
            }
        ],
        "OpsWorks.TagResource": [
            {
                "action": "opsworks:TagResource"
            }
        ],
        "OpsWorks.UnassignInstance": [
            {
                "action": "opsworks:UnassignInstance"
            }
        ],
        "OpsWorks.UnassignVolume": [
            {
                "action": "opsworks:UnassignVolume"
            }
        ],
        "OpsWorks.UntagResource": [
            {
                "action": "opsworks:UntagResource"
            }
        ],
        "OpsWorks.UpdateApp": [
            {
                "action": "opsworks:UpdateApp"
            }
        ],
        "OpsWorks.UpdateElasticIp": [
            {
                "action": "opsworks:UpdateElasticIp"
            }
        ],
        "OpsWorks.UpdateInstance": [
            {
                "action": "opsworks:UpdateInstance"
            }
        ],
        "OpsWorks.UpdateLayer": [
            {
                "action": "opsworks:UpdateLayer"
            }
        ],
        "OpsWorks.UpdateMyUserProfile": [
            {
                "action": "opsworks:UpdateMyUserProfile"
            }
        ],
        "OpsWorks.UpdateRdsDbInstance": [
            {
                "action": "opsworks:UpdateRdsDbInstance"
            }
        ],
        "OpsWorks.UpdateStack": [
            {
                "action": "opsworks:UpdateStack"
            }
        ],
        "OpsWorks.UpdateUserProfile": [
            {
                "action": "opsworks:UpdateUserProfile"
            }
        ],
        "OpsWorks.UpdateVolume": [
            {
                "action": "opsworks:UpdateVolume"
            }
        ],
        "OpsWorksCM.AssociateNode": [
            {
                "action": "opsworks-cm:AssociateNode"
            }
        ],
        "OpsWorksCM.CreateBackup": [
            {
                "action": "opsworks-cm:CreateBackup"
            }
        ],
        "OpsWorksCM.CreateServer": [
            {
                "action": "opsworks-cm:CreateServer"
            }
        ],
        "OpsWorksCM.DeleteBackup": [
            {
                "action": "opsworks-cm:DeleteBackup"
            }
        ],
        "OpsWorksCM.DeleteServer": [
            {
                "action": "opsworks-cm:DeleteServer"
            }
        ],
        "OpsWorksCM.DescribeAccountAttributes": [
            {
                "action": "opsworks-cm:DescribeAccountAttributes"
            }
        ],
        "OpsWorksCM.DescribeBackups": [
            {
                "action": "opsworks-cm:DescribeBackups"
            }
        ],
        "OpsWorksCM.DescribeEvents": [
            {
                "action": "opsworks-cm:DescribeEvents"
            }
        ],
        "OpsWorksCM.DescribeNodeAssociationStatus": [
            {
                "action": "opsworks-cm:DescribeNodeAssociationStatus"
            }
        ],
        "OpsWorksCM.DescribeServers": [
            {
                "action": "opsworks-cm:DescribeServers"
            }
        ],
        "OpsWorksCM.DisassociateNode": [
            {
                "action": "opsworks-cm:DisassociateNode"
            }
        ],
        "OpsWorksCM.ListTagsForResource": [
            {
                "action": "opsworks-cm:ListTagsForResource"
            }
        ],
        "OpsWorksCM.RestoreServer": [
            {
                "action": "opsworks-cm:RestoreServer"
            }
        ],
        "OpsWorksCM.StartMaintenance": [
            {
                "action": "opsworks-cm:StartMaintenance"
            }
        ],
        "OpsWorksCM.TagResource": [
            {
                "action": "opsworks-cm:TagResource"
            }
        ],
        "OpsWorksCM.UntagResource": [
            {
                "action": "opsworks-cm:UntagResource"
            }
        ],
        "OpsWorksCM.UpdateServer": [
            {
                "action": "opsworks-cm:UpdateServer"
            }
        ],
        "OpsWorksCM.UpdateServerEngineAttributes": [
            {
                "action": "opsworks-cm:UpdateServerEngineAttributes"
            }
        ],
        "Organizations.AcceptHandshake": [
            {
                "action": "organizations:AcceptHandshake"
            }
        ],
        "Organizations.AttachPolicy": [
            {
                "action": "organizations:AttachPolicy"
            }
        ],
        "Organizations.CancelHandshake": [
            {
                "action": "organizations:CancelHandshake"
            }
        ],
        "Organizations.CreateAccount": [
            {
                "action": "organizations:CreateAccount"
            }
        ],
        "Organizations.CreateGovCloudAccount": [
            {
                "action": "organizations:CreateGovCloudAccount"
            }
        ],
        "Organizations.CreateOrganization": [
            {
                "action": "organizations:CreateOrganization"
            }
        ],
        "Organizations.CreateOrganizationalUnit": [
            {
                "action": "organizations:CreateOrganizationalUnit"
            }
        ],
        "Organizations.CreatePolicy": [
            {
                "action": "organizations:CreatePolicy"
            }
        ],
        "Organizations.DeclineHandshake": [
            {
                "action": "organizations:DeclineHandshake"
            }
        ],
        "Organizations.DeleteOrganization": [
            {
                "action": "organizations:DeleteOrganization"
            }
        ],
        "Organizations.DeleteOrganizationalUnit": [
            {
                "action": "organizations:DeleteOrganizationalUnit"
            }
        ],
        "Organizations.DeletePolicy": [
            {
                "action": "organizations:DeletePolicy"
            }
        ],
        "Organizations.DeregisterDelegatedAdministrator": [
            {
                "action": "organizations:DeregisterDelegatedAdministrator"
            }
        ],
        "Organizations.DescribeAccount": [
            {
                "action": "organizations:DescribeAccount"
            }
        ],
        "Organizations.DescribeCreateAccountStatus": [
            {
                "action": "organizations:DescribeCreateAccountStatus"
            }
        ],
        "Organizations.DescribeEffectivePolicy": [
            {
                "action": "organizations:DescribeEffectivePolicy"
            }
        ],
        "Organizations.DescribeHandshake": [
            {
                "action": "organizations:DescribeHandshake"
            }
        ],
        "Organizations.DescribeOrganization": [
            {
                "action": "organizations:DescribeOrganization"
            }
        ],
        "Organizations.DescribeOrganizationalUnit": [
            {
                "action": "organizations:DescribeOrganizationalUnit"
            }
        ],
        "Organizations.DescribePolicy": [
            {
                "action": "organizations:DescribePolicy"
            }
        ],
        "Organizations.DetachPolicy": [
            {
                "action": "organizations:DetachPolicy"
            }
        ],
        "Organizations.DisableAWSServiceAccess": [
            {
                "action": "organizations:DisableAWSServiceAccess"
            }
        ],
        "Organizations.DisablePolicyType": [
            {
                "action": "organizations:DisablePolicyType"
            }
        ],
        "Organizations.EnableAWSServiceAccess": [
            {
                "action": "organizations:EnableAWSServiceAccess"
            }
        ],
        "Organizations.EnableAllFeatures": [
            {
                "action": "organizations:EnableAllFeatures"
            }
        ],
        "Organizations.EnablePolicyType": [
            {
                "action": "organizations:EnablePolicyType"
            }
        ],
        "Organizations.InviteAccountToOrganization": [
            {
                "action": "organizations:InviteAccountToOrganization"
            }
        ],
        "Organizations.LeaveOrganization": [
            {
                "action": "organizations:LeaveOrganization"
            }
        ],
        "Organizations.ListAWSServiceAccessForOrganization": [
            {
                "action": "organizations:ListAWSServiceAccessForOrganization"
            }
        ],
        "Organizations.ListAccounts": [
            {
                "action": "organizations:ListAccounts"
            }
        ],
        "Organizations.ListAccountsForParent": [
            {
                "action": "organizations:ListAccountsForParent"
            }
        ],
        "Organizations.ListChildren": [
            {
                "action": "organizations:ListChildren"
            }
        ],
        "Organizations.ListCreateAccountStatus": [
            {
                "action": "organizations:ListCreateAccountStatus"
            }
        ],
        "Organizations.ListDelegatedAdministrators": [
            {
                "action": "organizations:ListDelegatedAdministrators"
            }
        ],
        "Organizations.ListDelegatedServicesForAccount": [
            {
                "action": "organizations:ListDelegatedServicesForAccount"
            }
        ],
        "Organizations.ListHandshakesForAccount": [
            {
                "action": "organizations:ListHandshakesForAccount"
            }
        ],
        "Organizations.ListHandshakesForOrganization": [
            {
                "action": "organizations:ListHandshakesForOrganization"
            }
        ],
        "Organizations.ListOrganizationalUnitsForParent": [
            {
                "action": "organizations:ListOrganizationalUnitsForParent"
            }
        ],
        "Organizations.ListParents": [
            {
                "action": "organizations:ListParents"
            }
        ],
        "Organizations.ListPolicies": [
            {
                "action": "organizations:ListPolicies"
            }
        ],
        "Organizations.ListPoliciesForTarget": [
            {
                "action": "organizations:ListPoliciesForTarget"
            }
        ],
        "Organizations.ListRoots": [
            {
                "action": "organizations:ListRoots"
            }
        ],
        "Organizations.ListTagsForResource": [
            {
                "action": "organizations:ListTagsForResource"
            }
        ],
        "Organizations.ListTargetsForPolicy": [
            {
                "action": "organizations:ListTargetsForPolicy"
            }
        ],
        "Organizations.MoveAccount": [
            {
                "action": "organizations:MoveAccount"
            }
        ],
        "Organizations.RegisterDelegatedAdministrator": [
            {
                "action": "organizations:RegisterDelegatedAdministrator"
            }
        ],
        "Organizations.RemoveAccountFromOrganization": [
            {
                "action": "organizations:RemoveAccountFromOrganization"
            }
        ],
        "Organizations.TagResource": [
            {
                "action": "organizations:TagResource"
            }
        ],
        "Organizations.UntagResource": [
            {
                "action": "organizations:UntagResource"
            }
        ],
        "Organizations.UpdateOrganizationalUnit": [
            {
                "action": "organizations:UpdateOrganizationalUnit"
            }
        ],
        "Organizations.UpdatePolicy": [
            {
                "action": "organizations:UpdatePolicy"
            }
        ],
        "Pinpoint.CreateApp": [
            {
                "action": "mobiletargeting:CreateApp"
            }
        ],
        "Pinpoint.CreateCampaign": [
            {
                "action": "mobiletargeting:CreateCampaign"
            }
        ],
        "Pinpoint.CreateEmailTemplate": [
            {
                "action": "mobiletargeting:CreateEmailTemplate"
            }
        ],
        "Pinpoint.CreateExportJob": [
            {
                "action": "mobiletargeting:CreateExportJob"
            }
        ],
        "Pinpoint.CreateImportJob": [
            {
                "action": "mobiletargeting:CreateImportJob"
            }
        ],
        "Pinpoint.CreateJourney": [
            {
                "action": "mobiletargeting:CreateJourney"
            }
        ],
        "Pinpoint.CreatePushTemplate": [
            {
                "action": "mobiletargeting:CreatePushTemplate"
            }
        ],
        "Pinpoint.CreateRecommenderConfiguration": [
            {
                "action": "mobiletargeting:CreateRecommenderConfiguration"
            }
        ],
        "Pinpoint.CreateSegment": [
            {
                "action": "mobiletargeting:CreateSegment"
            }
        ],
        "Pinpoint.CreateSmsTemplate": [
            {
                "action": "mobiletargeting:CreateSmsTemplate"
            }
        ],
        "Pinpoint.CreateVoiceTemplate": [
            {
                "action": "mobiletargeting:CreateVoiceTemplate"
            }
        ],
        "Pinpoint.DeleteAdmChannel": [
            {
                "action": "mobiletargeting:DeleteAdmChannel"
            }
        ],
        "Pinpoint.DeleteApnsChannel": [
            {
                "action": "mobiletargeting:DeleteApnsChannel"
            }
        ],
        "Pinpoint.DeleteApnsSandboxChannel": [
            {
                "action": "mobiletargeting:DeleteApnsSandboxChannel"
            }
        ],
        "Pinpoint.DeleteApnsVoipChannel": [
            {
                "action": "mobiletargeting:DeleteApnsVoipChannel"
            }
        ],
        "Pinpoint.DeleteApnsVoipSandboxChannel": [
            {
                "action": "mobiletargeting:DeleteApnsVoipSandboxChannel"
            }
        ],
        "Pinpoint.DeleteApp": [
            {
                "action": "mobiletargeting:DeleteApp"
            }
        ],
        "Pinpoint.DeleteBaiduChannel": [
            {
                "action": "mobiletargeting:DeleteBaiduChannel"
            }
        ],
        "Pinpoint.DeleteCampaign": [
            {
                "action": "mobiletargeting:DeleteCampaign"
            }
        ],
        "Pinpoint.DeleteEmailChannel": [
            {
                "action": "mobiletargeting:DeleteEmailChannel"
            }
        ],
        "Pinpoint.DeleteEmailTemplate": [
            {
                "action": "mobiletargeting:DeleteEmailTemplate"
            }
        ],
        "Pinpoint.DeleteEndpoint": [
            {
                "action": "mobiletargeting:DeleteEndpoint"
            }
        ],
        "Pinpoint.DeleteEventStream": [
            {
                "action": "mobiletargeting:DeleteEventStream"
            }
        ],
        "Pinpoint.DeleteGcmChannel": [
            {
                "action": "mobiletargeting:DeleteGcmChannel"
            }
        ],
        "Pinpoint.DeleteJourney": [
            {
                "action": "mobiletargeting:DeleteJourney"
            }
        ],
        "Pinpoint.DeletePushTemplate": [
            {
                "action": "mobiletargeting:DeletePushTemplate"
            }
        ],
        "Pinpoint.DeleteRecommenderConfiguration": [
            {
                "action": "mobiletargeting:DeleteRecommenderConfiguration"
            }
        ],
        "Pinpoint.DeleteSegment": [
            {
                "action": "mobiletargeting:DeleteSegment"
            }
        ],
        "Pinpoint.DeleteSmsChannel": [
            {
                "action": "mobiletargeting:DeleteSmsChannel"
            }
        ],
        "Pinpoint.DeleteSmsTemplate": [
            {
                "action": "mobiletargeting:DeleteSmsTemplate"
            }
        ],
        "Pinpoint.DeleteUserEndpoints": [
            {
                "action": "mobiletargeting:DeleteUserEndpoints"
            }
        ],
        "Pinpoint.DeleteVoiceChannel": [
            {
                "action": "mobiletargeting:DeleteVoiceChannel"
            }
        ],
        "Pinpoint.DeleteVoiceTemplate": [
            {
                "action": "mobiletargeting:DeleteVoiceTemplate"
            }
        ],
        "Pinpoint.GetAdmChannel": [
            {
                "action": "mobiletargeting:GetAdmChannel"
            }
        ],
        "Pinpoint.GetApnsChannel": [
            {
                "action": "mobiletargeting:GetApnsChannel"
            }
        ],
        "Pinpoint.GetApnsSandboxChannel": [
            {
                "action": "mobiletargeting:GetApnsSandboxChannel"
            }
        ],
        "Pinpoint.GetApnsVoipChannel": [
            {
                "action": "mobiletargeting:GetApnsVoipChannel"
            }
        ],
        "Pinpoint.GetApnsVoipSandboxChannel": [
            {
                "action": "mobiletargeting:GetApnsVoipSandboxChannel"
            }
        ],
        "Pinpoint.GetApp": [
            {
                "action": "mobiletargeting:GetApp"
            }
        ],
        "Pinpoint.GetApplicationSettings": [
            {
                "action": "mobiletargeting:GetApplicationSettings"
            }
        ],
        "Pinpoint.GetApps": [
            {
                "action": "mobiletargeting:GetApps"
            }
        ],
        "Pinpoint.GetBaiduChannel": [
            {
                "action": "mobiletargeting:GetBaiduChannel"
            }
        ],
        "Pinpoint.GetCampaign": [
            {
                "action": "mobiletargeting:GetCampaign"
            }
        ],
        "Pinpoint.GetCampaignActivities": [
            {
                "action": "mobiletargeting:GetCampaignActivities"
            }
        ],
        "Pinpoint.GetCampaignVersion": [
            {
                "action": "mobiletargeting:GetCampaignVersion"
            }
        ],
        "Pinpoint.GetCampaignVersions": [
            {
                "action": "mobiletargeting:GetCampaignVersions"
            }
        ],
        "Pinpoint.GetCampaigns": [
            {
                "action": "mobiletargeting:GetCampaigns"
            }
        ],
        "Pinpoint.GetChannels": [
            {
                "action": "mobiletargeting:GetChannels"
            }
        ],
        "Pinpoint.GetEmailChannel": [
            {
                "action": "mobiletargeting:GetEmailChannel"
            }
        ],
        "Pinpoint.GetEmailTemplate": [
            {
                "action": "mobiletargeting:GetEmailTemplate"
            }
        ],
        "Pinpoint.GetEndpoint": [
            {
                "action": "mobiletargeting:GetEndpoint"
            }
        ],
        "Pinpoint.GetEventStream": [
            {
                "action": "mobiletargeting:GetEventStream"
            }
        ],
        "Pinpoint.GetExportJob": [
            {
                "action": "mobiletargeting:GetExportJob"
            }
        ],
        "Pinpoint.GetExportJobs": [
            {
                "action": "mobiletargeting:GetExportJobs"
            }
        ],
        "Pinpoint.GetGcmChannel": [
            {
                "action": "mobiletargeting:GetGcmChannel"
            }
        ],
        "Pinpoint.GetImportJob": [
            {
                "action": "mobiletargeting:GetImportJob"
            }
        ],
        "Pinpoint.GetImportJobs": [
            {
                "action": "mobiletargeting:GetImportJobs"
            }
        ],
        "Pinpoint.GetJourney": [
            {
                "action": "mobiletargeting:GetJourney"
            }
        ],
        "Pinpoint.GetPushTemplate": [
            {
                "action": "mobiletargeting:GetPushTemplate"
            }
        ],
        "Pinpoint.GetRecommenderConfiguration": [
            {
                "action": "mobiletargeting:GetRecommenderConfiguration"
            }
        ],
        "Pinpoint.GetRecommenderConfigurations": [
            {
                "action": "mobiletargeting:GetRecommenderConfigurations"
            }
        ],
        "Pinpoint.GetSegment": [
            {
                "action": "mobiletargeting:GetSegment"
            }
        ],
        "Pinpoint.GetSegmentExportJobs": [
            {
                "action": "mobiletargeting:GetSegmentExportJobs"
            }
        ],
        "Pinpoint.GetSegmentImportJobs": [
            {
                "action": "mobiletargeting:GetSegmentImportJobs"
            }
        ],
        "Pinpoint.GetSegmentVersion": [
            {
                "action": "mobiletargeting:GetSegmentVersion"
            }
        ],
        "Pinpoint.GetSegmentVersions": [
            {
                "action": "mobiletargeting:GetSegmentVersions"
            }
        ],
        "Pinpoint.GetSegments": [
            {
                "action": "mobiletargeting:GetSegments"
            }
        ],
        "Pinpoint.GetSmsChannel": [
            {
                "action": "mobiletargeting:GetSmsChannel"
            }
        ],
        "Pinpoint.GetSmsTemplate": [
            {
                "action": "mobiletargeting:GetSmsTemplate"
            }
        ],
        "Pinpoint.GetUserEndpoints": [
            {
                "action": "mobiletargeting:GetUserEndpoints"
            }
        ],
        "Pinpoint.GetVoiceChannel": [
            {
                "action": "mobiletargeting:GetVoiceChannel"
            }
        ],
        "Pinpoint.GetVoiceTemplate": [
            {
                "action": "mobiletargeting:GetVoiceTemplate"
            }
        ],
        "Pinpoint.ListJourneys": [
            {
                "action": "mobiletargeting:ListJourneys"
            }
        ],
        "Pinpoint.ListTagsForResource": [
            {
                "action": "mobiletargeting:ListTagsForResource"
            }
        ],
        "Pinpoint.ListTemplateVersions": [
            {
                "action": "mobiletargeting:ListTemplateVersions"
            }
        ],
        "Pinpoint.ListTemplates": [
            {
                "action": "mobiletargeting:ListTemplates"
            }
        ],
        "Pinpoint.PhoneNumberValidate": [
            {
                "action": "mobiletargeting:PhoneNumberValidate"
            }
        ],
        "Pinpoint.PutEventStream": [
            {
                "action": "mobiletargeting:PutEventStream"
            }
        ],
        "Pinpoint.PutEvents": [
            {
                "action": "mobiletargeting:PutEvents"
            }
        ],
        "Pinpoint.RemoveAttributes": [
            {
                "action": "mobiletargeting:RemoveAttributes"
            }
        ],
        "Pinpoint.SendMessages": [
            {
                "action": "mobiletargeting:SendMessages"
            }
        ],
        "Pinpoint.SendUsersMessages": [
            {
                "action": "mobiletargeting:SendUsersMessages"
            }
        ],
        "Pinpoint.TagResource": [
            {
                "action": "mobiletargeting:TagResource"
            }
        ],
        "Pinpoint.UntagResource": [
            {
                "action": "mobiletargeting:UntagResource"
            }
        ],
        "Pinpoint.UpdateAdmChannel": [
            {
                "action": "mobiletargeting:UpdateAdmChannel"
            }
        ],
        "Pinpoint.UpdateApnsChannel": [
            {
                "action": "mobiletargeting:UpdateApnsChannel"
            }
        ],
        "Pinpoint.UpdateApnsSandboxChannel": [
            {
                "action": "mobiletargeting:UpdateApnsSandboxChannel"
            }
        ],
        "Pinpoint.UpdateApnsVoipChannel": [
            {
                "action": "mobiletargeting:UpdateApnsVoipChannel"
            }
        ],
        "Pinpoint.UpdateApnsVoipSandboxChannel": [
            {
                "action": "mobiletargeting:UpdateApnsVoipSandboxChannel"
            }
        ],
        "Pinpoint.UpdateApplicationSettings": [
            {
                "action": "mobiletargeting:UpdateApplicationSettings"
            }
        ],
        "Pinpoint.UpdateBaiduChannel": [
            {
                "action": "mobiletargeting:UpdateBaiduChannel"
            }
        ],
        "Pinpoint.UpdateCampaign": [
            {
                "action": "mobiletargeting:UpdateCampaign"
            }
        ],
        "Pinpoint.UpdateEmailChannel": [
            {
                "action": "mobiletargeting:UpdateEmailChannel"
            }
        ],
        "Pinpoint.UpdateEmailTemplate": [
            {
                "action": "mobiletargeting:UpdateEmailTemplate"
            }
        ],
        "Pinpoint.UpdateEndpoint": [
            {
                "action": "mobiletargeting:UpdateEndpoint"
            }
        ],
        "Pinpoint.UpdateEndpointsBatch": [
            {
                "action": "mobiletargeting:UpdateEndpointsBatch"
            }
        ],
        "Pinpoint.UpdateGcmChannel": [
            {
                "action": "mobiletargeting:UpdateGcmChannel"
            }
        ],
        "Pinpoint.UpdateJourney": [
            {
                "action": "mobiletargeting:UpdateJourney"
            }
        ],
        "Pinpoint.UpdateJourneyState": [
            {
                "action": "mobiletargeting:UpdateJourneyState"
            }
        ],
        "Pinpoint.UpdatePushTemplate": [
            {
                "action": "mobiletargeting:UpdatePushTemplate"
            }
        ],
        "Pinpoint.UpdateRecommenderConfiguration": [
            {
                "action": "mobiletargeting:UpdateRecommenderConfiguration"
            }
        ],
        "Pinpoint.UpdateSegment": [
            {
                "action": "mobiletargeting:UpdateSegment"
            }
        ],
        "Pinpoint.UpdateSmsChannel": [
            {
                "action": "mobiletargeting:UpdateSmsChannel"
            }
        ],
        "Pinpoint.UpdateSmsTemplate": [
            {
                "action": "mobiletargeting:UpdateSmsTemplate"
            }
        ],
        "Pinpoint.UpdateTemplateActiveVersion": [
            {
                "action": "mobiletargeting:UpdateTemplateActiveVersion"
            }
        ],
        "Pinpoint.UpdateVoiceChannel": [
            {
                "action": "mobiletargeting:UpdateVoiceChannel"
            }
        ],
        "Pinpoint.UpdateVoiceTemplate": [
            {
                "action": "mobiletargeting:UpdateVoiceTemplate"
            }
        ],
        "Polly.DeleteLexicon": [
            {
                "action": "polly:DeleteLexicon"
            }
        ],
        "Polly.DescribeVoices": [
            {
                "action": "polly:DescribeVoices"
            }
        ],
        "Polly.GetLexicon": [
            {
                "action": "polly:GetLexicon"
            }
        ],
        "Polly.GetSpeechSynthesisTask": [
            {
                "action": "polly:GetSpeechSynthesisTask"
            }
        ],
        "Polly.ListLexicons": [
            {
                "action": "polly:ListLexicons"
            }
        ],
        "Polly.ListSpeechSynthesisTasks": [
            {
                "action": "polly:ListSpeechSynthesisTasks"
            }
        ],
        "Polly.PutLexicon": [
            {
                "action": "polly:PutLexicon"
            }
        ],
        "Polly.StartSpeechSynthesisTask": [
            {
                "action": "polly:StartSpeechSynthesisTask"
            }
        ],
        "Polly.SynthesizeSpeech": [
            {
                "action": "polly:SynthesizeSpeech"
            }
        ],
        "RDS.AddRoleToDBCluster": [
            {
                "action": "rds:AddRoleToDBCluster"
            }
        ],
        "RDS.AddRoleToDBInstance": [
            {
                "action": "rds:AddRoleToDBInstance"
            }
        ],
        "RDS.AddSourceIdentifierToSubscription": [
            {
                "action": "rds:AddSourceIdentifierToSubscription"
            }
        ],
        "RDS.AddTagsToResource": [
            {
                "action": "rds:AddTagsToResource"
            }
        ],
        "RDS.ApplyPendingMaintenanceAction": [
            {
                "action": "rds:ApplyPendingMaintenanceAction"
            }
        ],
        "RDS.AuthorizeDBSecurityGroupIngress": [
            {
                "action": "rds:AuthorizeDBSecurityGroupIngress"
            }
        ],
        "RDS.BacktrackDBCluster": [
            {
                "action": "rds:BacktrackDBCluster"
            }
        ],
        "RDS.CancelExportTask": [
            {
                "action": "rds:CancelExportTask"
            }
        ],
        "RDS.CopyDBClusterParameterGroup": [
            {
                "action": "rds:CopyDBClusterParameterGroup"
            }
        ],
        "RDS.CopyDBClusterSnapshot": [
            {
                "action": "rds:CopyDBClusterSnapshot"
            }
        ],
        "RDS.CopyDBParameterGroup": [
            {
                "action": "rds:CopyDBParameterGroup"
            }
        ],
        "RDS.CopyDBSnapshot": [
            {
                "action": "rds:CopyDBSnapshot"
            }
        ],
        "RDS.CopyOptionGroup": [
            {
                "action": "rds:CopyOptionGroup"
            }
        ],
        "RDS.CreateDBCluster": [
            {
                "action": "rds:CreateDBCluster"
            }
        ],
        "RDS.CreateDBClusterEndpoint": [
            {
                "action": "rds:CreateDBClusterEndpoint"
            }
        ],
        "RDS.CreateDBClusterParameterGroup": [
            {
                "action": "rds:CreateDBClusterParameterGroup"
            }
        ],
        "RDS.CreateDBClusterSnapshot": [
            {
                "action": "rds:CreateDBClusterSnapshot"
            }
        ],
        "RDS.CreateDBInstance": [
            {
                "action": "rds:CreateDBInstance"
            }
        ],
        "RDS.CreateDBInstanceReadReplica": [
            {
                "action": "rds:CreateDBInstanceReadReplica"
            }
        ],
        "RDS.CreateDBParameterGroup": [
            {
                "action": "rds:CreateDBParameterGroup"
            }
        ],
        "RDS.CreateDBProxy": [
            {
                "action": "rds:CreateDBProxy"
            }
        ],
        "RDS.CreateDBSecurityGroup": [
            {
                "action": "rds:CreateDBSecurityGroup"
            }
        ],
        "RDS.CreateDBSnapshot": [
            {
                "action": "rds:CreateDBSnapshot"
            }
        ],
        "RDS.CreateDBSubnetGroup": [
            {
                "action": "rds:CreateDBSubnetGroup"
            }
        ],
        "RDS.CreateEventSubscription": [
            {
                "action": "rds:CreateEventSubscription"
            }
        ],
        "RDS.CreateGlobalCluster": [
            {
                "action": "rds:CreateGlobalCluster"
            }
        ],
        "RDS.CreateOptionGroup": [
            {
                "action": "rds:CreateOptionGroup"
            }
        ],
        "RDS.DeleteDBCluster": [
            {
                "action": "rds:DeleteDBCluster"
            }
        ],
        "RDS.DeleteDBClusterEndpoint": [
            {
                "action": "rds:DeleteDBClusterEndpoint"
            }
        ],
        "RDS.DeleteDBClusterParameterGroup": [
            {
                "action": "rds:DeleteDBClusterParameterGroup"
            }
        ],
        "RDS.DeleteDBClusterSnapshot": [
            {
                "action": "rds:DeleteDBClusterSnapshot"
            }
        ],
        "RDS.DeleteDBInstance": [
            {
                "action": "rds:DeleteDBInstance"
            }
        ],
        "RDS.DeleteDBInstanceAutomatedBackup": [
            {
                "action": "rds:DeleteDBInstanceAutomatedBackup"
            }
        ],
        "RDS.DeleteDBParameterGroup": [
            {
                "action": "rds:DeleteDBParameterGroup"
            }
        ],
        "RDS.DeleteDBProxy": [
            {
                "action": "rds:DeleteDBProxy"
            }
        ],
        "RDS.DeleteDBSecurityGroup": [
            {
                "action": "rds:DeleteDBSecurityGroup"
            }
        ],
        "RDS.DeleteDBSnapshot": [
            {
                "action": "rds:DeleteDBSnapshot"
            }
        ],
        "RDS.DeleteDBSubnetGroup": [
            {
                "action": "rds:DeleteDBSubnetGroup"
            }
        ],
        "RDS.DeleteEventSubscription": [
            {
                "action": "rds:DeleteEventSubscription"
            }
        ],
        "RDS.DeleteGlobalCluster": [
            {
                "action": "rds:DeleteGlobalCluster"
            }
        ],
        "RDS.DeleteOptionGroup": [
            {
                "action": "rds:DeleteOptionGroup"
            }
        ],
        "RDS.DeregisterDBProxyTargets": [
            {
                "action": "rds:DeregisterDBProxyTargets"
            }
        ],
        "RDS.DescribeAccountAttributes": [
            {
                "action": "rds:DescribeAccountAttributes"
            }
        ],
        "RDS.DescribeCertificates": [
            {
                "action": "rds:DescribeCertificates"
            }
        ],
        "RDS.DescribeDBClusterBacktracks": [
            {
                "action": "rds:DescribeDBClusterBacktracks"
            }
        ],
        "RDS.DescribeDBClusterEndpoints": [
            {
                "action": "rds:DescribeDBClusterEndpoints"
            }
        ],
        "RDS.DescribeDBClusterParameterGroups": [
            {
                "action": "rds:DescribeDBClusterParameterGroups"
            }
        ],
        "RDS.DescribeDBClusterParameters": [
            {
                "action": "rds:DescribeDBClusterParameters"
            }
        ],
        "RDS.DescribeDBClusterSnapshotAttributes": [
            {
                "action": "rds:DescribeDBClusterSnapshotAttributes"
            }
        ],
        "RDS.DescribeDBClusterSnapshots": [
            {
                "action": "rds:DescribeDBClusterSnapshots"
            }
        ],
        "RDS.DescribeDBClusters": [
            {
                "action": "rds:DescribeDBClusters"
            }
        ],
        "RDS.DescribeDBEngineVersions": [
            {
                "action": "rds:DescribeDBEngineVersions"
            }
        ],
        "RDS.DescribeDBInstanceAutomatedBackups": [
            {
                "action": "rds:DescribeDBInstanceAutomatedBackups"
            }
        ],
        "RDS.DescribeDBInstances": [
            {
                "action": "rds:DescribeDBInstances"
            }
        ],
        "RDS.DescribeDBLogFiles": [
            {
                "action": "rds:DescribeDBLogFiles"
            }
        ],
        "RDS.DescribeDBParameterGroups": [
            {
                "action": "rds:DescribeDBParameterGroups"
            }
        ],
        "RDS.DescribeDBParameters": [
            {
                "action": "rds:DescribeDBParameters"
            }
        ],
        "RDS.DescribeDBProxies": [
            {
                "action": "rds:DescribeDBProxies"
            }
        ],
        "RDS.DescribeDBProxyTargetGroups": [
            {
                "action": "rds:DescribeDBProxyTargetGroups"
            }
        ],
        "RDS.DescribeDBProxyTargets": [
            {
                "action": "rds:DescribeDBProxyTargets"
            }
        ],
        "RDS.DescribeDBSecurityGroups": [
            {
                "action": "rds:DescribeDBSecurityGroups"
            }
        ],
        "RDS.DescribeDBSnapshotAttributes": [
            {
                "action": "rds:DescribeDBSnapshotAttributes"
            }
        ],
        "RDS.DescribeDBSnapshots": [
            {
                "action": "rds:DescribeDBSnapshots"
            }
        ],
        "RDS.DescribeDBSubnetGroups": [
            {
                "action": "rds:DescribeDBSubnetGroups"
            }
        ],
        "RDS.DescribeEngineDefaultClusterParameters": [
            {
                "action": "rds:DescribeEngineDefaultClusterParameters"
            }
        ],
        "RDS.DescribeEngineDefaultParameters": [
            {
                "action": "rds:DescribeEngineDefaultParameters"
            }
        ],
        "RDS.DescribeEventCategories": [
            {
                "action": "rds:DescribeEventCategories"
            }
        ],
        "RDS.DescribeEventSubscriptions": [
            {
                "action": "rds:DescribeEventSubscriptions"
            }
        ],
        "RDS.DescribeEvents": [
            {
                "action": "rds:DescribeEvents"
            }
        ],
        "RDS.DescribeExportTasks": [
            {
                "action": "rds:DescribeExportTasks"
            }
        ],
        "RDS.DescribeGlobalClusters": [
            {
                "action": "rds:DescribeGlobalClusters"
            }
        ],
        "RDS.DescribeOptionGroupOptions": [
            {
                "action": "rds:DescribeOptionGroupOptions"
            }
        ],
        "RDS.DescribeOptionGroups": [
            {
                "action": "rds:DescribeOptionGroups"
            }
        ],
        "RDS.DescribeOrderableDBInstanceOptions": [
            {
                "action": "rds:DescribeOrderableDBInstanceOptions"
            }
        ],
        "RDS.DescribePendingMaintenanceActions": [
            {
                "action": "rds:DescribePendingMaintenanceActions"
            }
        ],
        "RDS.DescribeReservedDBInstances": [
            {
                "action": "rds:DescribeReservedDBInstances"
            }
        ],
        "RDS.DescribeReservedDBInstancesOfferings": [
            {
                "action": "rds:DescribeReservedDBInstancesOfferings"
            }
        ],
        "RDS.DescribeSourceRegions": [
            {
                "action": "rds:DescribeSourceRegions"
            }
        ],
        "RDS.DescribeValidDBInstanceModifications": [
            {
                "action": "rds:DescribeValidDBInstanceModifications"
            }
        ],
        "RDS.DownloadDBLogFilePortion": [
            {
                "action": "rds:DownloadDBLogFilePortion"
            }
        ],
        "RDS.FailoverDBCluster": [
            {
                "action": "rds:FailoverDBCluster"
            }
        ],
        "RDS.ListTagsForResource": [
            {
                "action": "rds:ListTagsForResource"
            }
        ],
        "RDS.ModifyCurrentDBClusterCapacity": [
            {
                "action": "rds:ModifyCurrentDBClusterCapacity"
            }
        ],
        "RDS.ModifyDBCluster": [
            {
                "action": "rds:ModifyDBCluster"
            }
        ],
        "RDS.ModifyDBClusterEndpoint": [
            {
                "action": "rds:ModifyDBClusterEndpoint"
            }
        ],
        "RDS.ModifyDBClusterParameterGroup": [
            {
                "action": "rds:ModifyDBClusterParameterGroup"
            }
        ],
        "RDS.ModifyDBClusterSnapshotAttribute": [
            {
                "action": "rds:ModifyDBClusterSnapshotAttribute"
            }
        ],
        "RDS.ModifyDBInstance": [
            {
                "action": "rds:ModifyDBInstance"
            }
        ],
        "RDS.ModifyDBParameterGroup": [
            {
                "action": "rds:ModifyDBParameterGroup"
            }
        ],
        "RDS.ModifyDBProxy": [
            {
                "action": "rds:ModifyDBProxy"
            }
        ],
        "RDS.ModifyDBProxyTargetGroup": [
            {
                "action": "rds:ModifyDBProxyTargetGroup"
            }
        ],
        "RDS.ModifyDBSnapshot": [
            {
                "action": "rds:ModifyDBSnapshot"
            }
        ],
        "RDS.ModifyDBSnapshotAttribute": [
            {
                "action": "rds:ModifyDBSnapshotAttribute"
            }
        ],
        "RDS.ModifyDBSubnetGroup": [
            {
                "action": "rds:ModifyDBSubnetGroup"
            }
        ],
        "RDS.ModifyEventSubscription": [
            {
                "action": "rds:ModifyEventSubscription"
            }
        ],
        "RDS.ModifyGlobalCluster": [
            {
                "action": "rds:ModifyGlobalCluster"
            }
        ],
        "RDS.ModifyOptionGroup": [
            {
                "action": "rds:ModifyOptionGroup"
            }
        ],
        "RDS.PromoteReadReplica": [
            {
                "action": "rds:PromoteReadReplica"
            }
        ],
        "RDS.PromoteReadReplicaDBCluster": [
            {
                "action": "rds:PromoteReadReplicaDBCluster"
            }
        ],
        "RDS.PurchaseReservedDBInstancesOffering": [
            {
                "action": "rds:PurchaseReservedDBInstancesOffering"
            }
        ],
        "RDS.RebootDBInstance": [
            {
                "action": "rds:RebootDBInstance"
            }
        ],
        "RDS.RegisterDBProxyTargets": [
            {
                "action": "rds:RegisterDBProxyTargets"
            }
        ],
        "RDS.RemoveFromGlobalCluster": [
            {
                "action": "rds:RemoveFromGlobalCluster"
            }
        ],
        "RDS.RemoveRoleFromDBCluster": [
            {
                "action": "rds:RemoveRoleFromDBCluster"
            }
        ],
        "RDS.RemoveRoleFromDBInstance": [
            {
                "action": "rds:RemoveRoleFromDBInstance"
            }
        ],
        "RDS.RemoveSourceIdentifierFromSubscription": [
            {
                "action": "rds:RemoveSourceIdentifierFromSubscription"
            }
        ],
        "RDS.RemoveTagsFromResource": [
            {
                "action": "rds:RemoveTagsFromResource"
            }
        ],
        "RDS.ResetDBClusterParameterGroup": [
            {
                "action": "rds:ResetDBClusterParameterGroup"
            }
        ],
        "RDS.ResetDBParameterGroup": [
            {
                "action": "rds:ResetDBParameterGroup"
            }
        ],
        "RDS.RestoreDBClusterFromS3": [
            {
                "action": "rds:RestoreDBClusterFromS3"
            }
        ],
        "RDS.RestoreDBClusterFromSnapshot": [
            {
                "action": "rds:RestoreDBClusterFromSnapshot"
            }
        ],
        "RDS.RestoreDBClusterToPointInTime": [
            {
                "action": "rds:RestoreDBClusterToPointInTime"
            }
        ],
        "RDS.RestoreDBInstanceFromDBSnapshot": [
            {
                "action": "rds:RestoreDBInstanceFromDBSnapshot"
            }
        ],
        "RDS.RestoreDBInstanceFromS3": [
            {
                "action": "rds:RestoreDBInstanceFromS3"
            }
        ],
        "RDS.RestoreDBInstanceToPointInTime": [
            {
                "action": "rds:RestoreDBInstanceToPointInTime"
            }
        ],
        "RDS.RevokeDBSecurityGroupIngress": [
            {
                "action": "rds:RevokeDBSecurityGroupIngress"
            }
        ],
        "RDS.StartActivityStream": [
            {
                "action": "rds:StartActivityStream"
            }
        ],
        "RDS.StartDBCluster": [
            {
                "action": "rds:StartDBCluster"
            }
        ],
        "RDS.StartDBInstance": [
            {
                "action": "rds:StartDBInstance"
            }
        ],
        "RDS.StartExportTask": [
            {
                "action": "rds:StartExportTask"
            }
        ],
        "RDS.StopActivityStream": [
            {
                "action": "rds:StopActivityStream"
            }
        ],
        "RDS.StopDBCluster": [
            {
                "action": "rds:StopDBCluster"
            }
        ],
        "RDS.StopDBInstance": [
            {
                "action": "rds:StopDBInstance"
            }
        ],
        "Redshift.AcceptReservedNodeExchange": [
            {
                "action": "redshift:AcceptReservedNodeExchange"
            }
        ],
        "Redshift.AuthorizeClusterSecurityGroupIngress": [
            {
                "action": "redshift:AuthorizeClusterSecurityGroupIngress"
            }
        ],
        "Redshift.AuthorizeSnapshotAccess": [
            {
                "action": "redshift:AuthorizeSnapshotAccess"
            }
        ],
        "Redshift.BatchDeleteClusterSnapshots": [
            {
                "action": "redshift:BatchDeleteClusterSnapshots"
            }
        ],
        "Redshift.BatchModifyClusterSnapshots": [
            {
                "action": "redshift:BatchModifyClusterSnapshots"
            }
        ],
        "Redshift.CancelResize": [
            {
                "action": "redshift:CancelResize"
            }
        ],
        "Redshift.CopyClusterSnapshot": [
            {
                "action": "redshift:CopyClusterSnapshot"
            }
        ],
        "Redshift.CreateCluster": [
            {
                "action": "redshift:CreateCluster"
            }
        ],
        "Redshift.CreateClusterParameterGroup": [
            {
                "action": "redshift:CreateClusterParameterGroup"
            }
        ],
        "Redshift.CreateClusterSecurityGroup": [
            {
                "action": "redshift:CreateClusterSecurityGroup"
            }
        ],
        "Redshift.CreateClusterSnapshot": [
            {
                "action": "redshift:CreateClusterSnapshot"
            }
        ],
        "Redshift.CreateClusterSubnetGroup": [
            {
                "action": "redshift:CreateClusterSubnetGroup"
            }
        ],
        "Redshift.CreateEventSubscription": [
            {
                "action": "redshift:CreateEventSubscription"
            }
        ],
        "Redshift.CreateHsmClientCertificate": [
            {
                "action": "redshift:CreateHsmClientCertificate"
            }
        ],
        "Redshift.CreateHsmConfiguration": [
            {
                "action": "redshift:CreateHsmConfiguration"
            }
        ],
        "Redshift.CreateScheduledAction": [
            {
                "action": "redshift:CreateScheduledAction"
            }
        ],
        "Redshift.CreateSnapshotCopyGrant": [
            {
                "action": "redshift:CreateSnapshotCopyGrant"
            }
        ],
        "Redshift.CreateSnapshotSchedule": [
            {
                "action": "redshift:CreateSnapshotSchedule"
            }
        ],
        "Redshift.CreateTags": [
            {
                "action": "redshift:CreateTags"
            }
        ],
        "Redshift.DeleteCluster": [
            {
                "action": "redshift:DeleteCluster"
            }
        ],
        "Redshift.DeleteClusterParameterGroup": [
            {
                "action": "redshift:DeleteClusterParameterGroup"
            }
        ],
        "Redshift.DeleteClusterSecurityGroup": [
            {
                "action": "redshift:DeleteClusterSecurityGroup"
            }
        ],
        "Redshift.DeleteClusterSnapshot": [
            {
                "action": "redshift:DeleteClusterSnapshot"
            }
        ],
        "Redshift.DeleteClusterSubnetGroup": [
            {
                "action": "redshift:DeleteClusterSubnetGroup"
            }
        ],
        "Redshift.DeleteEventSubscription": [
            {
                "action": "redshift:DeleteEventSubscription"
            }
        ],
        "Redshift.DeleteHsmClientCertificate": [
            {
                "action": "redshift:DeleteHsmClientCertificate"
            }
        ],
        "Redshift.DeleteHsmConfiguration": [
            {
                "action": "redshift:DeleteHsmConfiguration"
            }
        ],
        "Redshift.DeleteScheduledAction": [
            {
                "action": "redshift:DeleteScheduledAction"
            }
        ],
        "Redshift.DeleteSnapshotCopyGrant": [
            {
                "action": "redshift:DeleteSnapshotCopyGrant"
            }
        ],
        "Redshift.DeleteSnapshotSchedule": [
            {
                "action": "redshift:DeleteSnapshotSchedule"
            }
        ],
        "Redshift.DeleteTags": [
            {
                "action": "redshift:DeleteTags"
            }
        ],
        "Redshift.DescribeAccountAttributes": [
            {
                "action": "redshift:DescribeAccountAttributes"
            }
        ],
        "Redshift.DescribeClusterDbRevisions": [
            {
                "action": "redshift:DescribeClusterDbRevisions"
            }
        ],
        "Redshift.DescribeClusterParameterGroups": [
            {
                "action": "redshift:DescribeClusterParameterGroups"
            }
        ],
        "Redshift.DescribeClusterParameters": [
            {
                "action": "redshift:DescribeClusterParameters"
            }
        ],
        "Redshift.DescribeClusterSecurityGroups": [
            {
                "action": "redshift:DescribeClusterSecurityGroups"
            }
        ],
        "Redshift.DescribeClusterSnapshots": [
            {
                "action": "redshift:DescribeClusterSnapshots"
            }
        ],
        "Redshift.DescribeClusterSubnetGroups": [
            {
                "action": "redshift:DescribeClusterSubnetGroups"
            }
        ],
        "Redshift.DescribeClusterTracks": [
            {
                "action": "redshift:DescribeClusterTracks"
            }
        ],
        "Redshift.DescribeClusterVersions": [
            {
                "action": "redshift:DescribeClusterVersions"
            }
        ],
        "Redshift.DescribeClusters": [
            {
                "action": "redshift:DescribeClusters"
            }
        ],
        "Redshift.DescribeDefaultClusterParameters": [
            {
                "action": "redshift:DescribeDefaultClusterParameters"
            }
        ],
        "Redshift.DescribeEventCategories": [
            {
                "action": "redshift:DescribeEventCategories"
            }
        ],
        "Redshift.DescribeEventSubscriptions": [
            {
                "action": "redshift:DescribeEventSubscriptions"
            }
        ],
        "Redshift.DescribeEvents": [
            {
                "action": "redshift:DescribeEvents"
            }
        ],
        "Redshift.DescribeHsmClientCertificates": [
            {
                "action": "redshift:DescribeHsmClientCertificates"
            }
        ],
        "Redshift.DescribeHsmConfigurations": [
            {
                "action": "redshift:DescribeHsmConfigurations"
            }
        ],
        "Redshift.DescribeLoggingStatus": [
            {
                "action": "redshift:DescribeLoggingStatus"
            }
        ],
        "Redshift.DescribeNodeConfigurationOptions": [
            {
                "action": "redshift:DescribeNodeConfigurationOptions"
            }
        ],
        "Redshift.DescribeOrderableClusterOptions": [
            {
                "action": "redshift:DescribeOrderableClusterOptions"
            }
        ],
        "Redshift.DescribeReservedNodeOfferings": [
            {
                "action": "redshift:DescribeReservedNodeOfferings"
            }
        ],
        "Redshift.DescribeReservedNodes": [
            {
                "action": "redshift:DescribeReservedNodes"
            }
        ],
        "Redshift.DescribeResize": [
            {
                "action": "redshift:DescribeResize"
            }
        ],
        "Redshift.DescribeScheduledActions": [
            {
                "action": "redshift:DescribeScheduledActions"
            }
        ],
        "Redshift.DescribeSnapshotCopyGrants": [
            {
                "action": "redshift:DescribeSnapshotCopyGrants"
            }
        ],
        "Redshift.DescribeSnapshotSchedules": [
            {
                "action": "redshift:DescribeSnapshotSchedules"
            }
        ],
        "Redshift.DescribeStorage": [
            {
                "action": "redshift:DescribeStorage"
            }
        ],
        "Redshift.DescribeTableRestoreStatus": [
            {
                "action": "redshift:DescribeTableRestoreStatus"
            }
        ],
        "Redshift.DescribeTags": [
            {
                "action": "redshift:DescribeTags"
            }
        ],
        "Redshift.DisableLogging": [
            {
                "action": "redshift:DisableLogging"
            }
        ],
        "Redshift.DisableSnapshotCopy": [
            {
                "action": "redshift:DisableSnapshotCopy"
            }
        ],
        "Redshift.EnableLogging": [
            {
                "action": "redshift:EnableLogging"
            }
        ],
        "Redshift.EnableSnapshotCopy": [
            {
                "action": "redshift:EnableSnapshotCopy"
            }
        ],
        "Redshift.GetClusterCredentials": [
            {
                "action": "redshift:GetClusterCredentials"
            }
        ],
        "Redshift.GetReservedNodeExchangeOfferings": [
            {
                "action": "redshift:GetReservedNodeExchangeOfferings"
            }
        ],
        "Redshift.ModifyCluster": [
            {
                "action": "redshift:ModifyCluster"
            }
        ],
        "Redshift.ModifyClusterDbRevision": [
            {
                "action": "redshift:ModifyClusterDbRevision"
            }
        ],
        "Redshift.ModifyClusterIamRoles": [
            {
                "action": "redshift:ModifyClusterIamRoles"
            }
        ],
        "Redshift.ModifyClusterMaintenance": [
            {
                "action": "redshift:ModifyClusterMaintenance"
            }
        ],
        "Redshift.ModifyClusterParameterGroup": [
            {
                "action": "redshift:ModifyClusterParameterGroup"
            }
        ],
        "Redshift.ModifyClusterSnapshot": [
            {
                "action": "redshift:ModifyClusterSnapshot"
            }
        ],
        "Redshift.ModifyClusterSnapshotSchedule": [
            {
                "action": "redshift:ModifyClusterSnapshotSchedule"
            }
        ],
        "Redshift.ModifyClusterSubnetGroup": [
            {
                "action": "redshift:ModifyClusterSubnetGroup"
            }
        ],
        "Redshift.ModifyEventSubscription": [
            {
                "action": "redshift:ModifyEventSubscription"
            }
        ],
        "Redshift.ModifyScheduledAction": [
            {
                "action": "redshift:ModifyScheduledAction"
            }
        ],
        "Redshift.ModifySnapshotCopyRetentionPeriod": [
            {
                "action": "redshift:ModifySnapshotCopyRetentionPeriod"
            }
        ],
        "Redshift.ModifySnapshotSchedule": [
            {
                "action": "redshift:ModifySnapshotSchedule"
            }
        ],
        "Redshift.PauseCluster": [
            {
                "action": "redshift:PauseCluster"
            }
        ],
        "Redshift.PurchaseReservedNodeOffering": [
            {
                "action": "redshift:PurchaseReservedNodeOffering"
            }
        ],
        "Redshift.RebootCluster": [
            {
                "action": "redshift:RebootCluster"
            }
        ],
        "Redshift.ResetClusterParameterGroup": [
            {
                "action": "redshift:ResetClusterParameterGroup"
            }
        ],
        "Redshift.ResizeCluster": [
            {
                "action": "redshift:ResizeCluster"
            }
        ],
        "Redshift.RestoreFromClusterSnapshot": [
            {
                "action": "redshift:RestoreFromClusterSnapshot"
            }
        ],
        "Redshift.RestoreTableFromClusterSnapshot": [
            {
                "action": "redshift:RestoreTableFromClusterSnapshot"
            }
        ],
        "Redshift.ResumeCluster": [
            {
                "action": "redshift:ResumeCluster"
            }
        ],
        "Redshift.RevokeClusterSecurityGroupIngress": [
            {
                "action": "redshift:RevokeClusterSecurityGroupIngress"
            }
        ],
        "Redshift.RevokeSnapshotAccess": [
            {
                "action": "redshift:RevokeSnapshotAccess"
            }
        ],
        "Redshift.RotateEncryptionKey": [
            {
                "action": "redshift:RotateEncryptionKey"
            }
        ],
        "Rekognition.CompareFaces": [
            {
                "action": "rekognition:CompareFaces"
            }
        ],
        "Rekognition.CreateCollection": [
            {
                "action": "rekognition:CreateCollection"
            }
        ],
        "Rekognition.CreateProject": [
            {
                "action": "rekognition:CreateProject"
            }
        ],
        "Rekognition.CreateProjectVersion": [
            {
                "action": "rekognition:CreateProjectVersion"
            }
        ],
        "Rekognition.CreateStreamProcessor": [
            {
                "action": "rekognition:CreateStreamProcessor"
            }
        ],
        "Rekognition.DeleteCollection": [
            {
                "action": "rekognition:DeleteCollection"
            }
        ],
        "Rekognition.DeleteFaces": [
            {
                "action": "rekognition:DeleteFaces"
            }
        ],
        "Rekognition.DeleteProject": [
            {
                "action": "rekognition:DeleteProject"
            }
        ],
        "Rekognition.DeleteProjectVersion": [
            {
                "action": "rekognition:DeleteProjectVersion"
            }
        ],
        "Rekognition.DeleteStreamProcessor": [
            {
                "action": "rekognition:DeleteStreamProcessor"
            }
        ],
        "Rekognition.DescribeCollection": [
            {
                "action": "rekognition:DescribeCollection"
            }
        ],
        "Rekognition.DescribeProjectVersions": [
            {
                "action": "rekognition:DescribeProjectVersions"
            }
        ],
        "Rekognition.DescribeProjects": [
            {
                "action": "rekognition:DescribeProjects"
            }
        ],
        "Rekognition.DescribeStreamProcessor": [
            {
                "action": "rekognition:DescribeStreamProcessor"
            }
        ],
        "Rekognition.DetectCustomLabels": [
            {
                "action": "rekognition:DetectCustomLabels"
            }
        ],
        "Rekognition.DetectFaces": [
            {
                "action": "rekognition:DetectFaces"
            }
        ],
        "Rekognition.DetectLabels": [
            {
                "action": "rekognition:DetectLabels"
            }
        ],
        "Rekognition.DetectModerationLabels": [
            {
                "action": "rekognition:DetectModerationLabels"
            }
        ],
        "Rekognition.DetectProtectiveEquipment": [
            {
                "action": "rekognition:DetectProtectiveEquipment"
            }
        ],
        "Rekognition.DetectText": [
            {
                "action": "rekognition:DetectText"
            }
        ],
        "Rekognition.GetCelebrityInfo": [
            {
                "action": "rekognition:GetCelebrityInfo"
            }
        ],
        "Rekognition.GetCelebrityRecognition": [
            {
                "action": "rekognition:GetCelebrityRecognition"
            }
        ],
        "Rekognition.GetContentModeration": [
            {
                "action": "rekognition:GetContentModeration"
            }
        ],
        "Rekognition.GetFaceDetection": [
            {
                "action": "rekognition:GetFaceDetection"
            }
        ],
        "Rekognition.GetFaceSearch": [
            {
                "action": "rekognition:GetFaceSearch"
            }
        ],
        "Rekognition.GetLabelDetection": [
            {
                "action": "rekognition:GetLabelDetection"
            }
        ],
        "Rekognition.GetPersonTracking": [
            {
                "action": "rekognition:GetPersonTracking"
            }
        ],
        "Rekognition.GetSegmentDetection": [
            {
                "action": "rekognition:GetSegmentDetection"
            }
        ],
        "Rekognition.GetTextDetection": [
            {
                "action": "rekognition:GetTextDetection"
            }
        ],
        "Rekognition.IndexFaces": [
            {
                "action": "rekognition:IndexFaces"
            }
        ],
        "Rekognition.ListCollections": [
            {
                "action": "rekognition:ListCollections"
            }
        ],
        "Rekognition.ListFaces": [
            {
                "action": "rekognition:ListFaces"
            }
        ],
        "Rekognition.ListStreamProcessors": [
            {
                "action": "rekognition:ListStreamProcessors"
            }
        ],
        "Rekognition.RecognizeCelebrities": [
            {
                "action": "rekognition:RecognizeCelebrities"
            }
        ],
        "Rekognition.SearchFaces": [
            {
                "action": "rekognition:SearchFaces"
            }
        ],
        "Rekognition.SearchFacesByImage": [
            {
                "action": "rekognition:SearchFacesByImage"
            }
        ],
        "Rekognition.StartCelebrityRecognition": [
            {
                "action": "rekognition:StartCelebrityRecognition"
            }
        ],
        "Rekognition.StartContentModeration": [
            {
                "action": "rekognition:StartContentModeration"
            }
        ],
        "Rekognition.StartFaceDetection": [
            {
                "action": "rekognition:StartFaceDetection"
            }
        ],
        "Rekognition.StartFaceSearch": [
            {
                "action": "rekognition:StartFaceSearch"
            }
        ],
        "Rekognition.StartLabelDetection": [
            {
                "action": "rekognition:StartLabelDetection"
            }
        ],
        "Rekognition.StartPersonTracking": [
            {
                "action": "rekognition:StartPersonTracking"
            }
        ],
        "Rekognition.StartProjectVersion": [
            {
                "action": "rekognition:StartProjectVersion"
            }
        ],
        "Rekognition.StartSegmentDetection": [
            {
                "action": "rekognition:StartSegmentDetection"
            }
        ],
        "Rekognition.StartStreamProcessor": [
            {
                "action": "rekognition:StartStreamProcessor"
            }
        ],
        "Rekognition.StartTextDetection": [
            {
                "action": "rekognition:StartTextDetection"
            }
        ],
        "Rekognition.StopProjectVersion": [
            {
                "action": "rekognition:StopProjectVersion"
            }
        ],
        "Rekognition.StopStreamProcessor": [
            {
                "action": "rekognition:StopStreamProcessor"
            }
        ],
        "ResourceGroupsTaggingAPI.DescribeReportCreation": [
            {
                "action": "tag:DescribeReportCreation"
            }
        ],
        "ResourceGroupsTaggingAPI.GetComplianceSummary": [
            {
                "action": "tag:GetComplianceSummary"
            }
        ],
        "ResourceGroupsTaggingAPI.GetResources": [
            {
                "action": "tag:GetResources"
            }
        ],
        "ResourceGroupsTaggingAPI.GetTagKeys": [
            {
                "action": "tag:GetTagKeys"
            }
        ],
        "ResourceGroupsTaggingAPI.GetTagValues": [
            {
                "action": "tag:GetTagValues"
            }
        ],
        "ResourceGroupsTaggingAPI.StartReportCreation": [
            {
                "action": "tag:StartReportCreation"
            }
        ],
        "ResourceGroupsTaggingAPI.TagResources": [
            {
                "action": "tag:TagResources"
            }
        ],
        "ResourceGroupsTaggingAPI.UntagResources": [
            {
                "action": "tag:UntagResources"
            }
        ],
        "Route53.AssociateVPCWithHostedZone": [
            {
                "action": "route53:AssociateVPCWithHostedZone"
            }
        ],
        "Route53.ChangeResourceRecordSets": [
            {
                "action": "route53:ChangeResourceRecordSets"
            }
        ],
        "Route53.ChangeTagsForResource": [
            {
                "action": "route53:ChangeTagsForResource"
            }
        ],
        "Route53.CreateHealthCheck": [
            {
                "action": "route53:CreateHealthCheck"
            }
        ],
        "Route53.CreateHostedZone": [
            {
                "action": "route53:CreateHostedZone"
            }
        ],
        "Route53.CreateQueryLoggingConfig": [
            {
                "action": "route53:CreateQueryLoggingConfig"
            }
        ],
        "Route53.CreateReusableDelegationSet": [
            {
                "action": "route53:CreateReusableDelegationSet"
            }
        ],
        "Route53.CreateTrafficPolicy": [
            {
                "action": "route53:CreateTrafficPolicy"
            }
        ],
        "Route53.CreateTrafficPolicyInstance": [
            {
                "action": "route53:CreateTrafficPolicyInstance"
            }
        ],
        "Route53.CreateTrafficPolicyVersion": [
            {
                "action": "route53:CreateTrafficPolicyVersion"
            }
        ],
        "Route53.CreateVPCAssociationAuthorization": [
            {
                "action": "route53:CreateVPCAssociationAuthorization"
            }
        ],
        "Route53.DeleteHealthCheck": [
            {
                "action": "route53:DeleteHealthCheck"
            }
        ],
        "Route53.DeleteHostedZone": [
            {
                "action": "route53:DeleteHostedZone"
            }
        ],
        "Route53.DeleteQueryLoggingConfig": [
            {
                "action": "route53:DeleteQueryLoggingConfig"
            }
        ],
        "Route53.DeleteReusableDelegationSet": [
            {
                "action": "route53:DeleteReusableDelegationSet"
            }
        ],
        "Route53.DeleteTrafficPolicy": [
            {
                "action": "route53:DeleteTrafficPolicy"
            }
        ],
        "Route53.DeleteTrafficPolicyInstance": [
            {
                "action": "route53:DeleteTrafficPolicyInstance"
            }
        ],
        "Route53.DeleteVPCAssociationAuthorization": [
            {
                "action": "route53:DeleteVPCAssociationAuthorization"
            }
        ],
        "Route53.DisassociateVPCFromHostedZone": [
            {
                "action": "route53:DisassociateVPCFromHostedZone"
            }
        ],
        "Route53.GetAccountLimit": [
            {
                "action": "route53:GetAccountLimit"
            }
        ],
        "Route53.GetChange": [
            {
                "action": "route53:GetChange"
            }
        ],
        "Route53.GetCheckerIpRanges": [
            {
                "action": "route53:GetCheckerIpRanges"
            }
        ],
        "Route53.GetGeoLocation": [
            {
                "action": "route53:GetGeoLocation"
            }
        ],
        "Route53.GetHealthCheck": [
            {
                "action": "route53:GetHealthCheck"
            }
        ],
        "Route53.GetHealthCheckCount": [
            {
                "action": "route53:GetHealthCheckCount"
            }
        ],
        "Route53.GetHealthCheckLastFailureReason": [
            {
                "action": "route53:GetHealthCheckLastFailureReason"
            }
        ],
        "Route53.GetHealthCheckStatus": [
            {
                "action": "route53:GetHealthCheckStatus"
            }
        ],
        "Route53.GetHostedZone": [
            {
                "action": "route53:GetHostedZone"
            }
        ],
        "Route53.GetHostedZoneCount": [
            {
                "action": "route53:GetHostedZoneCount"
            }
        ],
        "Route53.GetHostedZoneLimit": [
            {
                "action": "route53:GetHostedZoneLimit"
            }
        ],
        "Route53.GetQueryLoggingConfig": [
            {
                "action": "route53:GetQueryLoggingConfig"
            }
        ],
        "Route53.GetReusableDelegationSet": [
            {
                "action": "route53:GetReusableDelegationSet"
            }
        ],
        "Route53.GetReusableDelegationSetLimit": [
            {
                "action": "route53:GetReusableDelegationSetLimit"
            }
        ],
        "Route53.GetTrafficPolicy": [
            {
                "action": "route53:GetTrafficPolicy"
            }
        ],
        "Route53.GetTrafficPolicyInstance": [
            {
                "action": "route53:GetTrafficPolicyInstance"
            }
        ],
        "Route53.GetTrafficPolicyInstanceCount": [
            {
                "action": "route53:GetTrafficPolicyInstanceCount"
            }
        ],
        "Route53.ListGeoLocations": [
            {
                "action": "route53:ListGeoLocations"
            }
        ],
        "Route53.ListHealthChecks": [
            {
                "action": "route53:ListHealthChecks"
            }
        ],
        "Route53.ListHostedZones": [
            {
                "action": "route53:ListHostedZones"
            }
        ],
        "Route53.ListHostedZonesByName": [
            {
                "action": "route53:ListHostedZonesByName"
            }
        ],
        "Route53.ListHostedZonesByVPC": [
            {
                "action": "route53:ListHostedZonesByVPC"
            }
        ],
        "Route53.ListQueryLoggingConfigs": [
            {
                "action": "route53:ListQueryLoggingConfigs"
            }
        ],
        "Route53.ListResourceRecordSets": [
            {
                "action": "route53:ListResourceRecordSets"
            }
        ],
        "Route53.ListReusableDelegationSets": [
            {
                "action": "route53:ListReusableDelegationSets"
            }
        ],
        "Route53.ListTagsForResource": [
            {
                "action": "route53:ListTagsForResource"
            }
        ],
        "Route53.ListTagsForResources": [
            {
                "action": "route53:ListTagsForResources"
            }
        ],
        "Route53.ListTrafficPolicies": [
            {
                "action": "route53:ListTrafficPolicies"
            }
        ],
        "Route53.ListTrafficPolicyInstances": [
            {
                "action": "route53:ListTrafficPolicyInstances"
            }
        ],
        "Route53.ListTrafficPolicyInstancesByHostedZone": [
            {
                "action": "route53:ListTrafficPolicyInstancesByHostedZone"
            }
        ],
        "Route53.ListTrafficPolicyInstancesByPolicy": [
            {
                "action": "route53:ListTrafficPolicyInstancesByPolicy"
            }
        ],
        "Route53.ListTrafficPolicyVersions": [
            {
                "action": "route53:ListTrafficPolicyVersions"
            }
        ],
        "Route53.ListVPCAssociationAuthorizations": [
            {
                "action": "route53:ListVPCAssociationAuthorizations"
            }
        ],
        "Route53.TestDNSAnswer": [
            {
                "action": "route53:TestDNSAnswer"
            }
        ],
        "Route53.UpdateHealthCheck": [
            {
                "action": "route53:UpdateHealthCheck"
            }
        ],
        "Route53.UpdateHostedZoneComment": [
            {
                "action": "route53:UpdateHostedZoneComment"
            }
        ],
        "Route53.UpdateTrafficPolicyComment": [
            {
                "action": "route53:UpdateTrafficPolicyComment"
            }
        ],
        "Route53.UpdateTrafficPolicyInstance": [
            {
                "action": "route53:UpdateTrafficPolicyInstance"
            }
        ],
        "Route53Domains.CheckDomainAvailability": [
            {
                "action": "route53domains:CheckDomainAvailability"
            }
        ],
        "Route53Domains.DeleteTagsForDomain": [
            {
                "action": "route53domains:DeleteTagsForDomain"
            }
        ],
        "Route53Domains.DisableDomainAutoRenew": [
            {
                "action": "route53domains:DisableDomainAutoRenew"
            }
        ],
        "Route53Domains.DisableDomainTransferLock": [
            {
                "action": "route53domains:DisableDomainTransferLock"
            }
        ],
        "Route53Domains.EnableDomainAutoRenew": [
            {
                "action": "route53domains:EnableDomainAutoRenew"
            }
        ],
        "Route53Domains.EnableDomainTransferLock": [
            {
                "action": "route53domains:EnableDomainTransferLock"
            }
        ],
        "Route53Domains.GetContactReachabilityStatus": [
            {
                "action": "route53domains:GetContactReachabilityStatus"
            }
        ],
        "Route53Domains.GetDomainDetail": [
            {
                "action": "route53domains:GetDomainDetail"
            }
        ],
        "Route53Domains.GetDomainSuggestions": [
            {
                "action": "route53domains:GetDomainSuggestions"
            }
        ],
        "Route53Domains.GetOperationDetail": [
            {
                "action": "route53domains:GetOperationDetail"
            }
        ],
        "Route53Domains.ListDomains": [
            {
                "action": "route53domains:ListDomains"
            }
        ],
        "Route53Domains.ListOperations": [
            {
                "action": "route53domains:ListOperations"
            }
        ],
        "Route53Domains.ListTagsForDomain": [
            {
                "action": "route53domains:ListTagsForDomain"
            }
        ],
        "Route53Domains.RegisterDomain": [
            {
                "action": "route53domains:RegisterDomain"
            }
        ],
        "Route53Domains.RenewDomain": [
            {
                "action": "route53domains:RenewDomain"
            }
        ],
        "Route53Domains.ResendContactReachabilityEmail": [
            {
                "action": "route53domains:ResendContactReachabilityEmail"
            }
        ],
        "Route53Domains.RetrieveDomainAuthCode": [
            {
                "action": "route53domains:RetrieveDomainAuthCode"
            }
        ],
        "Route53Domains.TransferDomain": [
            {
                "action": "route53domains:TransferDomain"
            }
        ],
        "Route53Domains.UpdateDomainContact": [
            {
                "action": "route53domains:UpdateDomainContact"
            }
        ],
        "Route53Domains.UpdateDomainContactPrivacy": [
            {
                "action": "route53domains:UpdateDomainContactPrivacy"
            }
        ],
        "Route53Domains.UpdateDomainNameservers": [
            {
                "action": "route53domains:UpdateDomainNameservers"
            }
        ],
        "Route53Domains.UpdateTagsForDomain": [
            {
                "action": "route53domains:UpdateTagsForDomain"
            }
        ],
        "Route53Domains.ViewBilling": [
            {
                "action": "route53domains:ViewBilling"
            }
        ],
        "S3.AbortMultipartUpload": [
            {
                "action": "s3:AbortMultipartUpload"
            }
        ],
        "S3.CreateBucket": [
            {
                "action": "s3:CreateBucket"
            }
        ],
        "S3.DeleteBucket": [
            {
                "action": "s3:DeleteBucket"
            }
        ],
        "S3.DeleteBucketOwnershipControls": [
            {
                "action": "s3:DeleteBucketOwnershipControls"
            }
        ],
        "S3.DeleteBucketPolicy": [
            {
                "action": "s3:DeleteBucketPolicy"
            }
        ],
        "S3.DeleteBucketWebsite": [
            {
                "action": "s3:DeleteBucketWebsite"
            }
        ],
        "S3.DeleteObject": [
            {
                "action": "s3:DeleteObject"
            }
        ],
        "S3.DeleteObjectTagging": [
            {
                "action": "s3:DeleteObjectTagging"
            }
        ],
        "S3.GetBucketAcl": [
            {
                "action": "s3:GetBucketAcl"
            }
        ],
        "S3.GetBucketLocation": [
            {
                "action": "s3:GetBucketLocation"
            }
        ],
        "S3.GetBucketLogging": [
            {
                "action": "s3:GetBucketLogging"
            }
        ],
        "S3.GetBucketNotification": [
            {
                "action": "s3:GetBucketNotification"
            }
        ],
        "S3.GetBucketOwnershipControls": [
            {
                "action": "s3:GetBucketOwnershipControls"
            }
        ],
        "S3.GetBucketPolicy": [
            {
                "action": "s3:GetBucketPolicy"
            }
        ],
        "S3.GetBucketPolicyStatus": [
            {
                "action": "s3:GetBucketPolicyStatus"
            }
        ],
        "S3.GetBucketRequestPayment": [
            {
                "action": "s3:GetBucketRequestPayment"
            }
        ],
        "S3.GetBucketTagging": [
            {
                "action": "s3:GetBucketTagging"
            }
        ],
        "S3.GetBucketVersioning": [
            {
                "action": "s3:GetBucketVersioning"
            }
        ],
        "S3.GetBucketWebsite": [
            {
                "action": "s3:GetBucketWebsite"
            }
        ],
        "S3.GetObject": [
            {
                "action": "s3:GetObject"
            }
        ],
        "S3.GetObjectAcl": [
            {
                "action": "s3:GetObjectAcl"
            }
        ],
        "S3.GetObjectLegalHold": [
            {
                "action": "s3:GetObjectLegalHold"
            }
        ],
        "S3.GetObjectRetention": [
            {
                "action": "s3:GetObjectRetention"
            }
        ],
        "S3.GetObjectTagging": [
            {
                "action": "s3:GetObjectTagging"
            }
        ],
        "S3.GetObjectTorrent": [
            {
                "action": "s3:GetObjectTorrent"
            }
        ],
        "S3.PutBucketAcl": [
            {
                "action": "s3:PutBucketAcl"
            }
        ],
        "S3.PutBucketLogging": [
            {
                "action": "s3:PutBucketLogging"
            }
        ],
        "S3.PutBucketNotification": [
            {
                "action": "s3:PutBucketNotification"
            }
        ],
        "S3.PutBucketOwnershipControls": [
            {
                "action": "s3:PutBucketOwnershipControls"
            }
        ],
        "S3.PutBucketPolicy": [
            {
                "action": "s3:PutBucketPolicy"
            }
        ],
        "S3.PutBucketRequestPayment": [
            {
                "action": "s3:PutBucketRequestPayment"
            }
        ],
        "S3.PutBucketTagging": [
            {
                "action": "s3:PutBucketTagging"
            }
        ],
        "S3.PutBucketVersioning": [
            {
                "action": "s3:PutBucketVersioning"
            }
        ],
        "S3.PutBucketWebsite": [
            {
                "action": "s3:PutBucketWebsite"
            }
        ],
        "S3.PutObject": [
            {
                "action": "s3:PutObject"
            }
        ],
        "S3.PutObjectAcl": [
            {
                "action": "s3:PutObjectAcl"
            }
        ],
        "S3.PutObjectLegalHold": [
            {
                "action": "s3:PutObjectLegalHold"
            }
        ],
        "S3.PutObjectRetention": [
            {
                "action": "s3:PutObjectRetention"
            }
        ],
        "S3.PutObjectTagging": [
            {
                "action": "s3:PutObjectTagging"
            }
        ],
        "S3.RestoreObject": [
            {
                "action": "s3:RestoreObject"
            }
        ],
        "S3Control.CreateAccessPoint": [
            {
                "action": "s3-outposts:CreateAccessPoint"
            }
        ],
        "S3Control.CreateBucket": [
            {
                "action": "s3-outposts:CreateBucket"
            }
        ],
        "S3Control.DeleteAccessPoint": [
            {
                "action": "s3-outposts:DeleteAccessPoint"
            }
        ],
        "S3Control.DeleteAccessPointPolicy": [
            {
                "action": "s3-outposts:DeleteAccessPointPolicy"
            }
        ],
        "S3Control.DeleteBucket": [
            {
                "action": "s3-outposts:DeleteBucket"
            }
        ],
        "S3Control.DeleteBucketPolicy": [
            {
                "action": "s3-outposts:DeleteBucketPolicy"
            }
        ],
        "S3Control.GetAccessPoint": [
            {
                "action": "s3-outposts:GetAccessPoint"
            }
        ],
        "S3Control.GetAccessPointPolicy": [
            {
                "action": "s3-outposts:GetAccessPointPolicy"
            }
        ],
        "S3Control.GetBucketPolicy": [
            {
                "action": "s3-outposts:GetBucketPolicy"
            }
        ],
        "S3Control.GetBucketTagging": [
            {
                "action": "s3-outposts:GetBucketTagging"
            }
        ],
        "S3Control.ListAccessPoints": [
            {
                "action": "s3-outposts:ListAccessPoints"
            }
        ],
        "S3Control.ListRegionalBuckets": [
            {
                "action": "s3-outposts:ListRegionalBuckets"
            }
        ],
        "S3Control.PutAccessPointPolicy": [
            {
                "action": "s3-outposts:PutAccessPointPolicy"
            }
        ],
        "S3Control.PutBucketPolicy": [
            {
                "action": "s3-outposts:PutBucketPolicy"
            }
        ],
        "S3Control.PutBucketTagging": [
            {
                "action": "s3-outposts:PutBucketTagging"
            }
        ],
        "ServiceCatalog.AcceptPortfolioShare": [
            {
                "action": "servicecatalog:AcceptPortfolioShare"
            }
        ],
        "ServiceCatalog.AssociateBudgetWithResource": [
            {
                "action": "servicecatalog:AssociateBudgetWithResource"
            }
        ],
        "ServiceCatalog.AssociatePrincipalWithPortfolio": [
            {
                "action": "servicecatalog:AssociatePrincipalWithPortfolio"
            }
        ],
        "ServiceCatalog.AssociateProductWithPortfolio": [
            {
                "action": "servicecatalog:AssociateProductWithPortfolio"
            }
        ],
        "ServiceCatalog.AssociateServiceActionWithProvisioningArtifact": [
            {
                "action": "servicecatalog:AssociateServiceActionWithProvisioningArtifact"
            }
        ],
        "ServiceCatalog.AssociateTagOptionWithResource": [
            {
                "action": "servicecatalog:AssociateTagOptionWithResource"
            }
        ],
        "ServiceCatalog.BatchAssociateServiceActionWithProvisioningArtifact": [
            {
                "action": "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact"
            }
        ],
        "ServiceCatalog.BatchDisassociateServiceActionFromProvisioningArtifact": [
            {
                "action": "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact"
            }
        ],
        "ServiceCatalog.CopyProduct": [
            {
                "action": "servicecatalog:CopyProduct"
            }
        ],
        "ServiceCatalog.CreateConstraint": [
            {
                "action": "servicecatalog:CreateConstraint"
            }
        ],
        "ServiceCatalog.CreatePortfolio": [
            {
                "action": "servicecatalog:CreatePortfolio"
            }
        ],
        "ServiceCatalog.CreatePortfolioShare": [
            {
                "action": "servicecatalog:CreatePortfolioShare"
            }
        ],
        "ServiceCatalog.CreateProduct": [
            {
                "action": "servicecatalog:CreateProduct"
            }
        ],
        "ServiceCatalog.CreateProvisionedProductPlan": [
            {
                "action": "servicecatalog:CreateProvisionedProductPlan"
            }
        ],
        "ServiceCatalog.CreateProvisioningArtifact": [
            {
                "action": "servicecatalog:CreateProvisioningArtifact"
            }
        ],
        "ServiceCatalog.CreateServiceAction": [
            {
                "action": "servicecatalog:CreateServiceAction"
            }
        ],
        "ServiceCatalog.CreateTagOption": [
            {
                "action": "servicecatalog:CreateTagOption"
            }
        ],
        "ServiceCatalog.DeleteConstraint": [
            {
                "action": "servicecatalog:DeleteConstraint"
            }
        ],
        "ServiceCatalog.DeletePortfolio": [
            {
                "action": "servicecatalog:DeletePortfolio"
            }
        ],
        "ServiceCatalog.DeletePortfolioShare": [
            {
                "action": "servicecatalog:DeletePortfolioShare"
            }
        ],
        "ServiceCatalog.DeleteProduct": [
            {
                "action": "servicecatalog:DeleteProduct"
            }
        ],
        "ServiceCatalog.DeleteProvisionedProductPlan": [
            {
                "action": "servicecatalog:DeleteProvisionedProductPlan"
            }
        ],
        "ServiceCatalog.DeleteProvisioningArtifact": [
            {
                "action": "servicecatalog:DeleteProvisioningArtifact"
            }
        ],
        "ServiceCatalog.DeleteServiceAction": [
            {
                "action": "servicecatalog:DeleteServiceAction"
            }
        ],
        "ServiceCatalog.DeleteTagOption": [
            {
                "action": "servicecatalog:DeleteTagOption"
            }
        ],
        "ServiceCatalog.DescribeConstraint": [
            {
                "action": "servicecatalog:DescribeConstraint"
            }
        ],
        "ServiceCatalog.DescribeCopyProductStatus": [
            {
                "action": "servicecatalog:DescribeCopyProductStatus"
            }
        ],
        "ServiceCatalog.DescribePortfolio": [
            {
                "action": "servicecatalog:DescribePortfolio"
            }
        ],
        "ServiceCatalog.DescribePortfolioShareStatus": [
            {
                "action": "servicecatalog:DescribePortfolioShareStatus"
            }
        ],
        "ServiceCatalog.DescribeProduct": [
            {
                "action": "servicecatalog:DescribeProduct"
            }
        ],
        "ServiceCatalog.DescribeProductAsAdmin": [
            {
                "action": "servicecatalog:DescribeProductAsAdmin"
            }
        ],
        "ServiceCatalog.DescribeProductView": [
            {
                "action": "servicecatalog:DescribeProductView"
            }
        ],
        "ServiceCatalog.DescribeProvisionedProduct": [
            {
                "action": "servicecatalog:DescribeProvisionedProduct"
            }
        ],
        "ServiceCatalog.DescribeProvisionedProductPlan": [
            {
                "action": "servicecatalog:DescribeProvisionedProductPlan"
            }
        ],
        "ServiceCatalog.DescribeProvisioningArtifact": [
            {
                "action": "servicecatalog:DescribeProvisioningArtifact"
            }
        ],
        "ServiceCatalog.DescribeProvisioningParameters": [
            {
                "action": "servicecatalog:DescribeProvisioningParameters"
            }
        ],
        "ServiceCatalog.DescribeRecord": [
            {
                "action": "servicecatalog:DescribeRecord"
            }
        ],
        "ServiceCatalog.DescribeServiceAction": [
            {
                "action": "servicecatalog:DescribeServiceAction"
            }
        ],
        "ServiceCatalog.DescribeServiceActionExecutionParameters": [
            {
                "action": "servicecatalog:DescribeServiceActionExecutionParameters"
            }
        ],
        "ServiceCatalog.DescribeTagOption": [
            {
                "action": "servicecatalog:DescribeTagOption"
            }
        ],
        "ServiceCatalog.DisableAWSOrganizationsAccess": [
            {
                "action": "servicecatalog:DisableAWSOrganizationsAccess"
            }
        ],
        "ServiceCatalog.DisassociateBudgetFromResource": [
            {
                "action": "servicecatalog:DisassociateBudgetFromResource"
            }
        ],
        "ServiceCatalog.DisassociatePrincipalFromPortfolio": [
            {
                "action": "servicecatalog:DisassociatePrincipalFromPortfolio"
            }
        ],
        "ServiceCatalog.DisassociateProductFromPortfolio": [
            {
                "action": "servicecatalog:DisassociateProductFromPortfolio"
            }
        ],
        "ServiceCatalog.DisassociateServiceActionFromProvisioningArtifact": [
            {
                "action": "servicecatalog:DisassociateServiceActionFromProvisioningArtifact"
            }
        ],
        "ServiceCatalog.DisassociateTagOptionFromResource": [
            {
                "action": "servicecatalog:DisassociateTagOptionFromResource"
            }
        ],
        "ServiceCatalog.EnableAWSOrganizationsAccess": [
            {
                "action": "servicecatalog:EnableAWSOrganizationsAccess"
            }
        ],
        "ServiceCatalog.ExecuteProvisionedProductPlan": [
            {
                "action": "servicecatalog:ExecuteProvisionedProductPlan"
            }
        ],
        "ServiceCatalog.ExecuteProvisionedProductServiceAction": [
            {
                "action": "servicecatalog:ExecuteProvisionedProductServiceAction"
            }
        ],
        "ServiceCatalog.GetAWSOrganizationsAccessStatus": [
            {
                "action": "servicecatalog:GetAWSOrganizationsAccessStatus"
            }
        ],
        "ServiceCatalog.ImportAsProvisionedProduct": [
            {
                "action": "servicecatalog:ImportAsProvisionedProduct"
            }
        ],
        "ServiceCatalog.ListAcceptedPortfolioShares": [
            {
                "action": "servicecatalog:ListAcceptedPortfolioShares"
            }
        ],
        "ServiceCatalog.ListBudgetsForResource": [
            {
                "action": "servicecatalog:ListBudgetsForResource"
            }
        ],
        "ServiceCatalog.ListConstraintsForPortfolio": [
            {
                "action": "servicecatalog:ListConstraintsForPortfolio"
            }
        ],
        "ServiceCatalog.ListLaunchPaths": [
            {
                "action": "servicecatalog:ListLaunchPaths"
            }
        ],
        "ServiceCatalog.ListOrganizationPortfolioAccess": [
            {
                "action": "servicecatalog:ListOrganizationPortfolioAccess"
            }
        ],
        "ServiceCatalog.ListPortfolioAccess": [
            {
                "action": "servicecatalog:ListPortfolioAccess"
            }
        ],
        "ServiceCatalog.ListPortfolios": [
            {
                "action": "servicecatalog:ListPortfolios"
            }
        ],
        "ServiceCatalog.ListPortfoliosForProduct": [
            {
                "action": "servicecatalog:ListPortfoliosForProduct"
            }
        ],
        "ServiceCatalog.ListPrincipalsForPortfolio": [
            {
                "action": "servicecatalog:ListPrincipalsForPortfolio"
            }
        ],
        "ServiceCatalog.ListProvisionedProductPlans": [
            {
                "action": "servicecatalog:ListProvisionedProductPlans"
            }
        ],
        "ServiceCatalog.ListProvisioningArtifacts": [
            {
                "action": "servicecatalog:ListProvisioningArtifacts"
            }
        ],
        "ServiceCatalog.ListProvisioningArtifactsForServiceAction": [
            {
                "action": "servicecatalog:ListProvisioningArtifactsForServiceAction"
            }
        ],
        "ServiceCatalog.ListRecordHistory": [
            {
                "action": "servicecatalog:ListRecordHistory"
            }
        ],
        "ServiceCatalog.ListResourcesForTagOption": [
            {
                "action": "servicecatalog:ListResourcesForTagOption"
            }
        ],
        "ServiceCatalog.ListServiceActions": [
            {
                "action": "servicecatalog:ListServiceActions"
            }
        ],
        "ServiceCatalog.ListServiceActionsForProvisioningArtifact": [
            {
                "action": "servicecatalog:ListServiceActionsForProvisioningArtifact"
            }
        ],
        "ServiceCatalog.ListStackInstancesForProvisionedProduct": [
            {
                "action": "servicecatalog:ListStackInstancesForProvisionedProduct"
            }
        ],
        "ServiceCatalog.ListTagOptions": [
            {
                "action": "servicecatalog:ListTagOptions"
            }
        ],
        "ServiceCatalog.ProvisionProduct": [
            {
                "action": "servicecatalog:ProvisionProduct"
            }
        ],
        "ServiceCatalog.RejectPortfolioShare": [
            {
                "action": "servicecatalog:RejectPortfolioShare"
            }
        ],
        "ServiceCatalog.ScanProvisionedProducts": [
            {
                "action": "servicecatalog:ScanProvisionedProducts"
            }
        ],
        "ServiceCatalog.SearchProducts": [
            {
                "action": "servicecatalog:SearchProducts"
            }
        ],
        "ServiceCatalog.SearchProductsAsAdmin": [
            {
                "action": "servicecatalog:SearchProductsAsAdmin"
            }
        ],
        "ServiceCatalog.SearchProvisionedProducts": [
            {
                "action": "servicecatalog:SearchProvisionedProducts"
            }
        ],
        "ServiceCatalog.TerminateProvisionedProduct": [
            {
                "action": "servicecatalog:TerminateProvisionedProduct"
            }
        ],
        "ServiceCatalog.UpdateConstraint": [
            {
                "action": "servicecatalog:UpdateConstraint"
            }
        ],
        "ServiceCatalog.UpdatePortfolio": [
            {
                "action": "servicecatalog:UpdatePortfolio"
            }
        ],
        "ServiceCatalog.UpdateProduct": [
            {
                "action": "servicecatalog:UpdateProduct"
            }
        ],
        "ServiceCatalog.UpdateProvisionedProduct": [
            {
                "action": "servicecatalog:UpdateProvisionedProduct"
            }
        ],
        "ServiceCatalog.UpdateProvisionedProductProperties": [
            {
                "action": "servicecatalog:UpdateProvisionedProductProperties"
            }
        ],
        "ServiceCatalog.UpdateProvisioningArtifact": [
            {
                "action": "servicecatalog:UpdateProvisioningArtifact"
            }
        ],
        "ServiceCatalog.UpdateServiceAction": [
            {
                "action": "servicecatalog:UpdateServiceAction"
            }
        ],
        "ServiceCatalog.UpdateTagOption": [
            {
                "action": "servicecatalog:UpdateTagOption"
            }
        ],
        "SES.CloneReceiptRuleSet": [
            {
                "action": "ses:CloneReceiptRuleSet"
            }
        ],
        "SES.CreateConfigurationSet": [
            {
                "action": "ses:CreateConfigurationSet"
            }
        ],
        "SES.CreateConfigurationSetEventDestination": [
            {
                "action": "ses:CreateConfigurationSetEventDestination"
            }
        ],
        "SES.CreateConfigurationSetTrackingOptions": [
            {
                "action": "ses:CreateConfigurationSetTrackingOptions"
            }
        ],
        "SES.CreateCustomVerificationEmailTemplate": [
            {
                "action": "ses:CreateCustomVerificationEmailTemplate"
            }
        ],
        "SES.CreateReceiptFilter": [
            {
                "action": "ses:CreateReceiptFilter"
            }
        ],
        "SES.CreateReceiptRule": [
            {
                "action": "ses:CreateReceiptRule"
            }
        ],
        "SES.CreateReceiptRuleSet": [
            {
                "action": "ses:CreateReceiptRuleSet"
            }
        ],
        "SES.CreateTemplate": [
            {
                "action": "ses:CreateTemplate"
            }
        ],
        "SES.DeleteConfigurationSet": [
            {
                "action": "ses:DeleteConfigurationSet"
            }
        ],
        "SES.DeleteConfigurationSetEventDestination": [
            {
                "action": "ses:DeleteConfigurationSetEventDestination"
            }
        ],
        "SES.DeleteConfigurationSetTrackingOptions": [
            {
                "action": "ses:DeleteConfigurationSetTrackingOptions"
            }
        ],
        "SES.DeleteCustomVerificationEmailTemplate": [
            {
                "action": "ses:DeleteCustomVerificationEmailTemplate"
            }
        ],
        "SES.DeleteIdentity": [
            {
                "action": "ses:DeleteIdentity"
            }
        ],
        "SES.DeleteIdentityPolicy": [
            {
                "action": "ses:DeleteIdentityPolicy"
            }
        ],
        "SES.DeleteReceiptFilter": [
            {
                "action": "ses:DeleteReceiptFilter"
            }
        ],
        "SES.DeleteReceiptRule": [
            {
                "action": "ses:DeleteReceiptRule"
            }
        ],
        "SES.DeleteReceiptRuleSet": [
            {
                "action": "ses:DeleteReceiptRuleSet"
            }
        ],
        "SES.DeleteTemplate": [
            {
                "action": "ses:DeleteTemplate"
            }
        ],
        "SES.DeleteVerifiedEmailAddress": [
            {
                "action": "ses:DeleteVerifiedEmailAddress"
            }
        ],
        "SES.DescribeActiveReceiptRuleSet": [
            {
                "action": "ses:DescribeActiveReceiptRuleSet"
            }
        ],
        "SES.DescribeConfigurationSet": [
            {
                "action": "ses:DescribeConfigurationSet"
            }
        ],
        "SES.DescribeReceiptRule": [
            {
                "action": "ses:DescribeReceiptRule"
            }
        ],
        "SES.DescribeReceiptRuleSet": [
            {
                "action": "ses:DescribeReceiptRuleSet"
            }
        ],
        "SES.GetAccountSendingEnabled": [
            {
                "action": "ses:GetAccountSendingEnabled"
            }
        ],
        "SES.GetCustomVerificationEmailTemplate": [
            {
                "action": "ses:GetCustomVerificationEmailTemplate"
            }
        ],
        "SES.GetIdentityDkimAttributes": [
            {
                "action": "ses:GetIdentityDkimAttributes"
            }
        ],
        "SES.GetIdentityMailFromDomainAttributes": [
            {
                "action": "ses:GetIdentityMailFromDomainAttributes"
            }
        ],
        "SES.GetIdentityNotificationAttributes": [
            {
                "action": "ses:GetIdentityNotificationAttributes"
            }
        ],
        "SES.GetIdentityPolicies": [
            {
                "action": "ses:GetIdentityPolicies"
            }
        ],
        "SES.GetIdentityVerificationAttributes": [
            {
                "action": "ses:GetIdentityVerificationAttributes"
            }
        ],
        "SES.GetSendQuota": [
            {
                "action": "ses:GetSendQuota"
            }
        ],
        "SES.GetSendStatistics": [
            {
                "action": "ses:GetSendStatistics"
            }
        ],
        "SES.GetTemplate": [
            {
                "action": "ses:GetTemplate"
            }
        ],
        "SES.ListConfigurationSets": [
            {
                "action": "ses:ListConfigurationSets"
            }
        ],
        "SES.ListCustomVerificationEmailTemplates": [
            {
                "action": "ses:ListCustomVerificationEmailTemplates"
            }
        ],
        "SES.ListIdentities": [
            {
                "action": "ses:ListIdentities"
            }
        ],
        "SES.ListIdentityPolicies": [
            {
                "action": "ses:ListIdentityPolicies"
            }
        ],
        "SES.ListReceiptFilters": [
            {
                "action": "ses:ListReceiptFilters"
            }
        ],
        "SES.ListReceiptRuleSets": [
            {
                "action": "ses:ListReceiptRuleSets"
            }
        ],
        "SES.ListTemplates": [
            {
                "action": "ses:ListTemplates"
            }
        ],
        "SES.ListVerifiedEmailAddresses": [
            {
                "action": "ses:ListVerifiedEmailAddresses"
            }
        ],
        "SES.PutConfigurationSetDeliveryOptions": [
            {
                "action": "ses:PutConfigurationSetDeliveryOptions"
            }
        ],
        "SES.PutIdentityPolicy": [
            {
                "action": "ses:PutIdentityPolicy"
            }
        ],
        "SES.ReorderReceiptRuleSet": [
            {
                "action": "ses:ReorderReceiptRuleSet"
            }
        ],
        "SES.SendBounce": [
            {
                "action": "ses:SendBounce"
            }
        ],
        "SES.SendBulkTemplatedEmail": [
            {
                "action": "ses:SendBulkTemplatedEmail"
            }
        ],
        "SES.SendCustomVerificationEmail": [
            {
                "action": "ses:SendCustomVerificationEmail"
            }
        ],
        "SES.SendEmail": [
            {
                "action": "ses:SendEmail"
            }
        ],
        "SES.SendRawEmail": [
            {
                "action": "ses:SendRawEmail"
            }
        ],
        "SES.SendTemplatedEmail": [
            {
                "action": "ses:SendTemplatedEmail"
            }
        ],
        "SES.SetActiveReceiptRuleSet": [
            {
                "action": "ses:SetActiveReceiptRuleSet"
            }
        ],
        "SES.SetIdentityDkimEnabled": [
            {
                "action": "ses:SetIdentityDkimEnabled"
            }
        ],
        "SES.SetIdentityFeedbackForwardingEnabled": [
            {
                "action": "ses:SetIdentityFeedbackForwardingEnabled"
            }
        ],
        "SES.SetIdentityHeadersInNotificationsEnabled": [
            {
                "action": "ses:SetIdentityHeadersInNotificationsEnabled"
            }
        ],
        "SES.SetIdentityMailFromDomain": [
            {
                "action": "ses:SetIdentityMailFromDomain"
            }
        ],
        "SES.SetIdentityNotificationTopic": [
            {
                "action": "ses:SetIdentityNotificationTopic"
            }
        ],
        "SES.SetReceiptRulePosition": [
            {
                "action": "ses:SetReceiptRulePosition"
            }
        ],
        "SES.TestRenderTemplate": [
            {
                "action": "ses:TestRenderTemplate"
            }
        ],
        "SES.UpdateAccountSendingEnabled": [
            {
                "action": "ses:UpdateAccountSendingEnabled"
            }
        ],
        "SES.UpdateConfigurationSetEventDestination": [
            {
                "action": "ses:UpdateConfigurationSetEventDestination"
            }
        ],
        "SES.UpdateConfigurationSetReputationMetricsEnabled": [
            {
                "action": "ses:UpdateConfigurationSetReputationMetricsEnabled"
            }
        ],
        "SES.UpdateConfigurationSetSendingEnabled": [
            {
                "action": "ses:UpdateConfigurationSetSendingEnabled"
            }
        ],
        "SES.UpdateConfigurationSetTrackingOptions": [
            {
                "action": "ses:UpdateConfigurationSetTrackingOptions"
            }
        ],
        "SES.UpdateCustomVerificationEmailTemplate": [
            {
                "action": "ses:UpdateCustomVerificationEmailTemplate"
            }
        ],
        "SES.UpdateReceiptRule": [
            {
                "action": "ses:UpdateReceiptRule"
            }
        ],
        "SES.UpdateTemplate": [
            {
                "action": "ses:UpdateTemplate"
            }
        ],
        "SES.VerifyDomainDkim": [
            {
                "action": "ses:VerifyDomainDkim"
            }
        ],
        "SES.VerifyDomainIdentity": [
            {
                "action": "ses:VerifyDomainIdentity"
            }
        ],
        "SES.VerifyEmailAddress": [
            {
                "action": "ses:VerifyEmailAddress"
            }
        ],
        "SES.VerifyEmailIdentity": [
            {
                "action": "ses:VerifyEmailIdentity"
            }
        ],
        "Shield.AssociateDRTLogBucket": [
            {
                "action": "shield:AssociateDRTLogBucket"
            }
        ],
        "Shield.AssociateDRTRole": [
            {
                "action": "shield:AssociateDRTRole"
            }
        ],
        "Shield.CreateProtection": [
            {
                "action": "shield:CreateProtection"
            }
        ],
        "Shield.CreateSubscription": [
            {
                "action": "shield:CreateSubscription"
            }
        ],
        "Shield.DeleteProtection": [
            {
                "action": "shield:DeleteProtection"
            }
        ],
        "Shield.DeleteSubscription": [
            {
                "action": "shield:DeleteSubscription"
            }
        ],
        "Shield.DescribeAttack": [
            {
                "action": "shield:DescribeAttack"
            }
        ],
        "Shield.DescribeDRTAccess": [
            {
                "action": "shield:DescribeDRTAccess"
            }
        ],
        "Shield.DescribeEmergencyContactSettings": [
            {
                "action": "shield:DescribeEmergencyContactSettings"
            }
        ],
        "Shield.DescribeProtection": [
            {
                "action": "shield:DescribeProtection"
            }
        ],
        "Shield.DescribeSubscription": [
            {
                "action": "shield:DescribeSubscription"
            }
        ],
        "Shield.DisassociateDRTLogBucket": [
            {
                "action": "shield:DisassociateDRTLogBucket"
            }
        ],
        "Shield.DisassociateDRTRole": [
            {
                "action": "shield:DisassociateDRTRole"
            }
        ],
        "Shield.GetSubscriptionState": [
            {
                "action": "shield:GetSubscriptionState"
            }
        ],
        "Shield.ListAttacks": [
            {
                "action": "shield:ListAttacks"
            }
        ],
        "Shield.ListProtections": [
            {
                "action": "shield:ListProtections"
            }
        ],
        "Shield.UpdateEmergencyContactSettings": [
            {
                "action": "shield:UpdateEmergencyContactSettings"
            }
        ],
        "Shield.UpdateSubscription": [
            {
                "action": "shield:UpdateSubscription"
            }
        ],
        "SimpleDB.BatchDeleteAttributes": [
            {
                "action": "sdb:BatchDeleteAttributes"
            }
        ],
        "SimpleDB.BatchPutAttributes": [
            {
                "action": "sdb:BatchPutAttributes"
            }
        ],
        "SimpleDB.CreateDomain": [
            {
                "action": "sdb:CreateDomain"
            }
        ],
        "SimpleDB.DeleteAttributes": [
            {
                "action": "sdb:DeleteAttributes"
            }
        ],
        "SimpleDB.DeleteDomain": [
            {
                "action": "sdb:DeleteDomain"
            }
        ],
        "SimpleDB.DomainMetadata": [
            {
                "action": "sdb:DomainMetadata"
            }
        ],
        "SimpleDB.GetAttributes": [
            {
                "action": "sdb:GetAttributes"
            }
        ],
        "SimpleDB.ListDomains": [
            {
                "action": "sdb:ListDomains"
            }
        ],
        "SimpleDB.PutAttributes": [
            {
                "action": "sdb:PutAttributes"
            }
        ],
        "SimpleDB.Select": [
            {
                "action": "sdb:Select"
            }
        ],
        "SMS.CreateApp": [
            {
                "action": "sms:CreateApp"
            }
        ],
        "SMS.CreateReplicationJob": [
            {
                "action": "sms:CreateReplicationJob"
            }
        ],
        "SMS.DeleteApp": [
            {
                "action": "sms:DeleteApp"
            }
        ],
        "SMS.DeleteAppLaunchConfiguration": [
            {
                "action": "sms:DeleteAppLaunchConfiguration"
            }
        ],
        "SMS.DeleteAppReplicationConfiguration": [
            {
                "action": "sms:DeleteAppReplicationConfiguration"
            }
        ],
        "SMS.DeleteAppValidationConfiguration": [
            {
                "action": "sms:DeleteAppValidationConfiguration"
            }
        ],
        "SMS.DeleteReplicationJob": [
            {
                "action": "sms:DeleteReplicationJob"
            }
        ],
        "SMS.DeleteServerCatalog": [
            {
                "action": "sms:DeleteServerCatalog"
            }
        ],
        "SMS.DisassociateConnector": [
            {
                "action": "sms:DisassociateConnector"
            }
        ],
        "SMS.GenerateChangeSet": [
            {
                "action": "sms:GenerateChangeSet"
            }
        ],
        "SMS.GenerateTemplate": [
            {
                "action": "sms:GenerateTemplate"
            }
        ],
        "SMS.GetApp": [
            {
                "action": "sms:GetApp"
            }
        ],
        "SMS.GetAppLaunchConfiguration": [
            {
                "action": "sms:GetAppLaunchConfiguration"
            }
        ],
        "SMS.GetAppReplicationConfiguration": [
            {
                "action": "sms:GetAppReplicationConfiguration"
            }
        ],
        "SMS.GetAppValidationConfiguration": [
            {
                "action": "sms:GetAppValidationConfiguration"
            }
        ],
        "SMS.GetAppValidationOutput": [
            {
                "action": "sms:GetAppValidationOutput"
            }
        ],
        "SMS.GetConnectors": [
            {
                "action": "sms:GetConnectors"
            }
        ],
        "SMS.GetReplicationJobs": [
            {
                "action": "sms:GetReplicationJobs"
            }
        ],
        "SMS.GetReplicationRuns": [
            {
                "action": "sms:GetReplicationRuns"
            }
        ],
        "SMS.GetServers": [
            {
                "action": "sms:GetServers"
            }
        ],
        "SMS.ImportAppCatalog": [
            {
                "action": "sms:ImportAppCatalog"
            }
        ],
        "SMS.ImportServerCatalog": [
            {
                "action": "sms:ImportServerCatalog"
            }
        ],
        "SMS.LaunchApp": [
            {
                "action": "sms:LaunchApp"
            }
        ],
        "SMS.ListApps": [
            {
                "action": "sms:ListApps"
            }
        ],
        "SMS.NotifyAppValidationOutput": [
            {
                "action": "sms:NotifyAppValidationOutput"
            }
        ],
        "SMS.PutAppLaunchConfiguration": [
            {
                "action": "sms:PutAppLaunchConfiguration"
            }
        ],
        "SMS.PutAppReplicationConfiguration": [
            {
                "action": "sms:PutAppReplicationConfiguration"
            }
        ],
        "SMS.PutAppValidationConfiguration": [
            {
                "action": "sms:PutAppValidationConfiguration"
            }
        ],
        "SMS.StartAppReplication": [
            {
                "action": "sms:StartAppReplication"
            }
        ],
        "SMS.StartOnDemandAppReplication": [
            {
                "action": "sms:StartOnDemandAppReplication"
            }
        ],
        "SMS.StartOnDemandReplicationRun": [
            {
                "action": "sms:StartOnDemandReplicationRun"
            }
        ],
        "SMS.StopAppReplication": [
            {
                "action": "sms:StopAppReplication"
            }
        ],
        "SMS.TerminateApp": [
            {
                "action": "sms:TerminateApp"
            }
        ],
        "SMS.UpdateApp": [
            {
                "action": "sms:UpdateApp"
            }
        ],
        "SMS.UpdateReplicationJob": [
            {
                "action": "sms:UpdateReplicationJob"
            }
        ],
        "Snowball.CancelCluster": [
            {
                "action": "snowball:CancelCluster"
            }
        ],
        "Snowball.CancelJob": [
            {
                "action": "snowball:CancelJob"
            }
        ],
        "Snowball.CreateAddress": [
            {
                "action": "snowball:CreateAddress"
            }
        ],
        "Snowball.CreateCluster": [
            {
                "action": "snowball:CreateCluster"
            }
        ],
        "Snowball.CreateJob": [
            {
                "action": "snowball:CreateJob"
            }
        ],
        "Snowball.DescribeAddress": [
            {
                "action": "snowball:DescribeAddress"
            }
        ],
        "Snowball.DescribeAddresses": [
            {
                "action": "snowball:DescribeAddresses"
            }
        ],
        "Snowball.DescribeCluster": [
            {
                "action": "snowball:DescribeCluster"
            }
        ],
        "Snowball.DescribeJob": [
            {
                "action": "snowball:DescribeJob"
            }
        ],
        "Snowball.GetJobManifest": [
            {
                "action": "snowball:GetJobManifest"
            }
        ],
        "Snowball.GetJobUnlockCode": [
            {
                "action": "snowball:GetJobUnlockCode"
            }
        ],
        "Snowball.GetSnowballUsage": [
            {
                "action": "snowball:GetSnowballUsage"
            }
        ],
        "Snowball.ListClusterJobs": [
            {
                "action": "snowball:ListClusterJobs"
            }
        ],
        "Snowball.ListClusters": [
            {
                "action": "snowball:ListClusters"
            }
        ],
        "Snowball.ListJobs": [
            {
                "action": "snowball:ListJobs"
            }
        ],
        "Snowball.UpdateCluster": [
            {
                "action": "snowball:UpdateCluster"
            }
        ],
        "Snowball.UpdateJob": [
            {
                "action": "snowball:UpdateJob"
            }
        ],
        "SNS.AddPermission": [
            {
                "action": "sns:AddPermission"
            }
        ],
        "SNS.CheckIfPhoneNumberIsOptedOut": [
            {
                "action": "sns:CheckIfPhoneNumberIsOptedOut"
            }
        ],
        "SNS.ConfirmSubscription": [
            {
                "action": "sns:ConfirmSubscription"
            }
        ],
        "SNS.CreatePlatformApplication": [
            {
                "action": "sns:CreatePlatformApplication"
            }
        ],
        "SNS.CreatePlatformEndpoint": [
            {
                "action": "sns:CreatePlatformEndpoint"
            }
        ],
        "SNS.CreateTopic": [
            {
                "action": "sns:CreateTopic"
            }
        ],
        "SNS.DeleteEndpoint": [
            {
                "action": "sns:DeleteEndpoint"
            }
        ],
        "SNS.DeletePlatformApplication": [
            {
                "action": "sns:DeletePlatformApplication"
            }
        ],
        "SNS.DeleteTopic": [
            {
                "action": "sns:DeleteTopic"
            }
        ],
        "SNS.GetEndpointAttributes": [
            {
                "action": "sns:GetEndpointAttributes"
            }
        ],
        "SNS.GetPlatformApplicationAttributes": [
            {
                "action": "sns:GetPlatformApplicationAttributes"
            }
        ],
        "SNS.GetSMSAttributes": [
            {
                "action": "sns:GetSMSAttributes"
            }
        ],
        "SNS.GetSubscriptionAttributes": [
            {
                "action": "sns:GetSubscriptionAttributes"
            }
        ],
        "SNS.GetTopicAttributes": [
            {
                "action": "sns:GetTopicAttributes"
            }
        ],
        "SNS.ListEndpointsByPlatformApplication": [
            {
                "action": "sns:ListEndpointsByPlatformApplication"
            }
        ],
        "SNS.ListPhoneNumbersOptedOut": [
            {
                "action": "sns:ListPhoneNumbersOptedOut"
            }
        ],
        "SNS.ListPlatformApplications": [
            {
                "action": "sns:ListPlatformApplications"
            }
        ],
        "SNS.ListSubscriptions": [
            {
                "action": "sns:ListSubscriptions"
            }
        ],
        "SNS.ListSubscriptionsByTopic": [
            {
                "action": "sns:ListSubscriptionsByTopic"
            }
        ],
        "SNS.ListTagsForResource": [
            {
                "action": "sns:ListTagsForResource"
            }
        ],
        "SNS.ListTopics": [
            {
                "action": "sns:ListTopics"
            }
        ],
        "SNS.OptInPhoneNumber": [
            {
                "action": "sns:OptInPhoneNumber"
            }
        ],
        "SNS.Publish": [
            {
                "action": "sns:Publish"
            }
        ],
        "SNS.RemovePermission": [
            {
                "action": "sns:RemovePermission"
            }
        ],
        "SNS.SetEndpointAttributes": [
            {
                "action": "sns:SetEndpointAttributes"
            }
        ],
        "SNS.SetPlatformApplicationAttributes": [
            {
                "action": "sns:SetPlatformApplicationAttributes"
            }
        ],
        "SNS.SetSMSAttributes": [
            {
                "action": "sns:SetSMSAttributes"
            }
        ],
        "SNS.SetSubscriptionAttributes": [
            {
                "action": "sns:SetSubscriptionAttributes"
            }
        ],
        "SNS.SetTopicAttributes": [
            {
                "action": "sns:SetTopicAttributes"
            }
        ],
        "SNS.Subscribe": [
            {
                "action": "sns:Subscribe"
            }
        ],
        "SNS.TagResource": [
            {
                "action": "sns:TagResource"
            }
        ],
        "SNS.Unsubscribe": [
            {
                "action": "sns:Unsubscribe"
            }
        ],
        "SNS.UntagResource": [
            {
                "action": "sns:UntagResource"
            }
        ],
        "SQS.AddPermission": [
            {
                "action": "sqs:AddPermission"
            }
        ],
        "SQS.ChangeMessageVisibility": [
            {
                "action": "sqs:ChangeMessageVisibility"
            }
        ],
        "SQS.ChangeMessageVisibilityBatch": [
            {
                "action": "sqs:ChangeMessageVisibilityBatch"
            }
        ],
        "SQS.CreateQueue": [
            {
                "action": "sqs:CreateQueue"
            }
        ],
        "SQS.DeleteMessage": [
            {
                "action": "sqs:DeleteMessage"
            }
        ],
        "SQS.DeleteMessageBatch": [
            {
                "action": "sqs:DeleteMessageBatch"
            }
        ],
        "SQS.DeleteQueue": [
            {
                "action": "sqs:DeleteQueue"
            }
        ],
        "SQS.GetQueueAttributes": [
            {
                "action": "sqs:GetQueueAttributes"
            }
        ],
        "SQS.GetQueueUrl": [
            {
                "action": "sqs:GetQueueUrl"
            }
        ],
        "SQS.ListDeadLetterSourceQueues": [
            {
                "action": "sqs:ListDeadLetterSourceQueues"
            }
        ],
        "SQS.ListQueueTags": [
            {
                "action": "sqs:ListQueueTags"
            }
        ],
        "SQS.ListQueues": [
            {
                "action": "sqs:ListQueues"
            }
        ],
        "SQS.PurgeQueue": [
            {
                "action": "sqs:PurgeQueue"
            }
        ],
        "SQS.ReceiveMessage": [
            {
                "action": "sqs:ReceiveMessage"
            }
        ],
        "SQS.RemovePermission": [
            {
                "action": "sqs:RemovePermission"
            }
        ],
        "SQS.SendMessage": [
            {
                "action": "sqs:SendMessage"
            }
        ],
        "SQS.SendMessageBatch": [
            {
                "action": "sqs:SendMessageBatch"
            }
        ],
        "SQS.SetQueueAttributes": [
            {
                "action": "sqs:SetQueueAttributes"
            }
        ],
        "SQS.TagQueue": [
            {
                "action": "sqs:TagQueue"
            }
        ],
        "SQS.UntagQueue": [
            {
                "action": "sqs:UntagQueue"
            }
        ],
        "SSM.AddTagsToResource": [
            {
                "action": "ssm:AddTagsToResource"
            }
        ],
        "SSM.CancelCommand": [
            {
                "action": "ssm:CancelCommand"
            }
        ],
        "SSM.CancelMaintenanceWindowExecution": [
            {
                "action": "ssm:CancelMaintenanceWindowExecution"
            }
        ],
        "SSM.CreateActivation": [
            {
                "action": "ssm:CreateActivation"
            }
        ],
        "SSM.CreateAssociation": [
            {
                "action": "ssm:CreateAssociation"
            }
        ],
        "SSM.CreateAssociationBatch": [
            {
                "action": "ssm:CreateAssociationBatch"
            }
        ],
        "SSM.CreateDocument": [
            {
                "action": "ssm:CreateDocument"
            }
        ],
        "SSM.CreateMaintenanceWindow": [
            {
                "action": "ssm:CreateMaintenanceWindow"
            }
        ],
        "SSM.CreateOpsItem": [
            {
                "action": "ssm:CreateOpsItem"
            }
        ],
        "SSM.CreateOpsMetadata": [
            {
                "action": "ssm:CreateOpsMetadata"
            }
        ],
        "SSM.CreatePatchBaseline": [
            {
                "action": "ssm:CreatePatchBaseline"
            }
        ],
        "SSM.CreateResourceDataSync": [
            {
                "action": "ssm:CreateResourceDataSync"
            }
        ],
        "SSM.DeleteActivation": [
            {
                "action": "ssm:DeleteActivation"
            }
        ],
        "SSM.DeleteAssociation": [
            {
                "action": "ssm:DeleteAssociation"
            }
        ],
        "SSM.DeleteDocument": [
            {
                "action": "ssm:DeleteDocument"
            }
        ],
        "SSM.DeleteInventory": [
            {
                "action": "ssm:DeleteInventory"
            }
        ],
        "SSM.DeleteMaintenanceWindow": [
            {
                "action": "ssm:DeleteMaintenanceWindow"
            }
        ],
        "SSM.DeleteOpsMetadata": [
            {
                "action": "ssm:DeleteOpsMetadata"
            }
        ],
        "SSM.DeleteParameter": [
            {
                "action": "ssm:DeleteParameter"
            }
        ],
        "SSM.DeleteParameters": [
            {
                "action": "ssm:DeleteParameters"
            }
        ],
        "SSM.DeletePatchBaseline": [
            {
                "action": "ssm:DeletePatchBaseline"
            }
        ],
        "SSM.DeleteResourceDataSync": [
            {
                "action": "ssm:DeleteResourceDataSync"
            }
        ],
        "SSM.DeregisterManagedInstance": [
            {
                "action": "ssm:DeregisterManagedInstance"
            }
        ],
        "SSM.DeregisterPatchBaselineForPatchGroup": [
            {
                "action": "ssm:DeregisterPatchBaselineForPatchGroup"
            }
        ],
        "SSM.DeregisterTargetFromMaintenanceWindow": [
            {
                "action": "ssm:DeregisterTargetFromMaintenanceWindow"
            }
        ],
        "SSM.DeregisterTaskFromMaintenanceWindow": [
            {
                "action": "ssm:DeregisterTaskFromMaintenanceWindow"
            }
        ],
        "SSM.DescribeActivations": [
            {
                "action": "ssm:DescribeActivations"
            }
        ],
        "SSM.DescribeAssociation": [
            {
                "action": "ssm:DescribeAssociation"
            }
        ],
        "SSM.DescribeAssociationExecutionTargets": [
            {
                "action": "ssm:DescribeAssociationExecutionTargets"
            }
        ],
        "SSM.DescribeAssociationExecutions": [
            {
                "action": "ssm:DescribeAssociationExecutions"
            }
        ],
        "SSM.DescribeAutomationExecutions": [
            {
                "action": "ssm:DescribeAutomationExecutions"
            }
        ],
        "SSM.DescribeAutomationStepExecutions": [
            {
                "action": "ssm:DescribeAutomationStepExecutions"
            }
        ],
        "SSM.DescribeAvailablePatches": [
            {
                "action": "ssm:DescribeAvailablePatches"
            }
        ],
        "SSM.DescribeDocument": [
            {
                "action": "ssm:DescribeDocument"
            }
        ],
        "SSM.DescribeDocumentPermission": [
            {
                "action": "ssm:DescribeDocumentPermission"
            }
        ],
        "SSM.DescribeEffectiveInstanceAssociations": [
            {
                "action": "ssm:DescribeEffectiveInstanceAssociations"
            }
        ],
        "SSM.DescribeEffectivePatchesForPatchBaseline": [
            {
                "action": "ssm:DescribeEffectivePatchesForPatchBaseline"
            }
        ],
        "SSM.DescribeInstanceAssociationsStatus": [
            {
                "action": "ssm:DescribeInstanceAssociationsStatus"
            }
        ],
        "SSM.DescribeInstanceInformation": [
            {
                "action": "ssm:DescribeInstanceInformation"
            }
        ],
        "SSM.DescribeInstancePatchStates": [
            {
                "action": "ssm:DescribeInstancePatchStates"
            }
        ],
        "SSM.DescribeInstancePatchStatesForPatchGroup": [
            {
                "action": "ssm:DescribeInstancePatchStatesForPatchGroup"
            }
        ],
        "SSM.DescribeInstancePatches": [
            {
                "action": "ssm:DescribeInstancePatches"
            }
        ],
        "SSM.DescribeInventoryDeletions": [
            {
                "action": "ssm:DescribeInventoryDeletions"
            }
        ],
        "SSM.DescribeMaintenanceWindowExecutionTaskInvocations": [
            {
                "action": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations"
            }
        ],
        "SSM.DescribeMaintenanceWindowExecutionTasks": [
            {
                "action": "ssm:DescribeMaintenanceWindowExecutionTasks"
            }
        ],
        "SSM.DescribeMaintenanceWindowExecutions": [
            {
                "action": "ssm:DescribeMaintenanceWindowExecutions"
            }
        ],
        "SSM.DescribeMaintenanceWindowSchedule": [
            {
                "action": "ssm:DescribeMaintenanceWindowSchedule"
            }
        ],
        "SSM.DescribeMaintenanceWindowTargets": [
            {
                "action": "ssm:DescribeMaintenanceWindowTargets"
            }
        ],
        "SSM.DescribeMaintenanceWindowTasks": [
            {
                "action": "ssm:DescribeMaintenanceWindowTasks"
            }
        ],
        "SSM.DescribeMaintenanceWindows": [
            {
                "action": "ssm:DescribeMaintenanceWindows"
            }
        ],
        "SSM.DescribeMaintenanceWindowsForTarget": [
            {
                "action": "ssm:DescribeMaintenanceWindowsForTarget"
            }
        ],
        "SSM.DescribeOpsItems": [
            {
                "action": "ssm:DescribeOpsItems"
            }
        ],
        "SSM.DescribeParameters": [
            {
                "action": "ssm:DescribeParameters"
            }
        ],
        "SSM.DescribePatchBaselines": [
            {
                "action": "ssm:DescribePatchBaselines"
            }
        ],
        "SSM.DescribePatchGroupState": [
            {
                "action": "ssm:DescribePatchGroupState"
            }
        ],
        "SSM.DescribePatchGroups": [
            {
                "action": "ssm:DescribePatchGroups"
            }
        ],
        "SSM.DescribePatchProperties": [
            {
                "action": "ssm:DescribePatchProperties"
            }
        ],
        "SSM.DescribeSessions": [
            {
                "action": "ssm:DescribeSessions"
            }
        ],
        "SSM.GetAutomationExecution": [
            {
                "action": "ssm:GetAutomationExecution"
            }
        ],
        "SSM.GetCalendarState": [
            {
                "action": "ssm:GetCalendarState"
            }
        ],
        "SSM.GetCommandInvocation": [
            {
                "action": "ssm:GetCommandInvocation"
            }
        ],
        "SSM.GetConnectionStatus": [
            {
                "action": "ssm:GetConnectionStatus"
            }
        ],
        "SSM.GetDefaultPatchBaseline": [
            {
                "action": "ssm:GetDefaultPatchBaseline"
            }
        ],
        "SSM.GetDeployablePatchSnapshotForInstance": [
            {
                "action": "ssm:GetDeployablePatchSnapshotForInstance"
            }
        ],
        "SSM.GetDocument": [
            {
                "action": "ssm:GetDocument"
            }
        ],
        "SSM.GetInventory": [
            {
                "action": "ssm:GetInventory"
            }
        ],
        "SSM.GetInventorySchema": [
            {
                "action": "ssm:GetInventorySchema"
            }
        ],
        "SSM.GetMaintenanceWindow": [
            {
                "action": "ssm:GetMaintenanceWindow"
            }
        ],
        "SSM.GetMaintenanceWindowExecution": [
            {
                "action": "ssm:GetMaintenanceWindowExecution"
            }
        ],
        "SSM.GetMaintenanceWindowExecutionTask": [
            {
                "action": "ssm:GetMaintenanceWindowExecutionTask"
            }
        ],
        "SSM.GetMaintenanceWindowExecutionTaskInvocation": [
            {
                "action": "ssm:GetMaintenanceWindowExecutionTaskInvocation"
            }
        ],
        "SSM.GetMaintenanceWindowTask": [
            {
                "action": "ssm:GetMaintenanceWindowTask"
            }
        ],
        "SSM.GetOpsItem": [
            {
                "action": "ssm:GetOpsItem"
            }
        ],
        "SSM.GetOpsMetadata": [
            {
                "action": "ssm:GetOpsMetadata"
            }
        ],
        "SSM.GetOpsSummary": [
            {
                "action": "ssm:GetOpsSummary"
            }
        ],
        "SSM.GetParameter": [
            {
                "action": "ssm:GetParameter"
            }
        ],
        "SSM.GetParameterHistory": [
            {
                "action": "ssm:GetParameterHistory"
            }
        ],
        "SSM.GetParameters": [
            {
                "action": "ssm:GetParameters"
            }
        ],
        "SSM.GetParametersByPath": [
            {
                "action": "ssm:GetParametersByPath"
            }
        ],
        "SSM.GetPatchBaseline": [
            {
                "action": "ssm:GetPatchBaseline"
            }
        ],
        "SSM.GetPatchBaselineForPatchGroup": [
            {
                "action": "ssm:GetPatchBaselineForPatchGroup"
            }
        ],
        "SSM.GetServiceSetting": [
            {
                "action": "ssm:GetServiceSetting"
            }
        ],
        "SSM.LabelParameterVersion": [
            {
                "action": "ssm:LabelParameterVersion"
            }
        ],
        "SSM.ListAssociationVersions": [
            {
                "action": "ssm:ListAssociationVersions"
            }
        ],
        "SSM.ListAssociations": [
            {
                "action": "ssm:ListAssociations"
            }
        ],
        "SSM.ListCommandInvocations": [
            {
                "action": "ssm:ListCommandInvocations"
            }
        ],
        "SSM.ListCommands": [
            {
                "action": "ssm:ListCommands"
            }
        ],
        "SSM.ListComplianceItems": [
            {
                "action": "ssm:ListComplianceItems"
            }
        ],
        "SSM.ListComplianceSummaries": [
            {
                "action": "ssm:ListComplianceSummaries"
            }
        ],
        "SSM.ListDocumentMetadataHistory": [
            {
                "action": "ssm:ListDocumentMetadataHistory"
            }
        ],
        "SSM.ListDocumentVersions": [
            {
                "action": "ssm:ListDocumentVersions"
            }
        ],
        "SSM.ListDocuments": [
            {
                "action": "ssm:ListDocuments"
            }
        ],
        "SSM.ListInventoryEntries": [
            {
                "action": "ssm:ListInventoryEntries"
            }
        ],
        "SSM.ListOpsItemEvents": [
            {
                "action": "ssm:ListOpsItemEvents"
            }
        ],
        "SSM.ListOpsMetadata": [
            {
                "action": "ssm:ListOpsMetadata"
            }
        ],
        "SSM.ListResourceComplianceSummaries": [
            {
                "action": "ssm:ListResourceComplianceSummaries"
            }
        ],
        "SSM.ListResourceDataSync": [
            {
                "action": "ssm:ListResourceDataSync"
            }
        ],
        "SSM.ListTagsForResource": [
            {
                "action": "ssm:ListTagsForResource"
            }
        ],
        "SSM.ModifyDocumentPermission": [
            {
                "action": "ssm:ModifyDocumentPermission"
            }
        ],
        "SSM.PutComplianceItems": [
            {
                "action": "ssm:PutComplianceItems"
            }
        ],
        "SSM.PutInventory": [
            {
                "action": "ssm:PutInventory"
            }
        ],
        "SSM.PutParameter": [
            {
                "action": "ssm:PutParameter"
            }
        ],
        "SSM.RegisterDefaultPatchBaseline": [
            {
                "action": "ssm:RegisterDefaultPatchBaseline"
            }
        ],
        "SSM.RegisterPatchBaselineForPatchGroup": [
            {
                "action": "ssm:RegisterPatchBaselineForPatchGroup"
            }
        ],
        "SSM.RegisterTargetWithMaintenanceWindow": [
            {
                "action": "ssm:RegisterTargetWithMaintenanceWindow"
            }
        ],
        "SSM.RegisterTaskWithMaintenanceWindow": [
            {
                "action": "ssm:RegisterTaskWithMaintenanceWindow"
            }
        ],
        "SSM.RemoveTagsFromResource": [
            {
                "action": "ssm:RemoveTagsFromResource"
            }
        ],
        "SSM.ResetServiceSetting": [
            {
                "action": "ssm:ResetServiceSetting"
            }
        ],
        "SSM.ResumeSession": [
            {
                "action": "ssm:ResumeSession"
            }
        ],
        "SSM.SendAutomationSignal": [
            {
                "action": "ssm:SendAutomationSignal"
            }
        ],
        "SSM.SendCommand": [
            {
                "action": "ssm:SendCommand"
            }
        ],
        "SSM.StartAssociationsOnce": [
            {
                "action": "ssm:StartAssociationsOnce"
            }
        ],
        "SSM.StartAutomationExecution": [
            {
                "action": "ssm:StartAutomationExecution"
            }
        ],
        "SSM.StartChangeRequestExecution": [
            {
                "action": "ssm:StartChangeRequestExecution"
            }
        ],
        "SSM.StartSession": [
            {
                "action": "ssm:StartSession"
            }
        ],
        "SSM.StopAutomationExecution": [
            {
                "action": "ssm:StopAutomationExecution"
            }
        ],
        "SSM.TerminateSession": [
            {
                "action": "ssm:TerminateSession"
            }
        ],
        "SSM.UpdateAssociation": [
            {
                "action": "ssm:UpdateAssociation"
            }
        ],
        "SSM.UpdateAssociationStatus": [
            {
                "action": "ssm:UpdateAssociationStatus"
            }
        ],
        "SSM.UpdateDocument": [
            {
                "action": "ssm:UpdateDocument"
            }
        ],
        "SSM.UpdateDocumentDefaultVersion": [
            {
                "action": "ssm:UpdateDocumentDefaultVersion"
            }
        ],
        "SSM.UpdateDocumentMetadata": [
            {
                "action": "ssm:UpdateDocumentMetadata"
            }
        ],
        "SSM.UpdateMaintenanceWindow": [
            {
                "action": "ssm:UpdateMaintenanceWindow"
            }
        ],
        "SSM.UpdateMaintenanceWindowTarget": [
            {
                "action": "ssm:UpdateMaintenanceWindowTarget"
            }
        ],
        "SSM.UpdateMaintenanceWindowTask": [
            {
                "action": "ssm:UpdateMaintenanceWindowTask"
            }
        ],
        "SSM.UpdateManagedInstanceRole": [
            {
                "action": "ssm:UpdateManagedInstanceRole"
            }
        ],
        "SSM.UpdateOpsItem": [
            {
                "action": "ssm:UpdateOpsItem"
            }
        ],
        "SSM.UpdateOpsMetadata": [
            {
                "action": "ssm:UpdateOpsMetadata"
            }
        ],
        "SSM.UpdatePatchBaseline": [
            {
                "action": "ssm:UpdatePatchBaseline"
            }
        ],
        "SSM.UpdateResourceDataSync": [
            {
                "action": "ssm:UpdateResourceDataSync"
            }
        ],
        "SSM.UpdateServiceSetting": [
            {
                "action": "ssm:UpdateServiceSetting"
            }
        ],
        "StorageGateway.ActivateGateway": [
            {
                "action": "storagegateway:ActivateGateway"
            }
        ],
        "StorageGateway.AddCache": [
            {
                "action": "storagegateway:AddCache"
            }
        ],
        "StorageGateway.AddTagsToResource": [
            {
                "action": "storagegateway:AddTagsToResource"
            }
        ],
        "StorageGateway.AddUploadBuffer": [
            {
                "action": "storagegateway:AddUploadBuffer"
            }
        ],
        "StorageGateway.AddWorkingStorage": [
            {
                "action": "storagegateway:AddWorkingStorage"
            }
        ],
        "StorageGateway.AssignTapePool": [
            {
                "action": "storagegateway:AssignTapePool"
            }
        ],
        "StorageGateway.AttachVolume": [
            {
                "action": "storagegateway:AttachVolume"
            }
        ],
        "StorageGateway.CancelArchival": [
            {
                "action": "storagegateway:CancelArchival"
            }
        ],
        "StorageGateway.CancelRetrieval": [
            {
                "action": "storagegateway:CancelRetrieval"
            }
        ],
        "StorageGateway.CreateCachediSCSIVolume": [
            {
                "action": "storagegateway:CreateCachediSCSIVolume"
            }
        ],
        "StorageGateway.CreateNFSFileShare": [
            {
                "action": "storagegateway:CreateNFSFileShare"
            }
        ],
        "StorageGateway.CreateSMBFileShare": [
            {
                "action": "storagegateway:CreateSMBFileShare"
            }
        ],
        "StorageGateway.CreateSnapshot": [
            {
                "action": "storagegateway:CreateSnapshot"
            }
        ],
        "StorageGateway.CreateSnapshotFromVolumeRecoveryPoint": [
            {
                "action": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint"
            }
        ],
        "StorageGateway.CreateStorediSCSIVolume": [
            {
                "action": "storagegateway:CreateStorediSCSIVolume"
            }
        ],
        "StorageGateway.CreateTapePool": [
            {
                "action": "storagegateway:CreateTapePool"
            }
        ],
        "StorageGateway.CreateTapeWithBarcode": [
            {
                "action": "storagegateway:CreateTapeWithBarcode"
            }
        ],
        "StorageGateway.CreateTapes": [
            {
                "action": "storagegateway:CreateTapes"
            }
        ],
        "StorageGateway.DeleteAutomaticTapeCreationPolicy": [
            {
                "action": "storagegateway:DeleteAutomaticTapeCreationPolicy"
            }
        ],
        "StorageGateway.DeleteBandwidthRateLimit": [
            {
                "action": "storagegateway:DeleteBandwidthRateLimit"
            }
        ],
        "StorageGateway.DeleteChapCredentials": [
            {
                "action": "storagegateway:DeleteChapCredentials"
            }
        ],
        "StorageGateway.DeleteFileShare": [
            {
                "action": "storagegateway:DeleteFileShare"
            }
        ],
        "StorageGateway.DeleteGateway": [
            {
                "action": "storagegateway:DeleteGateway"
            }
        ],
        "StorageGateway.DeleteSnapshotSchedule": [
            {
                "action": "storagegateway:DeleteSnapshotSchedule"
            }
        ],
        "StorageGateway.DeleteTape": [
            {
                "action": "storagegateway:DeleteTape"
            }
        ],
        "StorageGateway.DeleteTapeArchive": [
            {
                "action": "storagegateway:DeleteTapeArchive"
            }
        ],
        "StorageGateway.DeleteTapePool": [
            {
                "action": "storagegateway:DeleteTapePool"
            }
        ],
        "StorageGateway.DeleteVolume": [
            {
                "action": "storagegateway:DeleteVolume"
            }
        ],
        "StorageGateway.DescribeAvailabilityMonitorTest": [
            {
                "action": "storagegateway:DescribeAvailabilityMonitorTest"
            }
        ],
        "StorageGateway.DescribeBandwidthRateLimit": [
            {
                "action": "storagegateway:DescribeBandwidthRateLimit"
            }
        ],
        "StorageGateway.DescribeBandwidthRateLimitSchedule": [
            {
                "action": "storagegateway:DescribeBandwidthRateLimitSchedule"
            }
        ],
        "StorageGateway.DescribeCache": [
            {
                "action": "storagegateway:DescribeCache"
            }
        ],
        "StorageGateway.DescribeCachediSCSIVolumes": [
            {
                "action": "storagegateway:DescribeCachediSCSIVolumes"
            }
        ],
        "StorageGateway.DescribeChapCredentials": [
            {
                "action": "storagegateway:DescribeChapCredentials"
            }
        ],
        "StorageGateway.DescribeGatewayInformation": [
            {
                "action": "storagegateway:DescribeGatewayInformation"
            }
        ],
        "StorageGateway.DescribeMaintenanceStartTime": [
            {
                "action": "storagegateway:DescribeMaintenanceStartTime"
            }
        ],
        "StorageGateway.DescribeNFSFileShares": [
            {
                "action": "storagegateway:DescribeNFSFileShares"
            }
        ],
        "StorageGateway.DescribeSMBFileShares": [
            {
                "action": "storagegateway:DescribeSMBFileShares"
            }
        ],
        "StorageGateway.DescribeSMBSettings": [
            {
                "action": "storagegateway:DescribeSMBSettings"
            }
        ],
        "StorageGateway.DescribeSnapshotSchedule": [
            {
                "action": "storagegateway:DescribeSnapshotSchedule"
            }
        ],
        "StorageGateway.DescribeStorediSCSIVolumes": [
            {
                "action": "storagegateway:DescribeStorediSCSIVolumes"
            }
        ],
        "StorageGateway.DescribeTapeArchives": [
            {
                "action": "storagegateway:DescribeTapeArchives"
            }
        ],
        "StorageGateway.DescribeTapeRecoveryPoints": [
            {
                "action": "storagegateway:DescribeTapeRecoveryPoints"
            }
        ],
        "StorageGateway.DescribeTapes": [
            {
                "action": "storagegateway:DescribeTapes"
            }
        ],
        "StorageGateway.DescribeUploadBuffer": [
            {
                "action": "storagegateway:DescribeUploadBuffer"
            }
        ],
        "StorageGateway.DescribeVTLDevices": [
            {
                "action": "storagegateway:DescribeVTLDevices"
            }
        ],
        "StorageGateway.DescribeWorkingStorage": [
            {
                "action": "storagegateway:DescribeWorkingStorage"
            }
        ],
        "StorageGateway.DetachVolume": [
            {
                "action": "storagegateway:DetachVolume"
            }
        ],
        "StorageGateway.DisableGateway": [
            {
                "action": "storagegateway:DisableGateway"
            }
        ],
        "StorageGateway.JoinDomain": [
            {
                "action": "storagegateway:JoinDomain"
            }
        ],
        "StorageGateway.ListAutomaticTapeCreationPolicies": [
            {
                "action": "storagegateway:ListAutomaticTapeCreationPolicies"
            }
        ],
        "StorageGateway.ListFileShares": [
            {
                "action": "storagegateway:ListFileShares"
            }
        ],
        "StorageGateway.ListGateways": [
            {
                "action": "storagegateway:ListGateways"
            }
        ],
        "StorageGateway.ListLocalDisks": [
            {
                "action": "storagegateway:ListLocalDisks"
            }
        ],
        "StorageGateway.ListTagsForResource": [
            {
                "action": "storagegateway:ListTagsForResource"
            }
        ],
        "StorageGateway.ListTapePools": [
            {
                "action": "storagegateway:ListTapePools"
            }
        ],
        "StorageGateway.ListTapes": [
            {
                "action": "storagegateway:ListTapes"
            }
        ],
        "StorageGateway.ListVolumeInitiators": [
            {
                "action": "storagegateway:ListVolumeInitiators"
            }
        ],
        "StorageGateway.ListVolumeRecoveryPoints": [
            {
                "action": "storagegateway:ListVolumeRecoveryPoints"
            }
        ],
        "StorageGateway.ListVolumes": [
            {
                "action": "storagegateway:ListVolumes"
            }
        ],
        "StorageGateway.NotifyWhenUploaded": [
            {
                "action": "storagegateway:NotifyWhenUploaded"
            }
        ],
        "StorageGateway.RefreshCache": [
            {
                "action": "storagegateway:RefreshCache"
            }
        ],
        "StorageGateway.RemoveTagsFromResource": [
            {
                "action": "storagegateway:RemoveTagsFromResource"
            }
        ],
        "StorageGateway.ResetCache": [
            {
                "action": "storagegateway:ResetCache"
            }
        ],
        "StorageGateway.RetrieveTapeArchive": [
            {
                "action": "storagegateway:RetrieveTapeArchive"
            }
        ],
        "StorageGateway.RetrieveTapeRecoveryPoint": [
            {
                "action": "storagegateway:RetrieveTapeRecoveryPoint"
            }
        ],
        "StorageGateway.SetLocalConsolePassword": [
            {
                "action": "storagegateway:SetLocalConsolePassword"
            }
        ],
        "StorageGateway.SetSMBGuestPassword": [
            {
                "action": "storagegateway:SetSMBGuestPassword"
            }
        ],
        "StorageGateway.ShutdownGateway": [
            {
                "action": "storagegateway:ShutdownGateway"
            }
        ],
        "StorageGateway.StartAvailabilityMonitorTest": [
            {
                "action": "storagegateway:StartAvailabilityMonitorTest"
            }
        ],
        "StorageGateway.StartGateway": [
            {
                "action": "storagegateway:StartGateway"
            }
        ],
        "StorageGateway.UpdateAutomaticTapeCreationPolicy": [
            {
                "action": "storagegateway:UpdateAutomaticTapeCreationPolicy"
            }
        ],
        "StorageGateway.UpdateBandwidthRateLimit": [
            {
                "action": "storagegateway:UpdateBandwidthRateLimit"
            }
        ],
        "StorageGateway.UpdateBandwidthRateLimitSchedule": [
            {
                "action": "storagegateway:UpdateBandwidthRateLimitSchedule"
            }
        ],
        "StorageGateway.UpdateChapCredentials": [
            {
                "action": "storagegateway:UpdateChapCredentials"
            }
        ],
        "StorageGateway.UpdateGatewayInformation": [
            {
                "action": "storagegateway:UpdateGatewayInformation"
            }
        ],
        "StorageGateway.UpdateGatewaySoftwareNow": [
            {
                "action": "storagegateway:UpdateGatewaySoftwareNow"
            }
        ],
        "StorageGateway.UpdateMaintenanceStartTime": [
            {
                "action": "storagegateway:UpdateMaintenanceStartTime"
            }
        ],
        "StorageGateway.UpdateNFSFileShare": [
            {
                "action": "storagegateway:UpdateNFSFileShare"
            }
        ],
        "StorageGateway.UpdateSMBFileShare": [
            {
                "action": "storagegateway:UpdateSMBFileShare"
            }
        ],
        "StorageGateway.UpdateSMBFileShareVisibility": [
            {
                "action": "storagegateway:UpdateSMBFileShareVisibility"
            }
        ],
        "StorageGateway.UpdateSMBSecurityStrategy": [
            {
                "action": "storagegateway:UpdateSMBSecurityStrategy"
            }
        ],
        "StorageGateway.UpdateSnapshotSchedule": [
            {
                "action": "storagegateway:UpdateSnapshotSchedule"
            }
        ],
        "StorageGateway.UpdateVTLDeviceType": [
            {
                "action": "storagegateway:UpdateVTLDeviceType"
            }
        ],
        "StepFunctions.CreateActivity": [
            {
                "action": "states:CreateActivity"
            }
        ],
        "StepFunctions.CreateStateMachine": [
            {
                "action": "states:CreateStateMachine"
            }
        ],
        "StepFunctions.DeleteActivity": [
            {
                "action": "states:DeleteActivity"
            }
        ],
        "StepFunctions.DeleteStateMachine": [
            {
                "action": "states:DeleteStateMachine"
            }
        ],
        "StepFunctions.DescribeActivity": [
            {
                "action": "states:DescribeActivity"
            }
        ],
        "StepFunctions.DescribeExecution": [
            {
                "action": "states:DescribeExecution"
            }
        ],
        "StepFunctions.DescribeStateMachine": [
            {
                "action": "states:DescribeStateMachine"
            }
        ],
        "StepFunctions.DescribeStateMachineForExecution": [
            {
                "action": "states:DescribeStateMachineForExecution"
            }
        ],
        "StepFunctions.GetActivityTask": [
            {
                "action": "states:GetActivityTask"
            }
        ],
        "StepFunctions.GetExecutionHistory": [
            {
                "action": "states:GetExecutionHistory"
            }
        ],
        "StepFunctions.ListActivities": [
            {
                "action": "states:ListActivities"
            }
        ],
        "StepFunctions.ListExecutions": [
            {
                "action": "states:ListExecutions"
            }
        ],
        "StepFunctions.ListStateMachines": [
            {
                "action": "states:ListStateMachines"
            }
        ],
        "StepFunctions.ListTagsForResource": [
            {
                "action": "states:ListTagsForResource"
            }
        ],
        "StepFunctions.SendTaskFailure": [
            {
                "action": "states:SendTaskFailure"
            }
        ],
        "StepFunctions.SendTaskHeartbeat": [
            {
                "action": "states:SendTaskHeartbeat"
            }
        ],
        "StepFunctions.SendTaskSuccess": [
            {
                "action": "states:SendTaskSuccess"
            }
        ],
        "StepFunctions.StartExecution": [
            {
                "action": "states:StartExecution"
            }
        ],
        "StepFunctions.StartSyncExecution": [
            {
                "action": "states:StartSyncExecution"
            }
        ],
        "StepFunctions.StopExecution": [
            {
                "action": "states:StopExecution"
            }
        ],
        "StepFunctions.TagResource": [
            {
                "action": "states:TagResource"
            }
        ],
        "StepFunctions.UntagResource": [
            {
                "action": "states:UntagResource"
            }
        ],
        "StepFunctions.UpdateStateMachine": [
            {
                "action": "states:UpdateStateMachine"
            }
        ],
        "Support.AddAttachmentsToSet": [
            {
                "action": "support:AddAttachmentsToSet"
            }
        ],
        "Support.AddCommunicationToCase": [
            {
                "action": "support:AddCommunicationToCase"
            }
        ],
        "Support.CreateCase": [
            {
                "action": "support:CreateCase"
            }
        ],
        "Support.DescribeAttachment": [
            {
                "action": "support:DescribeAttachment"
            }
        ],
        "Support.DescribeCases": [
            {
                "action": "support:DescribeCases"
            }
        ],
        "Support.DescribeCommunications": [
            {
                "action": "support:DescribeCommunications"
            }
        ],
        "Support.DescribeServices": [
            {
                "action": "support:DescribeServices"
            }
        ],
        "Support.DescribeSeverityLevels": [
            {
                "action": "support:DescribeSeverityLevels"
            }
        ],
        "Support.DescribeTrustedAdvisorCheckRefreshStatuses": [
            {
                "action": "support:DescribeTrustedAdvisorCheckRefreshStatuses"
            }
        ],
        "Support.DescribeTrustedAdvisorCheckResult": [
            {
                "action": "support:DescribeTrustedAdvisorCheckResult"
            }
        ],
        "Support.DescribeTrustedAdvisorCheckSummaries": [
            {
                "action": "support:DescribeTrustedAdvisorCheckSummaries"
            }
        ],
        "Support.DescribeTrustedAdvisorChecks": [
            {
                "action": "support:DescribeTrustedAdvisorChecks"
            }
        ],
        "Support.RefreshTrustedAdvisorCheck": [
            {
                "action": "support:RefreshTrustedAdvisorCheck"
            }
        ],
        "Support.ResolveCase": [
            {
                "action": "support:ResolveCase"
            }
        ],
        "SWF.CountClosedWorkflowExecutions": [
            {
                "action": "swf:CountClosedWorkflowExecutions"
            }
        ],
        "SWF.CountOpenWorkflowExecutions": [
            {
                "action": "swf:CountOpenWorkflowExecutions"
            }
        ],
        "SWF.CountPendingActivityTasks": [
            {
                "action": "swf:CountPendingActivityTasks"
            }
        ],
        "SWF.CountPendingDecisionTasks": [
            {
                "action": "swf:CountPendingDecisionTasks"
            }
        ],
        "SWF.DeprecateActivityType": [
            {
                "action": "swf:DeprecateActivityType"
            }
        ],
        "SWF.DeprecateDomain": [
            {
                "action": "swf:DeprecateDomain"
            }
        ],
        "SWF.DeprecateWorkflowType": [
            {
                "action": "swf:DeprecateWorkflowType"
            }
        ],
        "SWF.DescribeActivityType": [
            {
                "action": "swf:DescribeActivityType"
            }
        ],
        "SWF.DescribeDomain": [
            {
                "action": "swf:DescribeDomain"
            }
        ],
        "SWF.DescribeWorkflowExecution": [
            {
                "action": "swf:DescribeWorkflowExecution"
            }
        ],
        "SWF.DescribeWorkflowType": [
            {
                "action": "swf:DescribeWorkflowType"
            }
        ],
        "SWF.GetWorkflowExecutionHistory": [
            {
                "action": "swf:GetWorkflowExecutionHistory"
            }
        ],
        "SWF.ListActivityTypes": [
            {
                "action": "swf:ListActivityTypes"
            }
        ],
        "SWF.ListClosedWorkflowExecutions": [
            {
                "action": "swf:ListClosedWorkflowExecutions"
            }
        ],
        "SWF.ListDomains": [
            {
                "action": "swf:ListDomains"
            }
        ],
        "SWF.ListOpenWorkflowExecutions": [
            {
                "action": "swf:ListOpenWorkflowExecutions"
            }
        ],
        "SWF.ListTagsForResource": [
            {
                "action": "swf:ListTagsForResource"
            }
        ],
        "SWF.ListWorkflowTypes": [
            {
                "action": "swf:ListWorkflowTypes"
            }
        ],
        "SWF.PollForActivityTask": [
            {
                "action": "swf:PollForActivityTask"
            }
        ],
        "SWF.PollForDecisionTask": [
            {
                "action": "swf:PollForDecisionTask"
            }
        ],
        "SWF.RecordActivityTaskHeartbeat": [
            {
                "action": "swf:RecordActivityTaskHeartbeat"
            }
        ],
        "SWF.RegisterActivityType": [
            {
                "action": "swf:RegisterActivityType"
            }
        ],
        "SWF.RegisterDomain": [
            {
                "action": "swf:RegisterDomain"
            }
        ],
        "SWF.RegisterWorkflowType": [
            {
                "action": "swf:RegisterWorkflowType"
            }
        ],
        "SWF.RequestCancelWorkflowExecution": [
            {
                "action": "swf:RequestCancelWorkflowExecution"
            }
        ],
        "SWF.RespondActivityTaskCanceled": [
            {
                "action": "swf:RespondActivityTaskCanceled"
            }
        ],
        "SWF.RespondActivityTaskCompleted": [
            {
                "action": "swf:RespondActivityTaskCompleted"
            }
        ],
        "SWF.RespondActivityTaskFailed": [
            {
                "action": "swf:RespondActivityTaskFailed"
            }
        ],
        "SWF.RespondDecisionTaskCompleted": [
            {
                "action": "swf:RespondDecisionTaskCompleted"
            }
        ],
        "SWF.SignalWorkflowExecution": [
            {
                "action": "swf:SignalWorkflowExecution"
            }
        ],
        "SWF.StartWorkflowExecution": [
            {
                "action": "swf:StartWorkflowExecution"
            }
        ],
        "SWF.TagResource": [
            {
                "action": "swf:TagResource"
            }
        ],
        "SWF.TerminateWorkflowExecution": [
            {
                "action": "swf:TerminateWorkflowExecution"
            }
        ],
        "SWF.UntagResource": [
            {
                "action": "swf:UntagResource"
            }
        ],
        "XRay.BatchGetTraces": [
            {
                "action": "xray:BatchGetTraces"
            }
        ],
        "XRay.CreateGroup": [
            {
                "action": "xray:CreateGroup"
            }
        ],
        "XRay.CreateSamplingRule": [
            {
                "action": "xray:CreateSamplingRule"
            }
        ],
        "XRay.DeleteGroup": [
            {
                "action": "xray:DeleteGroup"
            }
        ],
        "XRay.DeleteSamplingRule": [
            {
                "action": "xray:DeleteSamplingRule"
            }
        ],
        "XRay.GetEncryptionConfig": [
            {
                "action": "xray:GetEncryptionConfig"
            }
        ],
        "XRay.GetGroup": [
            {
                "action": "xray:GetGroup"
            }
        ],
        "XRay.GetGroups": [
            {
                "action": "xray:GetGroups"
            }
        ],
        "XRay.GetInsight": [
            {
                "action": "xray:GetInsight"
            }
        ],
        "XRay.GetInsightEvents": [
            {
                "action": "xray:GetInsightEvents"
            }
        ],
        "XRay.GetInsightImpactGraph": [
            {
                "action": "xray:GetInsightImpactGraph"
            }
        ],
        "XRay.GetInsightSummaries": [
            {
                "action": "xray:GetInsightSummaries"
            }
        ],
        "XRay.GetSamplingRules": [
            {
                "action": "xray:GetSamplingRules"
            }
        ],
        "XRay.GetSamplingStatisticSummaries": [
            {
                "action": "xray:GetSamplingStatisticSummaries"
            }
        ],
        "XRay.GetSamplingTargets": [
            {
                "action": "xray:GetSamplingTargets"
            }
        ],
        "XRay.GetServiceGraph": [
            {
                "action": "xray:GetServiceGraph"
            }
        ],
        "XRay.GetTimeSeriesServiceStatistics": [
            {
                "action": "xray:GetTimeSeriesServiceStatistics"
            }
        ],
        "XRay.GetTraceGraph": [
            {
                "action": "xray:GetTraceGraph"
            }
        ],
        "XRay.GetTraceSummaries": [
            {
                "action": "xray:GetTraceSummaries"
            }
        ],
        "XRay.ListTagsForResource": [
            {
                "action": "xray:ListTagsForResource"
            }
        ],
        "XRay.PutEncryptionConfig": [
            {
                "action": "xray:PutEncryptionConfig"
            }
        ],
        "XRay.PutTelemetryRecords": [
            {
                "action": "xray:PutTelemetryRecords"
            }
        ],
        "XRay.PutTraceSegments": [
            {
                "action": "xray:PutTraceSegments"
            }
        ],
        "XRay.TagResource": [
            {
                "action": "xray:TagResource"
            }
        ],
        "XRay.UntagResource": [
            {
                "action": "xray:UntagResource"
            }
        ],
        "XRay.UpdateGroup": [
            {
                "action": "xray:UpdateGroup"
            }
        ],
        "XRay.UpdateSamplingRule": [
            {
                "action": "xray:UpdateSamplingRule"
            }
        ],
        "WAF.CreateByteMatchSet": [
            {
                "action": "waf:CreateByteMatchSet"
            }
        ],
        "WAF.CreateGeoMatchSet": [
            {
                "action": "waf:CreateGeoMatchSet"
            }
        ],
        "WAF.CreateIPSet": [
            {
                "action": "waf:CreateIPSet"
            }
        ],
        "WAF.CreateRateBasedRule": [
            {
                "action": "waf:CreateRateBasedRule"
            }
        ],
        "WAF.CreateRegexMatchSet": [
            {
                "action": "waf:CreateRegexMatchSet"
            }
        ],
        "WAF.CreateRegexPatternSet": [
            {
                "action": "waf:CreateRegexPatternSet"
            }
        ],
        "WAF.CreateRule": [
            {
                "action": "waf:CreateRule"
            }
        ],
        "WAF.CreateRuleGroup": [
            {
                "action": "waf:CreateRuleGroup"
            }
        ],
        "WAF.CreateSizeConstraintSet": [
            {
                "action": "waf:CreateSizeConstraintSet"
            }
        ],
        "WAF.CreateSqlInjectionMatchSet": [
            {
                "action": "waf:CreateSqlInjectionMatchSet"
            }
        ],
        "WAF.CreateWebACL": [
            {
                "action": "waf:CreateWebACL"
            }
        ],
        "WAF.CreateWebACLMigrationStack": [
            {
                "action": "waf:CreateWebACLMigrationStack"
            }
        ],
        "WAF.CreateXssMatchSet": [
            {
                "action": "waf:CreateXssMatchSet"
            }
        ],
        "WAF.DeleteByteMatchSet": [
            {
                "action": "waf:DeleteByteMatchSet"
            }
        ],
        "WAF.DeleteGeoMatchSet": [
            {
                "action": "waf:DeleteGeoMatchSet"
            }
        ],
        "WAF.DeleteIPSet": [
            {
                "action": "waf:DeleteIPSet"
            }
        ],
        "WAF.DeleteLoggingConfiguration": [
            {
                "action": "waf:DeleteLoggingConfiguration"
            }
        ],
        "WAF.DeletePermissionPolicy": [
            {
                "action": "waf:DeletePermissionPolicy"
            }
        ],
        "WAF.DeleteRateBasedRule": [
            {
                "action": "waf:DeleteRateBasedRule"
            }
        ],
        "WAF.DeleteRegexMatchSet": [
            {
                "action": "waf:DeleteRegexMatchSet"
            }
        ],
        "WAF.DeleteRegexPatternSet": [
            {
                "action": "waf:DeleteRegexPatternSet"
            }
        ],
        "WAF.DeleteRule": [
            {
                "action": "waf:DeleteRule"
            }
        ],
        "WAF.DeleteRuleGroup": [
            {
                "action": "waf:DeleteRuleGroup"
            }
        ],
        "WAF.DeleteSizeConstraintSet": [
            {
                "action": "waf:DeleteSizeConstraintSet"
            }
        ],
        "WAF.DeleteSqlInjectionMatchSet": [
            {
                "action": "waf:DeleteSqlInjectionMatchSet"
            }
        ],
        "WAF.DeleteWebACL": [
            {
                "action": "waf:DeleteWebACL"
            }
        ],
        "WAF.DeleteXssMatchSet": [
            {
                "action": "waf:DeleteXssMatchSet"
            }
        ],
        "WAF.GetByteMatchSet": [
            {
                "action": "waf:GetByteMatchSet"
            }
        ],
        "WAF.GetChangeToken": [
            {
                "action": "waf:GetChangeToken"
            }
        ],
        "WAF.GetChangeTokenStatus": [
            {
                "action": "waf:GetChangeTokenStatus"
            }
        ],
        "WAF.GetGeoMatchSet": [
            {
                "action": "waf:GetGeoMatchSet"
            }
        ],
        "WAF.GetIPSet": [
            {
                "action": "waf:GetIPSet"
            }
        ],
        "WAF.GetLoggingConfiguration": [
            {
                "action": "waf:GetLoggingConfiguration"
            }
        ],
        "WAF.GetPermissionPolicy": [
            {
                "action": "waf:GetPermissionPolicy"
            }
        ],
        "WAF.GetRateBasedRule": [
            {
                "action": "waf:GetRateBasedRule"
            }
        ],
        "WAF.GetRateBasedRuleManagedKeys": [
            {
                "action": "waf:GetRateBasedRuleManagedKeys"
            }
        ],
        "WAF.GetRegexMatchSet": [
            {
                "action": "waf:GetRegexMatchSet"
            }
        ],
        "WAF.GetRegexPatternSet": [
            {
                "action": "waf:GetRegexPatternSet"
            }
        ],
        "WAF.GetRule": [
            {
                "action": "waf:GetRule"
            }
        ],
        "WAF.GetRuleGroup": [
            {
                "action": "waf:GetRuleGroup"
            }
        ],
        "WAF.GetSampledRequests": [
            {
                "action": "waf:GetSampledRequests"
            }
        ],
        "WAF.GetSizeConstraintSet": [
            {
                "action": "waf:GetSizeConstraintSet"
            }
        ],
        "WAF.GetSqlInjectionMatchSet": [
            {
                "action": "waf:GetSqlInjectionMatchSet"
            }
        ],
        "WAF.GetWebACL": [
            {
                "action": "waf:GetWebACL"
            }
        ],
        "WAF.GetXssMatchSet": [
            {
                "action": "waf:GetXssMatchSet"
            }
        ],
        "WAF.ListActivatedRulesInRuleGroup": [
            {
                "action": "waf:ListActivatedRulesInRuleGroup"
            }
        ],
        "WAF.ListByteMatchSets": [
            {
                "action": "waf:ListByteMatchSets"
            }
        ],
        "WAF.ListGeoMatchSets": [
            {
                "action": "waf:ListGeoMatchSets"
            }
        ],
        "WAF.ListIPSets": [
            {
                "action": "waf:ListIPSets"
            }
        ],
        "WAF.ListLoggingConfigurations": [
            {
                "action": "waf:ListLoggingConfigurations"
            }
        ],
        "WAF.ListRateBasedRules": [
            {
                "action": "waf:ListRateBasedRules"
            }
        ],
        "WAF.ListRegexMatchSets": [
            {
                "action": "waf:ListRegexMatchSets"
            }
        ],
        "WAF.ListRegexPatternSets": [
            {
                "action": "waf:ListRegexPatternSets"
            }
        ],
        "WAF.ListRuleGroups": [
            {
                "action": "waf:ListRuleGroups"
            }
        ],
        "WAF.ListRules": [
            {
                "action": "waf:ListRules"
            }
        ],
        "WAF.ListSizeConstraintSets": [
            {
                "action": "waf:ListSizeConstraintSets"
            }
        ],
        "WAF.ListSqlInjectionMatchSets": [
            {
                "action": "waf:ListSqlInjectionMatchSets"
            }
        ],
        "WAF.ListSubscribedRuleGroups": [
            {
                "action": "waf:ListSubscribedRuleGroups"
            }
        ],
        "WAF.ListTagsForResource": [
            {
                "action": "waf:ListTagsForResource"
            }
        ],
        "WAF.ListWebACLs": [
            {
                "action": "waf:ListWebACLs"
            }
        ],
        "WAF.ListXssMatchSets": [
            {
                "action": "waf:ListXssMatchSets"
            }
        ],
        "WAF.PutLoggingConfiguration": [
            {
                "action": "waf:PutLoggingConfiguration"
            }
        ],
        "WAF.PutPermissionPolicy": [
            {
                "action": "waf:PutPermissionPolicy"
            }
        ],
        "WAF.TagResource": [
            {
                "action": "waf:TagResource"
            }
        ],
        "WAF.UntagResource": [
            {
                "action": "waf:UntagResource"
            }
        ],
        "WAF.UpdateByteMatchSet": [
            {
                "action": "waf:UpdateByteMatchSet"
            }
        ],
        "WAF.UpdateGeoMatchSet": [
            {
                "action": "waf:UpdateGeoMatchSet"
            }
        ],
        "WAF.UpdateIPSet": [
            {
                "action": "waf:UpdateIPSet"
            }
        ],
        "WAF.UpdateRateBasedRule": [
            {
                "action": "waf:UpdateRateBasedRule"
            }
        ],
        "WAF.UpdateRegexMatchSet": [
            {
                "action": "waf:UpdateRegexMatchSet"
            }
        ],
        "WAF.UpdateRegexPatternSet": [
            {
                "action": "waf:UpdateRegexPatternSet"
            }
        ],
        "WAF.UpdateRule": [
            {
                "action": "waf:UpdateRule"
            }
        ],
        "WAF.UpdateRuleGroup": [
            {
                "action": "waf:UpdateRuleGroup"
            }
        ],
        "WAF.UpdateSizeConstraintSet": [
            {
                "action": "waf:UpdateSizeConstraintSet"
            }
        ],
        "WAF.UpdateSqlInjectionMatchSet": [
            {
                "action": "waf:UpdateSqlInjectionMatchSet"
            }
        ],
        "WAF.UpdateWebACL": [
            {
                "action": "waf:UpdateWebACL"
            }
        ],
        "WAF.UpdateXssMatchSet": [
            {
                "action": "waf:UpdateXssMatchSet"
            }
        ],
        "WAFRegional.AssociateWebACL": [
            {
                "action": "waf-regional:AssociateWebACL"
            }
        ],
        "WAFRegional.CreateByteMatchSet": [
            {
                "action": "waf-regional:CreateByteMatchSet"
            }
        ],
        "WAFRegional.CreateGeoMatchSet": [
            {
                "action": "waf-regional:CreateGeoMatchSet"
            }
        ],
        "WAFRegional.CreateIPSet": [
            {
                "action": "waf-regional:CreateIPSet"
            }
        ],
        "WAFRegional.CreateRateBasedRule": [
            {
                "action": "waf-regional:CreateRateBasedRule"
            }
        ],
        "WAFRegional.CreateRegexMatchSet": [
            {
                "action": "waf-regional:CreateRegexMatchSet"
            }
        ],
        "WAFRegional.CreateRegexPatternSet": [
            {
                "action": "waf-regional:CreateRegexPatternSet"
            }
        ],
        "WAFRegional.CreateRule": [
            {
                "action": "waf-regional:CreateRule"
            }
        ],
        "WAFRegional.CreateRuleGroup": [
            {
                "action": "waf-regional:CreateRuleGroup"
            }
        ],
        "WAFRegional.CreateSizeConstraintSet": [
            {
                "action": "waf-regional:CreateSizeConstraintSet"
            }
        ],
        "WAFRegional.CreateSqlInjectionMatchSet": [
            {
                "action": "waf-regional:CreateSqlInjectionMatchSet"
            }
        ],
        "WAFRegional.CreateWebACL": [
            {
                "action": "waf-regional:CreateWebACL"
            }
        ],
        "WAFRegional.CreateWebACLMigrationStack": [
            {
                "action": "waf-regional:CreateWebACLMigrationStack"
            }
        ],
        "WAFRegional.CreateXssMatchSet": [
            {
                "action": "waf-regional:CreateXssMatchSet"
            }
        ],
        "WAFRegional.DeleteByteMatchSet": [
            {
                "action": "waf-regional:DeleteByteMatchSet"
            }
        ],
        "WAFRegional.DeleteGeoMatchSet": [
            {
                "action": "waf-regional:DeleteGeoMatchSet"
            }
        ],
        "WAFRegional.DeleteIPSet": [
            {
                "action": "waf-regional:DeleteIPSet"
            }
        ],
        "WAFRegional.DeleteLoggingConfiguration": [
            {
                "action": "waf-regional:DeleteLoggingConfiguration"
            }
        ],
        "WAFRegional.DeletePermissionPolicy": [
            {
                "action": "waf-regional:DeletePermissionPolicy"
            }
        ],
        "WAFRegional.DeleteRateBasedRule": [
            {
                "action": "waf-regional:DeleteRateBasedRule"
            }
        ],
        "WAFRegional.DeleteRegexMatchSet": [
            {
                "action": "waf-regional:DeleteRegexMatchSet"
            }
        ],
        "WAFRegional.DeleteRegexPatternSet": [
            {
                "action": "waf-regional:DeleteRegexPatternSet"
            }
        ],
        "WAFRegional.DeleteRule": [
            {
                "action": "waf-regional:DeleteRule"
            }
        ],
        "WAFRegional.DeleteRuleGroup": [
            {
                "action": "waf-regional:DeleteRuleGroup"
            }
        ],
        "WAFRegional.DeleteSizeConstraintSet": [
            {
                "action": "waf-regional:DeleteSizeConstraintSet"
            }
        ],
        "WAFRegional.DeleteSqlInjectionMatchSet": [
            {
                "action": "waf-regional:DeleteSqlInjectionMatchSet"
            }
        ],
        "WAFRegional.DeleteWebACL": [
            {
                "action": "waf-regional:DeleteWebACL"
            }
        ],
        "WAFRegional.DeleteXssMatchSet": [
            {
                "action": "waf-regional:DeleteXssMatchSet"
            }
        ],
        "WAFRegional.DisassociateWebACL": [
            {
                "action": "waf-regional:DisassociateWebACL"
            }
        ],
        "WAFRegional.GetByteMatchSet": [
            {
                "action": "waf-regional:GetByteMatchSet"
            }
        ],
        "WAFRegional.GetChangeToken": [
            {
                "action": "waf-regional:GetChangeToken"
            }
        ],
        "WAFRegional.GetChangeTokenStatus": [
            {
                "action": "waf-regional:GetChangeTokenStatus"
            }
        ],
        "WAFRegional.GetGeoMatchSet": [
            {
                "action": "waf-regional:GetGeoMatchSet"
            }
        ],
        "WAFRegional.GetIPSet": [
            {
                "action": "waf-regional:GetIPSet"
            }
        ],
        "WAFRegional.GetLoggingConfiguration": [
            {
                "action": "waf-regional:GetLoggingConfiguration"
            }
        ],
        "WAFRegional.GetPermissionPolicy": [
            {
                "action": "waf-regional:GetPermissionPolicy"
            }
        ],
        "WAFRegional.GetRateBasedRule": [
            {
                "action": "waf-regional:GetRateBasedRule"
            }
        ],
        "WAFRegional.GetRateBasedRuleManagedKeys": [
            {
                "action": "waf-regional:GetRateBasedRuleManagedKeys"
            }
        ],
        "WAFRegional.GetRegexMatchSet": [
            {
                "action": "waf-regional:GetRegexMatchSet"
            }
        ],
        "WAFRegional.GetRegexPatternSet": [
            {
                "action": "waf-regional:GetRegexPatternSet"
            }
        ],
        "WAFRegional.GetRule": [
            {
                "action": "waf-regional:GetRule"
            }
        ],
        "WAFRegional.GetRuleGroup": [
            {
                "action": "waf-regional:GetRuleGroup"
            }
        ],
        "WAFRegional.GetSampledRequests": [
            {
                "action": "waf-regional:GetSampledRequests"
            }
        ],
        "WAFRegional.GetSizeConstraintSet": [
            {
                "action": "waf-regional:GetSizeConstraintSet"
            }
        ],
        "WAFRegional.GetSqlInjectionMatchSet": [
            {
                "action": "waf-regional:GetSqlInjectionMatchSet"
            }
        ],
        "WAFRegional.GetWebACL": [
            {
                "action": "waf-regional:GetWebACL"
            }
        ],
        "WAFRegional.GetWebACLForResource": [
            {
                "action": "waf-regional:GetWebACLForResource"
            }
        ],
        "WAFRegional.GetXssMatchSet": [
            {
                "action": "waf-regional:GetXssMatchSet"
            }
        ],
        "WAFRegional.ListActivatedRulesInRuleGroup": [
            {
                "action": "waf-regional:ListActivatedRulesInRuleGroup"
            }
        ],
        "WAFRegional.ListByteMatchSets": [
            {
                "action": "waf-regional:ListByteMatchSets"
            }
        ],
        "WAFRegional.ListGeoMatchSets": [
            {
                "action": "waf-regional:ListGeoMatchSets"
            }
        ],
        "WAFRegional.ListIPSets": [
            {
                "action": "waf-regional:ListIPSets"
            }
        ],
        "WAFRegional.ListLoggingConfigurations": [
            {
                "action": "waf-regional:ListLoggingConfigurations"
            }
        ],
        "WAFRegional.ListRateBasedRules": [
            {
                "action": "waf-regional:ListRateBasedRules"
            }
        ],
        "WAFRegional.ListRegexMatchSets": [
            {
                "action": "waf-regional:ListRegexMatchSets"
            }
        ],
        "WAFRegional.ListRegexPatternSets": [
            {
                "action": "waf-regional:ListRegexPatternSets"
            }
        ],
        "WAFRegional.ListResourcesForWebACL": [
            {
                "action": "waf-regional:ListResourcesForWebACL"
            }
        ],
        "WAFRegional.ListRuleGroups": [
            {
                "action": "waf-regional:ListRuleGroups"
            }
        ],
        "WAFRegional.ListRules": [
            {
                "action": "waf-regional:ListRules"
            }
        ],
        "WAFRegional.ListSizeConstraintSets": [
            {
                "action": "waf-regional:ListSizeConstraintSets"
            }
        ],
        "WAFRegional.ListSqlInjectionMatchSets": [
            {
                "action": "waf-regional:ListSqlInjectionMatchSets"
            }
        ],
        "WAFRegional.ListSubscribedRuleGroups": [
            {
                "action": "waf-regional:ListSubscribedRuleGroups"
            }
        ],
        "WAFRegional.ListTagsForResource": [
            {
                "action": "waf-regional:ListTagsForResource"
            }
        ],
        "WAFRegional.ListWebACLs": [
            {
                "action": "waf-regional:ListWebACLs"
            }
        ],
        "WAFRegional.ListXssMatchSets": [
            {
                "action": "waf-regional:ListXssMatchSets"
            }
        ],
        "WAFRegional.PutLoggingConfiguration": [
            {
                "action": "waf-regional:PutLoggingConfiguration"
            }
        ],
        "WAFRegional.PutPermissionPolicy": [
            {
                "action": "waf-regional:PutPermissionPolicy"
            }
        ],
        "WAFRegional.TagResource": [
            {
                "action": "waf-regional:TagResource"
            }
        ],
        "WAFRegional.UntagResource": [
            {
                "action": "waf-regional:UntagResource"
            }
        ],
        "WAFRegional.UpdateByteMatchSet": [
            {
                "action": "waf-regional:UpdateByteMatchSet"
            }
        ],
        "WAFRegional.UpdateGeoMatchSet": [
            {
                "action": "waf-regional:UpdateGeoMatchSet"
            }
        ],
        "WAFRegional.UpdateIPSet": [
            {
                "action": "waf-regional:UpdateIPSet"
            }
        ],
        "WAFRegional.UpdateRateBasedRule": [
            {
                "action": "waf-regional:UpdateRateBasedRule"
            }
        ],
        "WAFRegional.UpdateRegexMatchSet": [
            {
                "action": "waf-regional:UpdateRegexMatchSet"
            }
        ],
        "WAFRegional.UpdateRegexPatternSet": [
            {
                "action": "waf-regional:UpdateRegexPatternSet"
            }
        ],
        "WAFRegional.UpdateRule": [
            {
                "action": "waf-regional:UpdateRule"
            }
        ],
        "WAFRegional.UpdateRuleGroup": [
            {
                "action": "waf-regional:UpdateRuleGroup"
            }
        ],
        "WAFRegional.UpdateSizeConstraintSet": [
            {
                "action": "waf-regional:UpdateSizeConstraintSet"
            }
        ],
        "WAFRegional.UpdateSqlInjectionMatchSet": [
            {
                "action": "waf-regional:UpdateSqlInjectionMatchSet"
            }
        ],
        "WAFRegional.UpdateWebACL": [
            {
                "action": "waf-regional:UpdateWebACL"
            }
        ],
        "WAFRegional.UpdateXssMatchSet": [
            {
                "action": "waf-regional:UpdateXssMatchSet"
            }
        ],
        "WorkDocs.AbortDocumentVersionUpload": [
            {
                "action": "workdocs:AbortDocumentVersionUpload"
            }
        ],
        "WorkDocs.ActivateUser": [
            {
                "action": "workdocs:ActivateUser"
            }
        ],
        "WorkDocs.AddResourcePermissions": [
            {
                "action": "workdocs:AddResourcePermissions"
            }
        ],
        "WorkDocs.CreateComment": [
            {
                "action": "workdocs:CreateComment"
            }
        ],
        "WorkDocs.CreateCustomMetadata": [
            {
                "action": "workdocs:CreateCustomMetadata"
            }
        ],
        "WorkDocs.CreateFolder": [
            {
                "action": "workdocs:CreateFolder"
            }
        ],
        "WorkDocs.CreateLabels": [
            {
                "action": "workdocs:CreateLabels"
            }
        ],
        "WorkDocs.CreateNotificationSubscription": [
            {
                "action": "workdocs:CreateNotificationSubscription"
            }
        ],
        "WorkDocs.CreateUser": [
            {
                "action": "workdocs:CreateUser"
            }
        ],
        "WorkDocs.DeactivateUser": [
            {
                "action": "workdocs:DeactivateUser"
            }
        ],
        "WorkDocs.DeleteComment": [
            {
                "action": "workdocs:DeleteComment"
            }
        ],
        "WorkDocs.DeleteCustomMetadata": [
            {
                "action": "workdocs:DeleteCustomMetadata"
            }
        ],
        "WorkDocs.DeleteDocument": [
            {
                "action": "workdocs:DeleteDocument"
            }
        ],
        "WorkDocs.DeleteFolder": [
            {
                "action": "workdocs:DeleteFolder"
            }
        ],
        "WorkDocs.DeleteFolderContents": [
            {
                "action": "workdocs:DeleteFolderContents"
            }
        ],
        "WorkDocs.DeleteLabels": [
            {
                "action": "workdocs:DeleteLabels"
            }
        ],
        "WorkDocs.DeleteNotificationSubscription": [
            {
                "action": "workdocs:DeleteNotificationSubscription"
            }
        ],
        "WorkDocs.DeleteUser": [
            {
                "action": "workdocs:DeleteUser"
            }
        ],
        "WorkDocs.DescribeActivities": [
            {
                "action": "workdocs:DescribeActivities"
            }
        ],
        "WorkDocs.DescribeComments": [
            {
                "action": "workdocs:DescribeComments"
            }
        ],
        "WorkDocs.DescribeDocumentVersions": [
            {
                "action": "workdocs:DescribeDocumentVersions"
            }
        ],
        "WorkDocs.DescribeFolderContents": [
            {
                "action": "workdocs:DescribeFolderContents"
            }
        ],
        "WorkDocs.DescribeGroups": [
            {
                "action": "workdocs:DescribeGroups"
            }
        ],
        "WorkDocs.DescribeNotificationSubscriptions": [
            {
                "action": "workdocs:DescribeNotificationSubscriptions"
            }
        ],
        "WorkDocs.DescribeResourcePermissions": [
            {
                "action": "workdocs:DescribeResourcePermissions"
            }
        ],
        "WorkDocs.DescribeRootFolders": [
            {
                "action": "workdocs:DescribeRootFolders"
            }
        ],
        "WorkDocs.DescribeUsers": [
            {
                "action": "workdocs:DescribeUsers"
            }
        ],
        "WorkDocs.GetCurrentUser": [
            {
                "action": "workdocs:GetCurrentUser"
            }
        ],
        "WorkDocs.GetDocument": [
            {
                "action": "workdocs:GetDocument"
            }
        ],
        "WorkDocs.GetDocumentPath": [
            {
                "action": "workdocs:GetDocumentPath"
            }
        ],
        "WorkDocs.GetDocumentVersion": [
            {
                "action": "workdocs:GetDocumentVersion"
            }
        ],
        "WorkDocs.GetFolder": [
            {
                "action": "workdocs:GetFolder"
            }
        ],
        "WorkDocs.GetFolderPath": [
            {
                "action": "workdocs:GetFolderPath"
            }
        ],
        "WorkDocs.GetResources": [
            {
                "action": "workdocs:GetResources"
            }
        ],
        "WorkDocs.InitiateDocumentVersionUpload": [
            {
                "action": "workdocs:InitiateDocumentVersionUpload"
            }
        ],
        "WorkDocs.RemoveAllResourcePermissions": [
            {
                "action": "workdocs:RemoveAllResourcePermissions"
            }
        ],
        "WorkDocs.RemoveResourcePermission": [
            {
                "action": "workdocs:RemoveResourcePermission"
            }
        ],
        "WorkDocs.UpdateDocument": [
            {
                "action": "workdocs:UpdateDocument"
            }
        ],
        "WorkDocs.UpdateDocumentVersion": [
            {
                "action": "workdocs:UpdateDocumentVersion"
            }
        ],
        "WorkDocs.UpdateFolder": [
            {
                "action": "workdocs:UpdateFolder"
            }
        ],
        "WorkDocs.UpdateUser": [
            {
                "action": "workdocs:UpdateUser"
            }
        ],
        "WorkSpaces.AssociateIpGroups": [
            {
                "action": "workspaces:AssociateIpGroups"
            }
        ],
        "WorkSpaces.AuthorizeIpRules": [
            {
                "action": "workspaces:AuthorizeIpRules"
            }
        ],
        "WorkSpaces.CreateIpGroup": [
            {
                "action": "workspaces:CreateIpGroup"
            }
        ],
        "WorkSpaces.CreateTags": [
            {
                "action": "workspaces:CreateTags"
            }
        ],
        "WorkSpaces.CreateWorkspaces": [
            {
                "action": "workspaces:CreateWorkspaces"
            }
        ],
        "WorkSpaces.DeleteIpGroup": [
            {
                "action": "workspaces:DeleteIpGroup"
            }
        ],
        "WorkSpaces.DeleteTags": [
            {
                "action": "workspaces:DeleteTags"
            }
        ],
        "WorkSpaces.DeleteWorkspaceImage": [
            {
                "action": "workspaces:DeleteWorkspaceImage"
            }
        ],
        "WorkSpaces.DescribeAccount": [
            {
                "action": "workspaces:DescribeAccount"
            }
        ],
        "WorkSpaces.DescribeAccountModifications": [
            {
                "action": "workspaces:DescribeAccountModifications"
            }
        ],
        "WorkSpaces.DescribeClientProperties": [
            {
                "action": "workspaces:DescribeClientProperties"
            }
        ],
        "WorkSpaces.DescribeIpGroups": [
            {
                "action": "workspaces:DescribeIpGroups"
            }
        ],
        "WorkSpaces.DescribeTags": [
            {
                "action": "workspaces:DescribeTags"
            }
        ],
        "WorkSpaces.DescribeWorkspaceBundles": [
            {
                "action": "workspaces:DescribeWorkspaceBundles"
            }
        ],
        "WorkSpaces.DescribeWorkspaceDirectories": [
            {
                "action": "workspaces:DescribeWorkspaceDirectories"
            }
        ],
        "WorkSpaces.DescribeWorkspaceImages": [
            {
                "action": "workspaces:DescribeWorkspaceImages"
            }
        ],
        "WorkSpaces.DescribeWorkspaces": [
            {
                "action": "workspaces:DescribeWorkspaces"
            }
        ],
        "WorkSpaces.DescribeWorkspacesConnectionStatus": [
            {
                "action": "workspaces:DescribeWorkspacesConnectionStatus"
            }
        ],
        "WorkSpaces.DisassociateIpGroups": [
            {
                "action": "workspaces:DisassociateIpGroups"
            }
        ],
        "WorkSpaces.ImportWorkspaceImage": [
            {
                "action": "workspaces:ImportWorkspaceImage"
            }
        ],
        "WorkSpaces.ListAvailableManagementCidrRanges": [
            {
                "action": "workspaces:ListAvailableManagementCidrRanges"
            }
        ],
        "WorkSpaces.ModifyAccount": [
            {
                "action": "workspaces:ModifyAccount"
            }
        ],
        "WorkSpaces.ModifyClientProperties": [
            {
                "action": "workspaces:ModifyClientProperties"
            }
        ],
        "WorkSpaces.ModifyWorkspaceProperties": [
            {
                "action": "workspaces:ModifyWorkspaceProperties"
            }
        ],
        "WorkSpaces.ModifyWorkspaceState": [
            {
                "action": "workspaces:ModifyWorkspaceState"
            }
        ],
        "WorkSpaces.RebootWorkspaces": [
            {
                "action": "workspaces:RebootWorkspaces"
            }
        ],
        "WorkSpaces.RebuildWorkspaces": [
            {
                "action": "workspaces:RebuildWorkspaces"
            }
        ],
        "WorkSpaces.RevokeIpRules": [
            {
                "action": "workspaces:RevokeIpRules"
            }
        ],
        "WorkSpaces.StartWorkspaces": [
            {
                "action": "workspaces:StartWorkspaces"
            }
        ],
        "WorkSpaces.StopWorkspaces": [
            {
                "action": "workspaces:StopWorkspaces"
            }
        ],
        "WorkSpaces.TerminateWorkspaces": [
            {
                "action": "workspaces:TerminateWorkspaces"
            }
        ],
        "WorkSpaces.UpdateRulesOfIpGroup": [
            {
                "action": "workspaces:UpdateRulesOfIpGroup"
            }
        ],
        "CodeStar.AssociateTeamMember": [
            {
                "action": "codestar:AssociateTeamMember"
            }
        ],
        "CodeStar.CreateProject": [
            {
                "action": "codestar:CreateProject"
            }
        ],
        "CodeStar.CreateUserProfile": [
            {
                "action": "codestar:CreateUserProfile"
            }
        ],
        "CodeStar.DeleteProject": [
            {
                "action": "codestar:DeleteProject"
            }
        ],
        "CodeStar.DeleteUserProfile": [
            {
                "action": "codestar:DeleteUserProfile"
            }
        ],
        "CodeStar.DescribeProject": [
            {
                "action": "codestar:DescribeProject"
            }
        ],
        "CodeStar.DescribeUserProfile": [
            {
                "action": "codestar:DescribeUserProfile"
            }
        ],
        "CodeStar.DisassociateTeamMember": [
            {
                "action": "codestar:DisassociateTeamMember"
            }
        ],
        "CodeStar.ListProjects": [
            {
                "action": "codestar:ListProjects"
            }
        ],
        "CodeStar.ListResources": [
            {
                "action": "codestar:ListResources"
            }
        ],
        "CodeStar.ListTagsForProject": [
            {
                "action": "codestar:ListTagsForProject"
            }
        ],
        "CodeStar.ListTeamMembers": [
            {
                "action": "codestar:ListTeamMembers"
            }
        ],
        "CodeStar.ListUserProfiles": [
            {
                "action": "codestar:ListUserProfiles"
            }
        ],
        "CodeStar.TagProject": [
            {
                "action": "codestar:TagProject"
            }
        ],
        "CodeStar.UntagProject": [
            {
                "action": "codestar:UntagProject"
            }
        ],
        "CodeStar.UpdateProject": [
            {
                "action": "codestar:UpdateProject"
            }
        ],
        "CodeStar.UpdateTeamMember": [
            {
                "action": "codestar:UpdateTeamMember"
            }
        ],
        "CodeStar.UpdateUserProfile": [
            {
                "action": "codestar:UpdateUserProfile"
            }
        ],
        "LexModelBuildingService.CreateBotVersion": [
            {
                "action": "lex:CreateBotVersion"
            }
        ],
        "LexModelBuildingService.CreateIntentVersion": [
            {
                "action": "lex:CreateIntentVersion"
            }
        ],
        "LexModelBuildingService.CreateSlotTypeVersion": [
            {
                "action": "lex:CreateSlotTypeVersion"
            }
        ],
        "LexModelBuildingService.DeleteBot": [
            {
                "action": "lex:DeleteBot"
            }
        ],
        "LexModelBuildingService.DeleteBotAlias": [
            {
                "action": "lex:DeleteBotAlias"
            }
        ],
        "LexModelBuildingService.DeleteBotChannelAssociation": [
            {
                "action": "lex:DeleteBotChannelAssociation"
            }
        ],
        "LexModelBuildingService.DeleteBotVersion": [
            {
                "action": "lex:DeleteBotVersion"
            }
        ],
        "LexModelBuildingService.DeleteIntent": [
            {
                "action": "lex:DeleteIntent"
            }
        ],
        "LexModelBuildingService.DeleteIntentVersion": [
            {
                "action": "lex:DeleteIntentVersion"
            }
        ],
        "LexModelBuildingService.DeleteSlotType": [
            {
                "action": "lex:DeleteSlotType"
            }
        ],
        "LexModelBuildingService.DeleteSlotTypeVersion": [
            {
                "action": "lex:DeleteSlotTypeVersion"
            }
        ],
        "LexModelBuildingService.DeleteUtterances": [
            {
                "action": "lex:DeleteUtterances"
            }
        ],
        "LexModelBuildingService.GetBot": [
            {
                "action": "lex:GetBot"
            }
        ],
        "LexModelBuildingService.GetBotAlias": [
            {
                "action": "lex:GetBotAlias"
            }
        ],
        "LexModelBuildingService.GetBotAliases": [
            {
                "action": "lex:GetBotAliases"
            }
        ],
        "LexModelBuildingService.GetBotChannelAssociation": [
            {
                "action": "lex:GetBotChannelAssociation"
            }
        ],
        "LexModelBuildingService.GetBotChannelAssociations": [
            {
                "action": "lex:GetBotChannelAssociations"
            }
        ],
        "LexModelBuildingService.GetBotVersions": [
            {
                "action": "lex:GetBotVersions"
            }
        ],
        "LexModelBuildingService.GetBots": [
            {
                "action": "lex:GetBots"
            }
        ],
        "LexModelBuildingService.GetBuiltinIntent": [
            {
                "action": "lex:GetBuiltinIntent"
            }
        ],
        "LexModelBuildingService.GetBuiltinIntents": [
            {
                "action": "lex:GetBuiltinIntents"
            }
        ],
        "LexModelBuildingService.GetBuiltinSlotTypes": [
            {
                "action": "lex:GetBuiltinSlotTypes"
            }
        ],
        "LexModelBuildingService.GetExport": [
            {
                "action": "lex:GetExport"
            }
        ],
        "LexModelBuildingService.GetImport": [
            {
                "action": "lex:GetImport"
            }
        ],
        "LexModelBuildingService.GetIntent": [
            {
                "action": "lex:GetIntent"
            }
        ],
        "LexModelBuildingService.GetIntentVersions": [
            {
                "action": "lex:GetIntentVersions"
            }
        ],
        "LexModelBuildingService.GetIntents": [
            {
                "action": "lex:GetIntents"
            }
        ],
        "LexModelBuildingService.GetSlotType": [
            {
                "action": "lex:GetSlotType"
            }
        ],
        "LexModelBuildingService.GetSlotTypeVersions": [
            {
                "action": "lex:GetSlotTypeVersions"
            }
        ],
        "LexModelBuildingService.GetSlotTypes": [
            {
                "action": "lex:GetSlotTypes"
            }
        ],
        "LexModelBuildingService.GetUtterancesView": [
            {
                "action": "lex:GetUtterancesView"
            }
        ],
        "LexModelBuildingService.ListTagsForResource": [
            {
                "action": "lex:ListTagsForResource"
            }
        ],
        "LexModelBuildingService.PutBot": [
            {
                "action": "lex:PutBot"
            }
        ],
        "LexModelBuildingService.PutBotAlias": [
            {
                "action": "lex:PutBotAlias"
            }
        ],
        "LexModelBuildingService.PutIntent": [
            {
                "action": "lex:PutIntent"
            }
        ],
        "LexModelBuildingService.PutSlotType": [
            {
                "action": "lex:PutSlotType"
            }
        ],
        "LexModelBuildingService.StartImport": [
            {
                "action": "lex:StartImport"
            }
        ],
        "LexModelBuildingService.TagResource": [
            {
                "action": "lex:TagResource"
            }
        ],
        "LexModelBuildingService.UntagResource": [
            {
                "action": "lex:UntagResource"
            }
        ],
        "MarketplaceEntitlementService.GetEntitlements": [
            {
                "action": "aws-marketplace:GetEntitlements"
            }
        ],
        "Athena.BatchGetNamedQuery": [
            {
                "action": "athena:BatchGetNamedQuery"
            }
        ],
        "Athena.BatchGetQueryExecution": [
            {
                "action": "athena:BatchGetQueryExecution"
            }
        ],
        "Athena.CreateDataCatalog": [
            {
                "action": "athena:CreateDataCatalog"
            }
        ],
        "Athena.CreateNamedQuery": [
            {
                "action": "athena:CreateNamedQuery"
            }
        ],
        "Athena.CreateWorkGroup": [
            {
                "action": "athena:CreateWorkGroup"
            }
        ],
        "Athena.DeleteDataCatalog": [
            {
                "action": "athena:DeleteDataCatalog"
            }
        ],
        "Athena.DeleteNamedQuery": [
            {
                "action": "athena:DeleteNamedQuery"
            }
        ],
        "Athena.DeleteWorkGroup": [
            {
                "action": "athena:DeleteWorkGroup"
            }
        ],
        "Athena.GetDataCatalog": [
            {
                "action": "athena:GetDataCatalog"
            }
        ],
        "Athena.GetDatabase": [
            {
                "action": "athena:GetDatabase"
            }
        ],
        "Athena.GetNamedQuery": [
            {
                "action": "athena:GetNamedQuery"
            }
        ],
        "Athena.GetQueryExecution": [
            {
                "action": "athena:GetQueryExecution"
            }
        ],
        "Athena.GetQueryResults": [
            {
                "action": "athena:GetQueryResults"
            }
        ],
        "Athena.GetTableMetadata": [
            {
                "action": "athena:GetTableMetadata"
            }
        ],
        "Athena.GetWorkGroup": [
            {
                "action": "athena:GetWorkGroup"
            }
        ],
        "Athena.ListDataCatalogs": [
            {
                "action": "athena:ListDataCatalogs"
            }
        ],
        "Athena.ListDatabases": [
            {
                "action": "athena:ListDatabases"
            }
        ],
        "Athena.ListNamedQueries": [
            {
                "action": "athena:ListNamedQueries"
            }
        ],
        "Athena.ListQueryExecutions": [
            {
                "action": "athena:ListQueryExecutions"
            }
        ],
        "Athena.ListTableMetadata": [
            {
                "action": "athena:ListTableMetadata"
            }
        ],
        "Athena.ListTagsForResource": [
            {
                "action": "athena:ListTagsForResource"
            }
        ],
        "Athena.ListWorkGroups": [
            {
                "action": "athena:ListWorkGroups"
            }
        ],
        "Athena.StartQueryExecution": [
            {
                "action": "athena:StartQueryExecution"
            }
        ],
        "Athena.StopQueryExecution": [
            {
                "action": "athena:StopQueryExecution"
            }
        ],
        "Athena.TagResource": [
            {
                "action": "athena:TagResource"
            }
        ],
        "Athena.UntagResource": [
            {
                "action": "athena:UntagResource"
            }
        ],
        "Athena.UpdateDataCatalog": [
            {
                "action": "athena:UpdateDataCatalog"
            }
        ],
        "Athena.UpdateWorkGroup": [
            {
                "action": "athena:UpdateWorkGroup"
            }
        ],
        "Greengrass.AssociateRoleToGroup": [
            {
                "action": "greengrass:AssociateRoleToGroup"
            }
        ],
        "Greengrass.AssociateServiceRoleToAccount": [
            {
                "action": "greengrass:AssociateServiceRoleToAccount"
            }
        ],
        "Greengrass.CreateConnectorDefinition": [
            {
                "action": "greengrass:CreateConnectorDefinition"
            }
        ],
        "Greengrass.CreateConnectorDefinitionVersion": [
            {
                "action": "greengrass:CreateConnectorDefinitionVersion"
            }
        ],
        "Greengrass.CreateCoreDefinition": [
            {
                "action": "greengrass:CreateCoreDefinition"
            }
        ],
        "Greengrass.CreateCoreDefinitionVersion": [
            {
                "action": "greengrass:CreateCoreDefinitionVersion"
            }
        ],
        "Greengrass.CreateDeployment": [
            {
                "action": "greengrass:CreateDeployment"
            }
        ],
        "Greengrass.CreateDeviceDefinition": [
            {
                "action": "greengrass:CreateDeviceDefinition"
            }
        ],
        "Greengrass.CreateDeviceDefinitionVersion": [
            {
                "action": "greengrass:CreateDeviceDefinitionVersion"
            }
        ],
        "Greengrass.CreateFunctionDefinition": [
            {
                "action": "greengrass:CreateFunctionDefinition"
            }
        ],
        "Greengrass.CreateFunctionDefinitionVersion": [
            {
                "action": "greengrass:CreateFunctionDefinitionVersion"
            }
        ],
        "Greengrass.CreateGroup": [
            {
                "action": "greengrass:CreateGroup"
            }
        ],
        "Greengrass.CreateGroupCertificateAuthority": [
            {
                "action": "greengrass:CreateGroupCertificateAuthority"
            }
        ],
        "Greengrass.CreateGroupVersion": [
            {
                "action": "greengrass:CreateGroupVersion"
            }
        ],
        "Greengrass.CreateLoggerDefinition": [
            {
                "action": "greengrass:CreateLoggerDefinition"
            }
        ],
        "Greengrass.CreateLoggerDefinitionVersion": [
            {
                "action": "greengrass:CreateLoggerDefinitionVersion"
            }
        ],
        "Greengrass.CreateResourceDefinition": [
            {
                "action": "greengrass:CreateResourceDefinition"
            }
        ],
        "Greengrass.CreateResourceDefinitionVersion": [
            {
                "action": "greengrass:CreateResourceDefinitionVersion"
            }
        ],
        "Greengrass.CreateSoftwareUpdateJob": [
            {
                "action": "greengrass:CreateSoftwareUpdateJob"
            }
        ],
        "Greengrass.CreateSubscriptionDefinition": [
            {
                "action": "greengrass:CreateSubscriptionDefinition"
            }
        ],
        "Greengrass.CreateSubscriptionDefinitionVersion": [
            {
                "action": "greengrass:CreateSubscriptionDefinitionVersion"
            }
        ],
        "Greengrass.DeleteConnectorDefinition": [
            {
                "action": "greengrass:DeleteConnectorDefinition"
            }
        ],
        "Greengrass.DeleteCoreDefinition": [
            {
                "action": "greengrass:DeleteCoreDefinition"
            }
        ],
        "Greengrass.DeleteDeviceDefinition": [
            {
                "action": "greengrass:DeleteDeviceDefinition"
            }
        ],
        "Greengrass.DeleteFunctionDefinition": [
            {
                "action": "greengrass:DeleteFunctionDefinition"
            }
        ],
        "Greengrass.DeleteGroup": [
            {
                "action": "greengrass:DeleteGroup"
            }
        ],
        "Greengrass.DeleteLoggerDefinition": [
            {
                "action": "greengrass:DeleteLoggerDefinition"
            }
        ],
        "Greengrass.DeleteResourceDefinition": [
            {
                "action": "greengrass:DeleteResourceDefinition"
            }
        ],
        "Greengrass.DeleteSubscriptionDefinition": [
            {
                "action": "greengrass:DeleteSubscriptionDefinition"
            }
        ],
        "Greengrass.DisassociateRoleFromGroup": [
            {
                "action": "greengrass:DisassociateRoleFromGroup"
            }
        ],
        "Greengrass.DisassociateServiceRoleFromAccount": [
            {
                "action": "greengrass:DisassociateServiceRoleFromAccount"
            }
        ],
        "Greengrass.GetAssociatedRole": [
            {
                "action": "greengrass:GetAssociatedRole"
            }
        ],
        "Greengrass.GetBulkDeploymentStatus": [
            {
                "action": "greengrass:GetBulkDeploymentStatus"
            }
        ],
        "Greengrass.GetConnectivityInfo": [
            {
                "action": "greengrass:GetConnectivityInfo"
            }
        ],
        "Greengrass.GetConnectorDefinition": [
            {
                "action": "greengrass:GetConnectorDefinition"
            }
        ],
        "Greengrass.GetConnectorDefinitionVersion": [
            {
                "action": "greengrass:GetConnectorDefinitionVersion"
            }
        ],
        "Greengrass.GetCoreDefinition": [
            {
                "action": "greengrass:GetCoreDefinition"
            }
        ],
        "Greengrass.GetCoreDefinitionVersion": [
            {
                "action": "greengrass:GetCoreDefinitionVersion"
            }
        ],
        "Greengrass.GetDeploymentStatus": [
            {
                "action": "greengrass:GetDeploymentStatus"
            }
        ],
        "Greengrass.GetDeviceDefinition": [
            {
                "action": "greengrass:GetDeviceDefinition"
            }
        ],
        "Greengrass.GetDeviceDefinitionVersion": [
            {
                "action": "greengrass:GetDeviceDefinitionVersion"
            }
        ],
        "Greengrass.GetFunctionDefinition": [
            {
                "action": "greengrass:GetFunctionDefinition"
            }
        ],
        "Greengrass.GetFunctionDefinitionVersion": [
            {
                "action": "greengrass:GetFunctionDefinitionVersion"
            }
        ],
        "Greengrass.GetGroup": [
            {
                "action": "greengrass:GetGroup"
            }
        ],
        "Greengrass.GetGroupCertificateAuthority": [
            {
                "action": "greengrass:GetGroupCertificateAuthority"
            }
        ],
        "Greengrass.GetGroupCertificateConfiguration": [
            {
                "action": "greengrass:GetGroupCertificateConfiguration"
            }
        ],
        "Greengrass.GetGroupVersion": [
            {
                "action": "greengrass:GetGroupVersion"
            }
        ],
        "Greengrass.GetLoggerDefinition": [
            {
                "action": "greengrass:GetLoggerDefinition"
            }
        ],
        "Greengrass.GetLoggerDefinitionVersion": [
            {
                "action": "greengrass:GetLoggerDefinitionVersion"
            }
        ],
        "Greengrass.GetResourceDefinition": [
            {
                "action": "greengrass:GetResourceDefinition"
            }
        ],
        "Greengrass.GetResourceDefinitionVersion": [
            {
                "action": "greengrass:GetResourceDefinitionVersion"
            }
        ],
        "Greengrass.GetServiceRoleForAccount": [
            {
                "action": "greengrass:GetServiceRoleForAccount"
            }
        ],
        "Greengrass.GetSubscriptionDefinition": [
            {
                "action": "greengrass:GetSubscriptionDefinition"
            }
        ],
        "Greengrass.GetSubscriptionDefinitionVersion": [
            {
                "action": "greengrass:GetSubscriptionDefinitionVersion"
            }
        ],
        "Greengrass.ListBulkDeploymentDetailedReports": [
            {
                "action": "greengrass:ListBulkDeploymentDetailedReports"
            }
        ],
        "Greengrass.ListBulkDeployments": [
            {
                "action": "greengrass:ListBulkDeployments"
            }
        ],
        "Greengrass.ListConnectorDefinitionVersions": [
            {
                "action": "greengrass:ListConnectorDefinitionVersions"
            }
        ],
        "Greengrass.ListConnectorDefinitions": [
            {
                "action": "greengrass:ListConnectorDefinitions"
            }
        ],
        "Greengrass.ListCoreDefinitionVersions": [
            {
                "action": "greengrass:ListCoreDefinitionVersions"
            }
        ],
        "Greengrass.ListCoreDefinitions": [
            {
                "action": "greengrass:ListCoreDefinitions"
            }
        ],
        "Greengrass.ListDeployments": [
            {
                "action": "greengrass:ListDeployments"
            }
        ],
        "Greengrass.ListDeviceDefinitionVersions": [
            {
                "action": "greengrass:ListDeviceDefinitionVersions"
            }
        ],
        "Greengrass.ListDeviceDefinitions": [
            {
                "action": "greengrass:ListDeviceDefinitions"
            }
        ],
        "Greengrass.ListFunctionDefinitionVersions": [
            {
                "action": "greengrass:ListFunctionDefinitionVersions"
            }
        ],
        "Greengrass.ListFunctionDefinitions": [
            {
                "action": "greengrass:ListFunctionDefinitions"
            }
        ],
        "Greengrass.ListGroupCertificateAuthorities": [
            {
                "action": "greengrass:ListGroupCertificateAuthorities"
            }
        ],
        "Greengrass.ListGroupVersions": [
            {
                "action": "greengrass:ListGroupVersions"
            }
        ],
        "Greengrass.ListGroups": [
            {
                "action": "greengrass:ListGroups"
            }
        ],
        "Greengrass.ListLoggerDefinitionVersions": [
            {
                "action": "greengrass:ListLoggerDefinitionVersions"
            }
        ],
        "Greengrass.ListLoggerDefinitions": [
            {
                "action": "greengrass:ListLoggerDefinitions"
            }
        ],
        "Greengrass.ListResourceDefinitionVersions": [
            {
                "action": "greengrass:ListResourceDefinitionVersions"
            }
        ],
        "Greengrass.ListResourceDefinitions": [
            {
                "action": "greengrass:ListResourceDefinitions"
            }
        ],
        "Greengrass.ListSubscriptionDefinitionVersions": [
            {
                "action": "greengrass:ListSubscriptionDefinitionVersions"
            }
        ],
        "Greengrass.ListSubscriptionDefinitions": [
            {
                "action": "greengrass:ListSubscriptionDefinitions"
            }
        ],
        "Greengrass.ListTagsForResource": [
            {
                "action": "greengrass:ListTagsForResource"
            }
        ],
        "Greengrass.ResetDeployments": [
            {
                "action": "greengrass:ResetDeployments"
            }
        ],
        "Greengrass.StartBulkDeployment": [
            {
                "action": "greengrass:StartBulkDeployment"
            }
        ],
        "Greengrass.StopBulkDeployment": [
            {
                "action": "greengrass:StopBulkDeployment"
            }
        ],
        "Greengrass.TagResource": [
            {
                "action": "greengrass:TagResource"
            }
        ],
        "Greengrass.UntagResource": [
            {
                "action": "greengrass:UntagResource"
            }
        ],
        "Greengrass.UpdateConnectivityInfo": [
            {
                "action": "greengrass:UpdateConnectivityInfo"
            }
        ],
        "Greengrass.UpdateConnectorDefinition": [
            {
                "action": "greengrass:UpdateConnectorDefinition"
            }
        ],
        "Greengrass.UpdateCoreDefinition": [
            {
                "action": "greengrass:UpdateCoreDefinition"
            }
        ],
        "Greengrass.UpdateDeviceDefinition": [
            {
                "action": "greengrass:UpdateDeviceDefinition"
            }
        ],
        "Greengrass.UpdateFunctionDefinition": [
            {
                "action": "greengrass:UpdateFunctionDefinition"
            }
        ],
        "Greengrass.UpdateGroup": [
            {
                "action": "greengrass:UpdateGroup"
            }
        ],
        "Greengrass.UpdateGroupCertificateConfiguration": [
            {
                "action": "greengrass:UpdateGroupCertificateConfiguration"
            }
        ],
        "Greengrass.UpdateLoggerDefinition": [
            {
                "action": "greengrass:UpdateLoggerDefinition"
            }
        ],
        "Greengrass.UpdateResourceDefinition": [
            {
                "action": "greengrass:UpdateResourceDefinition"
            }
        ],
        "Greengrass.UpdateSubscriptionDefinition": [
            {
                "action": "greengrass:UpdateSubscriptionDefinition"
            }
        ],
        "DAX.CreateCluster": [
            {
                "action": "dax:CreateCluster"
            }
        ],
        "DAX.CreateParameterGroup": [
            {
                "action": "dax:CreateParameterGroup"
            }
        ],
        "DAX.CreateSubnetGroup": [
            {
                "action": "dax:CreateSubnetGroup"
            }
        ],
        "DAX.DecreaseReplicationFactor": [
            {
                "action": "dax:DecreaseReplicationFactor"
            }
        ],
        "DAX.DeleteCluster": [
            {
                "action": "dax:DeleteCluster"
            }
        ],
        "DAX.DeleteParameterGroup": [
            {
                "action": "dax:DeleteParameterGroup"
            }
        ],
        "DAX.DeleteSubnetGroup": [
            {
                "action": "dax:DeleteSubnetGroup"
            }
        ],
        "DAX.DescribeClusters": [
            {
                "action": "dax:DescribeClusters"
            }
        ],
        "DAX.DescribeDefaultParameters": [
            {
                "action": "dax:DescribeDefaultParameters"
            }
        ],
        "DAX.DescribeEvents": [
            {
                "action": "dax:DescribeEvents"
            }
        ],
        "DAX.DescribeParameterGroups": [
            {
                "action": "dax:DescribeParameterGroups"
            }
        ],
        "DAX.DescribeParameters": [
            {
                "action": "dax:DescribeParameters"
            }
        ],
        "DAX.DescribeSubnetGroups": [
            {
                "action": "dax:DescribeSubnetGroups"
            }
        ],
        "DAX.IncreaseReplicationFactor": [
            {
                "action": "dax:IncreaseReplicationFactor"
            }
        ],
        "DAX.ListTags": [
            {
                "action": "dax:ListTags"
            }
        ],
        "DAX.RebootNode": [
            {
                "action": "dax:RebootNode"
            }
        ],
        "DAX.TagResource": [
            {
                "action": "dax:TagResource"
            }
        ],
        "DAX.UntagResource": [
            {
                "action": "dax:UntagResource"
            }
        ],
        "DAX.UpdateCluster": [
            {
                "action": "dax:UpdateCluster"
            }
        ],
        "DAX.UpdateParameterGroup": [
            {
                "action": "dax:UpdateParameterGroup"
            }
        ],
        "DAX.UpdateSubnetGroup": [
            {
                "action": "dax:UpdateSubnetGroup"
            }
        ],
        "MigrationHub.AssociateCreatedArtifact": [
            {
                "action": "mgh:AssociateCreatedArtifact"
            }
        ],
        "MigrationHub.AssociateDiscoveredResource": [
            {
                "action": "mgh:AssociateDiscoveredResource"
            }
        ],
        "MigrationHub.CreateProgressUpdateStream": [
            {
                "action": "mgh:CreateProgressUpdateStream"
            }
        ],
        "MigrationHub.DeleteProgressUpdateStream": [
            {
                "action": "mgh:DeleteProgressUpdateStream"
            }
        ],
        "MigrationHub.DescribeApplicationState": [
            {
                "action": "mgh:DescribeApplicationState"
            }
        ],
        "MigrationHub.DescribeMigrationTask": [
            {
                "action": "mgh:DescribeMigrationTask"
            }
        ],
        "MigrationHub.DisassociateCreatedArtifact": [
            {
                "action": "mgh:DisassociateCreatedArtifact"
            }
        ],
        "MigrationHub.DisassociateDiscoveredResource": [
            {
                "action": "mgh:DisassociateDiscoveredResource"
            }
        ],
        "MigrationHub.ImportMigrationTask": [
            {
                "action": "mgh:ImportMigrationTask"
            }
        ],
        "MigrationHub.ListCreatedArtifacts": [
            {
                "action": "mgh:ListCreatedArtifacts"
            }
        ],
        "MigrationHub.ListDiscoveredResources": [
            {
                "action": "mgh:ListDiscoveredResources"
            }
        ],
        "MigrationHub.ListMigrationTasks": [
            {
                "action": "mgh:ListMigrationTasks"
            }
        ],
        "MigrationHub.ListProgressUpdateStreams": [
            {
                "action": "mgh:ListProgressUpdateStreams"
            }
        ],
        "MigrationHub.NotifyApplicationState": [
            {
                "action": "mgh:NotifyApplicationState"
            }
        ],
        "MigrationHub.NotifyMigrationTaskState": [
            {
                "action": "mgh:NotifyMigrationTaskState"
            }
        ],
        "MigrationHub.PutResourceAttributes": [
            {
                "action": "mgh:PutResourceAttributes"
            }
        ],
        "CloudHSMV2.CopyBackupToRegion": [
            {
                "action": "cloudhsm:CopyBackupToRegion"
            }
        ],
        "CloudHSMV2.CreateCluster": [
            {
                "action": "cloudhsm:CreateCluster"
            }
        ],
        "CloudHSMV2.CreateHsm": [
            {
                "action": "cloudhsm:CreateHsm"
            }
        ],
        "CloudHSMV2.DeleteBackup": [
            {
                "action": "cloudhsm:DeleteBackup"
            }
        ],
        "CloudHSMV2.DeleteCluster": [
            {
                "action": "cloudhsm:DeleteCluster"
            }
        ],
        "CloudHSMV2.DeleteHsm": [
            {
                "action": "cloudhsm:DeleteHsm"
            }
        ],
        "CloudHSMV2.DescribeBackups": [
            {
                "action": "cloudhsm:DescribeBackups"
            }
        ],
        "CloudHSMV2.DescribeClusters": [
            {
                "action": "cloudhsm:DescribeClusters"
            }
        ],
        "CloudHSMV2.InitializeCluster": [
            {
                "action": "cloudhsm:InitializeCluster"
            }
        ],
        "CloudHSMV2.ListTags": [
            {
                "action": "cloudhsm:ListTags"
            }
        ],
        "CloudHSMV2.RestoreBackup": [
            {
                "action": "cloudhsm:RestoreBackup"
            }
        ],
        "CloudHSMV2.TagResource": [
            {
                "action": "cloudhsm:TagResource"
            }
        ],
        "CloudHSMV2.UntagResource": [
            {
                "action": "cloudhsm:UntagResource"
            }
        ],
        "Glue.BatchCreatePartition": [
            {
                "action": "glue:BatchCreatePartition"
            }
        ],
        "Glue.BatchDeleteConnection": [
            {
                "action": "glue:BatchDeleteConnection"
            }
        ],
        "Glue.BatchDeletePartition": [
            {
                "action": "glue:BatchDeletePartition"
            }
        ],
        "Glue.BatchDeleteTable": [
            {
                "action": "glue:BatchDeleteTable"
            }
        ],
        "Glue.BatchDeleteTableVersion": [
            {
                "action": "glue:BatchDeleteTableVersion"
            }
        ],
        "Glue.BatchGetCrawlers": [
            {
                "action": "glue:BatchGetCrawlers"
            }
        ],
        "Glue.BatchGetDevEndpoints": [
            {
                "action": "glue:BatchGetDevEndpoints"
            }
        ],
        "Glue.BatchGetJobs": [
            {
                "action": "glue:BatchGetJobs"
            }
        ],
        "Glue.BatchGetPartition": [
            {
                "action": "glue:BatchGetPartition"
            }
        ],
        "Glue.BatchGetTriggers": [
            {
                "action": "glue:BatchGetTriggers"
            }
        ],
        "Glue.BatchGetWorkflows": [
            {
                "action": "glue:BatchGetWorkflows"
            }
        ],
        "Glue.BatchStopJobRun": [
            {
                "action": "glue:BatchStopJobRun"
            }
        ],
        "Glue.CancelMLTaskRun": [
            {
                "action": "glue:CancelMLTaskRun"
            }
        ],
        "Glue.CheckSchemaVersionValidity": [
            {
                "action": "glue:CheckSchemaVersionValidity"
            }
        ],
        "Glue.CreateClassifier": [
            {
                "action": "glue:CreateClassifier"
            }
        ],
        "Glue.CreateConnection": [
            {
                "action": "glue:CreateConnection"
            }
        ],
        "Glue.CreateCrawler": [
            {
                "action": "glue:CreateCrawler"
            }
        ],
        "Glue.CreateDatabase": [
            {
                "action": "glue:CreateDatabase"
            }
        ],
        "Glue.CreateDevEndpoint": [
            {
                "action": "glue:CreateDevEndpoint"
            }
        ],
        "Glue.CreateJob": [
            {
                "action": "glue:CreateJob"
            }
        ],
        "Glue.CreateMLTransform": [
            {
                "action": "glue:CreateMLTransform"
            }
        ],
        "Glue.CreatePartition": [
            {
                "action": "glue:CreatePartition"
            }
        ],
        "Glue.CreateRegistry": [
            {
                "action": "glue:CreateRegistry"
            }
        ],
        "Glue.CreateSchema": [
            {
                "action": "glue:CreateSchema"
            }
        ],
        "Glue.CreateScript": [
            {
                "action": "glue:CreateScript"
            }
        ],
        "Glue.CreateSecurityConfiguration": [
            {
                "action": "glue:CreateSecurityConfiguration"
            }
        ],
        "Glue.CreateTable": [
            {
                "action": "glue:CreateTable"
            }
        ],
        "Glue.CreateTrigger": [
            {
                "action": "glue:CreateTrigger"
            }
        ],
        "Glue.CreateUserDefinedFunction": [
            {
                "action": "glue:CreateUserDefinedFunction"
            }
        ],
        "Glue.CreateWorkflow": [
            {
                "action": "glue:CreateWorkflow"
            }
        ],
        "Glue.DeleteClassifier": [
            {
                "action": "glue:DeleteClassifier"
            }
        ],
        "Glue.DeleteConnection": [
            {
                "action": "glue:DeleteConnection"
            }
        ],
        "Glue.DeleteCrawler": [
            {
                "action": "glue:DeleteCrawler"
            }
        ],
        "Glue.DeleteDatabase": [
            {
                "action": "glue:DeleteDatabase"
            }
        ],
        "Glue.DeleteDevEndpoint": [
            {
                "action": "glue:DeleteDevEndpoint"
            }
        ],
        "Glue.DeleteJob": [
            {
                "action": "glue:DeleteJob"
            }
        ],
        "Glue.DeleteMLTransform": [
            {
                "action": "glue:DeleteMLTransform"
            }
        ],
        "Glue.DeletePartition": [
            {
                "action": "glue:DeletePartition"
            }
        ],
        "Glue.DeleteRegistry": [
            {
                "action": "glue:DeleteRegistry"
            }
        ],
        "Glue.DeleteResourcePolicy": [
            {
                "action": "glue:DeleteResourcePolicy"
            }
        ],
        "Glue.DeleteSchema": [
            {
                "action": "glue:DeleteSchema"
            }
        ],
        "Glue.DeleteSchemaVersions": [
            {
                "action": "glue:DeleteSchemaVersions"
            }
        ],
        "Glue.DeleteSecurityConfiguration": [
            {
                "action": "glue:DeleteSecurityConfiguration"
            }
        ],
        "Glue.DeleteTable": [
            {
                "action": "glue:DeleteTable"
            }
        ],
        "Glue.DeleteTableVersion": [
            {
                "action": "glue:DeleteTableVersion"
            }
        ],
        "Glue.DeleteTrigger": [
            {
                "action": "glue:DeleteTrigger"
            }
        ],
        "Glue.DeleteUserDefinedFunction": [
            {
                "action": "glue:DeleteUserDefinedFunction"
            }
        ],
        "Glue.DeleteWorkflow": [
            {
                "action": "glue:DeleteWorkflow"
            }
        ],
        "Glue.GetCatalogImportStatus": [
            {
                "action": "glue:GetCatalogImportStatus"
            }
        ],
        "Glue.GetClassifier": [
            {
                "action": "glue:GetClassifier"
            }
        ],
        "Glue.GetClassifiers": [
            {
                "action": "glue:GetClassifiers"
            }
        ],
        "Glue.GetConnection": [
            {
                "action": "glue:GetConnection"
            }
        ],
        "Glue.GetConnections": [
            {
                "action": "glue:GetConnections"
            }
        ],
        "Glue.GetCrawler": [
            {
                "action": "glue:GetCrawler"
            }
        ],
        "Glue.GetCrawlerMetrics": [
            {
                "action": "glue:GetCrawlerMetrics"
            }
        ],
        "Glue.GetCrawlers": [
            {
                "action": "glue:GetCrawlers"
            }
        ],
        "Glue.GetDataCatalogEncryptionSettings": [
            {
                "action": "glue:GetDataCatalogEncryptionSettings"
            }
        ],
        "Glue.GetDatabase": [
            {
                "action": "glue:GetDatabase"
            }
        ],
        "Glue.GetDatabases": [
            {
                "action": "glue:GetDatabases"
            }
        ],
        "Glue.GetDataflowGraph": [
            {
                "action": "glue:GetDataflowGraph"
            }
        ],
        "Glue.GetDevEndpoint": [
            {
                "action": "glue:GetDevEndpoint"
            }
        ],
        "Glue.GetDevEndpoints": [
            {
                "action": "glue:GetDevEndpoints"
            }
        ],
        "Glue.GetJob": [
            {
                "action": "glue:GetJob"
            }
        ],
        "Glue.GetJobBookmark": [
            {
                "action": "glue:GetJobBookmark"
            }
        ],
        "Glue.GetJobRun": [
            {
                "action": "glue:GetJobRun"
            }
        ],
        "Glue.GetJobRuns": [
            {
                "action": "glue:GetJobRuns"
            }
        ],
        "Glue.GetJobs": [
            {
                "action": "glue:GetJobs"
            }
        ],
        "Glue.GetMLTaskRun": [
            {
                "action": "glue:GetMLTaskRun"
            }
        ],
        "Glue.GetMLTaskRuns": [
            {
                "action": "glue:GetMLTaskRuns"
            }
        ],
        "Glue.GetMLTransform": [
            {
                "action": "glue:GetMLTransform"
            }
        ],
        "Glue.GetMLTransforms": [
            {
                "action": "glue:GetMLTransforms"
            }
        ],
        "Glue.GetMapping": [
            {
                "action": "glue:GetMapping"
            }
        ],
        "Glue.GetPartition": [
            {
                "action": "glue:GetPartition"
            }
        ],
        "Glue.GetPartitions": [
            {
                "action": "glue:GetPartitions"
            }
        ],
        "Glue.GetPlan": [
            {
                "action": "glue:GetPlan"
            }
        ],
        "Glue.GetRegistry": [
            {
                "action": "glue:GetRegistry"
            }
        ],
        "Glue.GetResourcePolicies": [
            {
                "action": "glue:GetResourcePolicies"
            }
        ],
        "Glue.GetResourcePolicy": [
            {
                "action": "glue:GetResourcePolicy"
            }
        ],
        "Glue.GetSchema": [
            {
                "action": "glue:GetSchema"
            }
        ],
        "Glue.GetSchemaByDefinition": [
            {
                "action": "glue:GetSchemaByDefinition"
            }
        ],
        "Glue.GetSchemaVersion": [
            {
                "action": "glue:GetSchemaVersion"
            }
        ],
        "Glue.GetSchemaVersionsDiff": [
            {
                "action": "glue:GetSchemaVersionsDiff"
            }
        ],
        "Glue.GetSecurityConfiguration": [
            {
                "action": "glue:GetSecurityConfiguration"
            }
        ],
        "Glue.GetSecurityConfigurations": [
            {
                "action": "glue:GetSecurityConfigurations"
            }
        ],
        "Glue.GetTable": [
            {
                "action": "glue:GetTable"
            }
        ],
        "Glue.GetTableVersion": [
            {
                "action": "glue:GetTableVersion"
            }
        ],
        "Glue.GetTableVersions": [
            {
                "action": "glue:GetTableVersions"
            }
        ],
        "Glue.GetTables": [
            {
                "action": "glue:GetTables"
            }
        ],
        "Glue.GetTags": [
            {
                "action": "glue:GetTags"
            }
        ],
        "Glue.GetTrigger": [
            {
                "action": "glue:GetTrigger"
            }
        ],
        "Glue.GetTriggers": [
            {
                "action": "glue:GetTriggers"
            }
        ],
        "Glue.GetUserDefinedFunction": [
            {
                "action": "glue:GetUserDefinedFunction"
            }
        ],
        "Glue.GetUserDefinedFunctions": [
            {
                "action": "glue:GetUserDefinedFunctions"
            }
        ],
        "Glue.GetWorkflow": [
            {
                "action": "glue:GetWorkflow"
            }
        ],
        "Glue.GetWorkflowRun": [
            {
                "action": "glue:GetWorkflowRun"
            }
        ],
        "Glue.GetWorkflowRunProperties": [
            {
                "action": "glue:GetWorkflowRunProperties"
            }
        ],
        "Glue.GetWorkflowRuns": [
            {
                "action": "glue:GetWorkflowRuns"
            }
        ],
        "Glue.ImportCatalogToGlue": [
            {
                "action": "glue:ImportCatalogToGlue"
            }
        ],
        "Glue.ListCrawlers": [
            {
                "action": "glue:ListCrawlers"
            }
        ],
        "Glue.ListDevEndpoints": [
            {
                "action": "glue:ListDevEndpoints"
            }
        ],
        "Glue.ListJobs": [
            {
                "action": "glue:ListJobs"
            }
        ],
        "Glue.ListMLTransforms": [
            {
                "action": "glue:ListMLTransforms"
            }
        ],
        "Glue.ListRegistries": [
            {
                "action": "glue:ListRegistries"
            }
        ],
        "Glue.ListSchemaVersions": [
            {
                "action": "glue:ListSchemaVersions"
            }
        ],
        "Glue.ListSchemas": [
            {
                "action": "glue:ListSchemas"
            }
        ],
        "Glue.ListTriggers": [
            {
                "action": "glue:ListTriggers"
            }
        ],
        "Glue.ListWorkflows": [
            {
                "action": "glue:ListWorkflows"
            }
        ],
        "Glue.PutDataCatalogEncryptionSettings": [
            {
                "action": "glue:PutDataCatalogEncryptionSettings"
            }
        ],
        "Glue.PutResourcePolicy": [
            {
                "action": "glue:PutResourcePolicy"
            }
        ],
        "Glue.PutSchemaVersionMetadata": [
            {
                "action": "glue:PutSchemaVersionMetadata"
            }
        ],
        "Glue.PutWorkflowRunProperties": [
            {
                "action": "glue:PutWorkflowRunProperties"
            }
        ],
        "Glue.QuerySchemaVersionMetadata": [
            {
                "action": "glue:QuerySchemaVersionMetadata"
            }
        ],
        "Glue.RegisterSchemaVersion": [
            {
                "action": "glue:RegisterSchemaVersion"
            }
        ],
        "Glue.RemoveSchemaVersionMetadata": [
            {
                "action": "glue:RemoveSchemaVersionMetadata"
            }
        ],
        "Glue.ResetJobBookmark": [
            {
                "action": "glue:ResetJobBookmark"
            }
        ],
        "Glue.SearchTables": [
            {
                "action": "glue:SearchTables"
            }
        ],
        "Glue.StartCrawler": [
            {
                "action": "glue:StartCrawler"
            }
        ],
        "Glue.StartCrawlerSchedule": [
            {
                "action": "glue:StartCrawlerSchedule"
            }
        ],
        "Glue.StartExportLabelsTaskRun": [
            {
                "action": "glue:StartExportLabelsTaskRun"
            }
        ],
        "Glue.StartImportLabelsTaskRun": [
            {
                "action": "glue:StartImportLabelsTaskRun"
            }
        ],
        "Glue.StartJobRun": [
            {
                "action": "glue:StartJobRun"
            }
        ],
        "Glue.StartMLEvaluationTaskRun": [
            {
                "action": "glue:StartMLEvaluationTaskRun"
            }
        ],
        "Glue.StartMLLabelingSetGenerationTaskRun": [
            {
                "action": "glue:StartMLLabelingSetGenerationTaskRun"
            }
        ],
        "Glue.StartTrigger": [
            {
                "action": "glue:StartTrigger"
            }
        ],
        "Glue.StartWorkflowRun": [
            {
                "action": "glue:StartWorkflowRun"
            }
        ],
        "Glue.StopCrawler": [
            {
                "action": "glue:StopCrawler"
            }
        ],
        "Glue.StopCrawlerSchedule": [
            {
                "action": "glue:StopCrawlerSchedule"
            }
        ],
        "Glue.StopTrigger": [
            {
                "action": "glue:StopTrigger"
            }
        ],
        "Glue.TagResource": [
            {
                "action": "glue:TagResource"
            }
        ],
        "Glue.UntagResource": [
            {
                "action": "glue:UntagResource"
            }
        ],
        "Glue.UpdateClassifier": [
            {
                "action": "glue:UpdateClassifier"
            }
        ],
        "Glue.UpdateConnection": [
            {
                "action": "glue:UpdateConnection"
            }
        ],
        "Glue.UpdateCrawler": [
            {
                "action": "glue:UpdateCrawler"
            }
        ],
        "Glue.UpdateCrawlerSchedule": [
            {
                "action": "glue:UpdateCrawlerSchedule"
            }
        ],
        "Glue.UpdateDatabase": [
            {
                "action": "glue:UpdateDatabase"
            }
        ],
        "Glue.UpdateDevEndpoint": [
            {
                "action": "glue:UpdateDevEndpoint"
            }
        ],
        "Glue.UpdateJob": [
            {
                "action": "glue:UpdateJob"
            }
        ],
        "Glue.UpdateMLTransform": [
            {
                "action": "glue:UpdateMLTransform"
            }
        ],
        "Glue.UpdatePartition": [
            {
                "action": "glue:UpdatePartition"
            }
        ],
        "Glue.UpdateRegistry": [
            {
                "action": "glue:UpdateRegistry"
            }
        ],
        "Glue.UpdateSchema": [
            {
                "action": "glue:UpdateSchema"
            }
        ],
        "Glue.UpdateTable": [
            {
                "action": "glue:UpdateTable"
            }
        ],
        "Glue.UpdateTrigger": [
            {
                "action": "glue:UpdateTrigger"
            }
        ],
        "Glue.UpdateUserDefinedFunction": [
            {
                "action": "glue:UpdateUserDefinedFunction"
            }
        ],
        "Glue.UpdateWorkflow": [
            {
                "action": "glue:UpdateWorkflow"
            }
        ],
        "Mobile.CreateProject": [
            {
                "action": "mobilehub:CreateProject"
            }
        ],
        "Mobile.DeleteProject": [
            {
                "action": "mobilehub:DeleteProject"
            }
        ],
        "Mobile.DescribeBundle": [
            {
                "action": "mobilehub:DescribeBundle"
            }
        ],
        "Mobile.ExportBundle": [
            {
                "action": "mobilehub:ExportBundle"
            }
        ],
        "Mobile.ExportProject": [
            {
                "action": "mobilehub:ExportProject"
            }
        ],
        "Mobile.ListBundles": [
            {
                "action": "mobilehub:ListBundles"
            }
        ],
        "Mobile.ListProjects": [
            {
                "action": "mobilehub:ListProjects"
            }
        ],
        "Mobile.UpdateProject": [
            {
                "action": "mobilehub:UpdateProject"
            }
        ],
        "Pricing.DescribeServices": [
            {
                "action": "pricing:DescribeServices"
            }
        ],
        "Pricing.GetAttributeValues": [
            {
                "action": "pricing:GetAttributeValues"
            }
        ],
        "Pricing.GetProducts": [
            {
                "action": "pricing:GetProducts"
            }
        ],
        "CostExplorer.CreateAnomalyMonitor": [
            {
                "action": "ce:CreateAnomalyMonitor"
            }
        ],
        "CostExplorer.CreateAnomalySubscription": [
            {
                "action": "ce:CreateAnomalySubscription"
            }
        ],
        "CostExplorer.CreateCostCategoryDefinition": [
            {
                "action": "ce:CreateCostCategoryDefinition"
            }
        ],
        "CostExplorer.DeleteAnomalyMonitor": [
            {
                "action": "ce:DeleteAnomalyMonitor"
            }
        ],
        "CostExplorer.DeleteAnomalySubscription": [
            {
                "action": "ce:DeleteAnomalySubscription"
            }
        ],
        "CostExplorer.DeleteCostCategoryDefinition": [
            {
                "action": "ce:DeleteCostCategoryDefinition"
            }
        ],
        "CostExplorer.DescribeCostCategoryDefinition": [
            {
                "action": "ce:DescribeCostCategoryDefinition"
            }
        ],
        "CostExplorer.GetAnomalies": [
            {
                "action": "ce:GetAnomalies"
            }
        ],
        "CostExplorer.GetAnomalyMonitors": [
            {
                "action": "ce:GetAnomalyMonitors"
            }
        ],
        "CostExplorer.GetAnomalySubscriptions": [
            {
                "action": "ce:GetAnomalySubscriptions"
            }
        ],
        "CostExplorer.GetCostAndUsage": [
            {
                "action": "ce:GetCostAndUsage"
            }
        ],
        "CostExplorer.GetCostAndUsageWithResources": [
            {
                "action": "ce:GetCostAndUsageWithResources"
            }
        ],
        "CostExplorer.GetCostCategories": [
            {
                "action": "ce:GetCostCategories"
            }
        ],
        "CostExplorer.GetCostForecast": [
            {
                "action": "ce:GetCostForecast"
            }
        ],
        "CostExplorer.GetDimensionValues": [
            {
                "action": "ce:GetDimensionValues"
            }
        ],
        "CostExplorer.GetReservationCoverage": [
            {
                "action": "ce:GetReservationCoverage"
            }
        ],
        "CostExplorer.GetReservationPurchaseRecommendation": [
            {
                "action": "ce:GetReservationPurchaseRecommendation"
            }
        ],
        "CostExplorer.GetReservationUtilization": [
            {
                "action": "ce:GetReservationUtilization"
            }
        ],
        "CostExplorer.GetRightsizingRecommendation": [
            {
                "action": "ce:GetRightsizingRecommendation"
            }
        ],
        "CostExplorer.GetSavingsPlansCoverage": [
            {
                "action": "ce:GetSavingsPlansCoverage"
            }
        ],
        "CostExplorer.GetSavingsPlansPurchaseRecommendation": [
            {
                "action": "ce:GetSavingsPlansPurchaseRecommendation"
            }
        ],
        "CostExplorer.GetSavingsPlansUtilization": [
            {
                "action": "ce:GetSavingsPlansUtilization"
            }
        ],
        "CostExplorer.GetSavingsPlansUtilizationDetails": [
            {
                "action": "ce:GetSavingsPlansUtilizationDetails"
            }
        ],
        "CostExplorer.GetTags": [
            {
                "action": "ce:GetTags"
            }
        ],
        "CostExplorer.GetUsageForecast": [
            {
                "action": "ce:GetUsageForecast"
            }
        ],
        "CostExplorer.ListCostCategoryDefinitions": [
            {
                "action": "ce:ListCostCategoryDefinitions"
            }
        ],
        "CostExplorer.ProvideAnomalyFeedback": [
            {
                "action": "ce:ProvideAnomalyFeedback"
            }
        ],
        "CostExplorer.UpdateAnomalyMonitor": [
            {
                "action": "ce:UpdateAnomalyMonitor"
            }
        ],
        "CostExplorer.UpdateAnomalySubscription": [
            {
                "action": "ce:UpdateAnomalySubscription"
            }
        ],
        "CostExplorer.UpdateCostCategoryDefinition": [
            {
                "action": "ce:UpdateCostCategoryDefinition"
            }
        ],
        "MediaConvert.AssociateCertificate": [
            {
                "action": "mediaconvert:AssociateCertificate"
            }
        ],
        "MediaConvert.CancelJob": [
            {
                "action": "mediaconvert:CancelJob"
            }
        ],
        "MediaConvert.CreateJob": [
            {
                "action": "mediaconvert:CreateJob"
            }
        ],
        "MediaConvert.CreateJobTemplate": [
            {
                "action": "mediaconvert:CreateJobTemplate"
            }
        ],
        "MediaConvert.CreatePreset": [
            {
                "action": "mediaconvert:CreatePreset"
            }
        ],
        "MediaConvert.CreateQueue": [
            {
                "action": "mediaconvert:CreateQueue"
            }
        ],
        "MediaConvert.DeleteJobTemplate": [
            {
                "action": "mediaconvert:DeleteJobTemplate"
            }
        ],
        "MediaConvert.DeletePreset": [
            {
                "action": "mediaconvert:DeletePreset"
            }
        ],
        "MediaConvert.DeleteQueue": [
            {
                "action": "mediaconvert:DeleteQueue"
            }
        ],
        "MediaConvert.DescribeEndpoints": [
            {
                "action": "mediaconvert:DescribeEndpoints"
            }
        ],
        "MediaConvert.DisassociateCertificate": [
            {
                "action": "mediaconvert:DisassociateCertificate"
            }
        ],
        "MediaConvert.GetJob": [
            {
                "action": "mediaconvert:GetJob"
            }
        ],
        "MediaConvert.GetJobTemplate": [
            {
                "action": "mediaconvert:GetJobTemplate"
            }
        ],
        "MediaConvert.GetPreset": [
            {
                "action": "mediaconvert:GetPreset"
            }
        ],
        "MediaConvert.GetQueue": [
            {
                "action": "mediaconvert:GetQueue"
            }
        ],
        "MediaConvert.ListJobTemplates": [
            {
                "action": "mediaconvert:ListJobTemplates"
            }
        ],
        "MediaConvert.ListJobs": [
            {
                "action": "mediaconvert:ListJobs"
            }
        ],
        "MediaConvert.ListPresets": [
            {
                "action": "mediaconvert:ListPresets"
            }
        ],
        "MediaConvert.ListQueues": [
            {
                "action": "mediaconvert:ListQueues"
            }
        ],
        "MediaConvert.ListTagsForResource": [
            {
                "action": "mediaconvert:ListTagsForResource"
            }
        ],
        "MediaConvert.TagResource": [
            {
                "action": "mediaconvert:TagResource"
            }
        ],
        "MediaConvert.UntagResource": [
            {
                "action": "mediaconvert:UntagResource"
            }
        ],
        "MediaConvert.UpdateJobTemplate": [
            {
                "action": "mediaconvert:UpdateJobTemplate"
            }
        ],
        "MediaConvert.UpdatePreset": [
            {
                "action": "mediaconvert:UpdatePreset"
            }
        ],
        "MediaConvert.UpdateQueue": [
            {
                "action": "mediaconvert:UpdateQueue"
            }
        ],
        "MediaLive.AcceptInputDeviceTransfer": [
            {
                "action": "medialive:AcceptInputDeviceTransfer"
            }
        ],
        "MediaLive.BatchDelete": [
            {
                "action": "medialive:BatchDelete"
            }
        ],
        "MediaLive.BatchStart": [
            {
                "action": "medialive:BatchStart"
            }
        ],
        "MediaLive.BatchStop": [
            {
                "action": "medialive:BatchStop"
            }
        ],
        "MediaLive.BatchUpdateSchedule": [
            {
                "action": "medialive:BatchUpdateSchedule"
            }
        ],
        "MediaLive.CancelInputDeviceTransfer": [
            {
                "action": "medialive:CancelInputDeviceTransfer"
            }
        ],
        "MediaLive.CreateChannel": [
            {
                "action": "medialive:CreateChannel"
            }
        ],
        "MediaLive.CreateInput": [
            {
                "action": "medialive:CreateInput"
            }
        ],
        "MediaLive.CreateInputSecurityGroup": [
            {
                "action": "medialive:CreateInputSecurityGroup"
            }
        ],
        "MediaLive.CreateMultiplex": [
            {
                "action": "medialive:CreateMultiplex"
            }
        ],
        "MediaLive.CreateMultiplexProgram": [
            {
                "action": "medialive:CreateMultiplexProgram"
            }
        ],
        "MediaLive.CreateTags": [
            {
                "action": "medialive:CreateTags"
            }
        ],
        "MediaLive.DeleteChannel": [
            {
                "action": "medialive:DeleteChannel"
            }
        ],
        "MediaLive.DeleteInput": [
            {
                "action": "medialive:DeleteInput"
            }
        ],
        "MediaLive.DeleteInputSecurityGroup": [
            {
                "action": "medialive:DeleteInputSecurityGroup"
            }
        ],
        "MediaLive.DeleteMultiplex": [
            {
                "action": "medialive:DeleteMultiplex"
            }
        ],
        "MediaLive.DeleteMultiplexProgram": [
            {
                "action": "medialive:DeleteMultiplexProgram"
            }
        ],
        "MediaLive.DeleteReservation": [
            {
                "action": "medialive:DeleteReservation"
            }
        ],
        "MediaLive.DeleteSchedule": [
            {
                "action": "medialive:DeleteSchedule"
            }
        ],
        "MediaLive.DeleteTags": [
            {
                "action": "medialive:DeleteTags"
            }
        ],
        "MediaLive.DescribeChannel": [
            {
                "action": "medialive:DescribeChannel"
            }
        ],
        "MediaLive.DescribeInput": [
            {
                "action": "medialive:DescribeInput"
            }
        ],
        "MediaLive.DescribeInputDevice": [
            {
                "action": "medialive:DescribeInputDevice"
            }
        ],
        "MediaLive.DescribeInputDeviceThumbnail": [
            {
                "action": "medialive:DescribeInputDeviceThumbnail"
            }
        ],
        "MediaLive.DescribeInputSecurityGroup": [
            {
                "action": "medialive:DescribeInputSecurityGroup"
            }
        ],
        "MediaLive.DescribeMultiplex": [
            {
                "action": "medialive:DescribeMultiplex"
            }
        ],
        "MediaLive.DescribeMultiplexProgram": [
            {
                "action": "medialive:DescribeMultiplexProgram"
            }
        ],
        "MediaLive.DescribeOffering": [
            {
                "action": "medialive:DescribeOffering"
            }
        ],
        "MediaLive.DescribeReservation": [
            {
                "action": "medialive:DescribeReservation"
            }
        ],
        "MediaLive.DescribeSchedule": [
            {
                "action": "medialive:DescribeSchedule"
            }
        ],
        "MediaLive.ListChannels": [
            {
                "action": "medialive:ListChannels"
            }
        ],
        "MediaLive.ListInputDeviceTransfers": [
            {
                "action": "medialive:ListInputDeviceTransfers"
            }
        ],
        "MediaLive.ListInputDevices": [
            {
                "action": "medialive:ListInputDevices"
            }
        ],
        "MediaLive.ListInputSecurityGroups": [
            {
                "action": "medialive:ListInputSecurityGroups"
            }
        ],
        "MediaLive.ListInputs": [
            {
                "action": "medialive:ListInputs"
            }
        ],
        "MediaLive.ListMultiplexPrograms": [
            {
                "action": "medialive:ListMultiplexPrograms"
            }
        ],
        "MediaLive.ListMultiplexes": [
            {
                "action": "medialive:ListMultiplexes"
            }
        ],
        "MediaLive.ListOfferings": [
            {
                "action": "medialive:ListOfferings"
            }
        ],
        "MediaLive.ListReservations": [
            {
                "action": "medialive:ListReservations"
            }
        ],
        "MediaLive.ListTagsForResource": [
            {
                "action": "medialive:ListTagsForResource"
            }
        ],
        "MediaLive.PurchaseOffering": [
            {
                "action": "medialive:PurchaseOffering"
            }
        ],
        "MediaLive.RejectInputDeviceTransfer": [
            {
                "action": "medialive:RejectInputDeviceTransfer"
            }
        ],
        "MediaLive.StartChannel": [
            {
                "action": "medialive:StartChannel"
            }
        ],
        "MediaLive.StartMultiplex": [
            {
                "action": "medialive:StartMultiplex"
            }
        ],
        "MediaLive.StopChannel": [
            {
                "action": "medialive:StopChannel"
            }
        ],
        "MediaLive.StopMultiplex": [
            {
                "action": "medialive:StopMultiplex"
            }
        ],
        "MediaLive.TransferInputDevice": [
            {
                "action": "medialive:TransferInputDevice"
            }
        ],
        "MediaLive.UpdateChannel": [
            {
                "action": "medialive:UpdateChannel"
            }
        ],
        "MediaLive.UpdateChannelClass": [
            {
                "action": "medialive:UpdateChannelClass"
            }
        ],
        "MediaLive.UpdateInput": [
            {
                "action": "medialive:UpdateInput"
            }
        ],
        "MediaLive.UpdateInputDevice": [
            {
                "action": "medialive:UpdateInputDevice"
            }
        ],
        "MediaLive.UpdateInputSecurityGroup": [
            {
                "action": "medialive:UpdateInputSecurityGroup"
            }
        ],
        "MediaLive.UpdateMultiplex": [
            {
                "action": "medialive:UpdateMultiplex"
            }
        ],
        "MediaLive.UpdateMultiplexProgram": [
            {
                "action": "medialive:UpdateMultiplexProgram"
            }
        ],
        "MediaLive.UpdateReservation": [
            {
                "action": "medialive:UpdateReservation"
            }
        ],
        "MediaPackage.CreateChannel": [
            {
                "action": "mediapackage:CreateChannel"
            }
        ],
        "MediaPackage.CreateHarvestJob": [
            {
                "action": "mediapackage:CreateHarvestJob"
            }
        ],
        "MediaPackage.CreateOriginEndpoint": [
            {
                "action": "mediapackage:CreateOriginEndpoint"
            }
        ],
        "MediaPackage.DeleteChannel": [
            {
                "action": "mediapackage:DeleteChannel"
            }
        ],
        "MediaPackage.DeleteOriginEndpoint": [
            {
                "action": "mediapackage:DeleteOriginEndpoint"
            }
        ],
        "MediaPackage.DescribeChannel": [
            {
                "action": "mediapackage:DescribeChannel"
            }
        ],
        "MediaPackage.DescribeHarvestJob": [
            {
                "action": "mediapackage:DescribeHarvestJob"
            }
        ],
        "MediaPackage.DescribeOriginEndpoint": [
            {
                "action": "mediapackage:DescribeOriginEndpoint"
            }
        ],
        "MediaPackage.ListChannels": [
            {
                "action": "mediapackage:ListChannels"
            }
        ],
        "MediaPackage.ListHarvestJobs": [
            {
                "action": "mediapackage:ListHarvestJobs"
            }
        ],
        "MediaPackage.ListOriginEndpoints": [
            {
                "action": "mediapackage:ListOriginEndpoints"
            }
        ],
        "MediaPackage.ListTagsForResource": [
            {
                "action": "mediapackage:ListTagsForResource"
            }
        ],
        "MediaPackage.RotateIngestEndpointCredentials": [
            {
                "action": "mediapackage:RotateIngestEndpointCredentials"
            }
        ],
        "MediaPackage.TagResource": [
            {
                "action": "mediapackage:TagResource"
            }
        ],
        "MediaPackage.UntagResource": [
            {
                "action": "mediapackage:UntagResource"
            }
        ],
        "MediaPackage.UpdateChannel": [
            {
                "action": "mediapackage:UpdateChannel"
            }
        ],
        "MediaPackage.UpdateOriginEndpoint": [
            {
                "action": "mediapackage:UpdateOriginEndpoint"
            }
        ],
        "MediaStore.CreateContainer": [
            {
                "action": "mediastore:CreateContainer"
            }
        ],
        "MediaStore.DeleteContainer": [
            {
                "action": "mediastore:DeleteContainer"
            }
        ],
        "MediaStore.DeleteContainerPolicy": [
            {
                "action": "mediastore:DeleteContainerPolicy"
            }
        ],
        "MediaStore.DeleteCorsPolicy": [
            {
                "action": "mediastore:DeleteCorsPolicy"
            }
        ],
        "MediaStore.DeleteLifecyclePolicy": [
            {
                "action": "mediastore:DeleteLifecyclePolicy"
            }
        ],
        "MediaStore.DeleteMetricPolicy": [
            {
                "action": "mediastore:DeleteMetricPolicy"
            }
        ],
        "MediaStore.DescribeContainer": [
            {
                "action": "mediastore:DescribeContainer"
            }
        ],
        "MediaStore.GetContainerPolicy": [
            {
                "action": "mediastore:GetContainerPolicy"
            }
        ],
        "MediaStore.GetCorsPolicy": [
            {
                "action": "mediastore:GetCorsPolicy"
            }
        ],
        "MediaStore.GetLifecyclePolicy": [
            {
                "action": "mediastore:GetLifecyclePolicy"
            }
        ],
        "MediaStore.GetMetricPolicy": [
            {
                "action": "mediastore:GetMetricPolicy"
            }
        ],
        "MediaStore.ListContainers": [
            {
                "action": "mediastore:ListContainers"
            }
        ],
        "MediaStore.ListTagsForResource": [
            {
                "action": "mediastore:ListTagsForResource"
            }
        ],
        "MediaStore.PutContainerPolicy": [
            {
                "action": "mediastore:PutContainerPolicy"
            }
        ],
        "MediaStore.PutCorsPolicy": [
            {
                "action": "mediastore:PutCorsPolicy"
            }
        ],
        "MediaStore.PutLifecyclePolicy": [
            {
                "action": "mediastore:PutLifecyclePolicy"
            }
        ],
        "MediaStore.PutMetricPolicy": [
            {
                "action": "mediastore:PutMetricPolicy"
            }
        ],
        "MediaStore.StartAccessLogging": [
            {
                "action": "mediastore:StartAccessLogging"
            }
        ],
        "MediaStore.StopAccessLogging": [
            {
                "action": "mediastore:StopAccessLogging"
            }
        ],
        "MediaStore.TagResource": [
            {
                "action": "mediastore:TagResource"
            }
        ],
        "MediaStore.UntagResource": [
            {
                "action": "mediastore:UntagResource"
            }
        ],
        "MediaStoreData.DeleteObject": [
            {
                "action": "mediastore:DeleteObject"
            }
        ],
        "MediaStoreData.DescribeObject": [
            {
                "action": "mediastore:DescribeObject"
            }
        ],
        "MediaStoreData.GetObject": [
            {
                "action": "mediastore:GetObject"
            }
        ],
        "MediaStoreData.ListItems": [
            {
                "action": "mediastore:ListItems"
            }
        ],
        "MediaStoreData.PutObject": [
            {
                "action": "mediastore:PutObject"
            }
        ],
        "AppSync.CreateApiKey": [
            {
                "action": "appsync:CreateApiKey"
            }
        ],
        "AppSync.CreateDataSource": [
            {
                "action": "appsync:CreateDataSource"
            }
        ],
        "AppSync.CreateFunction": [
            {
                "action": "appsync:CreateFunction"
            }
        ],
        "AppSync.CreateGraphqlApi": [
            {
                "action": "appsync:CreateGraphqlApi"
            }
        ],
        "AppSync.CreateResolver": [
            {
                "action": "appsync:CreateResolver"
            }
        ],
        "AppSync.CreateType": [
            {
                "action": "appsync:CreateType"
            }
        ],
        "AppSync.DeleteApiKey": [
            {
                "action": "appsync:DeleteApiKey"
            }
        ],
        "AppSync.DeleteDataSource": [
            {
                "action": "appsync:DeleteDataSource"
            }
        ],
        "AppSync.DeleteFunction": [
            {
                "action": "appsync:DeleteFunction"
            }
        ],
        "AppSync.DeleteGraphqlApi": [
            {
                "action": "appsync:DeleteGraphqlApi"
            }
        ],
        "AppSync.DeleteResolver": [
            {
                "action": "appsync:DeleteResolver"
            }
        ],
        "AppSync.DeleteType": [
            {
                "action": "appsync:DeleteType"
            }
        ],
        "AppSync.GetDataSource": [
            {
                "action": "appsync:GetDataSource"
            }
        ],
        "AppSync.GetFunction": [
            {
                "action": "appsync:GetFunction"
            }
        ],
        "AppSync.GetGraphqlApi": [
            {
                "action": "appsync:GetGraphqlApi"
            }
        ],
        "AppSync.GetIntrospectionSchema": [
            {
                "action": "appsync:GetIntrospectionSchema"
            }
        ],
        "AppSync.GetResolver": [
            {
                "action": "appsync:GetResolver"
            }
        ],
        "AppSync.GetSchemaCreationStatus": [
            {
                "action": "appsync:GetSchemaCreationStatus"
            }
        ],
        "AppSync.GetType": [
            {
                "action": "appsync:GetType"
            }
        ],
        "AppSync.ListApiKeys": [
            {
                "action": "appsync:ListApiKeys"
            }
        ],
        "AppSync.ListDataSources": [
            {
                "action": "appsync:ListDataSources"
            }
        ],
        "AppSync.ListFunctions": [
            {
                "action": "appsync:ListFunctions"
            }
        ],
        "AppSync.ListGraphqlApis": [
            {
                "action": "appsync:ListGraphqlApis"
            }
        ],
        "AppSync.ListResolvers": [
            {
                "action": "appsync:ListResolvers"
            }
        ],
        "AppSync.ListResolversByFunction": [
            {
                "action": "appsync:ListResolversByFunction"
            }
        ],
        "AppSync.ListTagsForResource": [
            {
                "action": "appsync:ListTagsForResource"
            }
        ],
        "AppSync.ListTypes": [
            {
                "action": "appsync:ListTypes"
            }
        ],
        "AppSync.StartSchemaCreation": [
            {
                "action": "appsync:StartSchemaCreation"
            }
        ],
        "AppSync.TagResource": [
            {
                "action": "appsync:TagResource"
            }
        ],
        "AppSync.UntagResource": [
            {
                "action": "appsync:UntagResource"
            }
        ],
        "AppSync.UpdateApiKey": [
            {
                "action": "appsync:UpdateApiKey"
            }
        ],
        "AppSync.UpdateDataSource": [
            {
                "action": "appsync:UpdateDataSource"
            }
        ],
        "AppSync.UpdateFunction": [
            {
                "action": "appsync:UpdateFunction"
            }
        ],
        "AppSync.UpdateGraphqlApi": [
            {
                "action": "appsync:UpdateGraphqlApi"
            }
        ],
        "AppSync.UpdateResolver": [
            {
                "action": "appsync:UpdateResolver"
            }
        ],
        "AppSync.UpdateType": [
            {
                "action": "appsync:UpdateType"
            }
        ],
        "GuardDuty.AcceptInvitation": [
            {
                "action": "guardduty:AcceptInvitation"
            }
        ],
        "GuardDuty.ArchiveFindings": [
            {
                "action": "guardduty:ArchiveFindings"
            }
        ],
        "GuardDuty.CreateDetector": [
            {
                "action": "guardduty:CreateDetector"
            }
        ],
        "GuardDuty.CreateFilter": [
            {
                "action": "guardduty:CreateFilter"
            }
        ],
        "GuardDuty.CreateIPSet": [
            {
                "action": "guardduty:CreateIPSet"
            }
        ],
        "GuardDuty.CreateMembers": [
            {
                "action": "guardduty:CreateMembers"
            }
        ],
        "GuardDuty.CreatePublishingDestination": [
            {
                "action": "guardduty:CreatePublishingDestination"
            }
        ],
        "GuardDuty.CreateSampleFindings": [
            {
                "action": "guardduty:CreateSampleFindings"
            }
        ],
        "GuardDuty.CreateThreatIntelSet": [
            {
                "action": "guardduty:CreateThreatIntelSet"
            }
        ],
        "GuardDuty.DeclineInvitations": [
            {
                "action": "guardduty:DeclineInvitations"
            }
        ],
        "GuardDuty.DeleteDetector": [
            {
                "action": "guardduty:DeleteDetector"
            }
        ],
        "GuardDuty.DeleteFilter": [
            {
                "action": "guardduty:DeleteFilter"
            }
        ],
        "GuardDuty.DeleteIPSet": [
            {
                "action": "guardduty:DeleteIPSet"
            }
        ],
        "GuardDuty.DeleteInvitations": [
            {
                "action": "guardduty:DeleteInvitations"
            }
        ],
        "GuardDuty.DeleteMembers": [
            {
                "action": "guardduty:DeleteMembers"
            }
        ],
        "GuardDuty.DeletePublishingDestination": [
            {
                "action": "guardduty:DeletePublishingDestination"
            }
        ],
        "GuardDuty.DeleteThreatIntelSet": [
            {
                "action": "guardduty:DeleteThreatIntelSet"
            }
        ],
        "GuardDuty.DescribeOrganizationConfiguration": [
            {
                "action": "guardduty:DescribeOrganizationConfiguration"
            }
        ],
        "GuardDuty.DescribePublishingDestination": [
            {
                "action": "guardduty:DescribePublishingDestination"
            }
        ],
        "GuardDuty.DisableOrganizationAdminAccount": [
            {
                "action": "guardduty:DisableOrganizationAdminAccount"
            }
        ],
        "GuardDuty.DisassociateFromMasterAccount": [
            {
                "action": "guardduty:DisassociateFromMasterAccount"
            }
        ],
        "GuardDuty.DisassociateMembers": [
            {
                "action": "guardduty:DisassociateMembers"
            }
        ],
        "GuardDuty.EnableOrganizationAdminAccount": [
            {
                "action": "guardduty:EnableOrganizationAdminAccount"
            }
        ],
        "GuardDuty.GetDetector": [
            {
                "action": "guardduty:GetDetector"
            }
        ],
        "GuardDuty.GetFilter": [
            {
                "action": "guardduty:GetFilter"
            }
        ],
        "GuardDuty.GetFindings": [
            {
                "action": "guardduty:GetFindings"
            }
        ],
        "GuardDuty.GetFindingsStatistics": [
            {
                "action": "guardduty:GetFindingsStatistics"
            }
        ],
        "GuardDuty.GetIPSet": [
            {
                "action": "guardduty:GetIPSet"
            }
        ],
        "GuardDuty.GetInvitationsCount": [
            {
                "action": "guardduty:GetInvitationsCount"
            }
        ],
        "GuardDuty.GetMasterAccount": [
            {
                "action": "guardduty:GetMasterAccount"
            }
        ],
        "GuardDuty.GetMembers": [
            {
                "action": "guardduty:GetMembers"
            }
        ],
        "GuardDuty.GetThreatIntelSet": [
            {
                "action": "guardduty:GetThreatIntelSet"
            }
        ],
        "GuardDuty.InviteMembers": [
            {
                "action": "guardduty:InviteMembers"
            }
        ],
        "GuardDuty.ListDetectors": [
            {
                "action": "guardduty:ListDetectors"
            }
        ],
        "GuardDuty.ListFilters": [
            {
                "action": "guardduty:ListFilters"
            }
        ],
        "GuardDuty.ListFindings": [
            {
                "action": "guardduty:ListFindings"
            }
        ],
        "GuardDuty.ListIPSets": [
            {
                "action": "guardduty:ListIPSets"
            }
        ],
        "GuardDuty.ListInvitations": [
            {
                "action": "guardduty:ListInvitations"
            }
        ],
        "GuardDuty.ListMembers": [
            {
                "action": "guardduty:ListMembers"
            }
        ],
        "GuardDuty.ListOrganizationAdminAccounts": [
            {
                "action": "guardduty:ListOrganizationAdminAccounts"
            }
        ],
        "GuardDuty.ListPublishingDestinations": [
            {
                "action": "guardduty:ListPublishingDestinations"
            }
        ],
        "GuardDuty.ListTagsForResource": [
            {
                "action": "guardduty:ListTagsForResource"
            }
        ],
        "GuardDuty.ListThreatIntelSets": [
            {
                "action": "guardduty:ListThreatIntelSets"
            }
        ],
        "GuardDuty.StartMonitoringMembers": [
            {
                "action": "guardduty:StartMonitoringMembers"
            }
        ],
        "GuardDuty.StopMonitoringMembers": [
            {
                "action": "guardduty:StopMonitoringMembers"
            }
        ],
        "GuardDuty.TagResource": [
            {
                "action": "guardduty:TagResource"
            }
        ],
        "GuardDuty.UnarchiveFindings": [
            {
                "action": "guardduty:UnarchiveFindings"
            }
        ],
        "GuardDuty.UntagResource": [
            {
                "action": "guardduty:UntagResource"
            }
        ],
        "GuardDuty.UpdateDetector": [
            {
                "action": "guardduty:UpdateDetector"
            }
        ],
        "GuardDuty.UpdateFilter": [
            {
                "action": "guardduty:UpdateFilter"
            }
        ],
        "GuardDuty.UpdateFindingsFeedback": [
            {
                "action": "guardduty:UpdateFindingsFeedback"
            }
        ],
        "GuardDuty.UpdateIPSet": [
            {
                "action": "guardduty:UpdateIPSet"
            }
        ],
        "GuardDuty.UpdateOrganizationConfiguration": [
            {
                "action": "guardduty:UpdateOrganizationConfiguration"
            }
        ],
        "GuardDuty.UpdatePublishingDestination": [
            {
                "action": "guardduty:UpdatePublishingDestination"
            }
        ],
        "GuardDuty.UpdateThreatIntelSet": [
            {
                "action": "guardduty:UpdateThreatIntelSet"
            }
        ],
        "MQ.CreateBroker": [
            {
                "action": "mq:CreateBroker"
            }
        ],
        "MQ.CreateConfiguration": [
            {
                "action": "mq:CreateConfiguration"
            }
        ],
        "MQ.CreateTags": [
            {
                "action": "mq:CreateTags"
            }
        ],
        "MQ.CreateUser": [
            {
                "action": "mq:CreateUser"
            }
        ],
        "MQ.DeleteBroker": [
            {
                "action": "mq:DeleteBroker"
            }
        ],
        "MQ.DeleteTags": [
            {
                "action": "mq:DeleteTags"
            }
        ],
        "MQ.DeleteUser": [
            {
                "action": "mq:DeleteUser"
            }
        ],
        "MQ.DescribeBroker": [
            {
                "action": "mq:DescribeBroker"
            }
        ],
        "MQ.DescribeBrokerEngineTypes": [
            {
                "action": "mq:DescribeBrokerEngineTypes"
            }
        ],
        "MQ.DescribeBrokerInstanceOptions": [
            {
                "action": "mq:DescribeBrokerInstanceOptions"
            }
        ],
        "MQ.DescribeConfiguration": [
            {
                "action": "mq:DescribeConfiguration"
            }
        ],
        "MQ.DescribeConfigurationRevision": [
            {
                "action": "mq:DescribeConfigurationRevision"
            }
        ],
        "MQ.DescribeUser": [
            {
                "action": "mq:DescribeUser"
            }
        ],
        "MQ.ListBrokers": [
            {
                "action": "mq:ListBrokers"
            }
        ],
        "MQ.ListConfigurationRevisions": [
            {
                "action": "mq:ListConfigurationRevisions"
            }
        ],
        "MQ.ListConfigurations": [
            {
                "action": "mq:ListConfigurations"
            }
        ],
        "MQ.ListTags": [
            {
                "action": "mq:ListTags"
            }
        ],
        "MQ.ListUsers": [
            {
                "action": "mq:ListUsers"
            }
        ],
        "MQ.RebootBroker": [
            {
                "action": "mq:RebootBroker"
            }
        ],
        "MQ.UpdateBroker": [
            {
                "action": "mq:UpdateBroker"
            }
        ],
        "MQ.UpdateConfiguration": [
            {
                "action": "mq:UpdateConfiguration"
            }
        ],
        "MQ.UpdateUser": [
            {
                "action": "mq:UpdateUser"
            }
        ],
        "Comprehend.BatchDetectDominantLanguage": [
            {
                "action": "comprehend:BatchDetectDominantLanguage"
            }
        ],
        "Comprehend.BatchDetectEntities": [
            {
                "action": "comprehend:BatchDetectEntities"
            }
        ],
        "Comprehend.BatchDetectKeyPhrases": [
            {
                "action": "comprehend:BatchDetectKeyPhrases"
            }
        ],
        "Comprehend.BatchDetectSentiment": [
            {
                "action": "comprehend:BatchDetectSentiment"
            }
        ],
        "Comprehend.BatchDetectSyntax": [
            {
                "action": "comprehend:BatchDetectSyntax"
            }
        ],
        "Comprehend.ClassifyDocument": [
            {
                "action": "comprehend:ClassifyDocument"
            }
        ],
        "Comprehend.CreateDocumentClassifier": [
            {
                "action": "comprehend:CreateDocumentClassifier"
            }
        ],
        "Comprehend.CreateEndpoint": [
            {
                "action": "comprehend:CreateEndpoint"
            }
        ],
        "Comprehend.CreateEntityRecognizer": [
            {
                "action": "comprehend:CreateEntityRecognizer"
            }
        ],
        "Comprehend.DeleteDocumentClassifier": [
            {
                "action": "comprehend:DeleteDocumentClassifier"
            }
        ],
        "Comprehend.DeleteEndpoint": [
            {
                "action": "comprehend:DeleteEndpoint"
            }
        ],
        "Comprehend.DeleteEntityRecognizer": [
            {
                "action": "comprehend:DeleteEntityRecognizer"
            }
        ],
        "Comprehend.DescribeDocumentClassificationJob": [
            {
                "action": "comprehend:DescribeDocumentClassificationJob"
            }
        ],
        "Comprehend.DescribeDocumentClassifier": [
            {
                "action": "comprehend:DescribeDocumentClassifier"
            }
        ],
        "Comprehend.DescribeDominantLanguageDetectionJob": [
            {
                "action": "comprehend:DescribeDominantLanguageDetectionJob"
            }
        ],
        "Comprehend.DescribeEndpoint": [
            {
                "action": "comprehend:DescribeEndpoint"
            }
        ],
        "Comprehend.DescribeEntitiesDetectionJob": [
            {
                "action": "comprehend:DescribeEntitiesDetectionJob"
            }
        ],
        "Comprehend.DescribeEntityRecognizer": [
            {
                "action": "comprehend:DescribeEntityRecognizer"
            }
        ],
        "Comprehend.DescribeEventsDetectionJob": [
            {
                "action": "comprehend:DescribeEventsDetectionJob"
            }
        ],
        "Comprehend.DescribeKeyPhrasesDetectionJob": [
            {
                "action": "comprehend:DescribeKeyPhrasesDetectionJob"
            }
        ],
        "Comprehend.DescribePiiEntitiesDetectionJob": [
            {
                "action": "comprehend:DescribePiiEntitiesDetectionJob"
            }
        ],
        "Comprehend.DescribeSentimentDetectionJob": [
            {
                "action": "comprehend:DescribeSentimentDetectionJob"
            }
        ],
        "Comprehend.DescribeTopicsDetectionJob": [
            {
                "action": "comprehend:DescribeTopicsDetectionJob"
            }
        ],
        "Comprehend.DetectDominantLanguage": [
            {
                "action": "comprehend:DetectDominantLanguage"
            }
        ],
        "Comprehend.DetectEntities": [
            {
                "action": "comprehend:DetectEntities"
            }
        ],
        "Comprehend.DetectKeyPhrases": [
            {
                "action": "comprehend:DetectKeyPhrases"
            }
        ],
        "Comprehend.DetectPiiEntities": [
            {
                "action": "comprehend:DetectPiiEntities"
            }
        ],
        "Comprehend.DetectSentiment": [
            {
                "action": "comprehend:DetectSentiment"
            }
        ],
        "Comprehend.DetectSyntax": [
            {
                "action": "comprehend:DetectSyntax"
            }
        ],
        "Comprehend.ListDocumentClassificationJobs": [
            {
                "action": "comprehend:ListDocumentClassificationJobs"
            }
        ],
        "Comprehend.ListDocumentClassifiers": [
            {
                "action": "comprehend:ListDocumentClassifiers"
            }
        ],
        "Comprehend.ListDominantLanguageDetectionJobs": [
            {
                "action": "comprehend:ListDominantLanguageDetectionJobs"
            }
        ],
        "Comprehend.ListEndpoints": [
            {
                "action": "comprehend:ListEndpoints"
            }
        ],
        "Comprehend.ListEntitiesDetectionJobs": [
            {
                "action": "comprehend:ListEntitiesDetectionJobs"
            }
        ],
        "Comprehend.ListEntityRecognizers": [
            {
                "action": "comprehend:ListEntityRecognizers"
            }
        ],
        "Comprehend.ListEventsDetectionJobs": [
            {
                "action": "comprehend:ListEventsDetectionJobs"
            }
        ],
        "Comprehend.ListKeyPhrasesDetectionJobs": [
            {
                "action": "comprehend:ListKeyPhrasesDetectionJobs"
            }
        ],
        "Comprehend.ListPiiEntitiesDetectionJobs": [
            {
                "action": "comprehend:ListPiiEntitiesDetectionJobs"
            }
        ],
        "Comprehend.ListSentimentDetectionJobs": [
            {
                "action": "comprehend:ListSentimentDetectionJobs"
            }
        ],
        "Comprehend.ListTagsForResource": [
            {
                "action": "comprehend:ListTagsForResource"
            }
        ],
        "Comprehend.ListTopicsDetectionJobs": [
            {
                "action": "comprehend:ListTopicsDetectionJobs"
            }
        ],
        "Comprehend.StartDocumentClassificationJob": [
            {
                "action": "comprehend:StartDocumentClassificationJob"
            }
        ],
        "Comprehend.StartDominantLanguageDetectionJob": [
            {
                "action": "comprehend:StartDominantLanguageDetectionJob"
            }
        ],
        "Comprehend.StartEntitiesDetectionJob": [
            {
                "action": "comprehend:StartEntitiesDetectionJob"
            }
        ],
        "Comprehend.StartEventsDetectionJob": [
            {
                "action": "comprehend:StartEventsDetectionJob"
            }
        ],
        "Comprehend.StartKeyPhrasesDetectionJob": [
            {
                "action": "comprehend:StartKeyPhrasesDetectionJob"
            }
        ],
        "Comprehend.StartPiiEntitiesDetectionJob": [
            {
                "action": "comprehend:StartPiiEntitiesDetectionJob"
            }
        ],
        "Comprehend.StartSentimentDetectionJob": [
            {
                "action": "comprehend:StartSentimentDetectionJob"
            }
        ],
        "Comprehend.StartTopicsDetectionJob": [
            {
                "action": "comprehend:StartTopicsDetectionJob"
            }
        ],
        "Comprehend.StopDominantLanguageDetectionJob": [
            {
                "action": "comprehend:StopDominantLanguageDetectionJob"
            }
        ],
        "Comprehend.StopEntitiesDetectionJob": [
            {
                "action": "comprehend:StopEntitiesDetectionJob"
            }
        ],
        "Comprehend.StopEventsDetectionJob": [
            {
                "action": "comprehend:StopEventsDetectionJob"
            }
        ],
        "Comprehend.StopKeyPhrasesDetectionJob": [
            {
                "action": "comprehend:StopKeyPhrasesDetectionJob"
            }
        ],
        "Comprehend.StopPiiEntitiesDetectionJob": [
            {
                "action": "comprehend:StopPiiEntitiesDetectionJob"
            }
        ],
        "Comprehend.StopSentimentDetectionJob": [
            {
                "action": "comprehend:StopSentimentDetectionJob"
            }
        ],
        "Comprehend.StopTrainingDocumentClassifier": [
            {
                "action": "comprehend:StopTrainingDocumentClassifier"
            }
        ],
        "Comprehend.StopTrainingEntityRecognizer": [
            {
                "action": "comprehend:StopTrainingEntityRecognizer"
            }
        ],
        "Comprehend.TagResource": [
            {
                "action": "comprehend:TagResource"
            }
        ],
        "Comprehend.UntagResource": [
            {
                "action": "comprehend:UntagResource"
            }
        ],
        "Comprehend.UpdateEndpoint": [
            {
                "action": "comprehend:UpdateEndpoint"
            }
        ],
        "IoTJobsDataPlane.DescribeJobExecution": [
            {
                "action": "iot:DescribeJobExecution"
            }
        ],
        "IoTJobsDataPlane.GetPendingJobExecutions": [
            {
                "action": "iot:GetPendingJobExecutions"
            }
        ],
        "IoTJobsDataPlane.StartNextPendingJobExecution": [
            {
                "action": "iot:StartNextPendingJobExecution"
            }
        ],
        "IoTJobsDataPlane.UpdateJobExecution": [
            {
                "action": "iot:UpdateJobExecution"
            }
        ],
        "KinesisVideoArchivedMedia.GetClip": [
            {
                "action": "kinesisvideo:GetClip"
            }
        ],
        "KinesisVideoArchivedMedia.GetDASHStreamingSessionURL": [
            {
                "action": "kinesisvideo:GetDASHStreamingSessionURL"
            }
        ],
        "KinesisVideoArchivedMedia.GetHLSStreamingSessionURL": [
            {
                "action": "kinesisvideo:GetHLSStreamingSessionURL"
            }
        ],
        "KinesisVideoArchivedMedia.GetMediaForFragmentList": [
            {
                "action": "kinesisvideo:GetMediaForFragmentList"
            }
        ],
        "KinesisVideoArchivedMedia.ListFragments": [
            {
                "action": "kinesisvideo:ListFragments"
            }
        ],
        "KinesisVideoMedia.GetMedia": [
            {
                "action": "kinesisvideo:GetMedia"
            }
        ],
        "KinesisVideo.CreateSignalingChannel": [
            {
                "action": "kinesisvideo:CreateSignalingChannel"
            }
        ],
        "KinesisVideo.CreateStream": [
            {
                "action": "kinesisvideo:CreateStream"
            }
        ],
        "KinesisVideo.DeleteSignalingChannel": [
            {
                "action": "kinesisvideo:DeleteSignalingChannel"
            }
        ],
        "KinesisVideo.DeleteStream": [
            {
                "action": "kinesisvideo:DeleteStream"
            }
        ],
        "KinesisVideo.DescribeSignalingChannel": [
            {
                "action": "kinesisvideo:DescribeSignalingChannel"
            }
        ],
        "KinesisVideo.DescribeStream": [
            {
                "action": "kinesisvideo:DescribeStream"
            }
        ],
        "KinesisVideo.GetDataEndpoint": [
            {
                "action": "kinesisvideo:GetDataEndpoint"
            }
        ],
        "KinesisVideo.GetSignalingChannelEndpoint": [
            {
                "action": "kinesisvideo:GetSignalingChannelEndpoint"
            }
        ],
        "KinesisVideo.ListSignalingChannels": [
            {
                "action": "kinesisvideo:ListSignalingChannels"
            }
        ],
        "KinesisVideo.ListStreams": [
            {
                "action": "kinesisvideo:ListStreams"
            }
        ],
        "KinesisVideo.ListTagsForResource": [
            {
                "action": "kinesisvideo:ListTagsForResource"
            }
        ],
        "KinesisVideo.ListTagsForStream": [
            {
                "action": "kinesisvideo:ListTagsForStream"
            }
        ],
        "KinesisVideo.TagResource": [
            {
                "action": "kinesisvideo:TagResource"
            }
        ],
        "KinesisVideo.TagStream": [
            {
                "action": "kinesisvideo:TagStream"
            }
        ],
        "KinesisVideo.UntagResource": [
            {
                "action": "kinesisvideo:UntagResource"
            }
        ],
        "KinesisVideo.UntagStream": [
            {
                "action": "kinesisvideo:UntagStream"
            }
        ],
        "KinesisVideo.UpdateDataRetention": [
            {
                "action": "kinesisvideo:UpdateDataRetention"
            }
        ],
        "KinesisVideo.UpdateSignalingChannel": [
            {
                "action": "kinesisvideo:UpdateSignalingChannel"
            }
        ],
        "KinesisVideo.UpdateStream": [
            {
                "action": "kinesisvideo:UpdateStream"
            }
        ],
        "SageMakerRuntime.InvokeEndpoint": [
            {
                "action": "sagemaker:InvokeEndpoint"
            }
        ],
        "SageMaker.AddAssociation": [
            {
                "action": "sagemaker:AddAssociation"
            }
        ],
        "SageMaker.AddTags": [
            {
                "action": "sagemaker:AddTags"
            }
        ],
        "SageMaker.AssociateTrialComponent": [
            {
                "action": "sagemaker:AssociateTrialComponent"
            }
        ],
        "SageMaker.CreateAction": [
            {
                "action": "sagemaker:CreateAction"
            }
        ],
        "SageMaker.CreateAlgorithm": [
            {
                "action": "sagemaker:CreateAlgorithm"
            }
        ],
        "SageMaker.CreateApp": [
            {
                "action": "sagemaker:CreateApp"
            }
        ],
        "SageMaker.CreateAppImageConfig": [
            {
                "action": "sagemaker:CreateAppImageConfig"
            }
        ],
        "SageMaker.CreateArtifact": [
            {
                "action": "sagemaker:CreateArtifact"
            }
        ],
        "SageMaker.CreateAutoMLJob": [
            {
                "action": "sagemaker:CreateAutoMLJob"
            }
        ],
        "SageMaker.CreateCodeRepository": [
            {
                "action": "sagemaker:CreateCodeRepository"
            }
        ],
        "SageMaker.CreateCompilationJob": [
            {
                "action": "sagemaker:CreateCompilationJob"
            }
        ],
        "SageMaker.CreateContext": [
            {
                "action": "sagemaker:CreateContext"
            }
        ],
        "SageMaker.CreateDataQualityJobDefinition": [
            {
                "action": "sagemaker:CreateDataQualityJobDefinition"
            }
        ],
        "SageMaker.CreateDeviceFleet": [
            {
                "action": "sagemaker:CreateDeviceFleet"
            }
        ],
        "SageMaker.CreateDomain": [
            {
                "action": "sagemaker:CreateDomain"
            }
        ],
        "SageMaker.CreateEdgePackagingJob": [
            {
                "action": "sagemaker:CreateEdgePackagingJob"
            }
        ],
        "SageMaker.CreateEndpoint": [
            {
                "action": "sagemaker:CreateEndpoint"
            }
        ],
        "SageMaker.CreateEndpointConfig": [
            {
                "action": "sagemaker:CreateEndpointConfig"
            }
        ],
        "SageMaker.CreateExperiment": [
            {
                "action": "sagemaker:CreateExperiment"
            }
        ],
        "SageMaker.CreateFeatureGroup": [
            {
                "action": "sagemaker:CreateFeatureGroup"
            }
        ],
        "SageMaker.CreateFlowDefinition": [
            {
                "action": "sagemaker:CreateFlowDefinition"
            }
        ],
        "SageMaker.CreateHumanTaskUi": [
            {
                "action": "sagemaker:CreateHumanTaskUi"
            }
        ],
        "SageMaker.CreateHyperParameterTuningJob": [
            {
                "action": "sagemaker:CreateHyperParameterTuningJob"
            }
        ],
        "SageMaker.CreateImage": [
            {
                "action": "sagemaker:CreateImage"
            }
        ],
        "SageMaker.CreateImageVersion": [
            {
                "action": "sagemaker:CreateImageVersion"
            }
        ],
        "SageMaker.CreateLabelingJob": [
            {
                "action": "sagemaker:CreateLabelingJob"
            }
        ],
        "SageMaker.CreateModel": [
            {
                "action": "sagemaker:CreateModel"
            }
        ],
        "SageMaker.CreateModelBiasJobDefinition": [
            {
                "action": "sagemaker:CreateModelBiasJobDefinition"
            }
        ],
        "SageMaker.CreateModelExplainabilityJobDefinition": [
            {
                "action": "sagemaker:CreateModelExplainabilityJobDefinition"
            }
        ],
        "SageMaker.CreateModelPackage": [
            {
                "action": "sagemaker:CreateModelPackage"
            }
        ],
        "SageMaker.CreateModelPackageGroup": [
            {
                "action": "sagemaker:CreateModelPackageGroup"
            }
        ],
        "SageMaker.CreateModelQualityJobDefinition": [
            {
                "action": "sagemaker:CreateModelQualityJobDefinition"
            }
        ],
        "SageMaker.CreateMonitoringSchedule": [
            {
                "action": "sagemaker:CreateMonitoringSchedule"
            }
        ],
        "SageMaker.CreateNotebookInstance": [
            {
                "action": "sagemaker:CreateNotebookInstance"
            }
        ],
        "SageMaker.CreateNotebookInstanceLifecycleConfig": [
            {
                "action": "sagemaker:CreateNotebookInstanceLifecycleConfig"
            }
        ],
        "SageMaker.CreatePipeline": [
            {
                "action": "sagemaker:CreatePipeline"
            }
        ],
        "SageMaker.CreatePresignedDomainUrl": [
            {
                "action": "sagemaker:CreatePresignedDomainUrl"
            }
        ],
        "SageMaker.CreatePresignedNotebookInstanceUrl": [
            {
                "action": "sagemaker:CreatePresignedNotebookInstanceUrl"
            }
        ],
        "SageMaker.CreateProcessingJob": [
            {
                "action": "sagemaker:CreateProcessingJob"
            }
        ],
        "SageMaker.CreateProject": [
            {
                "action": "sagemaker:CreateProject"
            }
        ],
        "SageMaker.CreateTrainingJob": [
            {
                "action": "sagemaker:CreateTrainingJob"
            }
        ],
        "SageMaker.CreateTransformJob": [
            {
                "action": "sagemaker:CreateTransformJob"
            }
        ],
        "SageMaker.CreateTrial": [
            {
                "action": "sagemaker:CreateTrial"
            }
        ],
        "SageMaker.CreateTrialComponent": [
            {
                "action": "sagemaker:CreateTrialComponent"
            }
        ],
        "SageMaker.CreateUserProfile": [
            {
                "action": "sagemaker:CreateUserProfile"
            }
        ],
        "SageMaker.CreateWorkforce": [
            {
                "action": "sagemaker:CreateWorkforce"
            }
        ],
        "SageMaker.CreateWorkteam": [
            {
                "action": "sagemaker:CreateWorkteam"
            }
        ],
        "SageMaker.DeleteAction": [
            {
                "action": "sagemaker:DeleteAction"
            }
        ],
        "SageMaker.DeleteAlgorithm": [
            {
                "action": "sagemaker:DeleteAlgorithm"
            }
        ],
        "SageMaker.DeleteApp": [
            {
                "action": "sagemaker:DeleteApp"
            }
        ],
        "SageMaker.DeleteAppImageConfig": [
            {
                "action": "sagemaker:DeleteAppImageConfig"
            }
        ],
        "SageMaker.DeleteArtifact": [
            {
                "action": "sagemaker:DeleteArtifact"
            }
        ],
        "SageMaker.DeleteAssociation": [
            {
                "action": "sagemaker:DeleteAssociation"
            }
        ],
        "SageMaker.DeleteCodeRepository": [
            {
                "action": "sagemaker:DeleteCodeRepository"
            }
        ],
        "SageMaker.DeleteContext": [
            {
                "action": "sagemaker:DeleteContext"
            }
        ],
        "SageMaker.DeleteDataQualityJobDefinition": [
            {
                "action": "sagemaker:DeleteDataQualityJobDefinition"
            }
        ],
        "SageMaker.DeleteDeviceFleet": [
            {
                "action": "sagemaker:DeleteDeviceFleet"
            }
        ],
        "SageMaker.DeleteDomain": [
            {
                "action": "sagemaker:DeleteDomain"
            }
        ],
        "SageMaker.DeleteEndpoint": [
            {
                "action": "sagemaker:DeleteEndpoint"
            }
        ],
        "SageMaker.DeleteEndpointConfig": [
            {
                "action": "sagemaker:DeleteEndpointConfig"
            }
        ],
        "SageMaker.DeleteExperiment": [
            {
                "action": "sagemaker:DeleteExperiment"
            }
        ],
        "SageMaker.DeleteFeatureGroup": [
            {
                "action": "sagemaker:DeleteFeatureGroup"
            }
        ],
        "SageMaker.DeleteFlowDefinition": [
            {
                "action": "sagemaker:DeleteFlowDefinition"
            }
        ],
        "SageMaker.DeleteImage": [
            {
                "action": "sagemaker:DeleteImage"
            }
        ],
        "SageMaker.DeleteImageVersion": [
            {
                "action": "sagemaker:DeleteImageVersion"
            }
        ],
        "SageMaker.DeleteModel": [
            {
                "action": "sagemaker:DeleteModel"
            }
        ],
        "SageMaker.DeleteModelBiasJobDefinition": [
            {
                "action": "sagemaker:DeleteModelBiasJobDefinition"
            }
        ],
        "SageMaker.DeleteModelExplainabilityJobDefinition": [
            {
                "action": "sagemaker:DeleteModelExplainabilityJobDefinition"
            }
        ],
        "SageMaker.DeleteModelPackage": [
            {
                "action": "sagemaker:DeleteModelPackage"
            }
        ],
        "SageMaker.DeleteModelPackageGroup": [
            {
                "action": "sagemaker:DeleteModelPackageGroup"
            }
        ],
        "SageMaker.DeleteModelPackageGroupPolicy": [
            {
                "action": "sagemaker:DeleteModelPackageGroupPolicy"
            }
        ],
        "SageMaker.DeleteModelQualityJobDefinition": [
            {
                "action": "sagemaker:DeleteModelQualityJobDefinition"
            }
        ],
        "SageMaker.DeleteMonitoringSchedule": [
            {
                "action": "sagemaker:DeleteMonitoringSchedule"
            }
        ],
        "SageMaker.DeleteNotebookInstance": [
            {
                "action": "sagemaker:DeleteNotebookInstance"
            }
        ],
        "SageMaker.DeleteNotebookInstanceLifecycleConfig": [
            {
                "action": "sagemaker:DeleteNotebookInstanceLifecycleConfig"
            }
        ],
        "SageMaker.DeletePipeline": [
            {
                "action": "sagemaker:DeletePipeline"
            }
        ],
        "SageMaker.DeleteProject": [
            {
                "action": "sagemaker:DeleteProject"
            }
        ],
        "SageMaker.DeleteTags": [
            {
                "action": "sagemaker:DeleteTags"
            }
        ],
        "SageMaker.DeleteTrial": [
            {
                "action": "sagemaker:DeleteTrial"
            }
        ],
        "SageMaker.DeleteTrialComponent": [
            {
                "action": "sagemaker:DeleteTrialComponent"
            }
        ],
        "SageMaker.DeleteUserProfile": [
            {
                "action": "sagemaker:DeleteUserProfile"
            }
        ],
        "SageMaker.DeleteWorkforce": [
            {
                "action": "sagemaker:DeleteWorkforce"
            }
        ],
        "SageMaker.DeleteWorkteam": [
            {
                "action": "sagemaker:DeleteWorkteam"
            }
        ],
        "SageMaker.DeregisterDevices": [
            {
                "action": "sagemaker:DeregisterDevices"
            }
        ],
        "SageMaker.DescribeAction": [
            {
                "action": "sagemaker:DescribeAction"
            }
        ],
        "SageMaker.DescribeAlgorithm": [
            {
                "action": "sagemaker:DescribeAlgorithm"
            }
        ],
        "SageMaker.DescribeApp": [
            {
                "action": "sagemaker:DescribeApp"
            }
        ],
        "SageMaker.DescribeAppImageConfig": [
            {
                "action": "sagemaker:DescribeAppImageConfig"
            }
        ],
        "SageMaker.DescribeArtifact": [
            {
                "action": "sagemaker:DescribeArtifact"
            }
        ],
        "SageMaker.DescribeAutoMLJob": [
            {
                "action": "sagemaker:DescribeAutoMLJob"
            }
        ],
        "SageMaker.DescribeCodeRepository": [
            {
                "action": "sagemaker:DescribeCodeRepository"
            }
        ],
        "SageMaker.DescribeCompilationJob": [
            {
                "action": "sagemaker:DescribeCompilationJob"
            }
        ],
        "SageMaker.DescribeContext": [
            {
                "action": "sagemaker:DescribeContext"
            }
        ],
        "SageMaker.DescribeDataQualityJobDefinition": [
            {
                "action": "sagemaker:DescribeDataQualityJobDefinition"
            }
        ],
        "SageMaker.DescribeDevice": [
            {
                "action": "sagemaker:DescribeDevice"
            }
        ],
        "SageMaker.DescribeDeviceFleet": [
            {
                "action": "sagemaker:DescribeDeviceFleet"
            }
        ],
        "SageMaker.DescribeDomain": [
            {
                "action": "sagemaker:DescribeDomain"
            }
        ],
        "SageMaker.DescribeEdgePackagingJob": [
            {
                "action": "sagemaker:DescribeEdgePackagingJob"
            }
        ],
        "SageMaker.DescribeEndpoint": [
            {
                "action": "sagemaker:DescribeEndpoint"
            }
        ],
        "SageMaker.DescribeEndpointConfig": [
            {
                "action": "sagemaker:DescribeEndpointConfig"
            }
        ],
        "SageMaker.DescribeExperiment": [
            {
                "action": "sagemaker:DescribeExperiment"
            }
        ],
        "SageMaker.DescribeFeatureGroup": [
            {
                "action": "sagemaker:DescribeFeatureGroup"
            }
        ],
        "SageMaker.DescribeFlowDefinition": [
            {
                "action": "sagemaker:DescribeFlowDefinition"
            }
        ],
        "SageMaker.DescribeHumanTaskUi": [
            {
                "action": "sagemaker:DescribeHumanTaskUi"
            }
        ],
        "SageMaker.DescribeHyperParameterTuningJob": [
            {
                "action": "sagemaker:DescribeHyperParameterTuningJob"
            }
        ],
        "SageMaker.DescribeImage": [
            {
                "action": "sagemaker:DescribeImage"
            }
        ],
        "SageMaker.DescribeImageVersion": [
            {
                "action": "sagemaker:DescribeImageVersion"
            }
        ],
        "SageMaker.DescribeLabelingJob": [
            {
                "action": "sagemaker:DescribeLabelingJob"
            }
        ],
        "SageMaker.DescribeModel": [
            {
                "action": "sagemaker:DescribeModel"
            }
        ],
        "SageMaker.DescribeModelBiasJobDefinition": [
            {
                "action": "sagemaker:DescribeModelBiasJobDefinition"
            }
        ],
        "SageMaker.DescribeModelExplainabilityJobDefinition": [
            {
                "action": "sagemaker:DescribeModelExplainabilityJobDefinition"
            }
        ],
        "SageMaker.DescribeModelPackage": [
            {
                "action": "sagemaker:DescribeModelPackage"
            }
        ],
        "SageMaker.DescribeModelPackageGroup": [
            {
                "action": "sagemaker:DescribeModelPackageGroup"
            }
        ],
        "SageMaker.DescribeModelQualityJobDefinition": [
            {
                "action": "sagemaker:DescribeModelQualityJobDefinition"
            }
        ],
        "SageMaker.DescribeMonitoringSchedule": [
            {
                "action": "sagemaker:DescribeMonitoringSchedule"
            }
        ],
        "SageMaker.DescribeNotebookInstance": [
            {
                "action": "sagemaker:DescribeNotebookInstance"
            }
        ],
        "SageMaker.DescribeNotebookInstanceLifecycleConfig": [
            {
                "action": "sagemaker:DescribeNotebookInstanceLifecycleConfig"
            }
        ],
        "SageMaker.DescribePipeline": [
            {
                "action": "sagemaker:DescribePipeline"
            }
        ],
        "SageMaker.DescribePipelineDefinitionForExecution": [
            {
                "action": "sagemaker:DescribePipelineDefinitionForExecution"
            }
        ],
        "SageMaker.DescribePipelineExecution": [
            {
                "action": "sagemaker:DescribePipelineExecution"
            }
        ],
        "SageMaker.DescribeProcessingJob": [
            {
                "action": "sagemaker:DescribeProcessingJob"
            }
        ],
        "SageMaker.DescribeProject": [
            {
                "action": "sagemaker:DescribeProject"
            }
        ],
        "SageMaker.DescribeSubscribedWorkteam": [
            {
                "action": "sagemaker:DescribeSubscribedWorkteam"
            }
        ],
        "SageMaker.DescribeTrainingJob": [
            {
                "action": "sagemaker:DescribeTrainingJob"
            }
        ],
        "SageMaker.DescribeTransformJob": [
            {
                "action": "sagemaker:DescribeTransformJob"
            }
        ],
        "SageMaker.DescribeTrial": [
            {
                "action": "sagemaker:DescribeTrial"
            }
        ],
        "SageMaker.DescribeTrialComponent": [
            {
                "action": "sagemaker:DescribeTrialComponent"
            }
        ],
        "SageMaker.DescribeUserProfile": [
            {
                "action": "sagemaker:DescribeUserProfile"
            }
        ],
        "SageMaker.DescribeWorkforce": [
            {
                "action": "sagemaker:DescribeWorkforce"
            }
        ],
        "SageMaker.DescribeWorkteam": [
            {
                "action": "sagemaker:DescribeWorkteam"
            }
        ],
        "SageMaker.DisableSagemakerServicecatalogPortfolio": [
            {
                "action": "sagemaker:DisableSagemakerServicecatalogPortfolio"
            }
        ],
        "SageMaker.DisassociateTrialComponent": [
            {
                "action": "sagemaker:DisassociateTrialComponent"
            }
        ],
        "SageMaker.EnableSagemakerServicecatalogPortfolio": [
            {
                "action": "sagemaker:EnableSagemakerServicecatalogPortfolio"
            }
        ],
        "SageMaker.GetDeviceFleetReport": [
            {
                "action": "sagemaker:GetDeviceFleetReport"
            }
        ],
        "SageMaker.GetModelPackageGroupPolicy": [
            {
                "action": "sagemaker:GetModelPackageGroupPolicy"
            }
        ],
        "SageMaker.GetSagemakerServicecatalogPortfolioStatus": [
            {
                "action": "sagemaker:GetSagemakerServicecatalogPortfolioStatus"
            }
        ],
        "SageMaker.GetSearchSuggestions": [
            {
                "action": "sagemaker:GetSearchSuggestions"
            }
        ],
        "SageMaker.ListActions": [
            {
                "action": "sagemaker:ListActions"
            }
        ],
        "SageMaker.ListAlgorithms": [
            {
                "action": "sagemaker:ListAlgorithms"
            }
        ],
        "SageMaker.ListAppImageConfigs": [
            {
                "action": "sagemaker:ListAppImageConfigs"
            }
        ],
        "SageMaker.ListApps": [
            {
                "action": "sagemaker:ListApps"
            }
        ],
        "SageMaker.ListArtifacts": [
            {
                "action": "sagemaker:ListArtifacts"
            }
        ],
        "SageMaker.ListAssociations": [
            {
                "action": "sagemaker:ListAssociations"
            }
        ],
        "SageMaker.ListAutoMLJobs": [
            {
                "action": "sagemaker:ListAutoMLJobs"
            }
        ],
        "SageMaker.ListCandidatesForAutoMLJob": [
            {
                "action": "sagemaker:ListCandidatesForAutoMLJob"
            }
        ],
        "SageMaker.ListCodeRepositories": [
            {
                "action": "sagemaker:ListCodeRepositories"
            }
        ],
        "SageMaker.ListCompilationJobs": [
            {
                "action": "sagemaker:ListCompilationJobs"
            }
        ],
        "SageMaker.ListContexts": [
            {
                "action": "sagemaker:ListContexts"
            }
        ],
        "SageMaker.ListDataQualityJobDefinitions": [
            {
                "action": "sagemaker:ListDataQualityJobDefinitions"
            }
        ],
        "SageMaker.ListDeviceFleets": [
            {
                "action": "sagemaker:ListDeviceFleets"
            }
        ],
        "SageMaker.ListDevices": [
            {
                "action": "sagemaker:ListDevices"
            }
        ],
        "SageMaker.ListDomains": [
            {
                "action": "sagemaker:ListDomains"
            }
        ],
        "SageMaker.ListEdgePackagingJobs": [
            {
                "action": "sagemaker:ListEdgePackagingJobs"
            }
        ],
        "SageMaker.ListEndpointConfigs": [
            {
                "action": "sagemaker:ListEndpointConfigs"
            }
        ],
        "SageMaker.ListEndpoints": [
            {
                "action": "sagemaker:ListEndpoints"
            }
        ],
        "SageMaker.ListExperiments": [
            {
                "action": "sagemaker:ListExperiments"
            }
        ],
        "SageMaker.ListFeatureGroups": [
            {
                "action": "sagemaker:ListFeatureGroups"
            }
        ],
        "SageMaker.ListFlowDefinitions": [
            {
                "action": "sagemaker:ListFlowDefinitions"
            }
        ],
        "SageMaker.ListHumanTaskUis": [
            {
                "action": "sagemaker:ListHumanTaskUis"
            }
        ],
        "SageMaker.ListHyperParameterTuningJobs": [
            {
                "action": "sagemaker:ListHyperParameterTuningJobs"
            }
        ],
        "SageMaker.ListImageVersions": [
            {
                "action": "sagemaker:ListImageVersions"
            }
        ],
        "SageMaker.ListImages": [
            {
                "action": "sagemaker:ListImages"
            }
        ],
        "SageMaker.ListLabelingJobs": [
            {
                "action": "sagemaker:ListLabelingJobs"
            }
        ],
        "SageMaker.ListLabelingJobsForWorkteam": [
            {
                "action": "sagemaker:ListLabelingJobsForWorkteam"
            }
        ],
        "SageMaker.ListModelBiasJobDefinitions": [
            {
                "action": "sagemaker:ListModelBiasJobDefinitions"
            }
        ],
        "SageMaker.ListModelExplainabilityJobDefinitions": [
            {
                "action": "sagemaker:ListModelExplainabilityJobDefinitions"
            }
        ],
        "SageMaker.ListModelPackageGroups": [
            {
                "action": "sagemaker:ListModelPackageGroups"
            }
        ],
        "SageMaker.ListModelPackages": [
            {
                "action": "sagemaker:ListModelPackages"
            }
        ],
        "SageMaker.ListModelQualityJobDefinitions": [
            {
                "action": "sagemaker:ListModelQualityJobDefinitions"
            }
        ],
        "SageMaker.ListModels": [
            {
                "action": "sagemaker:ListModels"
            }
        ],
        "SageMaker.ListMonitoringExecutions": [
            {
                "action": "sagemaker:ListMonitoringExecutions"
            }
        ],
        "SageMaker.ListMonitoringSchedules": [
            {
                "action": "sagemaker:ListMonitoringSchedules"
            }
        ],
        "SageMaker.ListNotebookInstanceLifecycleConfigs": [
            {
                "action": "sagemaker:ListNotebookInstanceLifecycleConfigs"
            }
        ],
        "SageMaker.ListNotebookInstances": [
            {
                "action": "sagemaker:ListNotebookInstances"
            }
        ],
        "SageMaker.ListPipelineExecutionSteps": [
            {
                "action": "sagemaker:ListPipelineExecutionSteps"
            }
        ],
        "SageMaker.ListPipelineExecutions": [
            {
                "action": "sagemaker:ListPipelineExecutions"
            }
        ],
        "SageMaker.ListPipelineParametersForExecution": [
            {
                "action": "sagemaker:ListPipelineParametersForExecution"
            }
        ],
        "SageMaker.ListPipelines": [
            {
                "action": "sagemaker:ListPipelines"
            }
        ],
        "SageMaker.ListProcessingJobs": [
            {
                "action": "sagemaker:ListProcessingJobs"
            }
        ],
        "SageMaker.ListProjects": [
            {
                "action": "sagemaker:ListProjects"
            }
        ],
        "SageMaker.ListSubscribedWorkteams": [
            {
                "action": "sagemaker:ListSubscribedWorkteams"
            }
        ],
        "SageMaker.ListTags": [
            {
                "action": "sagemaker:ListTags"
            }
        ],
        "SageMaker.ListTrainingJobs": [
            {
                "action": "sagemaker:ListTrainingJobs"
            }
        ],
        "SageMaker.ListTrainingJobsForHyperParameterTuningJob": [
            {
                "action": "sagemaker:ListTrainingJobsForHyperParameterTuningJob"
            }
        ],
        "SageMaker.ListTransformJobs": [
            {
                "action": "sagemaker:ListTransformJobs"
            }
        ],
        "SageMaker.ListTrialComponents": [
            {
                "action": "sagemaker:ListTrialComponents"
            }
        ],
        "SageMaker.ListTrials": [
            {
                "action": "sagemaker:ListTrials"
            }
        ],
        "SageMaker.ListUserProfiles": [
            {
                "action": "sagemaker:ListUserProfiles"
            }
        ],
        "SageMaker.ListWorkforces": [
            {
                "action": "sagemaker:ListWorkforces"
            }
        ],
        "SageMaker.ListWorkteams": [
            {
                "action": "sagemaker:ListWorkteams"
            }
        ],
        "SageMaker.PutModelPackageGroupPolicy": [
            {
                "action": "sagemaker:PutModelPackageGroupPolicy"
            }
        ],
        "SageMaker.RegisterDevices": [
            {
                "action": "sagemaker:RegisterDevices"
            }
        ],
        "SageMaker.RenderUiTemplate": [
            {
                "action": "sagemaker:RenderUiTemplate"
            }
        ],
        "SageMaker.Search": [
            {
                "action": "sagemaker:Search"
            }
        ],
        "SageMaker.StartMonitoringSchedule": [
            {
                "action": "sagemaker:StartMonitoringSchedule"
            }
        ],
        "SageMaker.StartNotebookInstance": [
            {
                "action": "sagemaker:StartNotebookInstance"
            }
        ],
        "SageMaker.StartPipelineExecution": [
            {
                "action": "sagemaker:StartPipelineExecution"
            }
        ],
        "SageMaker.StopAutoMLJob": [
            {
                "action": "sagemaker:StopAutoMLJob"
            }
        ],
        "SageMaker.StopCompilationJob": [
            {
                "action": "sagemaker:StopCompilationJob"
            }
        ],
        "SageMaker.StopEdgePackagingJob": [
            {
                "action": "sagemaker:StopEdgePackagingJob"
            }
        ],
        "SageMaker.StopHyperParameterTuningJob": [
            {
                "action": "sagemaker:StopHyperParameterTuningJob"
            }
        ],
        "SageMaker.StopLabelingJob": [
            {
                "action": "sagemaker:StopLabelingJob"
            }
        ],
        "SageMaker.StopMonitoringSchedule": [
            {
                "action": "sagemaker:StopMonitoringSchedule"
            }
        ],
        "SageMaker.StopNotebookInstance": [
            {
                "action": "sagemaker:StopNotebookInstance"
            }
        ],
        "SageMaker.StopPipelineExecution": [
            {
                "action": "sagemaker:StopPipelineExecution"
            }
        ],
        "SageMaker.StopProcessingJob": [
            {
                "action": "sagemaker:StopProcessingJob"
            }
        ],
        "SageMaker.StopTrainingJob": [
            {
                "action": "sagemaker:StopTrainingJob"
            }
        ],
        "SageMaker.StopTransformJob": [
            {
                "action": "sagemaker:StopTransformJob"
            }
        ],
        "SageMaker.UpdateAction": [
            {
                "action": "sagemaker:UpdateAction"
            }
        ],
        "SageMaker.UpdateAppImageConfig": [
            {
                "action": "sagemaker:UpdateAppImageConfig"
            }
        ],
        "SageMaker.UpdateArtifact": [
            {
                "action": "sagemaker:UpdateArtifact"
            }
        ],
        "SageMaker.UpdateCodeRepository": [
            {
                "action": "sagemaker:UpdateCodeRepository"
            }
        ],
        "SageMaker.UpdateContext": [
            {
                "action": "sagemaker:UpdateContext"
            }
        ],
        "SageMaker.UpdateDeviceFleet": [
            {
                "action": "sagemaker:UpdateDeviceFleet"
            }
        ],
        "SageMaker.UpdateDevices": [
            {
                "action": "sagemaker:UpdateDevices"
            }
        ],
        "SageMaker.UpdateDomain": [
            {
                "action": "sagemaker:UpdateDomain"
            }
        ],
        "SageMaker.UpdateEndpoint": [
            {
                "action": "sagemaker:UpdateEndpoint"
            }
        ],
        "SageMaker.UpdateEndpointWeightsAndCapacities": [
            {
                "action": "sagemaker:UpdateEndpointWeightsAndCapacities"
            }
        ],
        "SageMaker.UpdateExperiment": [
            {
                "action": "sagemaker:UpdateExperiment"
            }
        ],
        "SageMaker.UpdateImage": [
            {
                "action": "sagemaker:UpdateImage"
            }
        ],
        "SageMaker.UpdateModelPackage": [
            {
                "action": "sagemaker:UpdateModelPackage"
            }
        ],
        "SageMaker.UpdateMonitoringSchedule": [
            {
                "action": "sagemaker:UpdateMonitoringSchedule"
            }
        ],
        "SageMaker.UpdateNotebookInstance": [
            {
                "action": "sagemaker:UpdateNotebookInstance"
            }
        ],
        "SageMaker.UpdateNotebookInstanceLifecycleConfig": [
            {
                "action": "sagemaker:UpdateNotebookInstanceLifecycleConfig"
            }
        ],
        "SageMaker.UpdatePipeline": [
            {
                "action": "sagemaker:UpdatePipeline"
            }
        ],
        "SageMaker.UpdatePipelineExecution": [
            {
                "action": "sagemaker:UpdatePipelineExecution"
            }
        ],
        "SageMaker.UpdateTrainingJob": [
            {
                "action": "sagemaker:UpdateTrainingJob"
            }
        ],
        "SageMaker.UpdateTrial": [
            {
                "action": "sagemaker:UpdateTrial"
            }
        ],
        "SageMaker.UpdateTrialComponent": [
            {
                "action": "sagemaker:UpdateTrialComponent"
            }
        ],
        "SageMaker.UpdateUserProfile": [
            {
                "action": "sagemaker:UpdateUserProfile"
            }
        ],
        "SageMaker.UpdateWorkforce": [
            {
                "action": "sagemaker:UpdateWorkforce"
            }
        ],
        "SageMaker.UpdateWorkteam": [
            {
                "action": "sagemaker:UpdateWorkteam"
            }
        ],
        "Translate.CreateParallelData": [
            {
                "action": "translate:CreateParallelData"
            }
        ],
        "Translate.DeleteParallelData": [
            {
                "action": "translate:DeleteParallelData"
            }
        ],
        "Translate.DeleteTerminology": [
            {
                "action": "translate:DeleteTerminology"
            }
        ],
        "Translate.DescribeTextTranslationJob": [
            {
                "action": "translate:DescribeTextTranslationJob"
            }
        ],
        "Translate.GetParallelData": [
            {
                "action": "translate:GetParallelData"
            }
        ],
        "Translate.GetTerminology": [
            {
                "action": "translate:GetTerminology"
            }
        ],
        "Translate.ImportTerminology": [
            {
                "action": "translate:ImportTerminology"
            }
        ],
        "Translate.ListParallelData": [
            {
                "action": "translate:ListParallelData"
            }
        ],
        "Translate.ListTerminologies": [
            {
                "action": "translate:ListTerminologies"
            }
        ],
        "Translate.ListTextTranslationJobs": [
            {
                "action": "translate:ListTextTranslationJobs"
            }
        ],
        "Translate.StartTextTranslationJob": [
            {
                "action": "translate:StartTextTranslationJob"
            }
        ],
        "Translate.StopTextTranslationJob": [
            {
                "action": "translate:StopTextTranslationJob"
            }
        ],
        "Translate.TranslateText": [
            {
                "action": "translate:TranslateText"
            }
        ],
        "Translate.UpdateParallelData": [
            {
                "action": "translate:UpdateParallelData"
            }
        ],
        "ResourceGroups.CreateGroup": [
            {
                "action": "resource-groups:CreateGroup"
            }
        ],
        "ResourceGroups.DeleteGroup": [
            {
                "action": "resource-groups:DeleteGroup"
            }
        ],
        "ResourceGroups.GetGroup": [
            {
                "action": "resource-groups:GetGroup"
            }
        ],
        "ResourceGroups.GetGroupConfiguration": [
            {
                "action": "resource-groups:GetGroupConfiguration"
            }
        ],
        "ResourceGroups.GetGroupQuery": [
            {
                "action": "resource-groups:GetGroupQuery"
            }
        ],
        "ResourceGroups.GetTags": [
            {
                "action": "resource-groups:GetTags"
            }
        ],
        "ResourceGroups.GroupResources": [
            {
                "action": "resource-groups:GroupResources"
            }
        ],
        "ResourceGroups.ListGroupResources": [
            {
                "action": "resource-groups:ListGroupResources"
            }
        ],
        "ResourceGroups.ListGroups": [
            {
                "action": "resource-groups:ListGroups"
            }
        ],
        "ResourceGroups.SearchResources": [
            {
                "action": "resource-groups:SearchResources"
            }
        ],
        "ResourceGroups.Tag": [
            {
                "action": "resource-groups:Tag"
            }
        ],
        "ResourceGroups.UngroupResources": [
            {
                "action": "resource-groups:UngroupResources"
            }
        ],
        "ResourceGroups.Untag": [
            {
                "action": "resource-groups:Untag"
            }
        ],
        "ResourceGroups.UpdateGroup": [
            {
                "action": "resource-groups:UpdateGroup"
            }
        ],
        "ResourceGroups.UpdateGroupQuery": [
            {
                "action": "resource-groups:UpdateGroupQuery"
            }
        ],
        "AlexaForBusiness.ApproveSkill": [
            {
                "action": "a4b:ApproveSkill"
            }
        ],
        "AlexaForBusiness.AssociateContactWithAddressBook": [
            {
                "action": "a4b:AssociateContactWithAddressBook"
            }
        ],
        "AlexaForBusiness.AssociateDeviceWithRoom": [
            {
                "action": "a4b:AssociateDeviceWithRoom"
            }
        ],
        "AlexaForBusiness.AssociateSkillGroupWithRoom": [
            {
                "action": "a4b:AssociateSkillGroupWithRoom"
            }
        ],
        "AlexaForBusiness.AssociateSkillWithSkillGroup": [
            {
                "action": "a4b:AssociateSkillWithSkillGroup"
            }
        ],
        "AlexaForBusiness.AssociateSkillWithUsers": [
            {
                "action": "a4b:AssociateSkillWithUsers"
            }
        ],
        "AlexaForBusiness.CreateAddressBook": [
            {
                "action": "a4b:CreateAddressBook"
            }
        ],
        "AlexaForBusiness.CreateBusinessReportSchedule": [
            {
                "action": "a4b:CreateBusinessReportSchedule"
            }
        ],
        "AlexaForBusiness.CreateConferenceProvider": [
            {
                "action": "a4b:CreateConferenceProvider"
            }
        ],
        "AlexaForBusiness.CreateContact": [
            {
                "action": "a4b:CreateContact"
            }
        ],
        "AlexaForBusiness.CreateProfile": [
            {
                "action": "a4b:CreateProfile"
            }
        ],
        "AlexaForBusiness.CreateRoom": [
            {
                "action": "a4b:CreateRoom"
            }
        ],
        "AlexaForBusiness.CreateSkillGroup": [
            {
                "action": "a4b:CreateSkillGroup"
            }
        ],
        "AlexaForBusiness.CreateUser": [
            {
                "action": "a4b:CreateUser"
            }
        ],
        "AlexaForBusiness.DeleteAddressBook": [
            {
                "action": "a4b:DeleteAddressBook"
            }
        ],
        "AlexaForBusiness.DeleteBusinessReportSchedule": [
            {
                "action": "a4b:DeleteBusinessReportSchedule"
            }
        ],
        "AlexaForBusiness.DeleteConferenceProvider": [
            {
                "action": "a4b:DeleteConferenceProvider"
            }
        ],
        "AlexaForBusiness.DeleteContact": [
            {
                "action": "a4b:DeleteContact"
            }
        ],
        "AlexaForBusiness.DeleteDevice": [
            {
                "action": "a4b:DeleteDevice"
            }
        ],
        "AlexaForBusiness.DeleteProfile": [
            {
                "action": "a4b:DeleteProfile"
            }
        ],
        "AlexaForBusiness.DeleteRoom": [
            {
                "action": "a4b:DeleteRoom"
            }
        ],
        "AlexaForBusiness.DeleteRoomSkillParameter": [
            {
                "action": "a4b:DeleteRoomSkillParameter"
            }
        ],
        "AlexaForBusiness.DeleteSkillAuthorization": [
            {
                "action": "a4b:DeleteSkillAuthorization"
            }
        ],
        "AlexaForBusiness.DeleteSkillGroup": [
            {
                "action": "a4b:DeleteSkillGroup"
            }
        ],
        "AlexaForBusiness.DeleteUser": [
            {
                "action": "a4b:DeleteUser"
            }
        ],
        "AlexaForBusiness.DisassociateContactFromAddressBook": [
            {
                "action": "a4b:DisassociateContactFromAddressBook"
            }
        ],
        "AlexaForBusiness.DisassociateDeviceFromRoom": [
            {
                "action": "a4b:DisassociateDeviceFromRoom"
            }
        ],
        "AlexaForBusiness.DisassociateSkillFromSkillGroup": [
            {
                "action": "a4b:DisassociateSkillFromSkillGroup"
            }
        ],
        "AlexaForBusiness.DisassociateSkillFromUsers": [
            {
                "action": "a4b:DisassociateSkillFromUsers"
            }
        ],
        "AlexaForBusiness.DisassociateSkillGroupFromRoom": [
            {
                "action": "a4b:DisassociateSkillGroupFromRoom"
            }
        ],
        "AlexaForBusiness.ForgetSmartHomeAppliances": [
            {
                "action": "a4b:ForgetSmartHomeAppliances"
            }
        ],
        "AlexaForBusiness.GetAddressBook": [
            {
                "action": "a4b:GetAddressBook"
            }
        ],
        "AlexaForBusiness.GetConferencePreference": [
            {
                "action": "a4b:GetConferencePreference"
            }
        ],
        "AlexaForBusiness.GetConferenceProvider": [
            {
                "action": "a4b:GetConferenceProvider"
            }
        ],
        "AlexaForBusiness.GetContact": [
            {
                "action": "a4b:GetContact"
            }
        ],
        "AlexaForBusiness.GetDevice": [
            {
                "action": "a4b:GetDevice"
            }
        ],
        "AlexaForBusiness.GetNetworkProfile": [
            {
                "action": "a4b:GetNetworkProfile"
            }
        ],
        "AlexaForBusiness.GetProfile": [
            {
                "action": "a4b:GetProfile"
            }
        ],
        "AlexaForBusiness.GetRoom": [
            {
                "action": "a4b:GetRoom"
            }
        ],
        "AlexaForBusiness.GetRoomSkillParameter": [
            {
                "action": "a4b:GetRoomSkillParameter"
            }
        ],
        "AlexaForBusiness.GetSkillGroup": [
            {
                "action": "a4b:GetSkillGroup"
            }
        ],
        "AlexaForBusiness.ListBusinessReportSchedules": [
            {
                "action": "a4b:ListBusinessReportSchedules"
            }
        ],
        "AlexaForBusiness.ListConferenceProviders": [
            {
                "action": "a4b:ListConferenceProviders"
            }
        ],
        "AlexaForBusiness.ListDeviceEvents": [
            {
                "action": "a4b:ListDeviceEvents"
            }
        ],
        "AlexaForBusiness.ListSkills": [
            {
                "action": "a4b:ListSkills"
            }
        ],
        "AlexaForBusiness.ListSkillsStoreCategories": [
            {
                "action": "a4b:ListSkillsStoreCategories"
            }
        ],
        "AlexaForBusiness.ListSkillsStoreSkillsByCategory": [
            {
                "action": "a4b:ListSkillsStoreSkillsByCategory"
            }
        ],
        "AlexaForBusiness.ListSmartHomeAppliances": [
            {
                "action": "a4b:ListSmartHomeAppliances"
            }
        ],
        "AlexaForBusiness.ListTags": [
            {
                "action": "a4b:ListTags"
            }
        ],
        "AlexaForBusiness.PutConferencePreference": [
            {
                "action": "a4b:PutConferencePreference"
            }
        ],
        "AlexaForBusiness.PutRoomSkillParameter": [
            {
                "action": "a4b:PutRoomSkillParameter"
            }
        ],
        "AlexaForBusiness.PutSkillAuthorization": [
            {
                "action": "a4b:PutSkillAuthorization"
            }
        ],
        "AlexaForBusiness.RegisterAVSDevice": [
            {
                "action": "a4b:RegisterAVSDevice"
            }
        ],
        "AlexaForBusiness.RejectSkill": [
            {
                "action": "a4b:RejectSkill"
            }
        ],
        "AlexaForBusiness.ResolveRoom": [
            {
                "action": "a4b:ResolveRoom"
            }
        ],
        "AlexaForBusiness.RevokeInvitation": [
            {
                "action": "a4b:RevokeInvitation"
            }
        ],
        "AlexaForBusiness.SearchAddressBooks": [
            {
                "action": "a4b:SearchAddressBooks"
            }
        ],
        "AlexaForBusiness.SearchContacts": [
            {
                "action": "a4b:SearchContacts"
            }
        ],
        "AlexaForBusiness.SearchDevices": [
            {
                "action": "a4b:SearchDevices"
            }
        ],
        "AlexaForBusiness.SearchNetworkProfiles": [
            {
                "action": "a4b:SearchNetworkProfiles"
            }
        ],
        "AlexaForBusiness.SearchProfiles": [
            {
                "action": "a4b:SearchProfiles"
            }
        ],
        "AlexaForBusiness.SearchRooms": [
            {
                "action": "a4b:SearchRooms"
            }
        ],
        "AlexaForBusiness.SearchSkillGroups": [
            {
                "action": "a4b:SearchSkillGroups"
            }
        ],
        "AlexaForBusiness.SearchUsers": [
            {
                "action": "a4b:SearchUsers"
            }
        ],
        "AlexaForBusiness.SendInvitation": [
            {
                "action": "a4b:SendInvitation"
            }
        ],
        "AlexaForBusiness.StartDeviceSync": [
            {
                "action": "a4b:StartDeviceSync"
            }
        ],
        "AlexaForBusiness.StartSmartHomeApplianceDiscovery": [
            {
                "action": "a4b:StartSmartHomeApplianceDiscovery"
            }
        ],
        "AlexaForBusiness.TagResource": [
            {
                "action": "a4b:TagResource"
            }
        ],
        "AlexaForBusiness.UntagResource": [
            {
                "action": "a4b:UntagResource"
            }
        ],
        "AlexaForBusiness.UpdateAddressBook": [
            {
                "action": "a4b:UpdateAddressBook"
            }
        ],
        "AlexaForBusiness.UpdateBusinessReportSchedule": [
            {
                "action": "a4b:UpdateBusinessReportSchedule"
            }
        ],
        "AlexaForBusiness.UpdateConferenceProvider": [
            {
                "action": "a4b:UpdateConferenceProvider"
            }
        ],
        "AlexaForBusiness.UpdateContact": [
            {
                "action": "a4b:UpdateContact"
            }
        ],
        "AlexaForBusiness.UpdateDevice": [
            {
                "action": "a4b:UpdateDevice"
            }
        ],
        "AlexaForBusiness.UpdateProfile": [
            {
                "action": "a4b:UpdateProfile"
            }
        ],
        "AlexaForBusiness.UpdateRoom": [
            {
                "action": "a4b:UpdateRoom"
            }
        ],
        "AlexaForBusiness.UpdateSkillGroup": [
            {
                "action": "a4b:UpdateSkillGroup"
            }
        ],
        "Cloud9.CreateEnvironmentEC2": [
            {
                "action": "cloud9:CreateEnvironmentEC2"
            }
        ],
        "Cloud9.CreateEnvironmentMembership": [
            {
                "action": "cloud9:CreateEnvironmentMembership"
            }
        ],
        "Cloud9.DeleteEnvironment": [
            {
                "action": "cloud9:DeleteEnvironment"
            }
        ],
        "Cloud9.DeleteEnvironmentMembership": [
            {
                "action": "cloud9:DeleteEnvironmentMembership"
            }
        ],
        "Cloud9.DescribeEnvironmentMemberships": [
            {
                "action": "cloud9:DescribeEnvironmentMemberships"
            }
        ],
        "Cloud9.DescribeEnvironmentStatus": [
            {
                "action": "cloud9:DescribeEnvironmentStatus"
            }
        ],
        "Cloud9.DescribeEnvironments": [
            {
                "action": "cloud9:DescribeEnvironments"
            }
        ],
        "Cloud9.ListEnvironments": [
            {
                "action": "cloud9:ListEnvironments"
            }
        ],
        "Cloud9.ListTagsForResource": [
            {
                "action": "cloud9:ListTagsForResource"
            }
        ],
        "Cloud9.TagResource": [
            {
                "action": "cloud9:TagResource"
            }
        ],
        "Cloud9.UntagResource": [
            {
                "action": "cloud9:UntagResource"
            }
        ],
        "Cloud9.UpdateEnvironment": [
            {
                "action": "cloud9:UpdateEnvironment"
            }
        ],
        "Cloud9.UpdateEnvironmentMembership": [
            {
                "action": "cloud9:UpdateEnvironmentMembership"
            }
        ],
        "ServerlessApplicationRepository.CreateApplication": [
            {
                "action": "serverlessrepo:CreateApplication"
            }
        ],
        "ServerlessApplicationRepository.CreateApplicationVersion": [
            {
                "action": "serverlessrepo:CreateApplicationVersion"
            }
        ],
        "ServerlessApplicationRepository.CreateCloudFormationChangeSet": [
            {
                "action": "serverlessrepo:CreateCloudFormationChangeSet"
            }
        ],
        "ServerlessApplicationRepository.CreateCloudFormationTemplate": [
            {
                "action": "serverlessrepo:CreateCloudFormationTemplate"
            }
        ],
        "ServerlessApplicationRepository.DeleteApplication": [
            {
                "action": "serverlessrepo:DeleteApplication"
            }
        ],
        "ServerlessApplicationRepository.GetApplication": [
            {
                "action": "serverlessrepo:GetApplication"
            }
        ],
        "ServerlessApplicationRepository.GetApplicationPolicy": [
            {
                "action": "serverlessrepo:GetApplicationPolicy"
            }
        ],
        "ServerlessApplicationRepository.GetCloudFormationTemplate": [
            {
                "action": "serverlessrepo:GetCloudFormationTemplate"
            }
        ],
        "ServerlessApplicationRepository.ListApplicationDependencies": [
            {
                "action": "serverlessrepo:ListApplicationDependencies"
            }
        ],
        "ServerlessApplicationRepository.ListApplicationVersions": [
            {
                "action": "serverlessrepo:ListApplicationVersions"
            }
        ],
        "ServerlessApplicationRepository.ListApplications": [
            {
                "action": "serverlessrepo:ListApplications"
            }
        ],
        "ServerlessApplicationRepository.PutApplicationPolicy": [
            {
                "action": "serverlessrepo:PutApplicationPolicy"
            }
        ],
        "ServerlessApplicationRepository.UnshareApplication": [
            {
                "action": "serverlessrepo:UnshareApplication"
            }
        ],
        "ServerlessApplicationRepository.UpdateApplication": [
            {
                "action": "serverlessrepo:UpdateApplication"
            }
        ],
        "ServiceDiscovery.CreateHttpNamespace": [
            {
                "action": "servicediscovery:CreateHttpNamespace"
            }
        ],
        "ServiceDiscovery.CreatePrivateDnsNamespace": [
            {
                "action": "servicediscovery:CreatePrivateDnsNamespace"
            }
        ],
        "ServiceDiscovery.CreatePublicDnsNamespace": [
            {
                "action": "servicediscovery:CreatePublicDnsNamespace"
            }
        ],
        "ServiceDiscovery.CreateService": [
            {
                "action": "servicediscovery:CreateService"
            }
        ],
        "ServiceDiscovery.DeleteNamespace": [
            {
                "action": "servicediscovery:DeleteNamespace"
            }
        ],
        "ServiceDiscovery.DeleteService": [
            {
                "action": "servicediscovery:DeleteService"
            }
        ],
        "ServiceDiscovery.DeregisterInstance": [
            {
                "action": "servicediscovery:DeregisterInstance"
            }
        ],
        "ServiceDiscovery.DiscoverInstances": [
            {
                "action": "servicediscovery:DiscoverInstances"
            }
        ],
        "ServiceDiscovery.GetInstance": [
            {
                "action": "servicediscovery:GetInstance"
            }
        ],
        "ServiceDiscovery.GetInstancesHealthStatus": [
            {
                "action": "servicediscovery:GetInstancesHealthStatus"
            }
        ],
        "ServiceDiscovery.GetNamespace": [
            {
                "action": "servicediscovery:GetNamespace"
            }
        ],
        "ServiceDiscovery.GetOperation": [
            {
                "action": "servicediscovery:GetOperation"
            }
        ],
        "ServiceDiscovery.GetService": [
            {
                "action": "servicediscovery:GetService"
            }
        ],
        "ServiceDiscovery.ListInstances": [
            {
                "action": "servicediscovery:ListInstances"
            }
        ],
        "ServiceDiscovery.ListNamespaces": [
            {
                "action": "servicediscovery:ListNamespaces"
            }
        ],
        "ServiceDiscovery.ListOperations": [
            {
                "action": "servicediscovery:ListOperations"
            }
        ],
        "ServiceDiscovery.ListServices": [
            {
                "action": "servicediscovery:ListServices"
            }
        ],
        "ServiceDiscovery.ListTagsForResource": [
            {
                "action": "servicediscovery:ListTagsForResource"
            }
        ],
        "ServiceDiscovery.RegisterInstance": [
            {
                "action": "servicediscovery:RegisterInstance"
            }
        ],
        "ServiceDiscovery.TagResource": [
            {
                "action": "servicediscovery:TagResource"
            }
        ],
        "ServiceDiscovery.UntagResource": [
            {
                "action": "servicediscovery:UntagResource"
            }
        ],
        "ServiceDiscovery.UpdateInstanceCustomHealthStatus": [
            {
                "action": "servicediscovery:UpdateInstanceCustomHealthStatus"
            }
        ],
        "ServiceDiscovery.UpdateService": [
            {
                "action": "servicediscovery:UpdateService"
            }
        ],
        "WorkMail.AssociateDelegateToResource": [
            {
                "action": "workmail:AssociateDelegateToResource"
            }
        ],
        "WorkMail.AssociateMemberToGroup": [
            {
                "action": "workmail:AssociateMemberToGroup"
            }
        ],
        "WorkMail.CancelMailboxExportJob": [
            {
                "action": "workmail:CancelMailboxExportJob"
            }
        ],
        "WorkMail.CreateAlias": [
            {
                "action": "workmail:CreateAlias"
            }
        ],
        "WorkMail.CreateGroup": [
            {
                "action": "workmail:CreateGroup"
            }
        ],
        "WorkMail.CreateOrganization": [
            {
                "action": "workmail:CreateOrganization"
            }
        ],
        "WorkMail.CreateResource": [
            {
                "action": "workmail:CreateResource"
            }
        ],
        "WorkMail.CreateUser": [
            {
                "action": "workmail:CreateUser"
            }
        ],
        "WorkMail.DeleteAccessControlRule": [
            {
                "action": "workmail:DeleteAccessControlRule"
            }
        ],
        "WorkMail.DeleteAlias": [
            {
                "action": "workmail:DeleteAlias"
            }
        ],
        "WorkMail.DeleteGroup": [
            {
                "action": "workmail:DeleteGroup"
            }
        ],
        "WorkMail.DeleteMailboxPermissions": [
            {
                "action": "workmail:DeleteMailboxPermissions"
            }
        ],
        "WorkMail.DeleteOrganization": [
            {
                "action": "workmail:DeleteOrganization"
            }
        ],
        "WorkMail.DeleteResource": [
            {
                "action": "workmail:DeleteResource"
            }
        ],
        "WorkMail.DeleteRetentionPolicy": [
            {
                "action": "workmail:DeleteRetentionPolicy"
            }
        ],
        "WorkMail.DeleteUser": [
            {
                "action": "workmail:DeleteUser"
            }
        ],
        "WorkMail.DeregisterFromWorkMail": [
            {
                "action": "workmail:DeregisterFromWorkMail"
            }
        ],
        "WorkMail.DescribeGroup": [
            {
                "action": "workmail:DescribeGroup"
            }
        ],
        "WorkMail.DescribeMailboxExportJob": [
            {
                "action": "workmail:DescribeMailboxExportJob"
            }
        ],
        "WorkMail.DescribeOrganization": [
            {
                "action": "workmail:DescribeOrganization"
            }
        ],
        "WorkMail.DescribeResource": [
            {
                "action": "workmail:DescribeResource"
            }
        ],
        "WorkMail.DescribeUser": [
            {
                "action": "workmail:DescribeUser"
            }
        ],
        "WorkMail.DisassociateDelegateFromResource": [
            {
                "action": "workmail:DisassociateDelegateFromResource"
            }
        ],
        "WorkMail.DisassociateMemberFromGroup": [
            {
                "action": "workmail:DisassociateMemberFromGroup"
            }
        ],
        "WorkMail.GetAccessControlEffect": [
            {
                "action": "workmail:GetAccessControlEffect"
            }
        ],
        "WorkMail.GetDefaultRetentionPolicy": [
            {
                "action": "workmail:GetDefaultRetentionPolicy"
            }
        ],
        "WorkMail.GetMailboxDetails": [
            {
                "action": "workmail:GetMailboxDetails"
            }
        ],
        "WorkMail.ListAccessControlRules": [
            {
                "action": "workmail:ListAccessControlRules"
            }
        ],
        "WorkMail.ListAliases": [
            {
                "action": "workmail:ListAliases"
            }
        ],
        "WorkMail.ListGroupMembers": [
            {
                "action": "workmail:ListGroupMembers"
            }
        ],
        "WorkMail.ListGroups": [
            {
                "action": "workmail:ListGroups"
            }
        ],
        "WorkMail.ListMailboxExportJobs": [
            {
                "action": "workmail:ListMailboxExportJobs"
            }
        ],
        "WorkMail.ListMailboxPermissions": [
            {
                "action": "workmail:ListMailboxPermissions"
            }
        ],
        "WorkMail.ListOrganizations": [
            {
                "action": "workmail:ListOrganizations"
            }
        ],
        "WorkMail.ListResourceDelegates": [
            {
                "action": "workmail:ListResourceDelegates"
            }
        ],
        "WorkMail.ListResources": [
            {
                "action": "workmail:ListResources"
            }
        ],
        "WorkMail.ListTagsForResource": [
            {
                "action": "workmail:ListTagsForResource"
            }
        ],
        "WorkMail.ListUsers": [
            {
                "action": "workmail:ListUsers"
            }
        ],
        "WorkMail.PutAccessControlRule": [
            {
                "action": "workmail:PutAccessControlRule"
            }
        ],
        "WorkMail.PutMailboxPermissions": [
            {
                "action": "workmail:PutMailboxPermissions"
            }
        ],
        "WorkMail.PutRetentionPolicy": [
            {
                "action": "workmail:PutRetentionPolicy"
            }
        ],
        "WorkMail.RegisterToWorkMail": [
            {
                "action": "workmail:RegisterToWorkMail"
            }
        ],
        "WorkMail.ResetPassword": [
            {
                "action": "workmail:ResetPassword"
            }
        ],
        "WorkMail.StartMailboxExportJob": [
            {
                "action": "workmail:StartMailboxExportJob"
            }
        ],
        "WorkMail.TagResource": [
            {
                "action": "workmail:TagResource"
            }
        ],
        "WorkMail.UntagResource": [
            {
                "action": "workmail:UntagResource"
            }
        ],
        "WorkMail.UpdateMailboxQuota": [
            {
                "action": "workmail:UpdateMailboxQuota"
            }
        ],
        "WorkMail.UpdatePrimaryEmailAddress": [
            {
                "action": "workmail:UpdatePrimaryEmailAddress"
            }
        ],
        "WorkMail.UpdateResource": [
            {
                "action": "workmail:UpdateResource"
            }
        ],
        "AutoScalingPlans.CreateScalingPlan": [
            {
                "action": "autoscaling-plans:CreateScalingPlan"
            }
        ],
        "AutoScalingPlans.DeleteScalingPlan": [
            {
                "action": "autoscaling-plans:DeleteScalingPlan"
            }
        ],
        "AutoScalingPlans.DescribeScalingPlanResources": [
            {
                "action": "autoscaling-plans:DescribeScalingPlanResources"
            }
        ],
        "AutoScalingPlans.DescribeScalingPlans": [
            {
                "action": "autoscaling-plans:DescribeScalingPlans"
            }
        ],
        "AutoScalingPlans.GetScalingPlanResourceForecastData": [
            {
                "action": "autoscaling-plans:GetScalingPlanResourceForecastData"
            }
        ],
        "AutoScalingPlans.UpdateScalingPlan": [
            {
                "action": "autoscaling-plans:UpdateScalingPlan"
            }
        ],
        "TranscribeService.CreateLanguageModel": [
            {
                "action": "transcribe:CreateLanguageModel"
            }
        ],
        "TranscribeService.CreateMedicalVocabulary": [
            {
                "action": "transcribe:CreateMedicalVocabulary"
            }
        ],
        "TranscribeService.CreateVocabulary": [
            {
                "action": "transcribe:CreateVocabulary"
            }
        ],
        "TranscribeService.CreateVocabularyFilter": [
            {
                "action": "transcribe:CreateVocabularyFilter"
            }
        ],
        "TranscribeService.DeleteLanguageModel": [
            {
                "action": "transcribe:DeleteLanguageModel"
            }
        ],
        "TranscribeService.DeleteMedicalTranscriptionJob": [
            {
                "action": "transcribe:DeleteMedicalTranscriptionJob"
            }
        ],
        "TranscribeService.DeleteMedicalVocabulary": [
            {
                "action": "transcribe:DeleteMedicalVocabulary"
            }
        ],
        "TranscribeService.DeleteTranscriptionJob": [
            {
                "action": "transcribe:DeleteTranscriptionJob"
            }
        ],
        "TranscribeService.DeleteVocabulary": [
            {
                "action": "transcribe:DeleteVocabulary"
            }
        ],
        "TranscribeService.DeleteVocabularyFilter": [
            {
                "action": "transcribe:DeleteVocabularyFilter"
            }
        ],
        "TranscribeService.DescribeLanguageModel": [
            {
                "action": "transcribe:DescribeLanguageModel"
            }
        ],
        "TranscribeService.GetMedicalTranscriptionJob": [
            {
                "action": "transcribe:GetMedicalTranscriptionJob"
            }
        ],
        "TranscribeService.GetMedicalVocabulary": [
            {
                "action": "transcribe:GetMedicalVocabulary"
            }
        ],
        "TranscribeService.GetTranscriptionJob": [
            {
                "action": "transcribe:GetTranscriptionJob"
            }
        ],
        "TranscribeService.GetVocabulary": [
            {
                "action": "transcribe:GetVocabulary"
            }
        ],
        "TranscribeService.GetVocabularyFilter": [
            {
                "action": "transcribe:GetVocabularyFilter"
            }
        ],
        "TranscribeService.ListLanguageModels": [
            {
                "action": "transcribe:ListLanguageModels"
            }
        ],
        "TranscribeService.ListMedicalTranscriptionJobs": [
            {
                "action": "transcribe:ListMedicalTranscriptionJobs"
            }
        ],
        "TranscribeService.ListMedicalVocabularies": [
            {
                "action": "transcribe:ListMedicalVocabularies"
            }
        ],
        "TranscribeService.ListTranscriptionJobs": [
            {
                "action": "transcribe:ListTranscriptionJobs"
            }
        ],
        "TranscribeService.ListVocabularies": [
            {
                "action": "transcribe:ListVocabularies"
            }
        ],
        "TranscribeService.ListVocabularyFilters": [
            {
                "action": "transcribe:ListVocabularyFilters"
            }
        ],
        "TranscribeService.StartMedicalTranscriptionJob": [
            {
                "action": "transcribe:StartMedicalTranscriptionJob"
            }
        ],
        "TranscribeService.StartTranscriptionJob": [
            {
                "action": "transcribe:StartTranscriptionJob"
            }
        ],
        "TranscribeService.UpdateMedicalVocabulary": [
            {
                "action": "transcribe:UpdateMedicalVocabulary"
            }
        ],
        "TranscribeService.UpdateVocabulary": [
            {
                "action": "transcribe:UpdateVocabulary"
            }
        ],
        "TranscribeService.UpdateVocabularyFilter": [
            {
                "action": "transcribe:UpdateVocabularyFilter"
            }
        ],
        "Connect.AssociateApprovedOrigin": [
            {
                "action": "connect:AssociateApprovedOrigin"
            }
        ],
        "Connect.AssociateInstanceStorageConfig": [
            {
                "action": "connect:AssociateInstanceStorageConfig"
            }
        ],
        "Connect.AssociateLambdaFunction": [
            {
                "action": "connect:AssociateLambdaFunction"
            }
        ],
        "Connect.AssociateLexBot": [
            {
                "action": "connect:AssociateLexBot"
            }
        ],
        "Connect.AssociateQueueQuickConnects": [
            {
                "action": "connect:AssociateQueueQuickConnects"
            }
        ],
        "Connect.AssociateRoutingProfileQueues": [
            {
                "action": "connect:AssociateRoutingProfileQueues"
            }
        ],
        "Connect.AssociateSecurityKey": [
            {
                "action": "connect:AssociateSecurityKey"
            }
        ],
        "Connect.CreateContactFlow": [
            {
                "action": "connect:CreateContactFlow"
            }
        ],
        "Connect.CreateInstance": [
            {
                "action": "connect:CreateInstance"
            }
        ],
        "Connect.CreateQueue": [
            {
                "action": "connect:CreateQueue"
            }
        ],
        "Connect.CreateQuickConnect": [
            {
                "action": "connect:CreateQuickConnect"
            }
        ],
        "Connect.CreateRoutingProfile": [
            {
                "action": "connect:CreateRoutingProfile"
            }
        ],
        "Connect.CreateUser": [
            {
                "action": "connect:CreateUser"
            }
        ],
        "Connect.CreateUserHierarchyGroup": [
            {
                "action": "connect:CreateUserHierarchyGroup"
            }
        ],
        "Connect.DeleteInstance": [
            {
                "action": "connect:DeleteInstance"
            }
        ],
        "Connect.DeleteQuickConnect": [
            {
                "action": "connect:DeleteQuickConnect"
            }
        ],
        "Connect.DeleteUser": [
            {
                "action": "connect:DeleteUser"
            }
        ],
        "Connect.DeleteUserHierarchyGroup": [
            {
                "action": "connect:DeleteUserHierarchyGroup"
            }
        ],
        "Connect.DescribeContactFlow": [
            {
                "action": "connect:DescribeContactFlow"
            }
        ],
        "Connect.DescribeHoursOfOperation": [
            {
                "action": "connect:DescribeHoursOfOperation"
            }
        ],
        "Connect.DescribeInstance": [
            {
                "action": "connect:DescribeInstance"
            }
        ],
        "Connect.DescribeInstanceAttribute": [
            {
                "action": "connect:DescribeInstanceAttribute"
            }
        ],
        "Connect.DescribeInstanceStorageConfig": [
            {
                "action": "connect:DescribeInstanceStorageConfig"
            }
        ],
        "Connect.DescribeQueue": [
            {
                "action": "connect:DescribeQueue"
            }
        ],
        "Connect.DescribeQuickConnect": [
            {
                "action": "connect:DescribeQuickConnect"
            }
        ],
        "Connect.DescribeRoutingProfile": [
            {
                "action": "connect:DescribeRoutingProfile"
            }
        ],
        "Connect.DescribeUser": [
            {
                "action": "connect:DescribeUser"
            }
        ],
        "Connect.DescribeUserHierarchyGroup": [
            {
                "action": "connect:DescribeUserHierarchyGroup"
            }
        ],
        "Connect.DescribeUserHierarchyStructure": [
            {
                "action": "connect:DescribeUserHierarchyStructure"
            }
        ],
        "Connect.DisassociateApprovedOrigin": [
            {
                "action": "connect:DisassociateApprovedOrigin"
            }
        ],
        "Connect.DisassociateInstanceStorageConfig": [
            {
                "action": "connect:DisassociateInstanceStorageConfig"
            }
        ],
        "Connect.DisassociateLambdaFunction": [
            {
                "action": "connect:DisassociateLambdaFunction"
            }
        ],
        "Connect.DisassociateLexBot": [
            {
                "action": "connect:DisassociateLexBot"
            }
        ],
        "Connect.DisassociateQueueQuickConnects": [
            {
                "action": "connect:DisassociateQueueQuickConnects"
            }
        ],
        "Connect.DisassociateRoutingProfileQueues": [
            {
                "action": "connect:DisassociateRoutingProfileQueues"
            }
        ],
        "Connect.DisassociateSecurityKey": [
            {
                "action": "connect:DisassociateSecurityKey"
            }
        ],
        "Connect.GetContactAttributes": [
            {
                "action": "connect:GetContactAttributes"
            }
        ],
        "Connect.GetCurrentMetricData": [
            {
                "action": "connect:GetCurrentMetricData"
            }
        ],
        "Connect.GetFederationToken": [
            {
                "action": "connect:GetFederationToken"
            }
        ],
        "Connect.GetMetricData": [
            {
                "action": "connect:GetMetricData"
            }
        ],
        "Connect.ListApprovedOrigins": [
            {
                "action": "connect:ListApprovedOrigins"
            }
        ],
        "Connect.ListContactFlows": [
            {
                "action": "connect:ListContactFlows"
            }
        ],
        "Connect.ListHoursOfOperations": [
            {
                "action": "connect:ListHoursOfOperations"
            }
        ],
        "Connect.ListInstanceAttributes": [
            {
                "action": "connect:ListInstanceAttributes"
            }
        ],
        "Connect.ListInstanceStorageConfigs": [
            {
                "action": "connect:ListInstanceStorageConfigs"
            }
        ],
        "Connect.ListInstances": [
            {
                "action": "connect:ListInstances"
            }
        ],
        "Connect.ListLambdaFunctions": [
            {
                "action": "connect:ListLambdaFunctions"
            }
        ],
        "Connect.ListLexBots": [
            {
                "action": "connect:ListLexBots"
            }
        ],
        "Connect.ListPhoneNumbers": [
            {
                "action": "connect:ListPhoneNumbers"
            }
        ],
        "Connect.ListPrompts": [
            {
                "action": "connect:ListPrompts"
            }
        ],
        "Connect.ListQueueQuickConnects": [
            {
                "action": "connect:ListQueueQuickConnects"
            }
        ],
        "Connect.ListQueues": [
            {
                "action": "connect:ListQueues"
            }
        ],
        "Connect.ListQuickConnects": [
            {
                "action": "connect:ListQuickConnects"
            }
        ],
        "Connect.ListRoutingProfileQueues": [
            {
                "action": "connect:ListRoutingProfileQueues"
            }
        ],
        "Connect.ListRoutingProfiles": [
            {
                "action": "connect:ListRoutingProfiles"
            }
        ],
        "Connect.ListSecurityKeys": [
            {
                "action": "connect:ListSecurityKeys"
            }
        ],
        "Connect.ListSecurityProfiles": [
            {
                "action": "connect:ListSecurityProfiles"
            }
        ],
        "Connect.ListTagsForResource": [
            {
                "action": "connect:ListTagsForResource"
            }
        ],
        "Connect.ListUserHierarchyGroups": [
            {
                "action": "connect:ListUserHierarchyGroups"
            }
        ],
        "Connect.ListUsers": [
            {
                "action": "connect:ListUsers"
            }
        ],
        "Connect.ResumeContactRecording": [
            {
                "action": "connect:ResumeContactRecording"
            }
        ],
        "Connect.StartChatContact": [
            {
                "action": "connect:StartChatContact"
            }
        ],
        "Connect.StartContactRecording": [
            {
                "action": "connect:StartContactRecording"
            }
        ],
        "Connect.StartOutboundVoiceContact": [
            {
                "action": "connect:StartOutboundVoiceContact"
            }
        ],
        "Connect.StartTaskContact": [
            {
                "action": "connect:StartTaskContact"
            }
        ],
        "Connect.StopContact": [
            {
                "action": "connect:StopContact"
            }
        ],
        "Connect.StopContactRecording": [
            {
                "action": "connect:StopContactRecording"
            }
        ],
        "Connect.SuspendContactRecording": [
            {
                "action": "connect:SuspendContactRecording"
            }
        ],
        "Connect.TagResource": [
            {
                "action": "connect:TagResource"
            }
        ],
        "Connect.UntagResource": [
            {
                "action": "connect:UntagResource"
            }
        ],
        "Connect.UpdateContactAttributes": [
            {
                "action": "connect:UpdateContactAttributes"
            }
        ],
        "Connect.UpdateContactFlowContent": [
            {
                "action": "connect:UpdateContactFlowContent"
            }
        ],
        "Connect.UpdateContactFlowName": [
            {
                "action": "connect:UpdateContactFlowName"
            }
        ],
        "Connect.UpdateInstanceAttribute": [
            {
                "action": "connect:UpdateInstanceAttribute"
            }
        ],
        "Connect.UpdateInstanceStorageConfig": [
            {
                "action": "connect:UpdateInstanceStorageConfig"
            }
        ],
        "Connect.UpdateQueueHoursOfOperation": [
            {
                "action": "connect:UpdateQueueHoursOfOperation"
            }
        ],
        "Connect.UpdateQueueMaxContacts": [
            {
                "action": "connect:UpdateQueueMaxContacts"
            }
        ],
        "Connect.UpdateQueueName": [
            {
                "action": "connect:UpdateQueueName"
            }
        ],
        "Connect.UpdateQueueOutboundCallerConfig": [
            {
                "action": "connect:UpdateQueueOutboundCallerConfig"
            }
        ],
        "Connect.UpdateQueueStatus": [
            {
                "action": "connect:UpdateQueueStatus"
            }
        ],
        "Connect.UpdateQuickConnectConfig": [
            {
                "action": "connect:UpdateQuickConnectConfig"
            }
        ],
        "Connect.UpdateQuickConnectName": [
            {
                "action": "connect:UpdateQuickConnectName"
            }
        ],
        "Connect.UpdateRoutingProfileConcurrency": [
            {
                "action": "connect:UpdateRoutingProfileConcurrency"
            }
        ],
        "Connect.UpdateRoutingProfileDefaultOutboundQueue": [
            {
                "action": "connect:UpdateRoutingProfileDefaultOutboundQueue"
            }
        ],
        "Connect.UpdateRoutingProfileName": [
            {
                "action": "connect:UpdateRoutingProfileName"
            }
        ],
        "Connect.UpdateRoutingProfileQueues": [
            {
                "action": "connect:UpdateRoutingProfileQueues"
            }
        ],
        "Connect.UpdateUserHierarchy": [
            {
                "action": "connect:UpdateUserHierarchy"
            }
        ],
        "Connect.UpdateUserHierarchyGroupName": [
            {
                "action": "connect:UpdateUserHierarchyGroupName"
            }
        ],
        "Connect.UpdateUserHierarchyStructure": [
            {
                "action": "connect:UpdateUserHierarchyStructure"
            }
        ],
        "Connect.UpdateUserIdentityInfo": [
            {
                "action": "connect:UpdateUserIdentityInfo"
            }
        ],
        "Connect.UpdateUserPhoneConfig": [
            {
                "action": "connect:UpdateUserPhoneConfig"
            }
        ],
        "Connect.UpdateUserRoutingProfile": [
            {
                "action": "connect:UpdateUserRoutingProfile"
            }
        ],
        "Connect.UpdateUserSecurityProfiles": [
            {
                "action": "connect:UpdateUserSecurityProfiles"
            }
        ],
        "ACMPCA.CreateCertificateAuthority": [
            {
                "action": "acm-pca:CreateCertificateAuthority"
            }
        ],
        "ACMPCA.CreateCertificateAuthorityAuditReport": [
            {
                "action": "acm-pca:CreateCertificateAuthorityAuditReport"
            }
        ],
        "ACMPCA.CreatePermission": [
            {
                "action": "acm-pca:CreatePermission"
            }
        ],
        "ACMPCA.DeleteCertificateAuthority": [
            {
                "action": "acm-pca:DeleteCertificateAuthority"
            }
        ],
        "ACMPCA.DeletePermission": [
            {
                "action": "acm-pca:DeletePermission"
            }
        ],
        "ACMPCA.DeletePolicy": [
            {
                "action": "acm-pca:DeletePolicy"
            }
        ],
        "ACMPCA.DescribeCertificateAuthority": [
            {
                "action": "acm-pca:DescribeCertificateAuthority"
            }
        ],
        "ACMPCA.DescribeCertificateAuthorityAuditReport": [
            {
                "action": "acm-pca:DescribeCertificateAuthorityAuditReport"
            }
        ],
        "ACMPCA.GetCertificate": [
            {
                "action": "acm-pca:GetCertificate"
            }
        ],
        "ACMPCA.GetCertificateAuthorityCertificate": [
            {
                "action": "acm-pca:GetCertificateAuthorityCertificate"
            }
        ],
        "ACMPCA.GetCertificateAuthorityCsr": [
            {
                "action": "acm-pca:GetCertificateAuthorityCsr"
            }
        ],
        "ACMPCA.GetPolicy": [
            {
                "action": "acm-pca:GetPolicy"
            }
        ],
        "ACMPCA.ImportCertificateAuthorityCertificate": [
            {
                "action": "acm-pca:ImportCertificateAuthorityCertificate"
            }
        ],
        "ACMPCA.IssueCertificate": [
            {
                "action": "acm-pca:IssueCertificate"
            }
        ],
        "ACMPCA.ListCertificateAuthorities": [
            {
                "action": "acm-pca:ListCertificateAuthorities"
            }
        ],
        "ACMPCA.ListPermissions": [
            {
                "action": "acm-pca:ListPermissions"
            }
        ],
        "ACMPCA.ListTags": [
            {
                "action": "acm-pca:ListTags"
            }
        ],
        "ACMPCA.PutPolicy": [
            {
                "action": "acm-pca:PutPolicy"
            }
        ],
        "ACMPCA.RestoreCertificateAuthority": [
            {
                "action": "acm-pca:RestoreCertificateAuthority"
            }
        ],
        "ACMPCA.RevokeCertificate": [
            {
                "action": "acm-pca:RevokeCertificate"
            }
        ],
        "ACMPCA.TagCertificateAuthority": [
            {
                "action": "acm-pca:TagCertificateAuthority"
            }
        ],
        "ACMPCA.UntagCertificateAuthority": [
            {
                "action": "acm-pca:UntagCertificateAuthority"
            }
        ],
        "ACMPCA.UpdateCertificateAuthority": [
            {
                "action": "acm-pca:UpdateCertificateAuthority"
            }
        ],
        "FMS.AssociateAdminAccount": [
            {
                "action": "fms:AssociateAdminAccount"
            }
        ],
        "FMS.DeleteAppsList": [
            {
                "action": "fms:DeleteAppsList"
            }
        ],
        "FMS.DeleteNotificationChannel": [
            {
                "action": "fms:DeleteNotificationChannel"
            }
        ],
        "FMS.DeletePolicy": [
            {
                "action": "fms:DeletePolicy"
            }
        ],
        "FMS.DeleteProtocolsList": [
            {
                "action": "fms:DeleteProtocolsList"
            }
        ],
        "FMS.DisassociateAdminAccount": [
            {
                "action": "fms:DisassociateAdminAccount"
            }
        ],
        "FMS.GetAdminAccount": [
            {
                "action": "fms:GetAdminAccount"
            }
        ],
        "FMS.GetAppsList": [
            {
                "action": "fms:GetAppsList"
            }
        ],
        "FMS.GetComplianceDetail": [
            {
                "action": "fms:GetComplianceDetail"
            }
        ],
        "FMS.GetNotificationChannel": [
            {
                "action": "fms:GetNotificationChannel"
            }
        ],
        "FMS.GetPolicy": [
            {
                "action": "fms:GetPolicy"
            }
        ],
        "FMS.GetProtectionStatus": [
            {
                "action": "fms:GetProtectionStatus"
            }
        ],
        "FMS.GetProtocolsList": [
            {
                "action": "fms:GetProtocolsList"
            }
        ],
        "FMS.GetViolationDetails": [
            {
                "action": "fms:GetViolationDetails"
            }
        ],
        "FMS.ListAppsLists": [
            {
                "action": "fms:ListAppsLists"
            }
        ],
        "FMS.ListComplianceStatus": [
            {
                "action": "fms:ListComplianceStatus"
            }
        ],
        "FMS.ListMemberAccounts": [
            {
                "action": "fms:ListMemberAccounts"
            }
        ],
        "FMS.ListPolicies": [
            {
                "action": "fms:ListPolicies"
            }
        ],
        "FMS.ListProtocolsLists": [
            {
                "action": "fms:ListProtocolsLists"
            }
        ],
        "FMS.ListTagsForResource": [
            {
                "action": "fms:ListTagsForResource"
            }
        ],
        "FMS.PutAppsList": [
            {
                "action": "fms:PutAppsList"
            }
        ],
        "FMS.PutNotificationChannel": [
            {
                "action": "fms:PutNotificationChannel"
            }
        ],
        "FMS.PutPolicy": [
            {
                "action": "fms:PutPolicy"
            }
        ],
        "FMS.PutProtocolsList": [
            {
                "action": "fms:PutProtocolsList"
            }
        ],
        "FMS.TagResource": [
            {
                "action": "fms:TagResource"
            }
        ],
        "FMS.UntagResource": [
            {
                "action": "fms:UntagResource"
            }
        ],
        "SecretsManager.CancelRotateSecret": [
            {
                "action": "secretsmanager:CancelRotateSecret"
            }
        ],
        "SecretsManager.CreateSecret": [
            {
                "action": "secretsmanager:CreateSecret"
            }
        ],
        "SecretsManager.DeleteResourcePolicy": [
            {
                "action": "secretsmanager:DeleteResourcePolicy"
            }
        ],
        "SecretsManager.DeleteSecret": [
            {
                "action": "secretsmanager:DeleteSecret"
            }
        ],
        "SecretsManager.DescribeSecret": [
            {
                "action": "secretsmanager:DescribeSecret"
            }
        ],
        "SecretsManager.GetRandomPassword": [
            {
                "action": "secretsmanager:GetRandomPassword"
            }
        ],
        "SecretsManager.GetResourcePolicy": [
            {
                "action": "secretsmanager:GetResourcePolicy"
            }
        ],
        "SecretsManager.GetSecretValue": [
            {
                "action": "secretsmanager:GetSecretValue"
            }
        ],
        "SecretsManager.ListSecretVersionIds": [
            {
                "action": "secretsmanager:ListSecretVersionIds"
            }
        ],
        "SecretsManager.ListSecrets": [
            {
                "action": "secretsmanager:ListSecrets"
            }
        ],
        "SecretsManager.PutResourcePolicy": [
            {
                "action": "secretsmanager:PutResourcePolicy"
            }
        ],
        "SecretsManager.PutSecretValue": [
            {
                "action": "secretsmanager:PutSecretValue"
            }
        ],
        "SecretsManager.RestoreSecret": [
            {
                "action": "secretsmanager:RestoreSecret"
            }
        ],
        "SecretsManager.RotateSecret": [
            {
                "action": "secretsmanager:RotateSecret"
            }
        ],
        "SecretsManager.TagResource": [
            {
                "action": "secretsmanager:TagResource"
            }
        ],
        "SecretsManager.UntagResource": [
            {
                "action": "secretsmanager:UntagResource"
            }
        ],
        "SecretsManager.UpdateSecret": [
            {
                "action": "secretsmanager:UpdateSecret"
            }
        ],
        "SecretsManager.UpdateSecretVersionStage": [
            {
                "action": "secretsmanager:UpdateSecretVersionStage"
            }
        ],
        "SecretsManager.ValidateResourcePolicy": [
            {
                "action": "secretsmanager:ValidateResourcePolicy"
            }
        ],
        "IoTAnalytics.BatchPutMessage": [
            {
                "action": "iotanalytics:BatchPutMessage"
            }
        ],
        "IoTAnalytics.CancelPipelineReprocessing": [
            {
                "action": "iotanalytics:CancelPipelineReprocessing"
            }
        ],
        "IoTAnalytics.CreateChannel": [
            {
                "action": "iotanalytics:CreateChannel"
            }
        ],
        "IoTAnalytics.CreateDataset": [
            {
                "action": "iotanalytics:CreateDataset"
            }
        ],
        "IoTAnalytics.CreateDatasetContent": [
            {
                "action": "iotanalytics:CreateDatasetContent"
            }
        ],
        "IoTAnalytics.CreateDatastore": [
            {
                "action": "iotanalytics:CreateDatastore"
            }
        ],
        "IoTAnalytics.CreatePipeline": [
            {
                "action": "iotanalytics:CreatePipeline"
            }
        ],
        "IoTAnalytics.DeleteChannel": [
            {
                "action": "iotanalytics:DeleteChannel"
            }
        ],
        "IoTAnalytics.DeleteDataset": [
            {
                "action": "iotanalytics:DeleteDataset"
            }
        ],
        "IoTAnalytics.DeleteDatasetContent": [
            {
                "action": "iotanalytics:DeleteDatasetContent"
            }
        ],
        "IoTAnalytics.DeleteDatastore": [
            {
                "action": "iotanalytics:DeleteDatastore"
            }
        ],
        "IoTAnalytics.DeletePipeline": [
            {
                "action": "iotanalytics:DeletePipeline"
            }
        ],
        "IoTAnalytics.DescribeChannel": [
            {
                "action": "iotanalytics:DescribeChannel"
            }
        ],
        "IoTAnalytics.DescribeDataset": [
            {
                "action": "iotanalytics:DescribeDataset"
            }
        ],
        "IoTAnalytics.DescribeDatastore": [
            {
                "action": "iotanalytics:DescribeDatastore"
            }
        ],
        "IoTAnalytics.DescribeLoggingOptions": [
            {
                "action": "iotanalytics:DescribeLoggingOptions"
            }
        ],
        "IoTAnalytics.DescribePipeline": [
            {
                "action": "iotanalytics:DescribePipeline"
            }
        ],
        "IoTAnalytics.GetDatasetContent": [
            {
                "action": "iotanalytics:GetDatasetContent"
            }
        ],
        "IoTAnalytics.ListChannels": [
            {
                "action": "iotanalytics:ListChannels"
            }
        ],
        "IoTAnalytics.ListDatasets": [
            {
                "action": "iotanalytics:ListDatasets"
            }
        ],
        "IoTAnalytics.ListDatastores": [
            {
                "action": "iotanalytics:ListDatastores"
            }
        ],
        "IoTAnalytics.ListPipelines": [
            {
                "action": "iotanalytics:ListPipelines"
            }
        ],
        "IoTAnalytics.ListTagsForResource": [
            {
                "action": "iotanalytics:ListTagsForResource"
            }
        ],
        "IoTAnalytics.PutLoggingOptions": [
            {
                "action": "iotanalytics:PutLoggingOptions"
            }
        ],
        "IoTAnalytics.RunPipelineActivity": [
            {
                "action": "iotanalytics:RunPipelineActivity"
            }
        ],
        "IoTAnalytics.SampleChannelData": [
            {
                "action": "iotanalytics:SampleChannelData"
            }
        ],
        "IoTAnalytics.StartPipelineReprocessing": [
            {
                "action": "iotanalytics:StartPipelineReprocessing"
            }
        ],
        "IoTAnalytics.TagResource": [
            {
                "action": "iotanalytics:TagResource"
            }
        ],
        "IoTAnalytics.UntagResource": [
            {
                "action": "iotanalytics:UntagResource"
            }
        ],
        "IoTAnalytics.UpdateChannel": [
            {
                "action": "iotanalytics:UpdateChannel"
            }
        ],
        "IoTAnalytics.UpdateDataset": [
            {
                "action": "iotanalytics:UpdateDataset"
            }
        ],
        "IoTAnalytics.UpdateDatastore": [
            {
                "action": "iotanalytics:UpdateDatastore"
            }
        ],
        "IoTAnalytics.UpdatePipeline": [
            {
                "action": "iotanalytics:UpdatePipeline"
            }
        ],
        "IoT1ClickDevicesService.ClaimDevicesByClaimCode": [
            {
                "action": "iot1click:ClaimDevicesByClaimCode"
            }
        ],
        "IoT1ClickDevicesService.DescribeDevice": [
            {
                "action": "iot1click:DescribeDevice"
            }
        ],
        "IoT1ClickDevicesService.FinalizeDeviceClaim": [
            {
                "action": "iot1click:FinalizeDeviceClaim"
            }
        ],
        "IoT1ClickDevicesService.GetDeviceMethods": [
            {
                "action": "iot1click:GetDeviceMethods"
            }
        ],
        "IoT1ClickDevicesService.InitiateDeviceClaim": [
            {
                "action": "iot1click:InitiateDeviceClaim"
            }
        ],
        "IoT1ClickDevicesService.InvokeDeviceMethod": [
            {
                "action": "iot1click:InvokeDeviceMethod"
            }
        ],
        "IoT1ClickDevicesService.ListDeviceEvents": [
            {
                "action": "iot1click:ListDeviceEvents"
            }
        ],
        "IoT1ClickDevicesService.ListDevices": [
            {
                "action": "iot1click:ListDevices"
            }
        ],
        "IoT1ClickDevicesService.ListTagsForResource": [
            {
                "action": "iot1click:ListTagsForResource"
            }
        ],
        "IoT1ClickDevicesService.TagResource": [
            {
                "action": "iot1click:TagResource"
            }
        ],
        "IoT1ClickDevicesService.UnclaimDevice": [
            {
                "action": "iot1click:UnclaimDevice"
            }
        ],
        "IoT1ClickDevicesService.UntagResource": [
            {
                "action": "iot1click:UntagResource"
            }
        ],
        "IoT1ClickDevicesService.UpdateDeviceState": [
            {
                "action": "iot1click:UpdateDeviceState"
            }
        ],
        "IoT1ClickProjects.AssociateDeviceWithPlacement": [
            {
                "action": "iot1click:AssociateDeviceWithPlacement"
            }
        ],
        "IoT1ClickProjects.CreatePlacement": [
            {
                "action": "iot1click:CreatePlacement"
            }
        ],
        "IoT1ClickProjects.CreateProject": [
            {
                "action": "iot1click:CreateProject"
            }
        ],
        "IoT1ClickProjects.DeletePlacement": [
            {
                "action": "iot1click:DeletePlacement"
            }
        ],
        "IoT1ClickProjects.DeleteProject": [
            {
                "action": "iot1click:DeleteProject"
            }
        ],
        "IoT1ClickProjects.DescribePlacement": [
            {
                "action": "iot1click:DescribePlacement"
            }
        ],
        "IoT1ClickProjects.DescribeProject": [
            {
                "action": "iot1click:DescribeProject"
            }
        ],
        "IoT1ClickProjects.DisassociateDeviceFromPlacement": [
            {
                "action": "iot1click:DisassociateDeviceFromPlacement"
            }
        ],
        "IoT1ClickProjects.GetDevicesInPlacement": [
            {
                "action": "iot1click:GetDevicesInPlacement"
            }
        ],
        "IoT1ClickProjects.ListPlacements": [
            {
                "action": "iot1click:ListPlacements"
            }
        ],
        "IoT1ClickProjects.ListProjects": [
            {
                "action": "iot1click:ListProjects"
            }
        ],
        "IoT1ClickProjects.ListTagsForResource": [
            {
                "action": "iot1click:ListTagsForResource"
            }
        ],
        "IoT1ClickProjects.TagResource": [
            {
                "action": "iot1click:TagResource"
            }
        ],
        "IoT1ClickProjects.UntagResource": [
            {
                "action": "iot1click:UntagResource"
            }
        ],
        "IoT1ClickProjects.UpdatePlacement": [
            {
                "action": "iot1click:UpdatePlacement"
            }
        ],
        "IoT1ClickProjects.UpdateProject": [
            {
                "action": "iot1click:UpdateProject"
            }
        ],
        "PI.DescribeDimensionKeys": [
            {
                "action": "pi:DescribeDimensionKeys"
            }
        ],
        "PI.GetResourceMetrics": [
            {
                "action": "pi:GetResourceMetrics"
            }
        ],
        "Neptune.AddRoleToDBCluster": [
            {
                "action": "rds:AddRoleToDBCluster"
            }
        ],
        "Neptune.AddSourceIdentifierToSubscription": [
            {
                "action": "rds:AddSourceIdentifierToSubscription"
            }
        ],
        "Neptune.AddTagsToResource": [
            {
                "action": "rds:AddTagsToResource"
            }
        ],
        "Neptune.ApplyPendingMaintenanceAction": [
            {
                "action": "rds:ApplyPendingMaintenanceAction"
            }
        ],
        "Neptune.CopyDBClusterParameterGroup": [
            {
                "action": "rds:CopyDBClusterParameterGroup"
            }
        ],
        "Neptune.CopyDBClusterSnapshot": [
            {
                "action": "rds:CopyDBClusterSnapshot"
            }
        ],
        "Neptune.CopyDBParameterGroup": [
            {
                "action": "rds:CopyDBParameterGroup"
            }
        ],
        "Neptune.CreateDBCluster": [
            {
                "action": "rds:CreateDBCluster"
            }
        ],
        "Neptune.CreateDBClusterEndpoint": [
            {
                "action": "rds:CreateDBClusterEndpoint"
            }
        ],
        "Neptune.CreateDBClusterParameterGroup": [
            {
                "action": "rds:CreateDBClusterParameterGroup"
            }
        ],
        "Neptune.CreateDBClusterSnapshot": [
            {
                "action": "rds:CreateDBClusterSnapshot"
            }
        ],
        "Neptune.CreateDBInstance": [
            {
                "action": "rds:CreateDBInstance"
            }
        ],
        "Neptune.CreateDBParameterGroup": [
            {
                "action": "rds:CreateDBParameterGroup"
            }
        ],
        "Neptune.CreateDBSubnetGroup": [
            {
                "action": "rds:CreateDBSubnetGroup"
            }
        ],
        "Neptune.CreateEventSubscription": [
            {
                "action": "rds:CreateEventSubscription"
            }
        ],
        "Neptune.DeleteDBCluster": [
            {
                "action": "rds:DeleteDBCluster"
            }
        ],
        "Neptune.DeleteDBClusterEndpoint": [
            {
                "action": "rds:DeleteDBClusterEndpoint"
            }
        ],
        "Neptune.DeleteDBClusterParameterGroup": [
            {
                "action": "rds:DeleteDBClusterParameterGroup"
            }
        ],
        "Neptune.DeleteDBClusterSnapshot": [
            {
                "action": "rds:DeleteDBClusterSnapshot"
            }
        ],
        "Neptune.DeleteDBInstance": [
            {
                "action": "rds:DeleteDBInstance"
            }
        ],
        "Neptune.DeleteDBParameterGroup": [
            {
                "action": "rds:DeleteDBParameterGroup"
            }
        ],
        "Neptune.DeleteDBSubnetGroup": [
            {
                "action": "rds:DeleteDBSubnetGroup"
            }
        ],
        "Neptune.DeleteEventSubscription": [
            {
                "action": "rds:DeleteEventSubscription"
            }
        ],
        "Neptune.DescribeDBClusterEndpoints": [
            {
                "action": "rds:DescribeDBClusterEndpoints"
            }
        ],
        "Neptune.DescribeDBClusterParameterGroups": [
            {
                "action": "rds:DescribeDBClusterParameterGroups"
            }
        ],
        "Neptune.DescribeDBClusterParameters": [
            {
                "action": "rds:DescribeDBClusterParameters"
            }
        ],
        "Neptune.DescribeDBClusterSnapshotAttributes": [
            {
                "action": "rds:DescribeDBClusterSnapshotAttributes"
            }
        ],
        "Neptune.DescribeDBClusterSnapshots": [
            {
                "action": "rds:DescribeDBClusterSnapshots"
            }
        ],
        "Neptune.DescribeDBClusters": [
            {
                "action": "rds:DescribeDBClusters"
            }
        ],
        "Neptune.DescribeDBEngineVersions": [
            {
                "action": "rds:DescribeDBEngineVersions"
            }
        ],
        "Neptune.DescribeDBInstances": [
            {
                "action": "rds:DescribeDBInstances"
            }
        ],
        "Neptune.DescribeDBParameterGroups": [
            {
                "action": "rds:DescribeDBParameterGroups"
            }
        ],
        "Neptune.DescribeDBParameters": [
            {
                "action": "rds:DescribeDBParameters"
            }
        ],
        "Neptune.DescribeDBSubnetGroups": [
            {
                "action": "rds:DescribeDBSubnetGroups"
            }
        ],
        "Neptune.DescribeEngineDefaultClusterParameters": [
            {
                "action": "rds:DescribeEngineDefaultClusterParameters"
            }
        ],
        "Neptune.DescribeEngineDefaultParameters": [
            {
                "action": "rds:DescribeEngineDefaultParameters"
            }
        ],
        "Neptune.DescribeEventCategories": [
            {
                "action": "rds:DescribeEventCategories"
            }
        ],
        "Neptune.DescribeEventSubscriptions": [
            {
                "action": "rds:DescribeEventSubscriptions"
            }
        ],
        "Neptune.DescribeEvents": [
            {
                "action": "rds:DescribeEvents"
            }
        ],
        "Neptune.DescribeOrderableDBInstanceOptions": [
            {
                "action": "rds:DescribeOrderableDBInstanceOptions"
            }
        ],
        "Neptune.DescribePendingMaintenanceActions": [
            {
                "action": "rds:DescribePendingMaintenanceActions"
            }
        ],
        "Neptune.DescribeValidDBInstanceModifications": [
            {
                "action": "rds:DescribeValidDBInstanceModifications"
            }
        ],
        "Neptune.FailoverDBCluster": [
            {
                "action": "rds:FailoverDBCluster"
            }
        ],
        "Neptune.ListTagsForResource": [
            {
                "action": "rds:ListTagsForResource"
            }
        ],
        "Neptune.ModifyDBCluster": [
            {
                "action": "rds:ModifyDBCluster"
            }
        ],
        "Neptune.ModifyDBClusterEndpoint": [
            {
                "action": "rds:ModifyDBClusterEndpoint"
            }
        ],
        "Neptune.ModifyDBClusterParameterGroup": [
            {
                "action": "rds:ModifyDBClusterParameterGroup"
            }
        ],
        "Neptune.ModifyDBClusterSnapshotAttribute": [
            {
                "action": "rds:ModifyDBClusterSnapshotAttribute"
            }
        ],
        "Neptune.ModifyDBInstance": [
            {
                "action": "rds:ModifyDBInstance"
            }
        ],
        "Neptune.ModifyDBParameterGroup": [
            {
                "action": "rds:ModifyDBParameterGroup"
            }
        ],
        "Neptune.ModifyDBSubnetGroup": [
            {
                "action": "rds:ModifyDBSubnetGroup"
            }
        ],
        "Neptune.ModifyEventSubscription": [
            {
                "action": "rds:ModifyEventSubscription"
            }
        ],
        "Neptune.PromoteReadReplicaDBCluster": [
            {
                "action": "rds:PromoteReadReplicaDBCluster"
            }
        ],
        "Neptune.RebootDBInstance": [
            {
                "action": "rds:RebootDBInstance"
            }
        ],
        "Neptune.RemoveRoleFromDBCluster": [
            {
                "action": "rds:RemoveRoleFromDBCluster"
            }
        ],
        "Neptune.RemoveSourceIdentifierFromSubscription": [
            {
                "action": "rds:RemoveSourceIdentifierFromSubscription"
            }
        ],
        "Neptune.RemoveTagsFromResource": [
            {
                "action": "rds:RemoveTagsFromResource"
            }
        ],
        "Neptune.ResetDBClusterParameterGroup": [
            {
                "action": "rds:ResetDBClusterParameterGroup"
            }
        ],
        "Neptune.ResetDBParameterGroup": [
            {
                "action": "rds:ResetDBParameterGroup"
            }
        ],
        "Neptune.RestoreDBClusterFromSnapshot": [
            {
                "action": "rds:RestoreDBClusterFromSnapshot"
            }
        ],
        "Neptune.RestoreDBClusterToPointInTime": [
            {
                "action": "rds:RestoreDBClusterToPointInTime"
            }
        ],
        "Neptune.StartDBCluster": [
            {
                "action": "rds:StartDBCluster"
            }
        ],
        "Neptune.StopDBCluster": [
            {
                "action": "rds:StopDBCluster"
            }
        ],
        "MediaTailor.DeletePlaybackConfiguration": [
            {
                "action": "mediatailor:DeletePlaybackConfiguration"
            }
        ],
        "MediaTailor.GetPlaybackConfiguration": [
            {
                "action": "mediatailor:GetPlaybackConfiguration"
            }
        ],
        "MediaTailor.ListPlaybackConfigurations": [
            {
                "action": "mediatailor:ListPlaybackConfigurations"
            }
        ],
        "MediaTailor.ListTagsForResource": [
            {
                "action": "mediatailor:ListTagsForResource"
            }
        ],
        "MediaTailor.PutPlaybackConfiguration": [
            {
                "action": "mediatailor:PutPlaybackConfiguration"
            }
        ],
        "MediaTailor.TagResource": [
            {
                "action": "mediatailor:TagResource"
            }
        ],
        "MediaTailor.UntagResource": [
            {
                "action": "mediatailor:UntagResource"
            }
        ],
        "EKS.CreateAddon": [
            {
                "action": "eks:CreateAddon"
            }
        ],
        "EKS.CreateCluster": [
            {
                "action": "eks:CreateCluster"
            }
        ],
        "EKS.CreateFargateProfile": [
            {
                "action": "eks:CreateFargateProfile"
            }
        ],
        "EKS.CreateNodegroup": [
            {
                "action": "eks:CreateNodegroup"
            }
        ],
        "EKS.DeleteAddon": [
            {
                "action": "eks:DeleteAddon"
            }
        ],
        "EKS.DeleteCluster": [
            {
                "action": "eks:DeleteCluster"
            }
        ],
        "EKS.DeleteFargateProfile": [
            {
                "action": "eks:DeleteFargateProfile"
            }
        ],
        "EKS.DeleteNodegroup": [
            {
                "action": "eks:DeleteNodegroup"
            }
        ],
        "EKS.DescribeAddon": [
            {
                "action": "eks:DescribeAddon"
            }
        ],
        "EKS.DescribeAddonVersions": [
            {
                "action": "eks:DescribeAddonVersions"
            }
        ],
        "EKS.DescribeCluster": [
            {
                "action": "eks:DescribeCluster"
            }
        ],
        "EKS.DescribeFargateProfile": [
            {
                "action": "eks:DescribeFargateProfile"
            }
        ],
        "EKS.DescribeNodegroup": [
            {
                "action": "eks:DescribeNodegroup"
            }
        ],
        "EKS.DescribeUpdate": [
            {
                "action": "eks:DescribeUpdate"
            }
        ],
        "EKS.ListAddons": [
            {
                "action": "eks:ListAddons"
            }
        ],
        "EKS.ListClusters": [
            {
                "action": "eks:ListClusters"
            }
        ],
        "EKS.ListFargateProfiles": [
            {
                "action": "eks:ListFargateProfiles"
            }
        ],
        "EKS.ListNodegroups": [
            {
                "action": "eks:ListNodegroups"
            }
        ],
        "EKS.ListTagsForResource": [
            {
                "action": "eks:ListTagsForResource"
            }
        ],
        "EKS.ListUpdates": [
            {
                "action": "eks:ListUpdates"
            }
        ],
        "EKS.TagResource": [
            {
                "action": "eks:TagResource"
            }
        ],
        "EKS.UntagResource": [
            {
                "action": "eks:UntagResource"
            }
        ],
        "EKS.UpdateAddon": [
            {
                "action": "eks:UpdateAddon"
            }
        ],
        "EKS.UpdateClusterConfig": [
            {
                "action": "eks:UpdateClusterConfig"
            }
        ],
        "EKS.UpdateClusterVersion": [
            {
                "action": "eks:UpdateClusterVersion"
            }
        ],
        "EKS.UpdateNodegroupConfig": [
            {
                "action": "eks:UpdateNodegroupConfig"
            }
        ],
        "EKS.UpdateNodegroupVersion": [
            {
                "action": "eks:UpdateNodegroupVersion"
            }
        ],
        "Macie.AssociateMemberAccount": [
            {
                "action": "macie:AssociateMemberAccount"
            }
        ],
        "Macie.AssociateS3Resources": [
            {
                "action": "macie:AssociateS3Resources"
            }
        ],
        "Macie.DisassociateMemberAccount": [
            {
                "action": "macie:DisassociateMemberAccount"
            }
        ],
        "Macie.DisassociateS3Resources": [
            {
                "action": "macie:DisassociateS3Resources"
            }
        ],
        "Macie.ListMemberAccounts": [
            {
                "action": "macie:ListMemberAccounts"
            }
        ],
        "Macie.ListS3Resources": [
            {
                "action": "macie:ListS3Resources"
            }
        ],
        "Macie.UpdateS3Resources": [
            {
                "action": "macie:UpdateS3Resources"
            }
        ],
        "DLM.CreateLifecyclePolicy": [
            {
                "action": "dlm:CreateLifecyclePolicy"
            }
        ],
        "DLM.DeleteLifecyclePolicy": [
            {
                "action": "dlm:DeleteLifecyclePolicy"
            }
        ],
        "DLM.GetLifecyclePolicies": [
            {
                "action": "dlm:GetLifecyclePolicies"
            }
        ],
        "DLM.GetLifecyclePolicy": [
            {
                "action": "dlm:GetLifecyclePolicy"
            }
        ],
        "DLM.ListTagsForResource": [
            {
                "action": "dlm:ListTagsForResource"
            }
        ],
        "DLM.TagResource": [
            {
                "action": "dlm:TagResource"
            }
        ],
        "DLM.UntagResource": [
            {
                "action": "dlm:UntagResource"
            }
        ],
        "DLM.UpdateLifecyclePolicy": [
            {
                "action": "dlm:UpdateLifecyclePolicy"
            }
        ],
        "Signer.AddProfilePermission": [
            {
                "action": "signer:AddProfilePermission"
            }
        ],
        "Signer.CancelSigningProfile": [
            {
                "action": "signer:CancelSigningProfile"
            }
        ],
        "Signer.DescribeSigningJob": [
            {
                "action": "signer:DescribeSigningJob"
            }
        ],
        "Signer.GetSigningPlatform": [
            {
                "action": "signer:GetSigningPlatform"
            }
        ],
        "Signer.GetSigningProfile": [
            {
                "action": "signer:GetSigningProfile"
            }
        ],
        "Signer.ListProfilePermissions": [
            {
                "action": "signer:ListProfilePermissions"
            }
        ],
        "Signer.ListSigningJobs": [
            {
                "action": "signer:ListSigningJobs"
            }
        ],
        "Signer.ListSigningPlatforms": [
            {
                "action": "signer:ListSigningPlatforms"
            }
        ],
        "Signer.ListSigningProfiles": [
            {
                "action": "signer:ListSigningProfiles"
            }
        ],
        "Signer.ListTagsForResource": [
            {
                "action": "signer:ListTagsForResource"
            }
        ],
        "Signer.PutSigningProfile": [
            {
                "action": "signer:PutSigningProfile"
            }
        ],
        "Signer.RemoveProfilePermission": [
            {
                "action": "signer:RemoveProfilePermission"
            }
        ],
        "Signer.RevokeSignature": [
            {
                "action": "signer:RevokeSignature"
            }
        ],
        "Signer.RevokeSigningProfile": [
            {
                "action": "signer:RevokeSigningProfile"
            }
        ],
        "Signer.StartSigningJob": [
            {
                "action": "signer:StartSigningJob"
            }
        ],
        "Signer.TagResource": [
            {
                "action": "signer:TagResource"
            }
        ],
        "Signer.UntagResource": [
            {
                "action": "signer:UntagResource"
            }
        ],
        "Chime.AssociatePhoneNumberWithUser": [
            {
                "action": "chime:AssociatePhoneNumberWithUser"
            }
        ],
        "Chime.AssociatePhoneNumbersWithVoiceConnector": [
            {
                "action": "chime:AssociatePhoneNumbersWithVoiceConnector"
            }
        ],
        "Chime.AssociatePhoneNumbersWithVoiceConnectorGroup": [
            {
                "action": "chime:AssociatePhoneNumbersWithVoiceConnectorGroup"
            }
        ],
        "Chime.AssociateSigninDelegateGroupsWithAccount": [
            {
                "action": "chime:AssociateSigninDelegateGroupsWithAccount"
            }
        ],
        "Chime.BatchCreateAttendee": [
            {
                "action": "chime:BatchCreateAttendee"
            }
        ],
        "Chime.BatchCreateRoomMembership": [
            {
                "action": "chime:BatchCreateRoomMembership"
            }
        ],
        "Chime.BatchDeletePhoneNumber": [
            {
                "action": "chime:BatchDeletePhoneNumber"
            }
        ],
        "Chime.BatchSuspendUser": [
            {
                "action": "chime:BatchSuspendUser"
            }
        ],
        "Chime.BatchUnsuspendUser": [
            {
                "action": "chime:BatchUnsuspendUser"
            }
        ],
        "Chime.BatchUpdatePhoneNumber": [
            {
                "action": "chime:BatchUpdatePhoneNumber"
            }
        ],
        "Chime.BatchUpdateUser": [
            {
                "action": "chime:BatchUpdateUser"
            }
        ],
        "Chime.CreateAccount": [
            {
                "action": "chime:CreateAccount"
            }
        ],
        "Chime.CreateAppInstance": [
            {
                "action": "chime:CreateAppInstance"
            }
        ],
        "Chime.CreateAppInstanceAdmin": [
            {
                "action": "chime:CreateAppInstanceAdmin"
            }
        ],
        "Chime.CreateAppInstanceUser": [
            {
                "action": "chime:CreateAppInstanceUser"
            }
        ],
        "Chime.CreateAttendee": [
            {
                "action": "chime:CreateAttendee"
            }
        ],
        "Chime.CreateBot": [
            {
                "action": "chime:CreateBot"
            }
        ],
        "Chime.CreateChannel": [
            {
                "action": "chime:CreateChannel"
            }
        ],
        "Chime.CreateChannelBan": [
            {
                "action": "chime:CreateChannelBan"
            }
        ],
        "Chime.CreateChannelMembership": [
            {
                "action": "chime:CreateChannelMembership"
            }
        ],
        "Chime.CreateChannelModerator": [
            {
                "action": "chime:CreateChannelModerator"
            }
        ],
        "Chime.CreateMeeting": [
            {
                "action": "chime:CreateMeeting"
            }
        ],
        "Chime.CreateMeetingDialOut": [
            {
                "action": "chime:CreateMeetingDialOut"
            }
        ],
        "Chime.CreateMeetingWithAttendees": [
            {
                "action": "chime:CreateMeetingWithAttendees"
            }
        ],
        "Chime.CreatePhoneNumberOrder": [
            {
                "action": "chime:CreatePhoneNumberOrder"
            }
        ],
        "Chime.CreateProxySession": [
            {
                "action": "chime:CreateProxySession"
            }
        ],
        "Chime.CreateRoom": [
            {
                "action": "chime:CreateRoom"
            }
        ],
        "Chime.CreateRoomMembership": [
            {
                "action": "chime:CreateRoomMembership"
            }
        ],
        "Chime.CreateSipMediaApplication": [
            {
                "action": "chime:CreateSipMediaApplication"
            }
        ],
        "Chime.CreateSipMediaApplicationCall": [
            {
                "action": "chime:CreateSipMediaApplicationCall"
            }
        ],
        "Chime.CreateSipRule": [
            {
                "action": "chime:CreateSipRule"
            }
        ],
        "Chime.CreateUser": [
            {
                "action": "chime:CreateUser"
            }
        ],
        "Chime.CreateVoiceConnector": [
            {
                "action": "chime:CreateVoiceConnector"
            }
        ],
        "Chime.CreateVoiceConnectorGroup": [
            {
                "action": "chime:CreateVoiceConnectorGroup"
            }
        ],
        "Chime.DeleteAccount": [
            {
                "action": "chime:DeleteAccount"
            }
        ],
        "Chime.DeleteAppInstance": [
            {
                "action": "chime:DeleteAppInstance"
            }
        ],
        "Chime.DeleteAppInstanceAdmin": [
            {
                "action": "chime:DeleteAppInstanceAdmin"
            }
        ],
        "Chime.DeleteAppInstanceStreamingConfigurations": [
            {
                "action": "chime:DeleteAppInstanceStreamingConfigurations"
            }
        ],
        "Chime.DeleteAppInstanceUser": [
            {
                "action": "chime:DeleteAppInstanceUser"
            }
        ],
        "Chime.DeleteAttendee": [
            {
                "action": "chime:DeleteAttendee"
            }
        ],
        "Chime.DeleteChannel": [
            {
                "action": "chime:DeleteChannel"
            }
        ],
        "Chime.DeleteChannelBan": [
            {
                "action": "chime:DeleteChannelBan"
            }
        ],
        "Chime.DeleteChannelMembership": [
            {
                "action": "chime:DeleteChannelMembership"
            }
        ],
        "Chime.DeleteChannelMessage": [
            {
                "action": "chime:DeleteChannelMessage"
            }
        ],
        "Chime.DeleteChannelModerator": [
            {
                "action": "chime:DeleteChannelModerator"
            }
        ],
        "Chime.DeleteEventsConfiguration": [
            {
                "action": "chime:DeleteEventsConfiguration"
            }
        ],
        "Chime.DeleteMeeting": [
            {
                "action": "chime:DeleteMeeting"
            }
        ],
        "Chime.DeletePhoneNumber": [
            {
                "action": "chime:DeletePhoneNumber"
            }
        ],
        "Chime.DeleteProxySession": [
            {
                "action": "chime:DeleteProxySession"
            }
        ],
        "Chime.DeleteRoom": [
            {
                "action": "chime:DeleteRoom"
            }
        ],
        "Chime.DeleteRoomMembership": [
            {
                "action": "chime:DeleteRoomMembership"
            }
        ],
        "Chime.DeleteSipMediaApplication": [
            {
                "action": "chime:DeleteSipMediaApplication"
            }
        ],
        "Chime.DeleteSipRule": [
            {
                "action": "chime:DeleteSipRule"
            }
        ],
        "Chime.DeleteVoiceConnector": [
            {
                "action": "chime:DeleteVoiceConnector"
            }
        ],
        "Chime.DeleteVoiceConnectorEmergencyCallingConfiguration": [
            {
                "action": "chime:DeleteVoiceConnectorEmergencyCallingConfiguration"
            }
        ],
        "Chime.DeleteVoiceConnectorGroup": [
            {
                "action": "chime:DeleteVoiceConnectorGroup"
            }
        ],
        "Chime.DeleteVoiceConnectorOrigination": [
            {
                "action": "chime:DeleteVoiceConnectorOrigination"
            }
        ],
        "Chime.DeleteVoiceConnectorProxy": [
            {
                "action": "chime:DeleteVoiceConnectorProxy"
            }
        ],
        "Chime.DeleteVoiceConnectorStreamingConfiguration": [
            {
                "action": "chime:DeleteVoiceConnectorStreamingConfiguration"
            }
        ],
        "Chime.DeleteVoiceConnectorTermination": [
            {
                "action": "chime:DeleteVoiceConnectorTermination"
            }
        ],
        "Chime.DeleteVoiceConnectorTerminationCredentials": [
            {
                "action": "chime:DeleteVoiceConnectorTerminationCredentials"
            }
        ],
        "Chime.DescribeAppInstance": [
            {
                "action": "chime:DescribeAppInstance"
            }
        ],
        "Chime.DescribeAppInstanceAdmin": [
            {
                "action": "chime:DescribeAppInstanceAdmin"
            }
        ],
        "Chime.DescribeAppInstanceUser": [
            {
                "action": "chime:DescribeAppInstanceUser"
            }
        ],
        "Chime.DescribeChannel": [
            {
                "action": "chime:DescribeChannel"
            }
        ],
        "Chime.DescribeChannelBan": [
            {
                "action": "chime:DescribeChannelBan"
            }
        ],
        "Chime.DescribeChannelMembership": [
            {
                "action": "chime:DescribeChannelMembership"
            }
        ],
        "Chime.DescribeChannelMembershipForAppInstanceUser": [
            {
                "action": "chime:DescribeChannelMembershipForAppInstanceUser"
            }
        ],
        "Chime.DescribeChannelModeratedByAppInstanceUser": [
            {
                "action": "chime:DescribeChannelModeratedByAppInstanceUser"
            }
        ],
        "Chime.DescribeChannelModerator": [
            {
                "action": "chime:DescribeChannelModerator"
            }
        ],
        "Chime.DisassociatePhoneNumberFromUser": [
            {
                "action": "chime:DisassociatePhoneNumberFromUser"
            }
        ],
        "Chime.DisassociatePhoneNumbersFromVoiceConnector": [
            {
                "action": "chime:DisassociatePhoneNumbersFromVoiceConnector"
            }
        ],
        "Chime.DisassociatePhoneNumbersFromVoiceConnectorGroup": [
            {
                "action": "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup"
            }
        ],
        "Chime.DisassociateSigninDelegateGroupsFromAccount": [
            {
                "action": "chime:DisassociateSigninDelegateGroupsFromAccount"
            }
        ],
        "Chime.GetAccount": [
            {
                "action": "chime:GetAccount"
            }
        ],
        "Chime.GetAccountSettings": [
            {
                "action": "chime:GetAccountSettings"
            }
        ],
        "Chime.GetAppInstanceRetentionSettings": [
            {
                "action": "chime:GetAppInstanceRetentionSettings"
            }
        ],
        "Chime.GetAppInstanceStreamingConfigurations": [
            {
                "action": "chime:GetAppInstanceStreamingConfigurations"
            }
        ],
        "Chime.GetAttendee": [
            {
                "action": "chime:GetAttendee"
            }
        ],
        "Chime.GetBot": [
            {
                "action": "chime:GetBot"
            }
        ],
        "Chime.GetChannelMessage": [
            {
                "action": "chime:GetChannelMessage"
            }
        ],
        "Chime.GetEventsConfiguration": [
            {
                "action": "chime:GetEventsConfiguration"
            }
        ],
        "Chime.GetGlobalSettings": [
            {
                "action": "chime:GetGlobalSettings"
            }
        ],
        "Chime.GetMeeting": [
            {
                "action": "chime:GetMeeting"
            }
        ],
        "Chime.GetMessagingSessionEndpoint": [
            {
                "action": "chime:GetMessagingSessionEndpoint"
            }
        ],
        "Chime.GetPhoneNumber": [
            {
                "action": "chime:GetPhoneNumber"
            }
        ],
        "Chime.GetPhoneNumberOrder": [
            {
                "action": "chime:GetPhoneNumberOrder"
            }
        ],
        "Chime.GetPhoneNumberSettings": [
            {
                "action": "chime:GetPhoneNumberSettings"
            }
        ],
        "Chime.GetProxySession": [
            {
                "action": "chime:GetProxySession"
            }
        ],
        "Chime.GetRetentionSettings": [
            {
                "action": "chime:GetRetentionSettings"
            }
        ],
        "Chime.GetRoom": [
            {
                "action": "chime:GetRoom"
            }
        ],
        "Chime.GetSipMediaApplication": [
            {
                "action": "chime:GetSipMediaApplication"
            }
        ],
        "Chime.GetSipMediaApplicationLoggingConfiguration": [
            {
                "action": "chime:GetSipMediaApplicationLoggingConfiguration"
            }
        ],
        "Chime.GetSipRule": [
            {
                "action": "chime:GetSipRule"
            }
        ],
        "Chime.GetUser": [
            {
                "action": "chime:GetUser"
            }
        ],
        "Chime.GetUserSettings": [
            {
                "action": "chime:GetUserSettings"
            }
        ],
        "Chime.GetVoiceConnector": [
            {
                "action": "chime:GetVoiceConnector"
            }
        ],
        "Chime.GetVoiceConnectorEmergencyCallingConfiguration": [
            {
                "action": "chime:GetVoiceConnectorEmergencyCallingConfiguration"
            }
        ],
        "Chime.GetVoiceConnectorGroup": [
            {
                "action": "chime:GetVoiceConnectorGroup"
            }
        ],
        "Chime.GetVoiceConnectorLoggingConfiguration": [
            {
                "action": "chime:GetVoiceConnectorLoggingConfiguration"
            }
        ],
        "Chime.GetVoiceConnectorOrigination": [
            {
                "action": "chime:GetVoiceConnectorOrigination"
            }
        ],
        "Chime.GetVoiceConnectorProxy": [
            {
                "action": "chime:GetVoiceConnectorProxy"
            }
        ],
        "Chime.GetVoiceConnectorStreamingConfiguration": [
            {
                "action": "chime:GetVoiceConnectorStreamingConfiguration"
            }
        ],
        "Chime.GetVoiceConnectorTermination": [
            {
                "action": "chime:GetVoiceConnectorTermination"
            }
        ],
        "Chime.GetVoiceConnectorTerminationHealth": [
            {
                "action": "chime:GetVoiceConnectorTerminationHealth"
            }
        ],
        "Chime.InviteUsers": [
            {
                "action": "chime:InviteUsers"
            }
        ],
        "Chime.ListAccounts": [
            {
                "action": "chime:ListAccounts"
            }
        ],
        "Chime.ListAppInstanceAdmins": [
            {
                "action": "chime:ListAppInstanceAdmins"
            }
        ],
        "Chime.ListAppInstanceUsers": [
            {
                "action": "chime:ListAppInstanceUsers"
            }
        ],
        "Chime.ListAppInstances": [
            {
                "action": "chime:ListAppInstances"
            }
        ],
        "Chime.ListAttendeeTags": [
            {
                "action": "chime:ListAttendeeTags"
            }
        ],
        "Chime.ListAttendees": [
            {
                "action": "chime:ListAttendees"
            }
        ],
        "Chime.ListBots": [
            {
                "action": "chime:ListBots"
            }
        ],
        "Chime.ListChannelBans": [
            {
                "action": "chime:ListChannelBans"
            }
        ],
        "Chime.ListChannelMemberships": [
            {
                "action": "chime:ListChannelMemberships"
            }
        ],
        "Chime.ListChannelMembershipsForAppInstanceUser": [
            {
                "action": "chime:ListChannelMembershipsForAppInstanceUser"
            }
        ],
        "Chime.ListChannelMessages": [
            {
                "action": "chime:ListChannelMessages"
            }
        ],
        "Chime.ListChannelModerators": [
            {
                "action": "chime:ListChannelModerators"
            }
        ],
        "Chime.ListChannels": [
            {
                "action": "chime:ListChannels"
            }
        ],
        "Chime.ListChannelsModeratedByAppInstanceUser": [
            {
                "action": "chime:ListChannelsModeratedByAppInstanceUser"
            }
        ],
        "Chime.ListMeetingTags": [
            {
                "action": "chime:ListMeetingTags"
            }
        ],
        "Chime.ListMeetings": [
            {
                "action": "chime:ListMeetings"
            }
        ],
        "Chime.ListPhoneNumberOrders": [
            {
                "action": "chime:ListPhoneNumberOrders"
            }
        ],
        "Chime.ListPhoneNumbers": [
            {
                "action": "chime:ListPhoneNumbers"
            }
        ],
        "Chime.ListProxySessions": [
            {
                "action": "chime:ListProxySessions"
            }
        ],
        "Chime.ListRoomMemberships": [
            {
                "action": "chime:ListRoomMemberships"
            }
        ],
        "Chime.ListRooms": [
            {
                "action": "chime:ListRooms"
            }
        ],
        "Chime.ListSipMediaApplications": [
            {
                "action": "chime:ListSipMediaApplications"
            }
        ],
        "Chime.ListSipRules": [
            {
                "action": "chime:ListSipRules"
            }
        ],
        "Chime.ListTagsForResource": [
            {
                "action": "chime:ListTagsForResource"
            }
        ],
        "Chime.ListUsers": [
            {
                "action": "chime:ListUsers"
            }
        ],
        "Chime.ListVoiceConnectorGroups": [
            {
                "action": "chime:ListVoiceConnectorGroups"
            }
        ],
        "Chime.ListVoiceConnectorTerminationCredentials": [
            {
                "action": "chime:ListVoiceConnectorTerminationCredentials"
            }
        ],
        "Chime.ListVoiceConnectors": [
            {
                "action": "chime:ListVoiceConnectors"
            }
        ],
        "Chime.LogoutUser": [
            {
                "action": "chime:LogoutUser"
            }
        ],
        "Chime.PutAppInstanceRetentionSettings": [
            {
                "action": "chime:PutAppInstanceRetentionSettings"
            }
        ],
        "Chime.PutAppInstanceStreamingConfigurations": [
            {
                "action": "chime:PutAppInstanceStreamingConfigurations"
            }
        ],
        "Chime.PutEventsConfiguration": [
            {
                "action": "chime:PutEventsConfiguration"
            }
        ],
        "Chime.PutRetentionSettings": [
            {
                "action": "chime:PutRetentionSettings"
            }
        ],
        "Chime.PutSipMediaApplicationLoggingConfiguration": [
            {
                "action": "chime:PutSipMediaApplicationLoggingConfiguration"
            }
        ],
        "Chime.PutVoiceConnectorEmergencyCallingConfiguration": [
            {
                "action": "chime:PutVoiceConnectorEmergencyCallingConfiguration"
            }
        ],
        "Chime.PutVoiceConnectorLoggingConfiguration": [
            {
                "action": "chime:PutVoiceConnectorLoggingConfiguration"
            }
        ],
        "Chime.PutVoiceConnectorOrigination": [
            {
                "action": "chime:PutVoiceConnectorOrigination"
            }
        ],
        "Chime.PutVoiceConnectorProxy": [
            {
                "action": "chime:PutVoiceConnectorProxy"
            }
        ],
        "Chime.PutVoiceConnectorStreamingConfiguration": [
            {
                "action": "chime:PutVoiceConnectorStreamingConfiguration"
            }
        ],
        "Chime.PutVoiceConnectorTermination": [
            {
                "action": "chime:PutVoiceConnectorTermination"
            }
        ],
        "Chime.PutVoiceConnectorTerminationCredentials": [
            {
                "action": "chime:PutVoiceConnectorTerminationCredentials"
            }
        ],
        "Chime.RedactChannelMessage": [
            {
                "action": "chime:RedactChannelMessage"
            }
        ],
        "Chime.RedactConversationMessage": [
            {
                "action": "chime:RedactConversationMessage"
            }
        ],
        "Chime.RedactRoomMessage": [
            {
                "action": "chime:RedactRoomMessage"
            }
        ],
        "Chime.RegenerateSecurityToken": [
            {
                "action": "chime:RegenerateSecurityToken"
            }
        ],
        "Chime.ResetPersonalPIN": [
            {
                "action": "chime:ResetPersonalPIN"
            }
        ],
        "Chime.RestorePhoneNumber": [
            {
                "action": "chime:RestorePhoneNumber"
            }
        ],
        "Chime.SearchAvailablePhoneNumbers": [
            {
                "action": "chime:SearchAvailablePhoneNumbers"
            }
        ],
        "Chime.SendChannelMessage": [
            {
                "action": "chime:SendChannelMessage"
            }
        ],
        "Chime.TagAttendee": [
            {
                "action": "chime:TagAttendee"
            }
        ],
        "Chime.TagMeeting": [
            {
                "action": "chime:TagMeeting"
            }
        ],
        "Chime.TagResource": [
            {
                "action": "chime:TagResource"
            }
        ],
        "Chime.UntagAttendee": [
            {
                "action": "chime:UntagAttendee"
            }
        ],
        "Chime.UntagMeeting": [
            {
                "action": "chime:UntagMeeting"
            }
        ],
        "Chime.UntagResource": [
            {
                "action": "chime:UntagResource"
            }
        ],
        "Chime.UpdateAccount": [
            {
                "action": "chime:UpdateAccount"
            }
        ],
        "Chime.UpdateAccountSettings": [
            {
                "action": "chime:UpdateAccountSettings"
            }
        ],
        "Chime.UpdateAppInstance": [
            {
                "action": "chime:UpdateAppInstance"
            }
        ],
        "Chime.UpdateAppInstanceUser": [
            {
                "action": "chime:UpdateAppInstanceUser"
            }
        ],
        "Chime.UpdateBot": [
            {
                "action": "chime:UpdateBot"
            }
        ],
        "Chime.UpdateChannel": [
            {
                "action": "chime:UpdateChannel"
            }
        ],
        "Chime.UpdateChannelMessage": [
            {
                "action": "chime:UpdateChannelMessage"
            }
        ],
        "Chime.UpdateChannelReadMarker": [
            {
                "action": "chime:UpdateChannelReadMarker"
            }
        ],
        "Chime.UpdateGlobalSettings": [
            {
                "action": "chime:UpdateGlobalSettings"
            }
        ],
        "Chime.UpdatePhoneNumber": [
            {
                "action": "chime:UpdatePhoneNumber"
            }
        ],
        "Chime.UpdatePhoneNumberSettings": [
            {
                "action": "chime:UpdatePhoneNumberSettings"
            }
        ],
        "Chime.UpdateProxySession": [
            {
                "action": "chime:UpdateProxySession"
            }
        ],
        "Chime.UpdateRoom": [
            {
                "action": "chime:UpdateRoom"
            }
        ],
        "Chime.UpdateRoomMembership": [
            {
                "action": "chime:UpdateRoomMembership"
            }
        ],
        "Chime.UpdateSipMediaApplication": [
            {
                "action": "chime:UpdateSipMediaApplication"
            }
        ],
        "Chime.UpdateSipRule": [
            {
                "action": "chime:UpdateSipRule"
            }
        ],
        "Chime.UpdateUser": [
            {
                "action": "chime:UpdateUser"
            }
        ],
        "Chime.UpdateUserSettings": [
            {
                "action": "chime:UpdateUserSettings"
            }
        ],
        "Chime.UpdateVoiceConnector": [
            {
                "action": "chime:UpdateVoiceConnector"
            }
        ],
        "Chime.UpdateVoiceConnectorGroup": [
            {
                "action": "chime:UpdateVoiceConnectorGroup"
            }
        ],
        "PinpointEmail.CreateConfigurationSet": [
            {
                "action": "ses:CreateConfigurationSet"
            }
        ],
        "PinpointEmail.CreateConfigurationSetEventDestination": [
            {
                "action": "ses:CreateConfigurationSetEventDestination"
            }
        ],
        "PinpointEmail.CreateDedicatedIpPool": [
            {
                "action": "ses:CreateDedicatedIpPool"
            }
        ],
        "PinpointEmail.CreateDeliverabilityTestReport": [
            {
                "action": "ses:CreateDeliverabilityTestReport"
            }
        ],
        "PinpointEmail.CreateEmailIdentity": [
            {
                "action": "ses:CreateEmailIdentity"
            }
        ],
        "PinpointEmail.DeleteConfigurationSet": [
            {
                "action": "ses:DeleteConfigurationSet"
            }
        ],
        "PinpointEmail.DeleteConfigurationSetEventDestination": [
            {
                "action": "ses:DeleteConfigurationSetEventDestination"
            }
        ],
        "PinpointEmail.DeleteDedicatedIpPool": [
            {
                "action": "ses:DeleteDedicatedIpPool"
            }
        ],
        "PinpointEmail.DeleteEmailIdentity": [
            {
                "action": "ses:DeleteEmailIdentity"
            }
        ],
        "PinpointEmail.GetAccount": [
            {
                "action": "ses:GetAccount"
            }
        ],
        "PinpointEmail.GetBlacklistReports": [
            {
                "action": "ses:GetBlacklistReports"
            }
        ],
        "PinpointEmail.GetConfigurationSet": [
            {
                "action": "ses:GetConfigurationSet"
            }
        ],
        "PinpointEmail.GetConfigurationSetEventDestinations": [
            {
                "action": "ses:GetConfigurationSetEventDestinations"
            }
        ],
        "PinpointEmail.GetDedicatedIp": [
            {
                "action": "ses:GetDedicatedIp"
            }
        ],
        "PinpointEmail.GetDedicatedIps": [
            {
                "action": "ses:GetDedicatedIps"
            }
        ],
        "PinpointEmail.GetDeliverabilityDashboardOptions": [
            {
                "action": "ses:GetDeliverabilityDashboardOptions"
            }
        ],
        "PinpointEmail.GetDeliverabilityTestReport": [
            {
                "action": "ses:GetDeliverabilityTestReport"
            }
        ],
        "PinpointEmail.GetDomainStatisticsReport": [
            {
                "action": "ses:GetDomainStatisticsReport"
            }
        ],
        "PinpointEmail.GetEmailIdentity": [
            {
                "action": "ses:GetEmailIdentity"
            }
        ],
        "PinpointEmail.ListConfigurationSets": [
            {
                "action": "ses:ListConfigurationSets"
            }
        ],
        "PinpointEmail.ListDedicatedIpPools": [
            {
                "action": "ses:ListDedicatedIpPools"
            }
        ],
        "PinpointEmail.ListDeliverabilityTestReports": [
            {
                "action": "ses:ListDeliverabilityTestReports"
            }
        ],
        "PinpointEmail.ListEmailIdentities": [
            {
                "action": "ses:ListEmailIdentities"
            }
        ],
        "PinpointEmail.ListTagsForResource": [
            {
                "action": "ses:ListTagsForResource"
            }
        ],
        "PinpointEmail.PutAccountDedicatedIpWarmupAttributes": [
            {
                "action": "ses:PutAccountDedicatedIpWarmupAttributes"
            }
        ],
        "PinpointEmail.PutAccountSendingAttributes": [
            {
                "action": "ses:PutAccountSendingAttributes"
            }
        ],
        "PinpointEmail.PutConfigurationSetDeliveryOptions": [
            {
                "action": "ses:PutConfigurationSetDeliveryOptions"
            }
        ],
        "PinpointEmail.PutConfigurationSetReputationOptions": [
            {
                "action": "ses:PutConfigurationSetReputationOptions"
            }
        ],
        "PinpointEmail.PutConfigurationSetSendingOptions": [
            {
                "action": "ses:PutConfigurationSetSendingOptions"
            }
        ],
        "PinpointEmail.PutConfigurationSetTrackingOptions": [
            {
                "action": "ses:PutConfigurationSetTrackingOptions"
            }
        ],
        "PinpointEmail.PutDedicatedIpInPool": [
            {
                "action": "ses:PutDedicatedIpInPool"
            }
        ],
        "PinpointEmail.PutDedicatedIpWarmupAttributes": [
            {
                "action": "ses:PutDedicatedIpWarmupAttributes"
            }
        ],
        "PinpointEmail.PutDeliverabilityDashboardOption": [
            {
                "action": "ses:PutDeliverabilityDashboardOption"
            }
        ],
        "PinpointEmail.PutEmailIdentityDkimAttributes": [
            {
                "action": "ses:PutEmailIdentityDkimAttributes"
            }
        ],
        "PinpointEmail.PutEmailIdentityFeedbackAttributes": [
            {
                "action": "ses:PutEmailIdentityFeedbackAttributes"
            }
        ],
        "PinpointEmail.PutEmailIdentityMailFromAttributes": [
            {
                "action": "ses:PutEmailIdentityMailFromAttributes"
            }
        ],
        "PinpointEmail.SendEmail": [
            {
                "action": "ses:SendEmail"
            }
        ],
        "PinpointEmail.TagResource": [
            {
                "action": "ses:TagResource"
            }
        ],
        "PinpointEmail.UntagResource": [
            {
                "action": "ses:UntagResource"
            }
        ],
        "PinpointEmail.UpdateConfigurationSetEventDestination": [
            {
                "action": "ses:UpdateConfigurationSetEventDestination"
            }
        ],
        "RAM.AcceptResourceShareInvitation": [
            {
                "action": "ram:AcceptResourceShareInvitation"
            }
        ],
        "RAM.AssociateResourceShare": [
            {
                "action": "ram:AssociateResourceShare"
            }
        ],
        "RAM.AssociateResourceSharePermission": [
            {
                "action": "ram:AssociateResourceSharePermission"
            }
        ],
        "RAM.CreateResourceShare": [
            {
                "action": "ram:CreateResourceShare"
            }
        ],
        "RAM.DeleteResourceShare": [
            {
                "action": "ram:DeleteResourceShare"
            }
        ],
        "RAM.DisassociateResourceShare": [
            {
                "action": "ram:DisassociateResourceShare"
            }
        ],
        "RAM.DisassociateResourceSharePermission": [
            {
                "action": "ram:DisassociateResourceSharePermission"
            }
        ],
        "RAM.EnableSharingWithAwsOrganization": [
            {
                "action": "ram:EnableSharingWithAwsOrganization"
            }
        ],
        "RAM.GetPermission": [
            {
                "action": "ram:GetPermission"
            }
        ],
        "RAM.GetResourcePolicies": [
            {
                "action": "ram:GetResourcePolicies"
            }
        ],
        "RAM.GetResourceShareAssociations": [
            {
                "action": "ram:GetResourceShareAssociations"
            }
        ],
        "RAM.GetResourceShareInvitations": [
            {
                "action": "ram:GetResourceShareInvitations"
            }
        ],
        "RAM.GetResourceShares": [
            {
                "action": "ram:GetResourceShares"
            }
        ],
        "RAM.ListPendingInvitationResources": [
            {
                "action": "ram:ListPendingInvitationResources"
            }
        ],
        "RAM.ListPermissions": [
            {
                "action": "ram:ListPermissions"
            }
        ],
        "RAM.ListPrincipals": [
            {
                "action": "ram:ListPrincipals"
            }
        ],
        "RAM.ListResourceSharePermissions": [
            {
                "action": "ram:ListResourceSharePermissions"
            }
        ],
        "RAM.ListResourceTypes": [
            {
                "action": "ram:ListResourceTypes"
            }
        ],
        "RAM.ListResources": [
            {
                "action": "ram:ListResources"
            }
        ],
        "RAM.PromoteResourceShareCreatedFromPolicy": [
            {
                "action": "ram:PromoteResourceShareCreatedFromPolicy"
            }
        ],
        "RAM.RejectResourceShareInvitation": [
            {
                "action": "ram:RejectResourceShareInvitation"
            }
        ],
        "RAM.TagResource": [
            {
                "action": "ram:TagResource"
            }
        ],
        "RAM.UntagResource": [
            {
                "action": "ram:UntagResource"
            }
        ],
        "RAM.UpdateResourceShare": [
            {
                "action": "ram:UpdateResourceShare"
            }
        ],
        "Route53Resolver.AssociateResolverEndpointIpAddress": [
            {
                "action": "route53resolver:AssociateResolverEndpointIpAddress"
            }
        ],
        "Route53Resolver.AssociateResolverQueryLogConfig": [
            {
                "action": "route53resolver:AssociateResolverQueryLogConfig"
            }
        ],
        "Route53Resolver.AssociateResolverRule": [
            {
                "action": "route53resolver:AssociateResolverRule"
            }
        ],
        "Route53Resolver.CreateResolverEndpoint": [
            {
                "action": "route53resolver:CreateResolverEndpoint"
            }
        ],
        "Route53Resolver.CreateResolverQueryLogConfig": [
            {
                "action": "route53resolver:CreateResolverQueryLogConfig"
            }
        ],
        "Route53Resolver.CreateResolverRule": [
            {
                "action": "route53resolver:CreateResolverRule"
            }
        ],
        "Route53Resolver.DeleteResolverEndpoint": [
            {
                "action": "route53resolver:DeleteResolverEndpoint"
            }
        ],
        "Route53Resolver.DeleteResolverQueryLogConfig": [
            {
                "action": "route53resolver:DeleteResolverQueryLogConfig"
            }
        ],
        "Route53Resolver.DeleteResolverRule": [
            {
                "action": "route53resolver:DeleteResolverRule"
            }
        ],
        "Route53Resolver.DisassociateResolverEndpointIpAddress": [
            {
                "action": "route53resolver:DisassociateResolverEndpointIpAddress"
            }
        ],
        "Route53Resolver.DisassociateResolverQueryLogConfig": [
            {
                "action": "route53resolver:DisassociateResolverQueryLogConfig"
            }
        ],
        "Route53Resolver.DisassociateResolverRule": [
            {
                "action": "route53resolver:DisassociateResolverRule"
            }
        ],
        "Route53Resolver.GetResolverDnssecConfig": [
            {
                "action": "route53resolver:GetResolverDnssecConfig"
            }
        ],
        "Route53Resolver.GetResolverEndpoint": [
            {
                "action": "route53resolver:GetResolverEndpoint"
            }
        ],
        "Route53Resolver.GetResolverQueryLogConfig": [
            {
                "action": "route53resolver:GetResolverQueryLogConfig"
            }
        ],
        "Route53Resolver.GetResolverQueryLogConfigAssociation": [
            {
                "action": "route53resolver:GetResolverQueryLogConfigAssociation"
            }
        ],
        "Route53Resolver.GetResolverQueryLogConfigPolicy": [
            {
                "action": "route53resolver:GetResolverQueryLogConfigPolicy"
            }
        ],
        "Route53Resolver.GetResolverRule": [
            {
                "action": "route53resolver:GetResolverRule"
            }
        ],
        "Route53Resolver.GetResolverRuleAssociation": [
            {
                "action": "route53resolver:GetResolverRuleAssociation"
            }
        ],
        "Route53Resolver.GetResolverRulePolicy": [
            {
                "action": "route53resolver:GetResolverRulePolicy"
            }
        ],
        "Route53Resolver.ListResolverDnssecConfigs": [
            {
                "action": "route53resolver:ListResolverDnssecConfigs"
            }
        ],
        "Route53Resolver.ListResolverEndpointIpAddresses": [
            {
                "action": "route53resolver:ListResolverEndpointIpAddresses"
            }
        ],
        "Route53Resolver.ListResolverEndpoints": [
            {
                "action": "route53resolver:ListResolverEndpoints"
            }
        ],
        "Route53Resolver.ListResolverQueryLogConfigAssociations": [
            {
                "action": "route53resolver:ListResolverQueryLogConfigAssociations"
            }
        ],
        "Route53Resolver.ListResolverQueryLogConfigs": [
            {
                "action": "route53resolver:ListResolverQueryLogConfigs"
            }
        ],
        "Route53Resolver.ListResolverRuleAssociations": [
            {
                "action": "route53resolver:ListResolverRuleAssociations"
            }
        ],
        "Route53Resolver.ListResolverRules": [
            {
                "action": "route53resolver:ListResolverRules"
            }
        ],
        "Route53Resolver.ListTagsForResource": [
            {
                "action": "route53resolver:ListTagsForResource"
            }
        ],
        "Route53Resolver.PutResolverQueryLogConfigPolicy": [
            {
                "action": "route53resolver:PutResolverQueryLogConfigPolicy"
            }
        ],
        "Route53Resolver.PutResolverRulePolicy": [
            {
                "action": "route53resolver:PutResolverRulePolicy"
            }
        ],
        "Route53Resolver.TagResource": [
            {
                "action": "route53resolver:TagResource"
            }
        ],
        "Route53Resolver.UntagResource": [
            {
                "action": "route53resolver:UntagResource"
            }
        ],
        "Route53Resolver.UpdateResolverDnssecConfig": [
            {
                "action": "route53resolver:UpdateResolverDnssecConfig"
            }
        ],
        "Route53Resolver.UpdateResolverEndpoint": [
            {
                "action": "route53resolver:UpdateResolverEndpoint"
            }
        ],
        "Route53Resolver.UpdateResolverRule": [
            {
                "action": "route53resolver:UpdateResolverRule"
            }
        ],
        "PinpointSMSVoice.CreateConfigurationSet": [
            {
                "action": "sms-voice:CreateConfigurationSet"
            }
        ],
        "PinpointSMSVoice.CreateConfigurationSetEventDestination": [
            {
                "action": "sms-voice:CreateConfigurationSetEventDestination"
            }
        ],
        "PinpointSMSVoice.DeleteConfigurationSet": [
            {
                "action": "sms-voice:DeleteConfigurationSet"
            }
        ],
        "PinpointSMSVoice.DeleteConfigurationSetEventDestination": [
            {
                "action": "sms-voice:DeleteConfigurationSetEventDestination"
            }
        ],
        "PinpointSMSVoice.GetConfigurationSetEventDestinations": [
            {
                "action": "sms-voice:GetConfigurationSetEventDestinations"
            }
        ],
        "PinpointSMSVoice.ListConfigurationSets": [
            {
                "action": "sms-voice:ListConfigurationSets"
            }
        ],
        "PinpointSMSVoice.SendVoiceMessage": [
            {
                "action": "sms-voice:SendVoiceMessage"
            }
        ],
        "PinpointSMSVoice.UpdateConfigurationSetEventDestination": [
            {
                "action": "sms-voice:UpdateConfigurationSetEventDestination"
            }
        ],
        "QuickSight.CancelIngestion": [
            {
                "action": "quicksight:CancelIngestion"
            }
        ],
        "QuickSight.CreateAccountCustomization": [
            {
                "action": "quicksight:CreateAccountCustomization"
            }
        ],
        "QuickSight.CreateAnalysis": [
            {
                "action": "quicksight:CreateAnalysis"
            }
        ],
        "QuickSight.CreateDashboard": [
            {
                "action": "quicksight:CreateDashboard"
            }
        ],
        "QuickSight.CreateDataSet": [
            {
                "action": "quicksight:CreateDataSet"
            }
        ],
        "QuickSight.CreateDataSource": [
            {
                "action": "quicksight:CreateDataSource"
            }
        ],
        "QuickSight.CreateGroup": [
            {
                "action": "quicksight:CreateGroup"
            }
        ],
        "QuickSight.CreateGroupMembership": [
            {
                "action": "quicksight:CreateGroupMembership"
            }
        ],
        "QuickSight.CreateIAMPolicyAssignment": [
            {
                "action": "quicksight:CreateIAMPolicyAssignment"
            }
        ],
        "QuickSight.CreateIngestion": [
            {
                "action": "quicksight:CreateIngestion"
            }
        ],
        "QuickSight.CreateNamespace": [
            {
                "action": "quicksight:CreateNamespace"
            }
        ],
        "QuickSight.CreateTemplate": [
            {
                "action": "quicksight:CreateTemplate"
            }
        ],
        "QuickSight.CreateTemplateAlias": [
            {
                "action": "quicksight:CreateTemplateAlias"
            }
        ],
        "QuickSight.CreateTheme": [
            {
                "action": "quicksight:CreateTheme"
            }
        ],
        "QuickSight.CreateThemeAlias": [
            {
                "action": "quicksight:CreateThemeAlias"
            }
        ],
        "QuickSight.DeleteAccountCustomization": [
            {
                "action": "quicksight:DeleteAccountCustomization"
            }
        ],
        "QuickSight.DeleteAnalysis": [
            {
                "action": "quicksight:DeleteAnalysis"
            }
        ],
        "QuickSight.DeleteDashboard": [
            {
                "action": "quicksight:DeleteDashboard"
            }
        ],
        "QuickSight.DeleteDataSet": [
            {
                "action": "quicksight:DeleteDataSet"
            }
        ],
        "QuickSight.DeleteDataSource": [
            {
                "action": "quicksight:DeleteDataSource"
            }
        ],
        "QuickSight.DeleteGroup": [
            {
                "action": "quicksight:DeleteGroup"
            }
        ],
        "QuickSight.DeleteGroupMembership": [
            {
                "action": "quicksight:DeleteGroupMembership"
            }
        ],
        "QuickSight.DeleteIAMPolicyAssignment": [
            {
                "action": "quicksight:DeleteIAMPolicyAssignment"
            }
        ],
        "QuickSight.DeleteNamespace": [
            {
                "action": "quicksight:DeleteNamespace"
            }
        ],
        "QuickSight.DeleteTemplate": [
            {
                "action": "quicksight:DeleteTemplate"
            }
        ],
        "QuickSight.DeleteTemplateAlias": [
            {
                "action": "quicksight:DeleteTemplateAlias"
            }
        ],
        "QuickSight.DeleteTheme": [
            {
                "action": "quicksight:DeleteTheme"
            }
        ],
        "QuickSight.DeleteThemeAlias": [
            {
                "action": "quicksight:DeleteThemeAlias"
            }
        ],
        "QuickSight.DeleteUser": [
            {
                "action": "quicksight:DeleteUser"
            }
        ],
        "QuickSight.DeleteUserByPrincipalId": [
            {
                "action": "quicksight:DeleteUserByPrincipalId"
            }
        ],
        "QuickSight.DescribeAccountCustomization": [
            {
                "action": "quicksight:DescribeAccountCustomization"
            }
        ],
        "QuickSight.DescribeAccountSettings": [
            {
                "action": "quicksight:DescribeAccountSettings"
            }
        ],
        "QuickSight.DescribeAnalysis": [
            {
                "action": "quicksight:DescribeAnalysis"
            }
        ],
        "QuickSight.DescribeAnalysisPermissions": [
            {
                "action": "quicksight:DescribeAnalysisPermissions"
            }
        ],
        "QuickSight.DescribeDashboard": [
            {
                "action": "quicksight:DescribeDashboard"
            }
        ],
        "QuickSight.DescribeDashboardPermissions": [
            {
                "action": "quicksight:DescribeDashboardPermissions"
            }
        ],
        "QuickSight.DescribeDataSet": [
            {
                "action": "quicksight:DescribeDataSet"
            }
        ],
        "QuickSight.DescribeDataSetPermissions": [
            {
                "action": "quicksight:DescribeDataSetPermissions"
            }
        ],
        "QuickSight.DescribeDataSource": [
            {
                "action": "quicksight:DescribeDataSource"
            }
        ],
        "QuickSight.DescribeDataSourcePermissions": [
            {
                "action": "quicksight:DescribeDataSourcePermissions"
            }
        ],
        "QuickSight.DescribeGroup": [
            {
                "action": "quicksight:DescribeGroup"
            }
        ],
        "QuickSight.DescribeIAMPolicyAssignment": [
            {
                "action": "quicksight:DescribeIAMPolicyAssignment"
            }
        ],
        "QuickSight.DescribeIngestion": [
            {
                "action": "quicksight:DescribeIngestion"
            }
        ],
        "QuickSight.DescribeNamespace": [
            {
                "action": "quicksight:DescribeNamespace"
            }
        ],
        "QuickSight.DescribeTemplate": [
            {
                "action": "quicksight:DescribeTemplate"
            }
        ],
        "QuickSight.DescribeTemplateAlias": [
            {
                "action": "quicksight:DescribeTemplateAlias"
            }
        ],
        "QuickSight.DescribeTemplatePermissions": [
            {
                "action": "quicksight:DescribeTemplatePermissions"
            }
        ],
        "QuickSight.DescribeTheme": [
            {
                "action": "quicksight:DescribeTheme"
            }
        ],
        "QuickSight.DescribeThemeAlias": [
            {
                "action": "quicksight:DescribeThemeAlias"
            }
        ],
        "QuickSight.DescribeThemePermissions": [
            {
                "action": "quicksight:DescribeThemePermissions"
            }
        ],
        "QuickSight.DescribeUser": [
            {
                "action": "quicksight:DescribeUser"
            }
        ],
        "QuickSight.GetDashboardEmbedUrl": [
            {
                "action": "quicksight:GetDashboardEmbedUrl"
            }
        ],
        "QuickSight.GetSessionEmbedUrl": [
            {
                "action": "quicksight:GetSessionEmbedUrl"
            }
        ],
        "QuickSight.ListAnalyses": [
            {
                "action": "quicksight:ListAnalyses"
            }
        ],
        "QuickSight.ListDashboardVersions": [
            {
                "action": "quicksight:ListDashboardVersions"
            }
        ],
        "QuickSight.ListDashboards": [
            {
                "action": "quicksight:ListDashboards"
            }
        ],
        "QuickSight.ListDataSets": [
            {
                "action": "quicksight:ListDataSets"
            }
        ],
        "QuickSight.ListDataSources": [
            {
                "action": "quicksight:ListDataSources"
            }
        ],
        "QuickSight.ListGroupMemberships": [
            {
                "action": "quicksight:ListGroupMemberships"
            }
        ],
        "QuickSight.ListGroups": [
            {
                "action": "quicksight:ListGroups"
            }
        ],
        "QuickSight.ListIAMPolicyAssignments": [
            {
                "action": "quicksight:ListIAMPolicyAssignments"
            }
        ],
        "QuickSight.ListIAMPolicyAssignmentsForUser": [
            {
                "action": "quicksight:ListIAMPolicyAssignmentsForUser"
            }
        ],
        "QuickSight.ListIngestions": [
            {
                "action": "quicksight:ListIngestions"
            }
        ],
        "QuickSight.ListNamespaces": [
            {
                "action": "quicksight:ListNamespaces"
            }
        ],
        "QuickSight.ListTagsForResource": [
            {
                "action": "quicksight:ListTagsForResource"
            }
        ],
        "QuickSight.ListTemplateAliases": [
            {
                "action": "quicksight:ListTemplateAliases"
            }
        ],
        "QuickSight.ListTemplateVersions": [
            {
                "action": "quicksight:ListTemplateVersions"
            }
        ],
        "QuickSight.ListTemplates": [
            {
                "action": "quicksight:ListTemplates"
            }
        ],
        "QuickSight.ListThemeAliases": [
            {
                "action": "quicksight:ListThemeAliases"
            }
        ],
        "QuickSight.ListThemeVersions": [
            {
                "action": "quicksight:ListThemeVersions"
            }
        ],
        "QuickSight.ListThemes": [
            {
                "action": "quicksight:ListThemes"
            }
        ],
        "QuickSight.ListUserGroups": [
            {
                "action": "quicksight:ListUserGroups"
            }
        ],
        "QuickSight.ListUsers": [
            {
                "action": "quicksight:ListUsers"
            }
        ],
        "QuickSight.RegisterUser": [
            {
                "action": "quicksight:RegisterUser"
            }
        ],
        "QuickSight.RestoreAnalysis": [
            {
                "action": "quicksight:RestoreAnalysis"
            }
        ],
        "QuickSight.SearchAnalyses": [
            {
                "action": "quicksight:SearchAnalyses"
            }
        ],
        "QuickSight.SearchDashboards": [
            {
                "action": "quicksight:SearchDashboards"
            }
        ],
        "QuickSight.TagResource": [
            {
                "action": "quicksight:TagResource"
            }
        ],
        "QuickSight.UntagResource": [
            {
                "action": "quicksight:UntagResource"
            }
        ],
        "QuickSight.UpdateAccountCustomization": [
            {
                "action": "quicksight:UpdateAccountCustomization"
            }
        ],
        "QuickSight.UpdateAccountSettings": [
            {
                "action": "quicksight:UpdateAccountSettings"
            }
        ],
        "QuickSight.UpdateAnalysis": [
            {
                "action": "quicksight:UpdateAnalysis"
            }
        ],
        "QuickSight.UpdateAnalysisPermissions": [
            {
                "action": "quicksight:UpdateAnalysisPermissions"
            }
        ],
        "QuickSight.UpdateDashboard": [
            {
                "action": "quicksight:UpdateDashboard"
            }
        ],
        "QuickSight.UpdateDashboardPermissions": [
            {
                "action": "quicksight:UpdateDashboardPermissions"
            }
        ],
        "QuickSight.UpdateDashboardPublishedVersion": [
            {
                "action": "quicksight:UpdateDashboardPublishedVersion"
            }
        ],
        "QuickSight.UpdateDataSet": [
            {
                "action": "quicksight:UpdateDataSet"
            }
        ],
        "QuickSight.UpdateDataSetPermissions": [
            {
                "action": "quicksight:UpdateDataSetPermissions"
            }
        ],
        "QuickSight.UpdateDataSource": [
            {
                "action": "quicksight:UpdateDataSource"
            }
        ],
        "QuickSight.UpdateDataSourcePermissions": [
            {
                "action": "quicksight:UpdateDataSourcePermissions"
            }
        ],
        "QuickSight.UpdateGroup": [
            {
                "action": "quicksight:UpdateGroup"
            }
        ],
        "QuickSight.UpdateIAMPolicyAssignment": [
            {
                "action": "quicksight:UpdateIAMPolicyAssignment"
            }
        ],
        "QuickSight.UpdateTemplate": [
            {
                "action": "quicksight:UpdateTemplate"
            }
        ],
        "QuickSight.UpdateTemplateAlias": [
            {
                "action": "quicksight:UpdateTemplateAlias"
            }
        ],
        "QuickSight.UpdateTemplatePermissions": [
            {
                "action": "quicksight:UpdateTemplatePermissions"
            }
        ],
        "QuickSight.UpdateTheme": [
            {
                "action": "quicksight:UpdateTheme"
            }
        ],
        "QuickSight.UpdateThemeAlias": [
            {
                "action": "quicksight:UpdateThemeAlias"
            }
        ],
        "QuickSight.UpdateThemePermissions": [
            {
                "action": "quicksight:UpdateThemePermissions"
            }
        ],
        "QuickSight.UpdateUser": [
            {
                "action": "quicksight:UpdateUser"
            }
        ],
        "RDSDataService.BatchExecuteStatement": [
            {
                "action": "rds-data:BatchExecuteStatement"
            }
        ],
        "RDSDataService.BeginTransaction": [
            {
                "action": "rds-data:BeginTransaction"
            }
        ],
        "RDSDataService.CommitTransaction": [
            {
                "action": "rds-data:CommitTransaction"
            }
        ],
        "RDSDataService.ExecuteSql": [
            {
                "action": "rds-data:ExecuteSql"
            }
        ],
        "RDSDataService.ExecuteStatement": [
            {
                "action": "rds-data:ExecuteStatement"
            }
        ],
        "RDSDataService.RollbackTransaction": [
            {
                "action": "rds-data:RollbackTransaction"
            }
        ],
        "Amplify.CreateApp": [
            {
                "action": "amplify:CreateApp"
            }
        ],
        "Amplify.CreateBackendEnvironment": [
            {
                "action": "amplify:CreateBackendEnvironment"
            }
        ],
        "Amplify.CreateBranch": [
            {
                "action": "amplify:CreateBranch"
            }
        ],
        "Amplify.CreateDeployment": [
            {
                "action": "amplify:CreateDeployment"
            }
        ],
        "Amplify.CreateDomainAssociation": [
            {
                "action": "amplify:CreateDomainAssociation"
            }
        ],
        "Amplify.DeleteApp": [
            {
                "action": "amplify:DeleteApp"
            }
        ],
        "Amplify.DeleteBackendEnvironment": [
            {
                "action": "amplify:DeleteBackendEnvironment"
            }
        ],
        "Amplify.DeleteBranch": [
            {
                "action": "amplify:DeleteBranch"
            }
        ],
        "Amplify.DeleteDomainAssociation": [
            {
                "action": "amplify:DeleteDomainAssociation"
            }
        ],
        "Amplify.DeleteJob": [
            {
                "action": "amplify:DeleteJob"
            }
        ],
        "Amplify.GenerateAccessLogs": [
            {
                "action": "amplify:GenerateAccessLogs"
            }
        ],
        "Amplify.GetApp": [
            {
                "action": "amplify:GetApp"
            }
        ],
        "Amplify.GetArtifactUrl": [
            {
                "action": "amplify:GetArtifactUrl"
            }
        ],
        "Amplify.GetBackendEnvironment": [
            {
                "action": "amplify:GetBackendEnvironment"
            }
        ],
        "Amplify.GetBranch": [
            {
                "action": "amplify:GetBranch"
            }
        ],
        "Amplify.GetDomainAssociation": [
            {
                "action": "amplify:GetDomainAssociation"
            }
        ],
        "Amplify.GetJob": [
            {
                "action": "amplify:GetJob"
            }
        ],
        "Amplify.ListApps": [
            {
                "action": "amplify:ListApps"
            }
        ],
        "Amplify.ListArtifacts": [
            {
                "action": "amplify:ListArtifacts"
            }
        ],
        "Amplify.ListBackendEnvironments": [
            {
                "action": "amplify:ListBackendEnvironments"
            }
        ],
        "Amplify.ListBranches": [
            {
                "action": "amplify:ListBranches"
            }
        ],
        "Amplify.ListDomainAssociations": [
            {
                "action": "amplify:ListDomainAssociations"
            }
        ],
        "Amplify.ListJobs": [
            {
                "action": "amplify:ListJobs"
            }
        ],
        "Amplify.StartDeployment": [
            {
                "action": "amplify:StartDeployment"
            }
        ],
        "Amplify.StartJob": [
            {
                "action": "amplify:StartJob"
            }
        ],
        "Amplify.StopJob": [
            {
                "action": "amplify:StopJob"
            }
        ],
        "Amplify.TagResource": [
            {
                "action": "amplify:TagResource"
            }
        ],
        "Amplify.UntagResource": [
            {
                "action": "amplify:UntagResource"
            }
        ],
        "Amplify.UpdateApp": [
            {
                "action": "amplify:UpdateApp"
            }
        ],
        "Amplify.UpdateBranch": [
            {
                "action": "amplify:UpdateBranch"
            }
        ],
        "Amplify.UpdateDomainAssociation": [
            {
                "action": "amplify:UpdateDomainAssociation"
            }
        ],
        "DataSync.CancelTaskExecution": [
            {
                "action": "datasync:CancelTaskExecution"
            }
        ],
        "DataSync.CreateAgent": [
            {
                "action": "datasync:CreateAgent"
            }
        ],
        "DataSync.CreateLocationEfs": [
            {
                "action": "datasync:CreateLocationEfs"
            }
        ],
        "DataSync.CreateLocationFsxWindows": [
            {
                "action": "datasync:CreateLocationFsxWindows"
            }
        ],
        "DataSync.CreateLocationNfs": [
            {
                "action": "datasync:CreateLocationNfs"
            }
        ],
        "DataSync.CreateLocationObjectStorage": [
            {
                "action": "datasync:CreateLocationObjectStorage"
            }
        ],
        "DataSync.CreateLocationS3": [
            {
                "action": "datasync:CreateLocationS3"
            }
        ],
        "DataSync.CreateLocationSmb": [
            {
                "action": "datasync:CreateLocationSmb"
            }
        ],
        "DataSync.CreateTask": [
            {
                "action": "datasync:CreateTask"
            }
        ],
        "DataSync.DeleteAgent": [
            {
                "action": "datasync:DeleteAgent"
            }
        ],
        "DataSync.DeleteLocation": [
            {
                "action": "datasync:DeleteLocation"
            }
        ],
        "DataSync.DeleteTask": [
            {
                "action": "datasync:DeleteTask"
            }
        ],
        "DataSync.DescribeAgent": [
            {
                "action": "datasync:DescribeAgent"
            }
        ],
        "DataSync.DescribeLocationEfs": [
            {
                "action": "datasync:DescribeLocationEfs"
            }
        ],
        "DataSync.DescribeLocationFsxWindows": [
            {
                "action": "datasync:DescribeLocationFsxWindows"
            }
        ],
        "DataSync.DescribeLocationNfs": [
            {
                "action": "datasync:DescribeLocationNfs"
            }
        ],
        "DataSync.DescribeLocationObjectStorage": [
            {
                "action": "datasync:DescribeLocationObjectStorage"
            }
        ],
        "DataSync.DescribeLocationS3": [
            {
                "action": "datasync:DescribeLocationS3"
            }
        ],
        "DataSync.DescribeLocationSmb": [
            {
                "action": "datasync:DescribeLocationSmb"
            }
        ],
        "DataSync.DescribeTask": [
            {
                "action": "datasync:DescribeTask"
            }
        ],
        "DataSync.DescribeTaskExecution": [
            {
                "action": "datasync:DescribeTaskExecution"
            }
        ],
        "DataSync.ListAgents": [
            {
                "action": "datasync:ListAgents"
            }
        ],
        "DataSync.ListLocations": [
            {
                "action": "datasync:ListLocations"
            }
        ],
        "DataSync.ListTagsForResource": [
            {
                "action": "datasync:ListTagsForResource"
            }
        ],
        "DataSync.ListTaskExecutions": [
            {
                "action": "datasync:ListTaskExecutions"
            }
        ],
        "DataSync.ListTasks": [
            {
                "action": "datasync:ListTasks"
            }
        ],
        "DataSync.StartTaskExecution": [
            {
                "action": "datasync:StartTaskExecution"
            }
        ],
        "DataSync.TagResource": [
            {
                "action": "datasync:TagResource"
            }
        ],
        "DataSync.UntagResource": [
            {
                "action": "datasync:UntagResource"
            }
        ],
        "DataSync.UpdateAgent": [
            {
                "action": "datasync:UpdateAgent"
            }
        ],
        "DataSync.UpdateTask": [
            {
                "action": "datasync:UpdateTask"
            }
        ],
        "RoboMaker.BatchDeleteWorlds": [
            {
                "action": "robomaker:BatchDeleteWorlds"
            }
        ],
        "RoboMaker.BatchDescribeSimulationJob": [
            {
                "action": "robomaker:BatchDescribeSimulationJob"
            }
        ],
        "RoboMaker.CancelDeploymentJob": [
            {
                "action": "robomaker:CancelDeploymentJob"
            }
        ],
        "RoboMaker.CancelSimulationJob": [
            {
                "action": "robomaker:CancelSimulationJob"
            }
        ],
        "RoboMaker.CancelSimulationJobBatch": [
            {
                "action": "robomaker:CancelSimulationJobBatch"
            }
        ],
        "RoboMaker.CancelWorldExportJob": [
            {
                "action": "robomaker:CancelWorldExportJob"
            }
        ],
        "RoboMaker.CancelWorldGenerationJob": [
            {
                "action": "robomaker:CancelWorldGenerationJob"
            }
        ],
        "RoboMaker.CreateDeploymentJob": [
            {
                "action": "robomaker:CreateDeploymentJob"
            }
        ],
        "RoboMaker.CreateFleet": [
            {
                "action": "robomaker:CreateFleet"
            }
        ],
        "RoboMaker.CreateRobot": [
            {
                "action": "robomaker:CreateRobot"
            }
        ],
        "RoboMaker.CreateRobotApplication": [
            {
                "action": "robomaker:CreateRobotApplication"
            }
        ],
        "RoboMaker.CreateRobotApplicationVersion": [
            {
                "action": "robomaker:CreateRobotApplicationVersion"
            }
        ],
        "RoboMaker.CreateSimulationApplication": [
            {
                "action": "robomaker:CreateSimulationApplication"
            }
        ],
        "RoboMaker.CreateSimulationApplicationVersion": [
            {
                "action": "robomaker:CreateSimulationApplicationVersion"
            }
        ],
        "RoboMaker.CreateSimulationJob": [
            {
                "action": "robomaker:CreateSimulationJob"
            }
        ],
        "RoboMaker.CreateWorldExportJob": [
            {
                "action": "robomaker:CreateWorldExportJob"
            }
        ],
        "RoboMaker.CreateWorldGenerationJob": [
            {
                "action": "robomaker:CreateWorldGenerationJob"
            }
        ],
        "RoboMaker.CreateWorldTemplate": [
            {
                "action": "robomaker:CreateWorldTemplate"
            }
        ],
        "RoboMaker.DeleteFleet": [
            {
                "action": "robomaker:DeleteFleet"
            }
        ],
        "RoboMaker.DeleteRobot": [
            {
                "action": "robomaker:DeleteRobot"
            }
        ],
        "RoboMaker.DeleteRobotApplication": [
            {
                "action": "robomaker:DeleteRobotApplication"
            }
        ],
        "RoboMaker.DeleteSimulationApplication": [
            {
                "action": "robomaker:DeleteSimulationApplication"
            }
        ],
        "RoboMaker.DeleteWorldTemplate": [
            {
                "action": "robomaker:DeleteWorldTemplate"
            }
        ],
        "RoboMaker.DeregisterRobot": [
            {
                "action": "robomaker:DeregisterRobot"
            }
        ],
        "RoboMaker.DescribeDeploymentJob": [
            {
                "action": "robomaker:DescribeDeploymentJob"
            }
        ],
        "RoboMaker.DescribeFleet": [
            {
                "action": "robomaker:DescribeFleet"
            }
        ],
        "RoboMaker.DescribeRobot": [
            {
                "action": "robomaker:DescribeRobot"
            }
        ],
        "RoboMaker.DescribeRobotApplication": [
            {
                "action": "robomaker:DescribeRobotApplication"
            }
        ],
        "RoboMaker.DescribeSimulationApplication": [
            {
                "action": "robomaker:DescribeSimulationApplication"
            }
        ],
        "RoboMaker.DescribeSimulationJob": [
            {
                "action": "robomaker:DescribeSimulationJob"
            }
        ],
        "RoboMaker.DescribeSimulationJobBatch": [
            {
                "action": "robomaker:DescribeSimulationJobBatch"
            }
        ],
        "RoboMaker.DescribeWorld": [
            {
                "action": "robomaker:DescribeWorld"
            }
        ],
        "RoboMaker.DescribeWorldExportJob": [
            {
                "action": "robomaker:DescribeWorldExportJob"
            }
        ],
        "RoboMaker.DescribeWorldGenerationJob": [
            {
                "action": "robomaker:DescribeWorldGenerationJob"
            }
        ],
        "RoboMaker.DescribeWorldTemplate": [
            {
                "action": "robomaker:DescribeWorldTemplate"
            }
        ],
        "RoboMaker.GetWorldTemplateBody": [
            {
                "action": "robomaker:GetWorldTemplateBody"
            }
        ],
        "RoboMaker.ListDeploymentJobs": [
            {
                "action": "robomaker:ListDeploymentJobs"
            }
        ],
        "RoboMaker.ListFleets": [
            {
                "action": "robomaker:ListFleets"
            }
        ],
        "RoboMaker.ListRobotApplications": [
            {
                "action": "robomaker:ListRobotApplications"
            }
        ],
        "RoboMaker.ListRobots": [
            {
                "action": "robomaker:ListRobots"
            }
        ],
        "RoboMaker.ListSimulationApplications": [
            {
                "action": "robomaker:ListSimulationApplications"
            }
        ],
        "RoboMaker.ListSimulationJobBatches": [
            {
                "action": "robomaker:ListSimulationJobBatches"
            }
        ],
        "RoboMaker.ListSimulationJobs": [
            {
                "action": "robomaker:ListSimulationJobs"
            }
        ],
        "RoboMaker.ListTagsForResource": [
            {
                "action": "robomaker:ListTagsForResource"
            }
        ],
        "RoboMaker.ListWorldExportJobs": [
            {
                "action": "robomaker:ListWorldExportJobs"
            }
        ],
        "RoboMaker.ListWorldGenerationJobs": [
            {
                "action": "robomaker:ListWorldGenerationJobs"
            }
        ],
        "RoboMaker.ListWorldTemplates": [
            {
                "action": "robomaker:ListWorldTemplates"
            }
        ],
        "RoboMaker.ListWorlds": [
            {
                "action": "robomaker:ListWorlds"
            }
        ],
        "RoboMaker.RegisterRobot": [
            {
                "action": "robomaker:RegisterRobot"
            }
        ],
        "RoboMaker.RestartSimulationJob": [
            {
                "action": "robomaker:RestartSimulationJob"
            }
        ],
        "RoboMaker.StartSimulationJobBatch": [
            {
                "action": "robomaker:StartSimulationJobBatch"
            }
        ],
        "RoboMaker.SyncDeploymentJob": [
            {
                "action": "robomaker:SyncDeploymentJob"
            }
        ],
        "RoboMaker.TagResource": [
            {
                "action": "robomaker:TagResource"
            }
        ],
        "RoboMaker.UntagResource": [
            {
                "action": "robomaker:UntagResource"
            }
        ],
        "RoboMaker.UpdateRobotApplication": [
            {
                "action": "robomaker:UpdateRobotApplication"
            }
        ],
        "RoboMaker.UpdateSimulationApplication": [
            {
                "action": "robomaker:UpdateSimulationApplication"
            }
        ],
        "RoboMaker.UpdateWorldTemplate": [
            {
                "action": "robomaker:UpdateWorldTemplate"
            }
        ],
        "Transfer.CreateServer": [
            {
                "action": "transfer:CreateServer"
            }
        ],
        "Transfer.CreateUser": [
            {
                "action": "transfer:CreateUser"
            }
        ],
        "Transfer.DeleteServer": [
            {
                "action": "transfer:DeleteServer"
            }
        ],
        "Transfer.DeleteSshPublicKey": [
            {
                "action": "transfer:DeleteSshPublicKey"
            }
        ],
        "Transfer.DeleteUser": [
            {
                "action": "transfer:DeleteUser"
            }
        ],
        "Transfer.DescribeSecurityPolicy": [
            {
                "action": "transfer:DescribeSecurityPolicy"
            }
        ],
        "Transfer.DescribeServer": [
            {
                "action": "transfer:DescribeServer"
            }
        ],
        "Transfer.DescribeUser": [
            {
                "action": "transfer:DescribeUser"
            }
        ],
        "Transfer.ImportSshPublicKey": [
            {
                "action": "transfer:ImportSshPublicKey"
            }
        ],
        "Transfer.ListSecurityPolicies": [
            {
                "action": "transfer:ListSecurityPolicies"
            }
        ],
        "Transfer.ListServers": [
            {
                "action": "transfer:ListServers"
            }
        ],
        "Transfer.ListTagsForResource": [
            {
                "action": "transfer:ListTagsForResource"
            }
        ],
        "Transfer.ListUsers": [
            {
                "action": "transfer:ListUsers"
            }
        ],
        "Transfer.StartServer": [
            {
                "action": "transfer:StartServer"
            }
        ],
        "Transfer.StopServer": [
            {
                "action": "transfer:StopServer"
            }
        ],
        "Transfer.TagResource": [
            {
                "action": "transfer:TagResource"
            }
        ],
        "Transfer.TestIdentityProvider": [
            {
                "action": "transfer:TestIdentityProvider"
            }
        ],
        "Transfer.UntagResource": [
            {
                "action": "transfer:UntagResource"
            }
        ],
        "Transfer.UpdateServer": [
            {
                "action": "transfer:UpdateServer"
            }
        ],
        "Transfer.UpdateUser": [
            {
                "action": "transfer:UpdateUser"
            }
        ],
        "GlobalAccelerator.AddCustomRoutingEndpoints": [
            {
                "action": "globalaccelerator:AddCustomRoutingEndpoints"
            }
        ],
        "GlobalAccelerator.AdvertiseByoipCidr": [
            {
                "action": "globalaccelerator:AdvertiseByoipCidr"
            }
        ],
        "GlobalAccelerator.AllowCustomRoutingTraffic": [
            {
                "action": "globalaccelerator:AllowCustomRoutingTraffic"
            }
        ],
        "GlobalAccelerator.CreateAccelerator": [
            {
                "action": "globalaccelerator:CreateAccelerator"
            }
        ],
        "GlobalAccelerator.CreateCustomRoutingAccelerator": [
            {
                "action": "globalaccelerator:CreateCustomRoutingAccelerator"
            }
        ],
        "GlobalAccelerator.CreateCustomRoutingEndpointGroup": [
            {
                "action": "globalaccelerator:CreateCustomRoutingEndpointGroup"
            }
        ],
        "GlobalAccelerator.CreateCustomRoutingListener": [
            {
                "action": "globalaccelerator:CreateCustomRoutingListener"
            }
        ],
        "GlobalAccelerator.CreateEndpointGroup": [
            {
                "action": "globalaccelerator:CreateEndpointGroup"
            }
        ],
        "GlobalAccelerator.CreateListener": [
            {
                "action": "globalaccelerator:CreateListener"
            }
        ],
        "GlobalAccelerator.DeleteAccelerator": [
            {
                "action": "globalaccelerator:DeleteAccelerator"
            }
        ],
        "GlobalAccelerator.DeleteCustomRoutingAccelerator": [
            {
                "action": "globalaccelerator:DeleteCustomRoutingAccelerator"
            }
        ],
        "GlobalAccelerator.DeleteCustomRoutingEndpointGroup": [
            {
                "action": "globalaccelerator:DeleteCustomRoutingEndpointGroup"
            }
        ],
        "GlobalAccelerator.DeleteCustomRoutingListener": [
            {
                "action": "globalaccelerator:DeleteCustomRoutingListener"
            }
        ],
        "GlobalAccelerator.DeleteEndpointGroup": [
            {
                "action": "globalaccelerator:DeleteEndpointGroup"
            }
        ],
        "GlobalAccelerator.DeleteListener": [
            {
                "action": "globalaccelerator:DeleteListener"
            }
        ],
        "GlobalAccelerator.DenyCustomRoutingTraffic": [
            {
                "action": "globalaccelerator:DenyCustomRoutingTraffic"
            }
        ],
        "GlobalAccelerator.DeprovisionByoipCidr": [
            {
                "action": "globalaccelerator:DeprovisionByoipCidr"
            }
        ],
        "GlobalAccelerator.DescribeAccelerator": [
            {
                "action": "globalaccelerator:DescribeAccelerator"
            }
        ],
        "GlobalAccelerator.DescribeAcceleratorAttributes": [
            {
                "action": "globalaccelerator:DescribeAcceleratorAttributes"
            }
        ],
        "GlobalAccelerator.DescribeCustomRoutingAccelerator": [
            {
                "action": "globalaccelerator:DescribeCustomRoutingAccelerator"
            }
        ],
        "GlobalAccelerator.DescribeCustomRoutingAcceleratorAttributes": [
            {
                "action": "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes"
            }
        ],
        "GlobalAccelerator.DescribeCustomRoutingEndpointGroup": [
            {
                "action": "globalaccelerator:DescribeCustomRoutingEndpointGroup"
            }
        ],
        "GlobalAccelerator.DescribeCustomRoutingListener": [
            {
                "action": "globalaccelerator:DescribeCustomRoutingListener"
            }
        ],
        "GlobalAccelerator.DescribeEndpointGroup": [
            {
                "action": "globalaccelerator:DescribeEndpointGroup"
            }
        ],
        "GlobalAccelerator.DescribeListener": [
            {
                "action": "globalaccelerator:DescribeListener"
            }
        ],
        "GlobalAccelerator.ListAccelerators": [
            {
                "action": "globalaccelerator:ListAccelerators"
            }
        ],
        "GlobalAccelerator.ListByoipCidrs": [
            {
                "action": "globalaccelerator:ListByoipCidrs"
            }
        ],
        "GlobalAccelerator.ListCustomRoutingAccelerators": [
            {
                "action": "globalaccelerator:ListCustomRoutingAccelerators"
            }
        ],
        "GlobalAccelerator.ListCustomRoutingEndpointGroups": [
            {
                "action": "globalaccelerator:ListCustomRoutingEndpointGroups"
            }
        ],
        "GlobalAccelerator.ListCustomRoutingListeners": [
            {
                "action": "globalaccelerator:ListCustomRoutingListeners"
            }
        ],
        "GlobalAccelerator.ListCustomRoutingPortMappings": [
            {
                "action": "globalaccelerator:ListCustomRoutingPortMappings"
            }
        ],
        "GlobalAccelerator.ListCustomRoutingPortMappingsByDestination": [
            {
                "action": "globalaccelerator:ListCustomRoutingPortMappingsByDestination"
            }
        ],
        "GlobalAccelerator.ListEndpointGroups": [
            {
                "action": "globalaccelerator:ListEndpointGroups"
            }
        ],
        "GlobalAccelerator.ListListeners": [
            {
                "action": "globalaccelerator:ListListeners"
            }
        ],
        "GlobalAccelerator.ListTagsForResource": [
            {
                "action": "globalaccelerator:ListTagsForResource"
            }
        ],
        "GlobalAccelerator.ProvisionByoipCidr": [
            {
                "action": "globalaccelerator:ProvisionByoipCidr"
            }
        ],
        "GlobalAccelerator.RemoveCustomRoutingEndpoints": [
            {
                "action": "globalaccelerator:RemoveCustomRoutingEndpoints"
            }
        ],
        "GlobalAccelerator.TagResource": [
            {
                "action": "globalaccelerator:TagResource"
            }
        ],
        "GlobalAccelerator.UntagResource": [
            {
                "action": "globalaccelerator:UntagResource"
            }
        ],
        "GlobalAccelerator.UpdateAccelerator": [
            {
                "action": "globalaccelerator:UpdateAccelerator"
            }
        ],
        "GlobalAccelerator.UpdateAcceleratorAttributes": [
            {
                "action": "globalaccelerator:UpdateAcceleratorAttributes"
            }
        ],
        "GlobalAccelerator.UpdateCustomRoutingAccelerator": [
            {
                "action": "globalaccelerator:UpdateCustomRoutingAccelerator"
            }
        ],
        "GlobalAccelerator.UpdateCustomRoutingAcceleratorAttributes": [
            {
                "action": "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes"
            }
        ],
        "GlobalAccelerator.UpdateCustomRoutingListener": [
            {
                "action": "globalaccelerator:UpdateCustomRoutingListener"
            }
        ],
        "GlobalAccelerator.UpdateEndpointGroup": [
            {
                "action": "globalaccelerator:UpdateEndpointGroup"
            }
        ],
        "GlobalAccelerator.UpdateListener": [
            {
                "action": "globalaccelerator:UpdateListener"
            }
        ],
        "GlobalAccelerator.WithdrawByoipCidr": [
            {
                "action": "globalaccelerator:WithdrawByoipCidr"
            }
        ],
        "ComprehendMedical.DetectEntities": [
            {
                "action": "comprehendmedical:DetectEntities"
            }
        ],
        "ComprehendMedical.DetectPHI": [
            {
                "action": "comprehendmedical:DetectPHI"
            }
        ],
        "KinesisAnalyticsV2.AddApplicationCloudWatchLoggingOption": [
            {
                "action": "kinesisanalytics:AddApplicationCloudWatchLoggingOption"
            }
        ],
        "KinesisAnalyticsV2.AddApplicationInput": [
            {
                "action": "kinesisanalytics:AddApplicationInput"
            }
        ],
        "KinesisAnalyticsV2.AddApplicationInputProcessingConfiguration": [
            {
                "action": "kinesisanalytics:AddApplicationInputProcessingConfiguration"
            }
        ],
        "KinesisAnalyticsV2.AddApplicationOutput": [
            {
                "action": "kinesisanalytics:AddApplicationOutput"
            }
        ],
        "KinesisAnalyticsV2.AddApplicationReferenceDataSource": [
            {
                "action": "kinesisanalytics:AddApplicationReferenceDataSource"
            }
        ],
        "KinesisAnalyticsV2.AddApplicationVpcConfiguration": [
            {
                "action": "kinesisanalytics:AddApplicationVpcConfiguration"
            }
        ],
        "KinesisAnalyticsV2.CreateApplication": [
            {
                "action": "kinesisanalytics:CreateApplication"
            }
        ],
        "KinesisAnalyticsV2.CreateApplicationSnapshot": [
            {
                "action": "kinesisanalytics:CreateApplicationSnapshot"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplication": [
            {
                "action": "kinesisanalytics:DeleteApplication"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplicationCloudWatchLoggingOption": [
            {
                "action": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplicationInputProcessingConfiguration": [
            {
                "action": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplicationOutput": [
            {
                "action": "kinesisanalytics:DeleteApplicationOutput"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplicationReferenceDataSource": [
            {
                "action": "kinesisanalytics:DeleteApplicationReferenceDataSource"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplicationSnapshot": [
            {
                "action": "kinesisanalytics:DeleteApplicationSnapshot"
            }
        ],
        "KinesisAnalyticsV2.DeleteApplicationVpcConfiguration": [
            {
                "action": "kinesisanalytics:DeleteApplicationVpcConfiguration"
            }
        ],
        "KinesisAnalyticsV2.DescribeApplication": [
            {
                "action": "kinesisanalytics:DescribeApplication"
            }
        ],
        "KinesisAnalyticsV2.DescribeApplicationSnapshot": [
            {
                "action": "kinesisanalytics:DescribeApplicationSnapshot"
            }
        ],
        "KinesisAnalyticsV2.DiscoverInputSchema": [
            {
                "action": "kinesisanalytics:DiscoverInputSchema"
            }
        ],
        "KinesisAnalyticsV2.ListApplicationSnapshots": [
            {
                "action": "kinesisanalytics:ListApplicationSnapshots"
            }
        ],
        "KinesisAnalyticsV2.ListApplications": [
            {
                "action": "kinesisanalytics:ListApplications"
            }
        ],
        "KinesisAnalyticsV2.ListTagsForResource": [
            {
                "action": "kinesisanalytics:ListTagsForResource"
            }
        ],
        "KinesisAnalyticsV2.StartApplication": [
            {
                "action": "kinesisanalytics:StartApplication"
            }
        ],
        "KinesisAnalyticsV2.StopApplication": [
            {
                "action": "kinesisanalytics:StopApplication"
            }
        ],
        "KinesisAnalyticsV2.TagResource": [
            {
                "action": "kinesisanalytics:TagResource"
            }
        ],
        "KinesisAnalyticsV2.UntagResource": [
            {
                "action": "kinesisanalytics:UntagResource"
            }
        ],
        "KinesisAnalyticsV2.UpdateApplication": [
            {
                "action": "kinesisanalytics:UpdateApplication"
            }
        ],
        "MediaConnect.AddFlowOutputs": [
            {
                "action": "mediaconnect:AddFlowOutputs"
            }
        ],
        "MediaConnect.CreateFlow": [
            {
                "action": "mediaconnect:CreateFlow"
            }
        ],
        "MediaConnect.DeleteFlow": [
            {
                "action": "mediaconnect:DeleteFlow"
            }
        ],
        "MediaConnect.DescribeFlow": [
            {
                "action": "mediaconnect:DescribeFlow"
            }
        ],
        "MediaConnect.GrantFlowEntitlements": [
            {
                "action": "mediaconnect:GrantFlowEntitlements"
            }
        ],
        "MediaConnect.ListEntitlements": [
            {
                "action": "mediaconnect:ListEntitlements"
            }
        ],
        "MediaConnect.ListFlows": [
            {
                "action": "mediaconnect:ListFlows"
            }
        ],
        "MediaConnect.RemoveFlowOutput": [
            {
                "action": "mediaconnect:RemoveFlowOutput"
            }
        ],
        "MediaConnect.RevokeFlowEntitlement": [
            {
                "action": "mediaconnect:RevokeFlowEntitlement"
            }
        ],
        "MediaConnect.StartFlow": [
            {
                "action": "mediaconnect:StartFlow"
            }
        ],
        "MediaConnect.StopFlow": [
            {
                "action": "mediaconnect:StopFlow"
            }
        ],
        "MediaConnect.UpdateFlowEntitlement": [
            {
                "action": "mediaconnect:UpdateFlowEntitlement"
            }
        ],
        "MediaConnect.UpdateFlowOutput": [
            {
                "action": "mediaconnect:UpdateFlowOutput"
            }
        ],
        "MediaConnect.UpdateFlowSource": [
            {
                "action": "mediaconnect:UpdateFlowSource"
            }
        ],
        "FSx.CancelDataRepositoryTask": [
            {
                "action": "fsx:CancelDataRepositoryTask"
            }
        ],
        "FSx.CreateBackup": [
            {
                "action": "fsx:CreateBackup"
            }
        ],
        "FSx.CreateDataRepositoryTask": [
            {
                "action": "fsx:CreateDataRepositoryTask"
            }
        ],
        "FSx.CreateFileSystem": [
            {
                "action": "fsx:CreateFileSystem"
            }
        ],
        "FSx.CreateFileSystemFromBackup": [
            {
                "action": "fsx:CreateFileSystemFromBackup"
            }
        ],
        "FSx.DeleteBackup": [
            {
                "action": "fsx:DeleteBackup"
            }
        ],
        "FSx.DeleteFileSystem": [
            {
                "action": "fsx:DeleteFileSystem"
            }
        ],
        "FSx.DescribeBackups": [
            {
                "action": "fsx:DescribeBackups"
            }
        ],
        "FSx.DescribeDataRepositoryTasks": [
            {
                "action": "fsx:DescribeDataRepositoryTasks"
            }
        ],
        "FSx.DescribeFileSystems": [
            {
                "action": "fsx:DescribeFileSystems"
            }
        ],
        "FSx.ListTagsForResource": [
            {
                "action": "fsx:ListTagsForResource"
            }
        ],
        "FSx.TagResource": [
            {
                "action": "fsx:TagResource"
            }
        ],
        "FSx.UntagResource": [
            {
                "action": "fsx:UntagResource"
            }
        ],
        "FSx.UpdateFileSystem": [
            {
                "action": "fsx:UpdateFileSystem"
            }
        ],
        "SecurityHub.AcceptInvitation": [
            {
                "action": "securityhub:AcceptInvitation"
            }
        ],
        "SecurityHub.BatchDisableStandards": [
            {
                "action": "securityhub:BatchDisableStandards"
            }
        ],
        "SecurityHub.BatchEnableStandards": [
            {
                "action": "securityhub:BatchEnableStandards"
            }
        ],
        "SecurityHub.BatchImportFindings": [
            {
                "action": "securityhub:BatchImportFindings"
            }
        ],
        "SecurityHub.BatchUpdateFindings": [
            {
                "action": "securityhub:BatchUpdateFindings"
            }
        ],
        "SecurityHub.CreateActionTarget": [
            {
                "action": "securityhub:CreateActionTarget"
            }
        ],
        "SecurityHub.CreateInsight": [
            {
                "action": "securityhub:CreateInsight"
            }
        ],
        "SecurityHub.CreateMembers": [
            {
                "action": "securityhub:CreateMembers"
            }
        ],
        "SecurityHub.DeclineInvitations": [
            {
                "action": "securityhub:DeclineInvitations"
            }
        ],
        "SecurityHub.DeleteActionTarget": [
            {
                "action": "securityhub:DeleteActionTarget"
            }
        ],
        "SecurityHub.DeleteInsight": [
            {
                "action": "securityhub:DeleteInsight"
            }
        ],
        "SecurityHub.DeleteInvitations": [
            {
                "action": "securityhub:DeleteInvitations"
            }
        ],
        "SecurityHub.DeleteMembers": [
            {
                "action": "securityhub:DeleteMembers"
            }
        ],
        "SecurityHub.DescribeActionTargets": [
            {
                "action": "securityhub:DescribeActionTargets"
            }
        ],
        "SecurityHub.DescribeHub": [
            {
                "action": "securityhub:DescribeHub"
            }
        ],
        "SecurityHub.DescribeOrganizationConfiguration": [
            {
                "action": "securityhub:DescribeOrganizationConfiguration"
            }
        ],
        "SecurityHub.DescribeProducts": [
            {
                "action": "securityhub:DescribeProducts"
            }
        ],
        "SecurityHub.DescribeStandards": [
            {
                "action": "securityhub:DescribeStandards"
            }
        ],
        "SecurityHub.DescribeStandardsControls": [
            {
                "action": "securityhub:DescribeStandardsControls"
            }
        ],
        "SecurityHub.DisableImportFindingsForProduct": [
            {
                "action": "securityhub:DisableImportFindingsForProduct"
            }
        ],
        "SecurityHub.DisableOrganizationAdminAccount": [
            {
                "action": "securityhub:DisableOrganizationAdminAccount"
            }
        ],
        "SecurityHub.DisableSecurityHub": [
            {
                "action": "securityhub:DisableSecurityHub"
            }
        ],
        "SecurityHub.DisassociateFromMasterAccount": [
            {
                "action": "securityhub:DisassociateFromMasterAccount"
            }
        ],
        "SecurityHub.DisassociateMembers": [
            {
                "action": "securityhub:DisassociateMembers"
            }
        ],
        "SecurityHub.EnableImportFindingsForProduct": [
            {
                "action": "securityhub:EnableImportFindingsForProduct"
            }
        ],
        "SecurityHub.EnableOrganizationAdminAccount": [
            {
                "action": "securityhub:EnableOrganizationAdminAccount"
            }
        ],
        "SecurityHub.EnableSecurityHub": [
            {
                "action": "securityhub:EnableSecurityHub"
            }
        ],
        "SecurityHub.GetEnabledStandards": [
            {
                "action": "securityhub:GetEnabledStandards"
            }
        ],
        "SecurityHub.GetFindings": [
            {
                "action": "securityhub:GetFindings"
            }
        ],
        "SecurityHub.GetInsightResults": [
            {
                "action": "securityhub:GetInsightResults"
            }
        ],
        "SecurityHub.GetInsights": [
            {
                "action": "securityhub:GetInsights"
            }
        ],
        "SecurityHub.GetInvitationsCount": [
            {
                "action": "securityhub:GetInvitationsCount"
            }
        ],
        "SecurityHub.GetMasterAccount": [
            {
                "action": "securityhub:GetMasterAccount"
            }
        ],
        "SecurityHub.GetMembers": [
            {
                "action": "securityhub:GetMembers"
            }
        ],
        "SecurityHub.InviteMembers": [
            {
                "action": "securityhub:InviteMembers"
            }
        ],
        "SecurityHub.ListEnabledProductsForImport": [
            {
                "action": "securityhub:ListEnabledProductsForImport"
            }
        ],
        "SecurityHub.ListInvitations": [
            {
                "action": "securityhub:ListInvitations"
            }
        ],
        "SecurityHub.ListMembers": [
            {
                "action": "securityhub:ListMembers"
            }
        ],
        "SecurityHub.ListOrganizationAdminAccounts": [
            {
                "action": "securityhub:ListOrganizationAdminAccounts"
            }
        ],
        "SecurityHub.ListTagsForResource": [
            {
                "action": "securityhub:ListTagsForResource"
            }
        ],
        "SecurityHub.TagResource": [
            {
                "action": "securityhub:TagResource"
            }
        ],
        "SecurityHub.UntagResource": [
            {
                "action": "securityhub:UntagResource"
            }
        ],
        "SecurityHub.UpdateActionTarget": [
            {
                "action": "securityhub:UpdateActionTarget"
            }
        ],
        "SecurityHub.UpdateFindings": [
            {
                "action": "securityhub:UpdateFindings"
            }
        ],
        "SecurityHub.UpdateInsight": [
            {
                "action": "securityhub:UpdateInsight"
            }
        ],
        "SecurityHub.UpdateOrganizationConfiguration": [
            {
                "action": "securityhub:UpdateOrganizationConfiguration"
            }
        ],
        "SecurityHub.UpdateSecurityHubConfiguration": [
            {
                "action": "securityhub:UpdateSecurityHubConfiguration"
            }
        ],
        "SecurityHub.UpdateStandardsControl": [
            {
                "action": "securityhub:UpdateStandardsControl"
            }
        ],
        "AppMesh.CreateGatewayRoute": [
            {
                "action": "appmesh:CreateGatewayRoute"
            }
        ],
        "AppMesh.CreateMesh": [
            {
                "action": "appmesh:CreateMesh"
            }
        ],
        "AppMesh.CreateRoute": [
            {
                "action": "appmesh:CreateRoute"
            }
        ],
        "AppMesh.CreateVirtualGateway": [
            {
                "action": "appmesh:CreateVirtualGateway"
            }
        ],
        "AppMesh.CreateVirtualNode": [
            {
                "action": "appmesh:CreateVirtualNode"
            }
        ],
        "AppMesh.CreateVirtualRouter": [
            {
                "action": "appmesh:CreateVirtualRouter"
            }
        ],
        "AppMesh.CreateVirtualService": [
            {
                "action": "appmesh:CreateVirtualService"
            }
        ],
        "AppMesh.DeleteGatewayRoute": [
            {
                "action": "appmesh:DeleteGatewayRoute"
            }
        ],
        "AppMesh.DeleteMesh": [
            {
                "action": "appmesh:DeleteMesh"
            }
        ],
        "AppMesh.DeleteRoute": [
            {
                "action": "appmesh:DeleteRoute"
            }
        ],
        "AppMesh.DeleteVirtualGateway": [
            {
                "action": "appmesh:DeleteVirtualGateway"
            }
        ],
        "AppMesh.DeleteVirtualNode": [
            {
                "action": "appmesh:DeleteVirtualNode"
            }
        ],
        "AppMesh.DeleteVirtualRouter": [
            {
                "action": "appmesh:DeleteVirtualRouter"
            }
        ],
        "AppMesh.DeleteVirtualService": [
            {
                "action": "appmesh:DeleteVirtualService"
            }
        ],
        "AppMesh.DescribeGatewayRoute": [
            {
                "action": "appmesh:DescribeGatewayRoute"
            }
        ],
        "AppMesh.DescribeMesh": [
            {
                "action": "appmesh:DescribeMesh"
            }
        ],
        "AppMesh.DescribeRoute": [
            {
                "action": "appmesh:DescribeRoute"
            }
        ],
        "AppMesh.DescribeVirtualGateway": [
            {
                "action": "appmesh:DescribeVirtualGateway"
            }
        ],
        "AppMesh.DescribeVirtualNode": [
            {
                "action": "appmesh:DescribeVirtualNode"
            }
        ],
        "AppMesh.DescribeVirtualRouter": [
            {
                "action": "appmesh:DescribeVirtualRouter"
            }
        ],
        "AppMesh.DescribeVirtualService": [
            {
                "action": "appmesh:DescribeVirtualService"
            }
        ],
        "AppMesh.ListGatewayRoutes": [
            {
                "action": "appmesh:ListGatewayRoutes"
            }
        ],
        "AppMesh.ListMeshes": [
            {
                "action": "appmesh:ListMeshes"
            }
        ],
        "AppMesh.ListRoutes": [
            {
                "action": "appmesh:ListRoutes"
            }
        ],
        "AppMesh.ListTagsForResource": [
            {
                "action": "appmesh:ListTagsForResource"
            }
        ],
        "AppMesh.ListVirtualGateways": [
            {
                "action": "appmesh:ListVirtualGateways"
            }
        ],
        "AppMesh.ListVirtualNodes": [
            {
                "action": "appmesh:ListVirtualNodes"
            }
        ],
        "AppMesh.ListVirtualRouters": [
            {
                "action": "appmesh:ListVirtualRouters"
            }
        ],
        "AppMesh.ListVirtualServices": [
            {
                "action": "appmesh:ListVirtualServices"
            }
        ],
        "AppMesh.TagResource": [
            {
                "action": "appmesh:TagResource"
            }
        ],
        "AppMesh.UntagResource": [
            {
                "action": "appmesh:UntagResource"
            }
        ],
        "AppMesh.UpdateGatewayRoute": [
            {
                "action": "appmesh:UpdateGatewayRoute"
            }
        ],
        "AppMesh.UpdateMesh": [
            {
                "action": "appmesh:UpdateMesh"
            }
        ],
        "AppMesh.UpdateRoute": [
            {
                "action": "appmesh:UpdateRoute"
            }
        ],
        "AppMesh.UpdateVirtualGateway": [
            {
                "action": "appmesh:UpdateVirtualGateway"
            }
        ],
        "AppMesh.UpdateVirtualNode": [
            {
                "action": "appmesh:UpdateVirtualNode"
            }
        ],
        "AppMesh.UpdateVirtualRouter": [
            {
                "action": "appmesh:UpdateVirtualRouter"
            }
        ],
        "AppMesh.UpdateVirtualService": [
            {
                "action": "appmesh:UpdateVirtualService"
            }
        ],
        "LicenseManager.AcceptGrant": [
            {
                "action": "license-manager:AcceptGrant"
            }
        ],
        "LicenseManager.CheckInLicense": [
            {
                "action": "license-manager:CheckInLicense"
            }
        ],
        "LicenseManager.CheckoutBorrowLicense": [
            {
                "action": "license-manager:CheckoutBorrowLicense"
            }
        ],
        "LicenseManager.CheckoutLicense": [
            {
                "action": "license-manager:CheckoutLicense"
            }
        ],
        "LicenseManager.CreateGrant": [
            {
                "action": "license-manager:CreateGrant"
            }
        ],
        "LicenseManager.CreateGrantVersion": [
            {
                "action": "license-manager:CreateGrantVersion"
            }
        ],
        "LicenseManager.CreateLicense": [
            {
                "action": "license-manager:CreateLicense"
            }
        ],
        "LicenseManager.CreateLicenseConfiguration": [
            {
                "action": "license-manager:CreateLicenseConfiguration"
            }
        ],
        "LicenseManager.CreateLicenseVersion": [
            {
                "action": "license-manager:CreateLicenseVersion"
            }
        ],
        "LicenseManager.CreateToken": [
            {
                "action": "license-manager:CreateToken"
            }
        ],
        "LicenseManager.DeleteGrant": [
            {
                "action": "license-manager:DeleteGrant"
            }
        ],
        "LicenseManager.DeleteLicense": [
            {
                "action": "license-manager:DeleteLicense"
            }
        ],
        "LicenseManager.DeleteLicenseConfiguration": [
            {
                "action": "license-manager:DeleteLicenseConfiguration"
            }
        ],
        "LicenseManager.DeleteToken": [
            {
                "action": "license-manager:DeleteToken"
            }
        ],
        "LicenseManager.ExtendLicenseConsumption": [
            {
                "action": "license-manager:ExtendLicenseConsumption"
            }
        ],
        "LicenseManager.GetAccessToken": [
            {
                "action": "license-manager:GetAccessToken"
            }
        ],
        "LicenseManager.GetGrant": [
            {
                "action": "license-manager:GetGrant"
            }
        ],
        "LicenseManager.GetLicense": [
            {
                "action": "license-manager:GetLicense"
            }
        ],
        "LicenseManager.GetLicenseConfiguration": [
            {
                "action": "license-manager:GetLicenseConfiguration"
            }
        ],
        "LicenseManager.GetLicenseUsage": [
            {
                "action": "license-manager:GetLicenseUsage"
            }
        ],
        "LicenseManager.GetServiceSettings": [
            {
                "action": "license-manager:GetServiceSettings"
            }
        ],
        "LicenseManager.ListAssociationsForLicenseConfiguration": [
            {
                "action": "license-manager:ListAssociationsForLicenseConfiguration"
            }
        ],
        "LicenseManager.ListDistributedGrants": [
            {
                "action": "license-manager:ListDistributedGrants"
            }
        ],
        "LicenseManager.ListFailuresForLicenseConfigurationOperations": [
            {
                "action": "license-manager:ListFailuresForLicenseConfigurationOperations"
            }
        ],
        "LicenseManager.ListLicenseConfigurations": [
            {
                "action": "license-manager:ListLicenseConfigurations"
            }
        ],
        "LicenseManager.ListLicenseSpecificationsForResource": [
            {
                "action": "license-manager:ListLicenseSpecificationsForResource"
            }
        ],
        "LicenseManager.ListLicenseVersions": [
            {
                "action": "license-manager:ListLicenseVersions"
            }
        ],
        "LicenseManager.ListLicenses": [
            {
                "action": "license-manager:ListLicenses"
            }
        ],
        "LicenseManager.ListReceivedGrants": [
            {
                "action": "license-manager:ListReceivedGrants"
            }
        ],
        "LicenseManager.ListReceivedLicenses": [
            {
                "action": "license-manager:ListReceivedLicenses"
            }
        ],
        "LicenseManager.ListResourceInventory": [
            {
                "action": "license-manager:ListResourceInventory"
            }
        ],
        "LicenseManager.ListTagsForResource": [
            {
                "action": "license-manager:ListTagsForResource"
            }
        ],
        "LicenseManager.ListTokens": [
            {
                "action": "license-manager:ListTokens"
            }
        ],
        "LicenseManager.ListUsageForLicenseConfiguration": [
            {
                "action": "license-manager:ListUsageForLicenseConfiguration"
            }
        ],
        "LicenseManager.RejectGrant": [
            {
                "action": "license-manager:RejectGrant"
            }
        ],
        "LicenseManager.TagResource": [
            {
                "action": "license-manager:TagResource"
            }
        ],
        "LicenseManager.UntagResource": [
            {
                "action": "license-manager:UntagResource"
            }
        ],
        "LicenseManager.UpdateLicenseConfiguration": [
            {
                "action": "license-manager:UpdateLicenseConfiguration"
            }
        ],
        "LicenseManager.UpdateLicenseSpecificationsForResource": [
            {
                "action": "license-manager:UpdateLicenseSpecificationsForResource"
            }
        ],
        "LicenseManager.UpdateServiceSettings": [
            {
                "action": "license-manager:UpdateServiceSettings"
            }
        ],
        "Kafka.BatchAssociateScramSecret": [
            {
                "action": "kafka:BatchAssociateScramSecret"
            }
        ],
        "Kafka.CreateCluster": [
            {
                "action": "kafka:CreateCluster"
            }
        ],
        "Kafka.CreateConfiguration": [
            {
                "action": "kafka:CreateConfiguration"
            }
        ],
        "Kafka.DeleteCluster": [
            {
                "action": "kafka:DeleteCluster"
            }
        ],
        "Kafka.DeleteConfiguration": [
            {
                "action": "kafka:DeleteConfiguration"
            }
        ],
        "Kafka.DescribeCluster": [
            {
                "action": "kafka:DescribeCluster"
            }
        ],
        "Kafka.DescribeClusterOperation": [
            {
                "action": "kafka:DescribeClusterOperation"
            }
        ],
        "Kafka.DescribeConfiguration": [
            {
                "action": "kafka:DescribeConfiguration"
            }
        ],
        "Kafka.DescribeConfigurationRevision": [
            {
                "action": "kafka:DescribeConfigurationRevision"
            }
        ],
        "Kafka.BatchDisassociateScramSecret": [
            {
                "action": "kafka:BatchDisassociateScramSecret"
            }
        ],
        "Kafka.GetBootstrapBrokers": [
            {
                "action": "kafka:GetBootstrapBrokers"
            }
        ],
        "Kafka.GetCompatibleKafkaVersions": [
            {
                "action": "kafka:GetCompatibleKafkaVersions"
            }
        ],
        "Kafka.ListClusterOperations": [
            {
                "action": "kafka:ListClusterOperations"
            }
        ],
        "Kafka.ListClusters": [
            {
                "action": "kafka:ListClusters"
            }
        ],
        "Kafka.ListConfigurationRevisions": [
            {
                "action": "kafka:ListConfigurationRevisions"
            }
        ],
        "Kafka.ListConfigurations": [
            {
                "action": "kafka:ListConfigurations"
            }
        ],
        "Kafka.ListKafkaVersions": [
            {
                "action": "kafka:ListKafkaVersions"
            }
        ],
        "Kafka.ListNodes": [
            {
                "action": "kafka:ListNodes"
            }
        ],
        "Kafka.ListScramSecrets": [
            {
                "action": "kafka:ListScramSecrets"
            }
        ],
        "Kafka.ListTagsForResource": [
            {
                "action": "kafka:ListTagsForResource"
            }
        ],
        "Kafka.RebootBroker": [
            {
                "action": "kafka:RebootBroker"
            }
        ],
        "Kafka.TagResource": [
            {
                "action": "kafka:TagResource"
            }
        ],
        "Kafka.UntagResource": [
            {
                "action": "kafka:UntagResource"
            }
        ],
        "Kafka.UpdateBrokerCount": [
            {
                "action": "kafka:UpdateBrokerCount"
            }
        ],
        "Kafka.UpdateBrokerStorage": [
            {
                "action": "kafka:UpdateBrokerStorage"
            }
        ],
        "Kafka.UpdateConfiguration": [
            {
                "action": "kafka:UpdateConfiguration"
            }
        ],
        "Kafka.UpdateClusterConfiguration": [
            {
                "action": "kafka:UpdateClusterConfiguration"
            }
        ],
        "Kafka.UpdateClusterKafkaVersion": [
            {
                "action": "kafka:UpdateClusterKafkaVersion"
            }
        ],
        "Kafka.UpdateMonitoring": [
            {
                "action": "kafka:UpdateMonitoring"
            }
        ],
        "DocDB.AddTagsToResource": [
            {
                "action": "rds:AddTagsToResource"
            }
        ],
        "DocDB.ApplyPendingMaintenanceAction": [
            {
                "action": "rds:ApplyPendingMaintenanceAction"
            }
        ],
        "DocDB.CopyDBClusterParameterGroup": [
            {
                "action": "rds:CopyDBClusterParameterGroup"
            }
        ],
        "DocDB.CopyDBClusterSnapshot": [
            {
                "action": "rds:CopyDBClusterSnapshot"
            }
        ],
        "DocDB.CreateDBCluster": [
            {
                "action": "rds:CreateDBCluster"
            }
        ],
        "DocDB.CreateDBClusterParameterGroup": [
            {
                "action": "rds:CreateDBClusterParameterGroup"
            }
        ],
        "DocDB.CreateDBClusterSnapshot": [
            {
                "action": "rds:CreateDBClusterSnapshot"
            }
        ],
        "DocDB.CreateDBInstance": [
            {
                "action": "rds:CreateDBInstance"
            }
        ],
        "DocDB.CreateDBSubnetGroup": [
            {
                "action": "rds:CreateDBSubnetGroup"
            }
        ],
        "DocDB.DeleteDBCluster": [
            {
                "action": "rds:DeleteDBCluster"
            }
        ],
        "DocDB.DeleteDBClusterParameterGroup": [
            {
                "action": "rds:DeleteDBClusterParameterGroup"
            }
        ],
        "DocDB.DeleteDBClusterSnapshot": [
            {
                "action": "rds:DeleteDBClusterSnapshot"
            }
        ],
        "DocDB.DeleteDBInstance": [
            {
                "action": "rds:DeleteDBInstance"
            }
        ],
        "DocDB.DeleteDBSubnetGroup": [
            {
                "action": "rds:DeleteDBSubnetGroup"
            }
        ],
        "DocDB.DescribeCertificates": [
            {
                "action": "rds:DescribeCertificates"
            }
        ],
        "DocDB.DescribeDBClusterParameterGroups": [
            {
                "action": "rds:DescribeDBClusterParameterGroups"
            }
        ],
        "DocDB.DescribeDBClusterParameters": [
            {
                "action": "rds:DescribeDBClusterParameters"
            }
        ],
        "DocDB.DescribeDBClusterSnapshotAttributes": [
            {
                "action": "rds:DescribeDBClusterSnapshotAttributes"
            }
        ],
        "DocDB.DescribeDBClusterSnapshots": [
            {
                "action": "rds:DescribeDBClusterSnapshots"
            }
        ],
        "DocDB.DescribeDBClusters": [
            {
                "action": "rds:DescribeDBClusters"
            }
        ],
        "DocDB.DescribeDBEngineVersions": [
            {
                "action": "rds:DescribeDBEngineVersions"
            }
        ],
        "DocDB.DescribeDBInstances": [
            {
                "action": "rds:DescribeDBInstances"
            }
        ],
        "DocDB.DescribeDBSubnetGroups": [
            {
                "action": "rds:DescribeDBSubnetGroups"
            }
        ],
        "DocDB.DescribeEngineDefaultClusterParameters": [
            {
                "action": "rds:DescribeEngineDefaultClusterParameters"
            }
        ],
        "DocDB.DescribeEventCategories": [
            {
                "action": "rds:DescribeEventCategories"
            }
        ],
        "DocDB.DescribeEvents": [
            {
                "action": "rds:DescribeEvents"
            }
        ],
        "DocDB.DescribeOrderableDBInstanceOptions": [
            {
                "action": "rds:DescribeOrderableDBInstanceOptions"
            }
        ],
        "DocDB.DescribePendingMaintenanceActions": [
            {
                "action": "rds:DescribePendingMaintenanceActions"
            }
        ],
        "DocDB.FailoverDBCluster": [
            {
                "action": "rds:FailoverDBCluster"
            }
        ],
        "DocDB.ListTagsForResource": [
            {
                "action": "rds:ListTagsForResource"
            }
        ],
        "DocDB.ModifyDBCluster": [
            {
                "action": "rds:ModifyDBCluster"
            }
        ],
        "DocDB.ModifyDBClusterParameterGroup": [
            {
                "action": "rds:ModifyDBClusterParameterGroup"
            }
        ],
        "DocDB.ModifyDBClusterSnapshotAttribute": [
            {
                "action": "rds:ModifyDBClusterSnapshotAttribute"
            }
        ],
        "DocDB.ModifyDBInstance": [
            {
                "action": "rds:ModifyDBInstance"
            }
        ],
        "DocDB.ModifyDBSubnetGroup": [
            {
                "action": "rds:ModifyDBSubnetGroup"
            }
        ],
        "DocDB.RebootDBInstance": [
            {
                "action": "rds:RebootDBInstance"
            }
        ],
        "DocDB.RemoveTagsFromResource": [
            {
                "action": "rds:RemoveTagsFromResource"
            }
        ],
        "DocDB.ResetDBClusterParameterGroup": [
            {
                "action": "rds:ResetDBClusterParameterGroup"
            }
        ],
        "DocDB.RestoreDBClusterFromSnapshot": [
            {
                "action": "rds:RestoreDBClusterFromSnapshot"
            }
        ],
        "DocDB.RestoreDBClusterToPointInTime": [
            {
                "action": "rds:RestoreDBClusterToPointInTime"
            }
        ],
        "DocDB.StartDBCluster": [
            {
                "action": "rds:StartDBCluster"
            }
        ],
        "DocDB.StopDBCluster": [
            {
                "action": "rds:StopDBCluster"
            }
        ],
        "Backup.CreateBackupPlan": [
            {
                "action": "backup:CreateBackupPlan"
            }
        ],
        "Backup.CreateBackupSelection": [
            {
                "action": "backup:CreateBackupSelection"
            }
        ],
        "Backup.CreateBackupVault": [
            {
                "action": "backup:CreateBackupVault"
            }
        ],
        "Backup.DeleteBackupPlan": [
            {
                "action": "backup:DeleteBackupPlan"
            }
        ],
        "Backup.DeleteBackupSelection": [
            {
                "action": "backup:DeleteBackupSelection"
            }
        ],
        "Backup.DeleteBackupVault": [
            {
                "action": "backup:DeleteBackupVault"
            }
        ],
        "Backup.DeleteBackupVaultAccessPolicy": [
            {
                "action": "backup:DeleteBackupVaultAccessPolicy"
            }
        ],
        "Backup.DeleteBackupVaultNotifications": [
            {
                "action": "backup:DeleteBackupVaultNotifications"
            }
        ],
        "Backup.DeleteRecoveryPoint": [
            {
                "action": "backup:DeleteRecoveryPoint"
            }
        ],
        "Backup.DescribeBackupJob": [
            {
                "action": "backup:DescribeBackupJob"
            }
        ],
        "Backup.DescribeBackupVault": [
            {
                "action": "backup:DescribeBackupVault"
            }
        ],
        "Backup.DescribeCopyJob": [
            {
                "action": "backup:DescribeCopyJob"
            }
        ],
        "Backup.DescribeGlobalSettings": [
            {
                "action": "backup:DescribeGlobalSettings"
            }
        ],
        "Backup.DescribeProtectedResource": [
            {
                "action": "backup:DescribeProtectedResource"
            }
        ],
        "Backup.DescribeRecoveryPoint": [
            {
                "action": "backup:DescribeRecoveryPoint"
            }
        ],
        "Backup.DescribeRegionSettings": [
            {
                "action": "backup:DescribeRegionSettings"
            }
        ],
        "Backup.DescribeRestoreJob": [
            {
                "action": "backup:DescribeRestoreJob"
            }
        ],
        "Backup.ExportBackupPlanTemplate": [
            {
                "action": "backup:ExportBackupPlanTemplate"
            }
        ],
        "Backup.GetBackupPlan": [
            {
                "action": "backup:GetBackupPlan"
            }
        ],
        "Backup.GetBackupPlanFromJSON": [
            {
                "action": "backup:GetBackupPlanFromJSON"
            }
        ],
        "Backup.GetBackupPlanFromTemplate": [
            {
                "action": "backup:GetBackupPlanFromTemplate"
            }
        ],
        "Backup.GetBackupSelection": [
            {
                "action": "backup:GetBackupSelection"
            }
        ],
        "Backup.GetBackupVaultAccessPolicy": [
            {
                "action": "backup:GetBackupVaultAccessPolicy"
            }
        ],
        "Backup.GetBackupVaultNotifications": [
            {
                "action": "backup:GetBackupVaultNotifications"
            }
        ],
        "Backup.GetRecoveryPointRestoreMetadata": [
            {
                "action": "backup:GetRecoveryPointRestoreMetadata"
            }
        ],
        "Backup.GetSupportedResourceTypes": [
            {
                "action": "backup:GetSupportedResourceTypes"
            }
        ],
        "Backup.ListBackupJobs": [
            {
                "action": "backup:ListBackupJobs"
            }
        ],
        "Backup.ListBackupPlanTemplates": [
            {
                "action": "backup:ListBackupPlanTemplates"
            }
        ],
        "Backup.ListBackupPlanVersions": [
            {
                "action": "backup:ListBackupPlanVersions"
            }
        ],
        "Backup.ListBackupPlans": [
            {
                "action": "backup:ListBackupPlans"
            }
        ],
        "Backup.ListBackupSelections": [
            {
                "action": "backup:ListBackupSelections"
            }
        ],
        "Backup.ListBackupVaults": [
            {
                "action": "backup:ListBackupVaults"
            }
        ],
        "Backup.ListCopyJobs": [
            {
                "action": "backup:ListCopyJobs"
            }
        ],
        "Backup.ListProtectedResources": [
            {
                "action": "backup:ListProtectedResources"
            }
        ],
        "Backup.ListRecoveryPointsByBackupVault": [
            {
                "action": "backup:ListRecoveryPointsByBackupVault"
            }
        ],
        "Backup.ListRecoveryPointsByResource": [
            {
                "action": "backup:ListRecoveryPointsByResource"
            }
        ],
        "Backup.ListRestoreJobs": [
            {
                "action": "backup:ListRestoreJobs"
            }
        ],
        "Backup.ListTags": [
            {
                "action": "backup:ListTags"
            }
        ],
        "Backup.PutBackupVaultAccessPolicy": [
            {
                "action": "backup:PutBackupVaultAccessPolicy"
            }
        ],
        "Backup.PutBackupVaultNotifications": [
            {
                "action": "backup:PutBackupVaultNotifications"
            }
        ],
        "Backup.StartBackupJob": [
            {
                "action": "backup:StartBackupJob"
            }
        ],
        "Backup.StartCopyJob": [
            {
                "action": "backup:StartCopyJob"
            }
        ],
        "Backup.StartRestoreJob": [
            {
                "action": "backup:StartRestoreJob"
            }
        ],
        "Backup.StopBackupJob": [
            {
                "action": "backup:StopBackupJob"
            }
        ],
        "Backup.TagResource": [
            {
                "action": "backup:TagResource"
            }
        ],
        "Backup.UntagResource": [
            {
                "action": "backup:UntagResource"
            }
        ],
        "Backup.UpdateBackupPlan": [
            {
                "action": "backup:UpdateBackupPlan"
            }
        ],
        "Backup.UpdateGlobalSettings": [
            {
                "action": "backup:UpdateGlobalSettings"
            }
        ],
        "Backup.UpdateRecoveryPointLifecycle": [
            {
                "action": "backup:UpdateRecoveryPointLifecycle"
            }
        ],
        "Backup.UpdateRegionSettings": [
            {
                "action": "backup:UpdateRegionSettings"
            }
        ],
        "WorkLink.AssociateDomain": [
            {
                "action": "worklink:AssociateDomain"
            }
        ],
        "WorkLink.AssociateWebsiteAuthorizationProvider": [
            {
                "action": "worklink:AssociateWebsiteAuthorizationProvider"
            }
        ],
        "WorkLink.AssociateWebsiteCertificateAuthority": [
            {
                "action": "worklink:AssociateWebsiteCertificateAuthority"
            }
        ],
        "WorkLink.CreateFleet": [
            {
                "action": "worklink:CreateFleet"
            }
        ],
        "WorkLink.DeleteFleet": [
            {
                "action": "worklink:DeleteFleet"
            }
        ],
        "WorkLink.DescribeAuditStreamConfiguration": [
            {
                "action": "worklink:DescribeAuditStreamConfiguration"
            }
        ],
        "WorkLink.DescribeCompanyNetworkConfiguration": [
            {
                "action": "worklink:DescribeCompanyNetworkConfiguration"
            }
        ],
        "WorkLink.DescribeDevice": [
            {
                "action": "worklink:DescribeDevice"
            }
        ],
        "WorkLink.DescribeDevicePolicyConfiguration": [
            {
                "action": "worklink:DescribeDevicePolicyConfiguration"
            }
        ],
        "WorkLink.DescribeDomain": [
            {
                "action": "worklink:DescribeDomain"
            }
        ],
        "WorkLink.DescribeFleetMetadata": [
            {
                "action": "worklink:DescribeFleetMetadata"
            }
        ],
        "WorkLink.DescribeIdentityProviderConfiguration": [
            {
                "action": "worklink:DescribeIdentityProviderConfiguration"
            }
        ],
        "WorkLink.DescribeWebsiteCertificateAuthority": [
            {
                "action": "worklink:DescribeWebsiteCertificateAuthority"
            }
        ],
        "WorkLink.DisassociateDomain": [
            {
                "action": "worklink:DisassociateDomain"
            }
        ],
        "WorkLink.DisassociateWebsiteAuthorizationProvider": [
            {
                "action": "worklink:DisassociateWebsiteAuthorizationProvider"
            }
        ],
        "WorkLink.DisassociateWebsiteCertificateAuthority": [
            {
                "action": "worklink:DisassociateWebsiteCertificateAuthority"
            }
        ],
        "WorkLink.ListDevices": [
            {
                "action": "worklink:ListDevices"
            }
        ],
        "WorkLink.ListDomains": [
            {
                "action": "worklink:ListDomains"
            }
        ],
        "WorkLink.ListFleets": [
            {
                "action": "worklink:ListFleets"
            }
        ],
        "WorkLink.ListTagsForResource": [
            {
                "action": "worklink:ListTagsForResource"
            }
        ],
        "WorkLink.ListWebsiteAuthorizationProviders": [
            {
                "action": "worklink:ListWebsiteAuthorizationProviders"
            }
        ],
        "WorkLink.ListWebsiteCertificateAuthorities": [
            {
                "action": "worklink:ListWebsiteCertificateAuthorities"
            }
        ],
        "WorkLink.RestoreDomainAccess": [
            {
                "action": "worklink:RestoreDomainAccess"
            }
        ],
        "WorkLink.RevokeDomainAccess": [
            {
                "action": "worklink:RevokeDomainAccess"
            }
        ],
        "WorkLink.SignOutUser": [
            {
                "action": "worklink:SignOutUser"
            }
        ],
        "WorkLink.TagResource": [
            {
                "action": "worklink:TagResource"
            }
        ],
        "WorkLink.UntagResource": [
            {
                "action": "worklink:UntagResource"
            }
        ],
        "WorkLink.UpdateAuditStreamConfiguration": [
            {
                "action": "worklink:UpdateAuditStreamConfiguration"
            }
        ],
        "WorkLink.UpdateCompanyNetworkConfiguration": [
            {
                "action": "worklink:UpdateCompanyNetworkConfiguration"
            }
        ],
        "WorkLink.UpdateDevicePolicyConfiguration": [
            {
                "action": "worklink:UpdateDevicePolicyConfiguration"
            }
        ],
        "WorkLink.UpdateDomainMetadata": [
            {
                "action": "worklink:UpdateDomainMetadata"
            }
        ],
        "WorkLink.UpdateFleetMetadata": [
            {
                "action": "worklink:UpdateFleetMetadata"
            }
        ],
        "WorkLink.UpdateIdentityProviderConfiguration": [
            {
                "action": "worklink:UpdateIdentityProviderConfiguration"
            }
        ],
        "Textract.AnalyzeDocument": [
            {
                "action": "textract:AnalyzeDocument"
            }
        ],
        "Textract.DetectDocumentText": [
            {
                "action": "textract:DetectDocumentText"
            }
        ],
        "Textract.GetDocumentAnalysis": [
            {
                "action": "textract:GetDocumentAnalysis"
            }
        ],
        "Textract.GetDocumentTextDetection": [
            {
                "action": "textract:GetDocumentTextDetection"
            }
        ],
        "Textract.StartDocumentAnalysis": [
            {
                "action": "textract:StartDocumentAnalysis"
            }
        ],
        "Textract.StartDocumentTextDetection": [
            {
                "action": "textract:StartDocumentTextDetection"
            }
        ],
        "ManagedBlockchain.CreateMember": [
            {
                "action": "managedblockchain:CreateMember"
            }
        ],
        "ManagedBlockchain.CreateNetwork": [
            {
                "action": "managedblockchain:CreateNetwork"
            }
        ],
        "ManagedBlockchain.CreateNode": [
            {
                "action": "managedblockchain:CreateNode"
            }
        ],
        "ManagedBlockchain.CreateProposal": [
            {
                "action": "managedblockchain:CreateProposal"
            }
        ],
        "ManagedBlockchain.DeleteMember": [
            {
                "action": "managedblockchain:DeleteMember"
            }
        ],
        "ManagedBlockchain.DeleteNode": [
            {
                "action": "managedblockchain:DeleteNode"
            }
        ],
        "ManagedBlockchain.GetMember": [
            {
                "action": "managedblockchain:GetMember"
            }
        ],
        "ManagedBlockchain.GetNetwork": [
            {
                "action": "managedblockchain:GetNetwork"
            }
        ],
        "ManagedBlockchain.GetNode": [
            {
                "action": "managedblockchain:GetNode"
            }
        ],
        "ManagedBlockchain.GetProposal": [
            {
                "action": "managedblockchain:GetProposal"
            }
        ],
        "ManagedBlockchain.ListInvitations": [
            {
                "action": "managedblockchain:ListInvitations"
            }
        ],
        "ManagedBlockchain.ListMembers": [
            {
                "action": "managedblockchain:ListMembers"
            }
        ],
        "ManagedBlockchain.ListNetworks": [
            {
                "action": "managedblockchain:ListNetworks"
            }
        ],
        "ManagedBlockchain.ListNodes": [
            {
                "action": "managedblockchain:ListNodes"
            }
        ],
        "ManagedBlockchain.ListProposalVotes": [
            {
                "action": "managedblockchain:ListProposalVotes"
            }
        ],
        "ManagedBlockchain.ListProposals": [
            {
                "action": "managedblockchain:ListProposals"
            }
        ],
        "ManagedBlockchain.ListTagsForResource": [
            {
                "action": "managedblockchain:ListTagsForResource"
            }
        ],
        "ManagedBlockchain.RejectInvitation": [
            {
                "action": "managedblockchain:RejectInvitation"
            }
        ],
        "ManagedBlockchain.TagResource": [
            {
                "action": "managedblockchain:TagResource"
            }
        ],
        "ManagedBlockchain.UntagResource": [
            {
                "action": "managedblockchain:UntagResource"
            }
        ],
        "ManagedBlockchain.UpdateMember": [
            {
                "action": "managedblockchain:UpdateMember"
            }
        ],
        "ManagedBlockchain.UpdateNode": [
            {
                "action": "managedblockchain:UpdateNode"
            }
        ],
        "ManagedBlockchain.VoteOnProposal": [
            {
                "action": "managedblockchain:VoteOnProposal"
            }
        ],
        "MediaPackageVod.CreateAsset": [
            {
                "action": "mediapackage-vod:CreateAsset"
            }
        ],
        "MediaPackageVod.CreatePackagingConfiguration": [
            {
                "action": "mediapackage-vod:CreatePackagingConfiguration"
            }
        ],
        "MediaPackageVod.CreatePackagingGroup": [
            {
                "action": "mediapackage-vod:CreatePackagingGroup"
            }
        ],
        "MediaPackageVod.DeleteAsset": [
            {
                "action": "mediapackage-vod:DeleteAsset"
            }
        ],
        "MediaPackageVod.DeletePackagingConfiguration": [
            {
                "action": "mediapackage-vod:DeletePackagingConfiguration"
            }
        ],
        "MediaPackageVod.DeletePackagingGroup": [
            {
                "action": "mediapackage-vod:DeletePackagingGroup"
            }
        ],
        "MediaPackageVod.DescribeAsset": [
            {
                "action": "mediapackage-vod:DescribeAsset"
            }
        ],
        "MediaPackageVod.DescribePackagingConfiguration": [
            {
                "action": "mediapackage-vod:DescribePackagingConfiguration"
            }
        ],
        "MediaPackageVod.DescribePackagingGroup": [
            {
                "action": "mediapackage-vod:DescribePackagingGroup"
            }
        ],
        "MediaPackageVod.ListAssets": [
            {
                "action": "mediapackage-vod:ListAssets"
            }
        ],
        "MediaPackageVod.ListPackagingConfigurations": [
            {
                "action": "mediapackage-vod:ListPackagingConfigurations"
            }
        ],
        "MediaPackageVod.ListPackagingGroups": [
            {
                "action": "mediapackage-vod:ListPackagingGroups"
            }
        ],
        "MediaPackageVod.ListTagsForResource": [
            {
                "action": "mediapackage-vod:ListTagsForResource"
            }
        ],
        "MediaPackageVod.TagResource": [
            {
                "action": "mediapackage-vod:TagResource"
            }
        ],
        "MediaPackageVod.UntagResource": [
            {
                "action": "mediapackage-vod:UntagResource"
            }
        ],
        "GroundStation.CancelContact": [
            {
                "action": "groundstation:CancelContact"
            }
        ],
        "GroundStation.CreateConfig": [
            {
                "action": "groundstation:CreateConfig"
            }
        ],
        "GroundStation.CreateDataflowEndpointGroup": [
            {
                "action": "groundstation:CreateDataflowEndpointGroup"
            }
        ],
        "GroundStation.CreateMissionProfile": [
            {
                "action": "groundstation:CreateMissionProfile"
            }
        ],
        "GroundStation.DeleteConfig": [
            {
                "action": "groundstation:DeleteConfig"
            }
        ],
        "GroundStation.DeleteDataflowEndpointGroup": [
            {
                "action": "groundstation:DeleteDataflowEndpointGroup"
            }
        ],
        "GroundStation.DeleteMissionProfile": [
            {
                "action": "groundstation:DeleteMissionProfile"
            }
        ],
        "GroundStation.DescribeContact": [
            {
                "action": "groundstation:DescribeContact"
            }
        ],
        "GroundStation.GetConfig": [
            {
                "action": "groundstation:GetConfig"
            }
        ],
        "GroundStation.GetDataflowEndpointGroup": [
            {
                "action": "groundstation:GetDataflowEndpointGroup"
            }
        ],
        "GroundStation.GetMinuteUsage": [
            {
                "action": "groundstation:GetMinuteUsage"
            }
        ],
        "GroundStation.GetMissionProfile": [
            {
                "action": "groundstation:GetMissionProfile"
            }
        ],
        "GroundStation.GetSatellite": [
            {
                "action": "groundstation:GetSatellite"
            }
        ],
        "GroundStation.ListConfigs": [
            {
                "action": "groundstation:ListConfigs"
            }
        ],
        "GroundStation.ListContacts": [
            {
                "action": "groundstation:ListContacts"
            }
        ],
        "GroundStation.ListDataflowEndpointGroups": [
            {
                "action": "groundstation:ListDataflowEndpointGroups"
            }
        ],
        "GroundStation.ListGroundStations": [
            {
                "action": "groundstation:ListGroundStations"
            }
        ],
        "GroundStation.ListMissionProfiles": [
            {
                "action": "groundstation:ListMissionProfiles"
            }
        ],
        "GroundStation.ListSatellites": [
            {
                "action": "groundstation:ListSatellites"
            }
        ],
        "GroundStation.ListTagsForResource": [
            {
                "action": "groundstation:ListTagsForResource"
            }
        ],
        "GroundStation.ReserveContact": [
            {
                "action": "groundstation:ReserveContact"
            }
        ],
        "GroundStation.TagResource": [
            {
                "action": "groundstation:TagResource"
            }
        ],
        "GroundStation.UntagResource": [
            {
                "action": "groundstation:UntagResource"
            }
        ],
        "GroundStation.UpdateConfig": [
            {
                "action": "groundstation:UpdateConfig"
            }
        ],
        "GroundStation.UpdateMissionProfile": [
            {
                "action": "groundstation:UpdateMissionProfile"
            }
        ],
        "IoTThingsGraph.AssociateEntityToThing": [
            {
                "action": "iotthingsgraph:AssociateEntityToThing"
            }
        ],
        "IoTThingsGraph.CreateFlowTemplate": [
            {
                "action": "iotthingsgraph:CreateFlowTemplate"
            }
        ],
        "IoTThingsGraph.CreateSystemInstance": [
            {
                "action": "iotthingsgraph:CreateSystemInstance"
            }
        ],
        "IoTThingsGraph.CreateSystemTemplate": [
            {
                "action": "iotthingsgraph:CreateSystemTemplate"
            }
        ],
        "IoTThingsGraph.DeleteFlowTemplate": [
            {
                "action": "iotthingsgraph:DeleteFlowTemplate"
            }
        ],
        "IoTThingsGraph.DeleteNamespace": [
            {
                "action": "iotthingsgraph:DeleteNamespace"
            }
        ],
        "IoTThingsGraph.DeleteSystemInstance": [
            {
                "action": "iotthingsgraph:DeleteSystemInstance"
            }
        ],
        "IoTThingsGraph.DeleteSystemTemplate": [
            {
                "action": "iotthingsgraph:DeleteSystemTemplate"
            }
        ],
        "IoTThingsGraph.DeploySystemInstance": [
            {
                "action": "iotthingsgraph:DeploySystemInstance"
            }
        ],
        "IoTThingsGraph.DeprecateFlowTemplate": [
            {
                "action": "iotthingsgraph:DeprecateFlowTemplate"
            }
        ],
        "IoTThingsGraph.DeprecateSystemTemplate": [
            {
                "action": "iotthingsgraph:DeprecateSystemTemplate"
            }
        ],
        "IoTThingsGraph.DescribeNamespace": [
            {
                "action": "iotthingsgraph:DescribeNamespace"
            }
        ],
        "IoTThingsGraph.DissociateEntityFromThing": [
            {
                "action": "iotthingsgraph:DissociateEntityFromThing"
            }
        ],
        "IoTThingsGraph.GetEntities": [
            {
                "action": "iotthingsgraph:GetEntities"
            }
        ],
        "IoTThingsGraph.GetFlowTemplate": [
            {
                "action": "iotthingsgraph:GetFlowTemplate"
            }
        ],
        "IoTThingsGraph.GetFlowTemplateRevisions": [
            {
                "action": "iotthingsgraph:GetFlowTemplateRevisions"
            }
        ],
        "IoTThingsGraph.GetNamespaceDeletionStatus": [
            {
                "action": "iotthingsgraph:GetNamespaceDeletionStatus"
            }
        ],
        "IoTThingsGraph.GetSystemInstance": [
            {
                "action": "iotthingsgraph:GetSystemInstance"
            }
        ],
        "IoTThingsGraph.GetSystemTemplate": [
            {
                "action": "iotthingsgraph:GetSystemTemplate"
            }
        ],
        "IoTThingsGraph.GetSystemTemplateRevisions": [
            {
                "action": "iotthingsgraph:GetSystemTemplateRevisions"
            }
        ],
        "IoTThingsGraph.GetUploadStatus": [
            {
                "action": "iotthingsgraph:GetUploadStatus"
            }
        ],
        "IoTThingsGraph.ListFlowExecutionMessages": [
            {
                "action": "iotthingsgraph:ListFlowExecutionMessages"
            }
        ],
        "IoTThingsGraph.ListTagsForResource": [
            {
                "action": "iotthingsgraph:ListTagsForResource"
            }
        ],
        "IoTThingsGraph.SearchEntities": [
            {
                "action": "iotthingsgraph:SearchEntities"
            }
        ],
        "IoTThingsGraph.SearchFlowExecutions": [
            {
                "action": "iotthingsgraph:SearchFlowExecutions"
            }
        ],
        "IoTThingsGraph.SearchFlowTemplates": [
            {
                "action": "iotthingsgraph:SearchFlowTemplates"
            }
        ],
        "IoTThingsGraph.SearchSystemInstances": [
            {
                "action": "iotthingsgraph:SearchSystemInstances"
            }
        ],
        "IoTThingsGraph.SearchSystemTemplates": [
            {
                "action": "iotthingsgraph:SearchSystemTemplates"
            }
        ],
        "IoTThingsGraph.SearchThings": [
            {
                "action": "iotthingsgraph:SearchThings"
            }
        ],
        "IoTThingsGraph.TagResource": [
            {
                "action": "iotthingsgraph:TagResource"
            }
        ],
        "IoTThingsGraph.UndeploySystemInstance": [
            {
                "action": "iotthingsgraph:UndeploySystemInstance"
            }
        ],
        "IoTThingsGraph.UntagResource": [
            {
                "action": "iotthingsgraph:UntagResource"
            }
        ],
        "IoTThingsGraph.UpdateFlowTemplate": [
            {
                "action": "iotthingsgraph:UpdateFlowTemplate"
            }
        ],
        "IoTThingsGraph.UpdateSystemTemplate": [
            {
                "action": "iotthingsgraph:UpdateSystemTemplate"
            }
        ],
        "IoTThingsGraph.UploadEntityDefinitions": [
            {
                "action": "iotthingsgraph:UploadEntityDefinitions"
            }
        ],
        "IoTEvents.CreateDetectorModel": [
            {
                "action": "iotevents:CreateDetectorModel"
            }
        ],
        "IoTEvents.CreateInput": [
            {
                "action": "iotevents:CreateInput"
            }
        ],
        "IoTEvents.DeleteDetectorModel": [
            {
                "action": "iotevents:DeleteDetectorModel"
            }
        ],
        "IoTEvents.DeleteInput": [
            {
                "action": "iotevents:DeleteInput"
            }
        ],
        "IoTEvents.DescribeDetectorModel": [
            {
                "action": "iotevents:DescribeDetectorModel"
            }
        ],
        "IoTEvents.DescribeInput": [
            {
                "action": "iotevents:DescribeInput"
            }
        ],
        "IoTEvents.DescribeLoggingOptions": [
            {
                "action": "iotevents:DescribeLoggingOptions"
            }
        ],
        "IoTEvents.ListDetectorModelVersions": [
            {
                "action": "iotevents:ListDetectorModelVersions"
            }
        ],
        "IoTEvents.ListDetectorModels": [
            {
                "action": "iotevents:ListDetectorModels"
            }
        ],
        "IoTEvents.ListInputs": [
            {
                "action": "iotevents:ListInputs"
            }
        ],
        "IoTEvents.ListTagsForResource": [
            {
                "action": "iotevents:ListTagsForResource"
            }
        ],
        "IoTEvents.PutLoggingOptions": [
            {
                "action": "iotevents:PutLoggingOptions"
            }
        ],
        "IoTEvents.TagResource": [
            {
                "action": "iotevents:TagResource"
            }
        ],
        "IoTEvents.UntagResource": [
            {
                "action": "iotevents:UntagResource"
            }
        ],
        "IoTEvents.UpdateDetectorModel": [
            {
                "action": "iotevents:UpdateDetectorModel"
            }
        ],
        "IoTEvents.UpdateInput": [
            {
                "action": "iotevents:UpdateInput"
            }
        ],
        "IoTEventsData.BatchPutMessage": [
            {
                "action": "iotevents:BatchPutMessage"
            }
        ],
        "IoTEventsData.BatchUpdateDetector": [
            {
                "action": "iotevents:BatchUpdateDetector"
            }
        ],
        "IoTEventsData.DescribeDetector": [
            {
                "action": "iotevents:DescribeDetector"
            }
        ],
        "IoTEventsData.ListDetectors": [
            {
                "action": "iotevents:ListDetectors"
            }
        ],
        "Personalize.CreateBatchInferenceJob": [
            {
                "action": "personalize:CreateBatchInferenceJob"
            }
        ],
        "Personalize.CreateCampaign": [
            {
                "action": "personalize:CreateCampaign"
            }
        ],
        "Personalize.CreateDataset": [
            {
                "action": "personalize:CreateDataset"
            }
        ],
        "Personalize.CreateDatasetGroup": [
            {
                "action": "personalize:CreateDatasetGroup"
            }
        ],
        "Personalize.CreateDatasetImportJob": [
            {
                "action": "personalize:CreateDatasetImportJob"
            }
        ],
        "Personalize.CreateEventTracker": [
            {
                "action": "personalize:CreateEventTracker"
            }
        ],
        "Personalize.CreateFilter": [
            {
                "action": "personalize:CreateFilter"
            }
        ],
        "Personalize.CreateSchema": [
            {
                "action": "personalize:CreateSchema"
            }
        ],
        "Personalize.CreateSolution": [
            {
                "action": "personalize:CreateSolution"
            }
        ],
        "Personalize.CreateSolutionVersion": [
            {
                "action": "personalize:CreateSolutionVersion"
            }
        ],
        "Personalize.DeleteCampaign": [
            {
                "action": "personalize:DeleteCampaign"
            }
        ],
        "Personalize.DeleteDataset": [
            {
                "action": "personalize:DeleteDataset"
            }
        ],
        "Personalize.DeleteDatasetGroup": [
            {
                "action": "personalize:DeleteDatasetGroup"
            }
        ],
        "Personalize.DeleteEventTracker": [
            {
                "action": "personalize:DeleteEventTracker"
            }
        ],
        "Personalize.DeleteFilter": [
            {
                "action": "personalize:DeleteFilter"
            }
        ],
        "Personalize.DeleteSchema": [
            {
                "action": "personalize:DeleteSchema"
            }
        ],
        "Personalize.DeleteSolution": [
            {
                "action": "personalize:DeleteSolution"
            }
        ],
        "Personalize.DescribeAlgorithm": [
            {
                "action": "personalize:DescribeAlgorithm"
            }
        ],
        "Personalize.DescribeBatchInferenceJob": [
            {
                "action": "personalize:DescribeBatchInferenceJob"
            }
        ],
        "Personalize.DescribeCampaign": [
            {
                "action": "personalize:DescribeCampaign"
            }
        ],
        "Personalize.DescribeDataset": [
            {
                "action": "personalize:DescribeDataset"
            }
        ],
        "Personalize.DescribeDatasetGroup": [
            {
                "action": "personalize:DescribeDatasetGroup"
            }
        ],
        "Personalize.DescribeDatasetImportJob": [
            {
                "action": "personalize:DescribeDatasetImportJob"
            }
        ],
        "Personalize.DescribeEventTracker": [
            {
                "action": "personalize:DescribeEventTracker"
            }
        ],
        "Personalize.DescribeFeatureTransformation": [
            {
                "action": "personalize:DescribeFeatureTransformation"
            }
        ],
        "Personalize.DescribeFilter": [
            {
                "action": "personalize:DescribeFilter"
            }
        ],
        "Personalize.DescribeRecipe": [
            {
                "action": "personalize:DescribeRecipe"
            }
        ],
        "Personalize.DescribeSchema": [
            {
                "action": "personalize:DescribeSchema"
            }
        ],
        "Personalize.DescribeSolution": [
            {
                "action": "personalize:DescribeSolution"
            }
        ],
        "Personalize.DescribeSolutionVersion": [
            {
                "action": "personalize:DescribeSolutionVersion"
            }
        ],
        "Personalize.GetSolutionMetrics": [
            {
                "action": "personalize:GetSolutionMetrics"
            }
        ],
        "Personalize.ListBatchInferenceJobs": [
            {
                "action": "personalize:ListBatchInferenceJobs"
            }
        ],
        "Personalize.ListCampaigns": [
            {
                "action": "personalize:ListCampaigns"
            }
        ],
        "Personalize.ListDatasetGroups": [
            {
                "action": "personalize:ListDatasetGroups"
            }
        ],
        "Personalize.ListDatasetImportJobs": [
            {
                "action": "personalize:ListDatasetImportJobs"
            }
        ],
        "Personalize.ListDatasets": [
            {
                "action": "personalize:ListDatasets"
            }
        ],
        "Personalize.ListEventTrackers": [
            {
                "action": "personalize:ListEventTrackers"
            }
        ],
        "Personalize.ListFilters": [
            {
                "action": "personalize:ListFilters"
            }
        ],
        "Personalize.ListRecipes": [
            {
                "action": "personalize:ListRecipes"
            }
        ],
        "Personalize.ListSchemas": [
            {
                "action": "personalize:ListSchemas"
            }
        ],
        "Personalize.ListSolutionVersions": [
            {
                "action": "personalize:ListSolutionVersions"
            }
        ],
        "Personalize.ListSolutions": [
            {
                "action": "personalize:ListSolutions"
            }
        ],
        "Personalize.UpdateCampaign": [
            {
                "action": "personalize:UpdateCampaign"
            }
        ],
        "PersonalizeEvents.PutEvents": [
            {
                "action": "personalize:PutEvents"
            }
        ],
        "PersonalizeEvents.PutItems": [
            {
                "action": "personalize:PutItems"
            }
        ],
        "PersonalizeEvents.PutUsers": [
            {
                "action": "personalize:PutUsers"
            }
        ],
        "PersonalizeRuntime.GetPersonalizedRanking": [
            {
                "action": "personalize:GetPersonalizedRanking"
            }
        ],
        "PersonalizeRuntime.GetRecommendations": [
            {
                "action": "personalize:GetRecommendations"
            }
        ],
        "ApplicationInsights.CreateApplication": [
            {
                "action": "applicationinsights:CreateApplication"
            }
        ],
        "ApplicationInsights.CreateComponent": [
            {
                "action": "applicationinsights:CreateComponent"
            }
        ],
        "ApplicationInsights.CreateLogPattern": [
            {
                "action": "applicationinsights:CreateLogPattern"
            }
        ],
        "ApplicationInsights.DeleteApplication": [
            {
                "action": "applicationinsights:DeleteApplication"
            }
        ],
        "ApplicationInsights.DeleteComponent": [
            {
                "action": "applicationinsights:DeleteComponent"
            }
        ],
        "ApplicationInsights.DeleteLogPattern": [
            {
                "action": "applicationinsights:DeleteLogPattern"
            }
        ],
        "ApplicationInsights.DescribeApplication": [
            {
                "action": "applicationinsights:DescribeApplication"
            }
        ],
        "ApplicationInsights.DescribeComponent": [
            {
                "action": "applicationinsights:DescribeComponent"
            }
        ],
        "ApplicationInsights.DescribeComponentConfiguration": [
            {
                "action": "applicationinsights:DescribeComponentConfiguration"
            }
        ],
        "ApplicationInsights.DescribeComponentConfigurationRecommendation": [
            {
                "action": "applicationinsights:DescribeComponentConfigurationRecommendation"
            }
        ],
        "ApplicationInsights.DescribeLogPattern": [
            {
                "action": "applicationinsights:DescribeLogPattern"
            }
        ],
        "ApplicationInsights.DescribeObservation": [
            {
                "action": "applicationinsights:DescribeObservation"
            }
        ],
        "ApplicationInsights.DescribeProblem": [
            {
                "action": "applicationinsights:DescribeProblem"
            }
        ],
        "ApplicationInsights.DescribeProblemObservations": [
            {
                "action": "applicationinsights:DescribeProblemObservations"
            }
        ],
        "ApplicationInsights.ListApplications": [
            {
                "action": "applicationinsights:ListApplications"
            }
        ],
        "ApplicationInsights.ListComponents": [
            {
                "action": "applicationinsights:ListComponents"
            }
        ],
        "ApplicationInsights.ListConfigurationHistory": [
            {
                "action": "applicationinsights:ListConfigurationHistory"
            }
        ],
        "ApplicationInsights.ListLogPatternSets": [
            {
                "action": "applicationinsights:ListLogPatternSets"
            }
        ],
        "ApplicationInsights.ListLogPatterns": [
            {
                "action": "applicationinsights:ListLogPatterns"
            }
        ],
        "ApplicationInsights.ListProblems": [
            {
                "action": "applicationinsights:ListProblems"
            }
        ],
        "ApplicationInsights.ListTagsForResource": [
            {
                "action": "applicationinsights:ListTagsForResource"
            }
        ],
        "ApplicationInsights.TagResource": [
            {
                "action": "applicationinsights:TagResource"
            }
        ],
        "ApplicationInsights.UntagResource": [
            {
                "action": "applicationinsights:UntagResource"
            }
        ],
        "ApplicationInsights.UpdateApplication": [
            {
                "action": "applicationinsights:UpdateApplication"
            }
        ],
        "ApplicationInsights.UpdateComponent": [
            {
                "action": "applicationinsights:UpdateComponent"
            }
        ],
        "ApplicationInsights.UpdateComponentConfiguration": [
            {
                "action": "applicationinsights:UpdateComponentConfiguration"
            }
        ],
        "ApplicationInsights.UpdateLogPattern": [
            {
                "action": "applicationinsights:UpdateLogPattern"
            }
        ],
        "ServiceQuotas.AssociateServiceQuotaTemplate": [
            {
                "action": "servicequotas:AssociateServiceQuotaTemplate"
            }
        ],
        "ServiceQuotas.DeleteServiceQuotaIncreaseRequestFromTemplate": [
            {
                "action": "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate"
            }
        ],
        "ServiceQuotas.DisassociateServiceQuotaTemplate": [
            {
                "action": "servicequotas:DisassociateServiceQuotaTemplate"
            }
        ],
        "ServiceQuotas.GetAWSDefaultServiceQuota": [
            {
                "action": "servicequotas:GetAWSDefaultServiceQuota"
            }
        ],
        "ServiceQuotas.GetAssociationForServiceQuotaTemplate": [
            {
                "action": "servicequotas:GetAssociationForServiceQuotaTemplate"
            }
        ],
        "ServiceQuotas.GetRequestedServiceQuotaChange": [
            {
                "action": "servicequotas:GetRequestedServiceQuotaChange"
            }
        ],
        "ServiceQuotas.GetServiceQuota": [
            {
                "action": "servicequotas:GetServiceQuota"
            }
        ],
        "ServiceQuotas.GetServiceQuotaIncreaseRequestFromTemplate": [
            {
                "action": "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate"
            }
        ],
        "ServiceQuotas.ListAWSDefaultServiceQuotas": [
            {
                "action": "servicequotas:ListAWSDefaultServiceQuotas"
            }
        ],
        "ServiceQuotas.ListRequestedServiceQuotaChangeHistory": [
            {
                "action": "servicequotas:ListRequestedServiceQuotaChangeHistory"
            }
        ],
        "ServiceQuotas.ListRequestedServiceQuotaChangeHistoryByQuota": [
            {
                "action": "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota"
            }
        ],
        "ServiceQuotas.ListServiceQuotaIncreaseRequestsInTemplate": [
            {
                "action": "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate"
            }
        ],
        "ServiceQuotas.ListServiceQuotas": [
            {
                "action": "servicequotas:ListServiceQuotas"
            }
        ],
        "ServiceQuotas.ListServices": [
            {
                "action": "servicequotas:ListServices"
            }
        ],
        "ServiceQuotas.ListTagsForResource": [
            {
                "action": "servicequotas:ListTagsForResource"
            }
        ],
        "ServiceQuotas.PutServiceQuotaIncreaseRequestIntoTemplate": [
            {
                "action": "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate"
            }
        ],
        "ServiceQuotas.RequestServiceQuotaIncrease": [
            {
                "action": "servicequotas:RequestServiceQuotaIncrease"
            }
        ],
        "ServiceQuotas.TagResource": [
            {
                "action": "servicequotas:TagResource"
            }
        ],
        "ServiceQuotas.UntagResource": [
            {
                "action": "servicequotas:UntagResource"
            }
        ],
        "EC2InstanceConnect.SendSSHPublicKey": [
            {
                "action": "ec2-instance-connect:SendSSHPublicKey"
            }
        ],
        "EventBridge.ActivateEventSource": [
            {
                "action": "events:ActivateEventSource"
            }
        ],
        "EventBridge.CancelReplay": [
            {
                "action": "events:CancelReplay"
            }
        ],
        "EventBridge.CreateArchive": [
            {
                "action": "events:CreateArchive"
            }
        ],
        "EventBridge.CreateEventBus": [
            {
                "action": "events:CreateEventBus"
            }
        ],
        "EventBridge.CreatePartnerEventSource": [
            {
                "action": "events:CreatePartnerEventSource"
            }
        ],
        "EventBridge.DeactivateEventSource": [
            {
                "action": "events:DeactivateEventSource"
            }
        ],
        "EventBridge.DeleteArchive": [
            {
                "action": "events:DeleteArchive"
            }
        ],
        "EventBridge.DeleteEventBus": [
            {
                "action": "events:DeleteEventBus"
            }
        ],
        "EventBridge.DeletePartnerEventSource": [
            {
                "action": "events:DeletePartnerEventSource"
            }
        ],
        "EventBridge.DeleteRule": [
            {
                "action": "events:DeleteRule"
            }
        ],
        "EventBridge.DescribeArchive": [
            {
                "action": "events:DescribeArchive"
            }
        ],
        "EventBridge.DescribeEventBus": [
            {
                "action": "events:DescribeEventBus"
            }
        ],
        "EventBridge.DescribeEventSource": [
            {
                "action": "events:DescribeEventSource"
            }
        ],
        "EventBridge.DescribePartnerEventSource": [
            {
                "action": "events:DescribePartnerEventSource"
            }
        ],
        "EventBridge.DescribeReplay": [
            {
                "action": "events:DescribeReplay"
            }
        ],
        "EventBridge.DescribeRule": [
            {
                "action": "events:DescribeRule"
            }
        ],
        "EventBridge.DisableRule": [
            {
                "action": "events:DisableRule"
            }
        ],
        "EventBridge.EnableRule": [
            {
                "action": "events:EnableRule"
            }
        ],
        "EventBridge.ListArchives": [
            {
                "action": "events:ListArchives"
            }
        ],
        "EventBridge.ListEventBuses": [
            {
                "action": "events:ListEventBuses"
            }
        ],
        "EventBridge.ListEventSources": [
            {
                "action": "events:ListEventSources"
            }
        ],
        "EventBridge.ListPartnerEventSourceAccounts": [
            {
                "action": "events:ListPartnerEventSourceAccounts"
            }
        ],
        "EventBridge.ListPartnerEventSources": [
            {
                "action": "events:ListPartnerEventSources"
            }
        ],
        "EventBridge.ListReplays": [
            {
                "action": "events:ListReplays"
            }
        ],
        "EventBridge.ListRuleNamesByTarget": [
            {
                "action": "events:ListRuleNamesByTarget"
            }
        ],
        "EventBridge.ListRules": [
            {
                "action": "events:ListRules"
            }
        ],
        "EventBridge.ListTagsForResource": [
            {
                "action": "events:ListTagsForResource"
            }
        ],
        "EventBridge.ListTargetsByRule": [
            {
                "action": "events:ListTargetsByRule"
            }
        ],
        "EventBridge.PutEvents": [
            {
                "action": "events:PutEvents"
            }
        ],
        "EventBridge.PutPartnerEvents": [
            {
                "action": "events:PutPartnerEvents"
            }
        ],
        "EventBridge.PutPermission": [
            {
                "action": "events:PutPermission"
            }
        ],
        "EventBridge.PutRule": [
            {
                "action": "events:PutRule"
            }
        ],
        "EventBridge.PutTargets": [
            {
                "action": "events:PutTargets"
            }
        ],
        "EventBridge.RemovePermission": [
            {
                "action": "events:RemovePermission"
            }
        ],
        "EventBridge.RemoveTargets": [
            {
                "action": "events:RemoveTargets"
            }
        ],
        "EventBridge.StartReplay": [
            {
                "action": "events:StartReplay"
            }
        ],
        "EventBridge.TagResource": [
            {
                "action": "events:TagResource"
            }
        ],
        "EventBridge.TestEventPattern": [
            {
                "action": "events:TestEventPattern"
            }
        ],
        "EventBridge.UntagResource": [
            {
                "action": "events:UntagResource"
            }
        ],
        "EventBridge.UpdateArchive": [
            {
                "action": "events:UpdateArchive"
            }
        ],
        "LakeFormation.BatchGrantPermissions": [
            {
                "action": "lakeformation:BatchGrantPermissions"
            }
        ],
        "LakeFormation.BatchRevokePermissions": [
            {
                "action": "lakeformation:BatchRevokePermissions"
            }
        ],
        "LakeFormation.DeregisterResource": [
            {
                "action": "lakeformation:DeregisterResource"
            }
        ],
        "LakeFormation.DescribeResource": [
            {
                "action": "lakeformation:DescribeResource"
            }
        ],
        "LakeFormation.GetDataLakeSettings": [
            {
                "action": "lakeformation:GetDataLakeSettings"
            }
        ],
        "LakeFormation.GetEffectivePermissionsForPath": [
            {
                "action": "lakeformation:GetEffectivePermissionsForPath"
            }
        ],
        "LakeFormation.GrantPermissions": [
            {
                "action": "lakeformation:GrantPermissions"
            }
        ],
        "LakeFormation.ListPermissions": [
            {
                "action": "lakeformation:ListPermissions"
            }
        ],
        "LakeFormation.ListResources": [
            {
                "action": "lakeformation:ListResources"
            }
        ],
        "LakeFormation.PutDataLakeSettings": [
            {
                "action": "lakeformation:PutDataLakeSettings"
            }
        ],
        "LakeFormation.RegisterResource": [
            {
                "action": "lakeformation:RegisterResource"
            }
        ],
        "LakeFormation.RevokePermissions": [
            {
                "action": "lakeformation:RevokePermissions"
            }
        ],
        "LakeFormation.UpdateResource": [
            {
                "action": "lakeformation:UpdateResource"
            }
        ],
        "ForecastService.CreateDataset": [
            {
                "action": "forecast:CreateDataset"
            }
        ],
        "ForecastService.CreateDatasetGroup": [
            {
                "action": "forecast:CreateDatasetGroup"
            }
        ],
        "ForecastService.CreateDatasetImportJob": [
            {
                "action": "forecast:CreateDatasetImportJob"
            }
        ],
        "ForecastService.CreateForecast": [
            {
                "action": "forecast:CreateForecast"
            }
        ],
        "ForecastService.CreateForecastExportJob": [
            {
                "action": "forecast:CreateForecastExportJob"
            }
        ],
        "ForecastService.CreatePredictor": [
            {
                "action": "forecast:CreatePredictor"
            }
        ],
        "ForecastService.CreatePredictorBacktestExportJob": [
            {
                "action": "forecast:CreatePredictorBacktestExportJob"
            }
        ],
        "ForecastService.DeleteDataset": [
            {
                "action": "forecast:DeleteDataset"
            }
        ],
        "ForecastService.DeleteDatasetGroup": [
            {
                "action": "forecast:DeleteDatasetGroup"
            }
        ],
        "ForecastService.DeleteDatasetImportJob": [
            {
                "action": "forecast:DeleteDatasetImportJob"
            }
        ],
        "ForecastService.DeleteForecast": [
            {
                "action": "forecast:DeleteForecast"
            }
        ],
        "ForecastService.DeleteForecastExportJob": [
            {
                "action": "forecast:DeleteForecastExportJob"
            }
        ],
        "ForecastService.DeletePredictor": [
            {
                "action": "forecast:DeletePredictor"
            }
        ],
        "ForecastService.DeletePredictorBacktestExportJob": [
            {
                "action": "forecast:DeletePredictorBacktestExportJob"
            }
        ],
        "ForecastService.DescribeDataset": [
            {
                "action": "forecast:DescribeDataset"
            }
        ],
        "ForecastService.DescribeDatasetGroup": [
            {
                "action": "forecast:DescribeDatasetGroup"
            }
        ],
        "ForecastService.DescribeDatasetImportJob": [
            {
                "action": "forecast:DescribeDatasetImportJob"
            }
        ],
        "ForecastService.DescribeForecast": [
            {
                "action": "forecast:DescribeForecast"
            }
        ],
        "ForecastService.DescribeForecastExportJob": [
            {
                "action": "forecast:DescribeForecastExportJob"
            }
        ],
        "ForecastService.DescribePredictor": [
            {
                "action": "forecast:DescribePredictor"
            }
        ],
        "ForecastService.DescribePredictorBacktestExportJob": [
            {
                "action": "forecast:DescribePredictorBacktestExportJob"
            }
        ],
        "ForecastService.GetAccuracyMetrics": [
            {
                "action": "forecast:GetAccuracyMetrics"
            }
        ],
        "ForecastService.ListDatasetGroups": [
            {
                "action": "forecast:ListDatasetGroups"
            }
        ],
        "ForecastService.ListDatasetImportJobs": [
            {
                "action": "forecast:ListDatasetImportJobs"
            }
        ],
        "ForecastService.ListDatasets": [
            {
                "action": "forecast:ListDatasets"
            }
        ],
        "ForecastService.ListForecastExportJobs": [
            {
                "action": "forecast:ListForecastExportJobs"
            }
        ],
        "ForecastService.ListForecasts": [
            {
                "action": "forecast:ListForecasts"
            }
        ],
        "ForecastService.ListPredictorBacktestExportJobs": [
            {
                "action": "forecast:ListPredictorBacktestExportJobs"
            }
        ],
        "ForecastService.ListPredictors": [
            {
                "action": "forecast:ListPredictors"
            }
        ],
        "ForecastService.ListTagsForResource": [
            {
                "action": "forecast:ListTagsForResource"
            }
        ],
        "ForecastService.TagResource": [
            {
                "action": "forecast:TagResource"
            }
        ],
        "ForecastService.UntagResource": [
            {
                "action": "forecast:UntagResource"
            }
        ],
        "ForecastService.UpdateDatasetGroup": [
            {
                "action": "forecast:UpdateDatasetGroup"
            }
        ],
        "ForecastQueryService.QueryForecast": [
            {
                "action": "forecast:QueryForecast"
            }
        ],
        "QLDB.CancelJournalKinesisStream": [
            {
                "action": "qldb:CancelJournalKinesisStream"
            }
        ],
        "QLDB.CreateLedger": [
            {
                "action": "qldb:CreateLedger"
            }
        ],
        "QLDB.DeleteLedger": [
            {
                "action": "qldb:DeleteLedger"
            }
        ],
        "QLDB.DescribeJournalKinesisStream": [
            {
                "action": "qldb:DescribeJournalKinesisStream"
            }
        ],
        "QLDB.DescribeJournalS3Export": [
            {
                "action": "qldb:DescribeJournalS3Export"
            }
        ],
        "QLDB.DescribeLedger": [
            {
                "action": "qldb:DescribeLedger"
            }
        ],
        "QLDB.ExportJournalToS3": [
            {
                "action": "qldb:ExportJournalToS3"
            }
        ],
        "QLDB.GetBlock": [
            {
                "action": "qldb:GetBlock"
            }
        ],
        "QLDB.GetDigest": [
            {
                "action": "qldb:GetDigest"
            }
        ],
        "QLDB.GetRevision": [
            {
                "action": "qldb:GetRevision"
            }
        ],
        "QLDB.ListJournalKinesisStreamsForLedger": [
            {
                "action": "qldb:ListJournalKinesisStreamsForLedger"
            }
        ],
        "QLDB.ListJournalS3Exports": [
            {
                "action": "qldb:ListJournalS3Exports"
            }
        ],
        "QLDB.ListJournalS3ExportsForLedger": [
            {
                "action": "qldb:ListJournalS3ExportsForLedger"
            }
        ],
        "QLDB.ListLedgers": [
            {
                "action": "qldb:ListLedgers"
            }
        ],
        "QLDB.ListTagsForResource": [
            {
                "action": "qldb:ListTagsForResource"
            }
        ],
        "QLDB.StreamJournalToKinesis": [
            {
                "action": "qldb:StreamJournalToKinesis"
            }
        ],
        "QLDB.TagResource": [
            {
                "action": "qldb:TagResource"
            }
        ],
        "QLDB.UntagResource": [
            {
                "action": "qldb:UntagResource"
            }
        ],
        "QLDB.UpdateLedger": [
            {
                "action": "qldb:UpdateLedger"
            }
        ],
        "QLDBSession.SendCommand": [
            {
                "action": "qldb:SendCommand"
            }
        ],
        "WorkMailMessageFlow.GetRawMessageContent": [
            {
                "action": "workmailmessageflow:GetRawMessageContent"
            }
        ],
        "CodeStarNotifications.CreateNotificationRule": [
            {
                "action": "codestar-notifications:CreateNotificationRule"
            }
        ],
        "CodeStarNotifications.DeleteNotificationRule": [
            {
                "action": "codestar-notifications:DeleteNotificationRule"
            }
        ],
        "CodeStarNotifications.DeleteTarget": [
            {
                "action": "codestar-notifications:DeleteTarget"
            }
        ],
        "CodeStarNotifications.DescribeNotificationRule": [
            {
                "action": "codestar-notifications:DescribeNotificationRule"
            }
        ],
        "CodeStarNotifications.ListEventTypes": [
            {
                "action": "codestar-notifications:ListEventTypes"
            }
        ],
        "CodeStarNotifications.ListNotificationRules": [
            {
                "action": "codestar-notifications:ListNotificationRules"
            }
        ],
        "CodeStarNotifications.ListTagsForResource": [
            {
                "action": "codestar-notifications:ListTagsForResource"
            }
        ],
        "CodeStarNotifications.ListTargets": [
            {
                "action": "codestar-notifications:ListTargets"
            }
        ],
        "CodeStarNotifications.Subscribe": [
            {
                "action": "codestar-notifications:Subscribe"
            }
        ],
        "CodeStarNotifications.TagResource": [
            {
                "action": "codestar-notifications:TagResource"
            }
        ],
        "CodeStarNotifications.Unsubscribe": [
            {
                "action": "codestar-notifications:Unsubscribe"
            }
        ],
        "CodeStarNotifications.UntagResource": [
            {
                "action": "codestar-notifications:UntagResource"
            }
        ],
        "CodeStarNotifications.UpdateNotificationRule": [
            {
                "action": "codestar-notifications:UpdateNotificationRule"
            }
        ],
        "SavingsPlans.CreateSavingsPlan": [
            {
                "action": "savingsplans:CreateSavingsPlan"
            }
        ],
        "SavingsPlans.DeleteQueuedSavingsPlan": [
            {
                "action": "savingsplans:DeleteQueuedSavingsPlan"
            }
        ],
        "SavingsPlans.DescribeSavingsPlanRates": [
            {
                "action": "savingsplans:DescribeSavingsPlanRates"
            }
        ],
        "SavingsPlans.DescribeSavingsPlans": [
            {
                "action": "savingsplans:DescribeSavingsPlans"
            }
        ],
        "SavingsPlans.DescribeSavingsPlansOfferingRates": [
            {
                "action": "savingsplans:DescribeSavingsPlansOfferingRates"
            }
        ],
        "SavingsPlans.DescribeSavingsPlansOfferings": [
            {
                "action": "savingsplans:DescribeSavingsPlansOfferings"
            }
        ],
        "SavingsPlans.ListTagsForResource": [
            {
                "action": "savingsplans:ListTagsForResource"
            }
        ],
        "SavingsPlans.TagResource": [
            {
                "action": "savingsplans:TagResource"
            }
        ],
        "SavingsPlans.UntagResource": [
            {
                "action": "savingsplans:UntagResource"
            }
        ],
        "MarketplaceCatalog.CancelChangeSet": [
            {
                "action": "aws-marketplace:CancelChangeSet"
            }
        ],
        "MarketplaceCatalog.DescribeChangeSet": [
            {
                "action": "aws-marketplace:DescribeChangeSet"
            }
        ],
        "MarketplaceCatalog.DescribeEntity": [
            {
                "action": "aws-marketplace:DescribeEntity"
            }
        ],
        "MarketplaceCatalog.ListChangeSets": [
            {
                "action": "aws-marketplace:ListChangeSets"
            }
        ],
        "MarketplaceCatalog.ListEntities": [
            {
                "action": "aws-marketplace:ListEntities"
            }
        ],
        "MarketplaceCatalog.StartChangeSet": [
            {
                "action": "aws-marketplace:StartChangeSet"
            }
        ],
        "DataExchange.CancelJob": [
            {
                "action": "dataexchange:CancelJob"
            }
        ],
        "DataExchange.CreateDataSet": [
            {
                "action": "dataexchange:CreateDataSet"
            }
        ],
        "DataExchange.CreateJob": [
            {
                "action": "dataexchange:CreateJob"
            }
        ],
        "DataExchange.CreateRevision": [
            {
                "action": "dataexchange:CreateRevision"
            }
        ],
        "DataExchange.DeleteAsset": [
            {
                "action": "dataexchange:DeleteAsset"
            }
        ],
        "DataExchange.DeleteDataSet": [
            {
                "action": "dataexchange:DeleteDataSet"
            }
        ],
        "DataExchange.DeleteRevision": [
            {
                "action": "dataexchange:DeleteRevision"
            }
        ],
        "DataExchange.GetAsset": [
            {
                "action": "dataexchange:GetAsset"
            }
        ],
        "DataExchange.GetDataSet": [
            {
                "action": "dataexchange:GetDataSet"
            }
        ],
        "DataExchange.GetJob": [
            {
                "action": "dataexchange:GetJob"
            }
        ],
        "DataExchange.GetRevision": [
            {
                "action": "dataexchange:GetRevision"
            }
        ],
        "DataExchange.ListDataSetRevisions": [
            {
                "action": "dataexchange:ListDataSetRevisions"
            }
        ],
        "DataExchange.ListDataSets": [
            {
                "action": "dataexchange:ListDataSets"
            }
        ],
        "DataExchange.ListJobs": [
            {
                "action": "dataexchange:ListJobs"
            }
        ],
        "DataExchange.ListRevisionAssets": [
            {
                "action": "dataexchange:ListRevisionAssets"
            }
        ],
        "DataExchange.ListTagsForResource": [
            {
                "action": "dataexchange:ListTagsForResource"
            }
        ],
        "DataExchange.StartJob": [
            {
                "action": "dataexchange:StartJob"
            }
        ],
        "DataExchange.TagResource": [
            {
                "action": "dataexchange:TagResource"
            }
        ],
        "DataExchange.UntagResource": [
            {
                "action": "dataexchange:UntagResource"
            }
        ],
        "DataExchange.UpdateAsset": [
            {
                "action": "dataexchange:UpdateAsset"
            }
        ],
        "DataExchange.UpdateDataSet": [
            {
                "action": "dataexchange:UpdateDataSet"
            }
        ],
        "DataExchange.UpdateRevision": [
            {
                "action": "dataexchange:UpdateRevision"
            }
        ],
        "SESV2.CreateConfigurationSet": [
            {
                "action": "ses:CreateConfigurationSet"
            }
        ],
        "SESV2.CreateConfigurationSetEventDestination": [
            {
                "action": "ses:CreateConfigurationSetEventDestination"
            }
        ],
        "SESV2.CreateCustomVerificationEmailTemplate": [
            {
                "action": "ses:CreateCustomVerificationEmailTemplate"
            }
        ],
        "SESV2.CreateDedicatedIpPool": [
            {
                "action": "ses:CreateDedicatedIpPool"
            }
        ],
        "SESV2.CreateDeliverabilityTestReport": [
            {
                "action": "ses:CreateDeliverabilityTestReport"
            }
        ],
        "SESV2.CreateEmailIdentity": [
            {
                "action": "ses:CreateEmailIdentity"
            }
        ],
        "SESV2.DeleteConfigurationSet": [
            {
                "action": "ses:DeleteConfigurationSet"
            }
        ],
        "SESV2.DeleteConfigurationSetEventDestination": [
            {
                "action": "ses:DeleteConfigurationSetEventDestination"
            }
        ],
        "SESV2.DeleteCustomVerificationEmailTemplate": [
            {
                "action": "ses:DeleteCustomVerificationEmailTemplate"
            }
        ],
        "SESV2.DeleteDedicatedIpPool": [
            {
                "action": "ses:DeleteDedicatedIpPool"
            }
        ],
        "SESV2.DeleteEmailIdentity": [
            {
                "action": "ses:DeleteEmailIdentity"
            }
        ],
        "SESV2.GetAccount": [
            {
                "action": "ses:GetAccount"
            }
        ],
        "SESV2.GetBlacklistReports": [
            {
                "action": "ses:GetBlacklistReports"
            }
        ],
        "SESV2.GetConfigurationSet": [
            {
                "action": "ses:GetConfigurationSet"
            }
        ],
        "SESV2.GetConfigurationSetEventDestinations": [
            {
                "action": "ses:GetConfigurationSetEventDestinations"
            }
        ],
        "SESV2.GetCustomVerificationEmailTemplate": [
            {
                "action": "ses:GetCustomVerificationEmailTemplate"
            }
        ],
        "SESV2.GetDedicatedIp": [
            {
                "action": "ses:GetDedicatedIp"
            }
        ],
        "SESV2.GetDedicatedIps": [
            {
                "action": "ses:GetDedicatedIps"
            }
        ],
        "SESV2.GetDeliverabilityDashboardOptions": [
            {
                "action": "ses:GetDeliverabilityDashboardOptions"
            }
        ],
        "SESV2.GetDeliverabilityTestReport": [
            {
                "action": "ses:GetDeliverabilityTestReport"
            }
        ],
        "SESV2.GetDomainStatisticsReport": [
            {
                "action": "ses:GetDomainStatisticsReport"
            }
        ],
        "SESV2.GetEmailIdentity": [
            {
                "action": "ses:GetEmailIdentity"
            }
        ],
        "SESV2.ListConfigurationSets": [
            {
                "action": "ses:ListConfigurationSets"
            }
        ],
        "SESV2.ListCustomVerificationEmailTemplates": [
            {
                "action": "ses:ListCustomVerificationEmailTemplates"
            }
        ],
        "SESV2.ListDedicatedIpPools": [
            {
                "action": "ses:ListDedicatedIpPools"
            }
        ],
        "SESV2.ListDeliverabilityTestReports": [
            {
                "action": "ses:ListDeliverabilityTestReports"
            }
        ],
        "SESV2.ListEmailIdentities": [
            {
                "action": "ses:ListEmailIdentities"
            }
        ],
        "SESV2.ListTagsForResource": [
            {
                "action": "ses:ListTagsForResource"
            }
        ],
        "SESV2.PutAccountDedicatedIpWarmupAttributes": [
            {
                "action": "ses:PutAccountDedicatedIpWarmupAttributes"
            }
        ],
        "SESV2.PutAccountSendingAttributes": [
            {
                "action": "ses:PutAccountSendingAttributes"
            }
        ],
        "SESV2.PutConfigurationSetDeliveryOptions": [
            {
                "action": "ses:PutConfigurationSetDeliveryOptions"
            }
        ],
        "SESV2.PutConfigurationSetReputationOptions": [
            {
                "action": "ses:PutConfigurationSetReputationOptions"
            }
        ],
        "SESV2.PutConfigurationSetSendingOptions": [
            {
                "action": "ses:PutConfigurationSetSendingOptions"
            }
        ],
        "SESV2.PutConfigurationSetTrackingOptions": [
            {
                "action": "ses:PutConfigurationSetTrackingOptions"
            }
        ],
        "SESV2.PutDedicatedIpInPool": [
            {
                "action": "ses:PutDedicatedIpInPool"
            }
        ],
        "SESV2.PutDedicatedIpWarmupAttributes": [
            {
                "action": "ses:PutDedicatedIpWarmupAttributes"
            }
        ],
        "SESV2.PutDeliverabilityDashboardOption": [
            {
                "action": "ses:PutDeliverabilityDashboardOption"
            }
        ],
        "SESV2.PutEmailIdentityDkimAttributes": [
            {
                "action": "ses:PutEmailIdentityDkimAttributes"
            }
        ],
        "SESV2.PutEmailIdentityFeedbackAttributes": [
            {
                "action": "ses:PutEmailIdentityFeedbackAttributes"
            }
        ],
        "SESV2.PutEmailIdentityMailFromAttributes": [
            {
                "action": "ses:PutEmailIdentityMailFromAttributes"
            }
        ],
        "SESV2.SendCustomVerificationEmail": [
            {
                "action": "ses:SendCustomVerificationEmail"
            }
        ],
        "SESV2.SendEmail": [
            {
                "action": "ses:SendEmail"
            }
        ],
        "SESV2.TagResource": [
            {
                "action": "ses:TagResource"
            }
        ],
        "SESV2.UntagResource": [
            {
                "action": "ses:UntagResource"
            }
        ],
        "SESV2.UpdateConfigurationSetEventDestination": [
            {
                "action": "ses:UpdateConfigurationSetEventDestination"
            }
        ],
        "SESV2.UpdateCustomVerificationEmailTemplate": [
            {
                "action": "ses:UpdateCustomVerificationEmailTemplate"
            }
        ],
        "MigrationHubConfig.CreateHomeRegionControl": [
            {
                "action": "mgh:CreateHomeRegionControl"
            }
        ],
        "MigrationHubConfig.DescribeHomeRegionControls": [
            {
                "action": "mgh:DescribeHomeRegionControls"
            }
        ],
        "MigrationHubConfig.GetHomeRegion": [
            {
                "action": "mgh:GetHomeRegion"
            }
        ],
        "AppConfig.CreateApplication": [
            {
                "action": "appconfig:CreateApplication"
            }
        ],
        "AppConfig.CreateConfigurationProfile": [
            {
                "action": "appconfig:CreateConfigurationProfile"
            }
        ],
        "AppConfig.CreateDeploymentStrategy": [
            {
                "action": "appconfig:CreateDeploymentStrategy"
            }
        ],
        "AppConfig.CreateEnvironment": [
            {
                "action": "appconfig:CreateEnvironment"
            }
        ],
        "AppConfig.CreateHostedConfigurationVersion": [
            {
                "action": "appconfig:CreateHostedConfigurationVersion"
            }
        ],
        "AppConfig.DeleteApplication": [
            {
                "action": "appconfig:DeleteApplication"
            }
        ],
        "AppConfig.DeleteConfigurationProfile": [
            {
                "action": "appconfig:DeleteConfigurationProfile"
            }
        ],
        "AppConfig.DeleteDeploymentStrategy": [
            {
                "action": "appconfig:DeleteDeploymentStrategy"
            }
        ],
        "AppConfig.DeleteEnvironment": [
            {
                "action": "appconfig:DeleteEnvironment"
            }
        ],
        "AppConfig.DeleteHostedConfigurationVersion": [
            {
                "action": "appconfig:DeleteHostedConfigurationVersion"
            }
        ],
        "AppConfig.GetApplication": [
            {
                "action": "appconfig:GetApplication"
            }
        ],
        "AppConfig.GetConfiguration": [
            {
                "action": "appconfig:GetConfiguration"
            }
        ],
        "AppConfig.GetConfigurationProfile": [
            {
                "action": "appconfig:GetConfigurationProfile"
            }
        ],
        "AppConfig.GetDeployment": [
            {
                "action": "appconfig:GetDeployment"
            }
        ],
        "AppConfig.GetDeploymentStrategy": [
            {
                "action": "appconfig:GetDeploymentStrategy"
            }
        ],
        "AppConfig.GetEnvironment": [
            {
                "action": "appconfig:GetEnvironment"
            }
        ],
        "AppConfig.GetHostedConfigurationVersion": [
            {
                "action": "appconfig:GetHostedConfigurationVersion"
            }
        ],
        "AppConfig.ListApplications": [
            {
                "action": "appconfig:ListApplications"
            }
        ],
        "AppConfig.ListConfigurationProfiles": [
            {
                "action": "appconfig:ListConfigurationProfiles"
            }
        ],
        "AppConfig.ListDeploymentStrategies": [
            {
                "action": "appconfig:ListDeploymentStrategies"
            }
        ],
        "AppConfig.ListDeployments": [
            {
                "action": "appconfig:ListDeployments"
            }
        ],
        "AppConfig.ListEnvironments": [
            {
                "action": "appconfig:ListEnvironments"
            }
        ],
        "AppConfig.ListHostedConfigurationVersions": [
            {
                "action": "appconfig:ListHostedConfigurationVersions"
            }
        ],
        "AppConfig.ListTagsForResource": [
            {
                "action": "appconfig:ListTagsForResource"
            }
        ],
        "AppConfig.StartDeployment": [
            {
                "action": "appconfig:StartDeployment"
            }
        ],
        "AppConfig.StopDeployment": [
            {
                "action": "appconfig:StopDeployment"
            }
        ],
        "AppConfig.TagResource": [
            {
                "action": "appconfig:TagResource"
            }
        ],
        "AppConfig.UntagResource": [
            {
                "action": "appconfig:UntagResource"
            }
        ],
        "AppConfig.UpdateApplication": [
            {
                "action": "appconfig:UpdateApplication"
            }
        ],
        "AppConfig.UpdateConfigurationProfile": [
            {
                "action": "appconfig:UpdateConfigurationProfile"
            }
        ],
        "AppConfig.UpdateDeploymentStrategy": [
            {
                "action": "appconfig:UpdateDeploymentStrategy"
            }
        ],
        "AppConfig.UpdateEnvironment": [
            {
                "action": "appconfig:UpdateEnvironment"
            }
        ],
        "AppConfig.ValidateConfiguration": [
            {
                "action": "appconfig:ValidateConfiguration"
            }
        ],
        "IoTSecureTunneling.CloseTunnel": [
            {
                "action": "iot:CloseTunnel"
            }
        ],
        "IoTSecureTunneling.DescribeTunnel": [
            {
                "action": "iot:DescribeTunnel"
            }
        ],
        "IoTSecureTunneling.ListTagsForResource": [
            {
                "action": "iot:ListTagsForResource"
            }
        ],
        "IoTSecureTunneling.ListTunnels": [
            {
                "action": "iot:ListTunnels"
            }
        ],
        "IoTSecureTunneling.OpenTunnel": [
            {
                "action": "iot:OpenTunnel"
            }
        ],
        "IoTSecureTunneling.TagResource": [
            {
                "action": "iot:TagResource"
            }
        ],
        "IoTSecureTunneling.UntagResource": [
            {
                "action": "iot:UntagResource"
            }
        ],
        "WAFV2.AssociateWebACL": [
            {
                "action": "wafv2:AssociateWebACL"
            }
        ],
        "WAFV2.CheckCapacity": [
            {
                "action": "wafv2:CheckCapacity"
            }
        ],
        "WAFV2.CreateIPSet": [
            {
                "action": "wafv2:CreateIPSet"
            }
        ],
        "WAFV2.CreateRegexPatternSet": [
            {
                "action": "wafv2:CreateRegexPatternSet"
            }
        ],
        "WAFV2.CreateRuleGroup": [
            {
                "action": "wafv2:CreateRuleGroup"
            }
        ],
        "WAFV2.CreateWebACL": [
            {
                "action": "wafv2:CreateWebACL"
            }
        ],
        "WAFV2.DeleteFirewallManagerRuleGroups": [
            {
                "action": "wafv2:DeleteFirewallManagerRuleGroups"
            }
        ],
        "WAFV2.DeleteIPSet": [
            {
                "action": "wafv2:DeleteIPSet"
            }
        ],
        "WAFV2.DeleteLoggingConfiguration": [
            {
                "action": "wafv2:DeleteLoggingConfiguration"
            }
        ],
        "WAFV2.DeletePermissionPolicy": [
            {
                "action": "wafv2:DeletePermissionPolicy"
            }
        ],
        "WAFV2.DeleteRegexPatternSet": [
            {
                "action": "wafv2:DeleteRegexPatternSet"
            }
        ],
        "WAFV2.DeleteRuleGroup": [
            {
                "action": "wafv2:DeleteRuleGroup"
            }
        ],
        "WAFV2.DeleteWebACL": [
            {
                "action": "wafv2:DeleteWebACL"
            }
        ],
        "WAFV2.DescribeManagedRuleGroup": [
            {
                "action": "wafv2:DescribeManagedRuleGroup"
            }
        ],
        "WAFV2.DisassociateWebACL": [
            {
                "action": "wafv2:DisassociateWebACL"
            }
        ],
        "WAFV2.GetIPSet": [
            {
                "action": "wafv2:GetIPSet"
            }
        ],
        "WAFV2.GetLoggingConfiguration": [
            {
                "action": "wafv2:GetLoggingConfiguration"
            }
        ],
        "WAFV2.GetPermissionPolicy": [
            {
                "action": "wafv2:GetPermissionPolicy"
            }
        ],
        "WAFV2.GetRateBasedStatementManagedKeys": [
            {
                "action": "wafv2:GetRateBasedStatementManagedKeys"
            }
        ],
        "WAFV2.GetRegexPatternSet": [
            {
                "action": "wafv2:GetRegexPatternSet"
            }
        ],
        "WAFV2.GetRuleGroup": [
            {
                "action": "wafv2:GetRuleGroup"
            }
        ],
        "WAFV2.GetSampledRequests": [
            {
                "action": "wafv2:GetSampledRequests"
            }
        ],
        "WAFV2.GetWebACL": [
            {
                "action": "wafv2:GetWebACL"
            }
        ],
        "WAFV2.GetWebACLForResource": [
            {
                "action": "wafv2:GetWebACLForResource"
            }
        ],
        "WAFV2.ListAvailableManagedRuleGroups": [
            {
                "action": "wafv2:ListAvailableManagedRuleGroups"
            }
        ],
        "WAFV2.ListIPSets": [
            {
                "action": "wafv2:ListIPSets"
            }
        ],
        "WAFV2.ListLoggingConfigurations": [
            {
                "action": "wafv2:ListLoggingConfigurations"
            }
        ],
        "WAFV2.ListRegexPatternSets": [
            {
                "action": "wafv2:ListRegexPatternSets"
            }
        ],
        "WAFV2.ListResourcesForWebACL": [
            {
                "action": "wafv2:ListResourcesForWebACL"
            }
        ],
        "WAFV2.ListRuleGroups": [
            {
                "action": "wafv2:ListRuleGroups"
            }
        ],
        "WAFV2.ListTagsForResource": [
            {
                "action": "wafv2:ListTagsForResource"
            }
        ],
        "WAFV2.ListWebACLs": [
            {
                "action": "wafv2:ListWebACLs"
            }
        ],
        "WAFV2.PutLoggingConfiguration": [
            {
                "action": "wafv2:PutLoggingConfiguration"
            }
        ],
        "WAFV2.PutPermissionPolicy": [
            {
                "action": "wafv2:PutPermissionPolicy"
            }
        ],
        "WAFV2.TagResource": [
            {
                "action": "wafv2:TagResource"
            }
        ],
        "WAFV2.UntagResource": [
            {
                "action": "wafv2:UntagResource"
            }
        ],
        "WAFV2.UpdateIPSet": [
            {
                "action": "wafv2:UpdateIPSet"
            }
        ],
        "WAFV2.UpdateRegexPatternSet": [
            {
                "action": "wafv2:UpdateRegexPatternSet"
            }
        ],
        "WAFV2.UpdateRuleGroup": [
            {
                "action": "wafv2:UpdateRuleGroup"
            }
        ],
        "WAFV2.UpdateWebACL": [
            {
                "action": "wafv2:UpdateWebACL"
            }
        ],
        "Imagebuilder.CancelImageCreation": [
            {
                "action": "imagebuilder:CancelImageCreation"
            }
        ],
        "Imagebuilder.CreateComponent": [
            {
                "action": "imagebuilder:CreateComponent"
            }
        ],
        "Imagebuilder.CreateContainerRecipe": [
            {
                "action": "imagebuilder:CreateContainerRecipe"
            }
        ],
        "Imagebuilder.CreateDistributionConfiguration": [
            {
                "action": "imagebuilder:CreateDistributionConfiguration"
            }
        ],
        "Imagebuilder.CreateImage": [
            {
                "action": "imagebuilder:CreateImage"
            }
        ],
        "Imagebuilder.CreateImagePipeline": [
            {
                "action": "imagebuilder:CreateImagePipeline"
            }
        ],
        "Imagebuilder.CreateImageRecipe": [
            {
                "action": "imagebuilder:CreateImageRecipe"
            }
        ],
        "Imagebuilder.CreateInfrastructureConfiguration": [
            {
                "action": "imagebuilder:CreateInfrastructureConfiguration"
            }
        ],
        "Imagebuilder.DeleteComponent": [
            {
                "action": "imagebuilder:DeleteComponent"
            }
        ],
        "Imagebuilder.DeleteContainerRecipe": [
            {
                "action": "imagebuilder:DeleteContainerRecipe"
            }
        ],
        "Imagebuilder.DeleteDistributionConfiguration": [
            {
                "action": "imagebuilder:DeleteDistributionConfiguration"
            }
        ],
        "Imagebuilder.DeleteImage": [
            {
                "action": "imagebuilder:DeleteImage"
            }
        ],
        "Imagebuilder.DeleteImagePipeline": [
            {
                "action": "imagebuilder:DeleteImagePipeline"
            }
        ],
        "Imagebuilder.DeleteImageRecipe": [
            {
                "action": "imagebuilder:DeleteImageRecipe"
            }
        ],
        "Imagebuilder.DeleteInfrastructureConfiguration": [
            {
                "action": "imagebuilder:DeleteInfrastructureConfiguration"
            }
        ],
        "Imagebuilder.GetComponent": [
            {
                "action": "imagebuilder:GetComponent"
            }
        ],
        "Imagebuilder.GetComponentPolicy": [
            {
                "action": "imagebuilder:GetComponentPolicy"
            }
        ],
        "Imagebuilder.GetContainerRecipe": [
            {
                "action": "imagebuilder:GetContainerRecipe"
            }
        ],
        "Imagebuilder.GetContainerRecipePolicy": [
            {
                "action": "imagebuilder:GetContainerRecipePolicy"
            }
        ],
        "Imagebuilder.GetDistributionConfiguration": [
            {
                "action": "imagebuilder:GetDistributionConfiguration"
            }
        ],
        "Imagebuilder.GetImage": [
            {
                "action": "imagebuilder:GetImage"
            }
        ],
        "Imagebuilder.GetImagePipeline": [
            {
                "action": "imagebuilder:GetImagePipeline"
            }
        ],
        "Imagebuilder.GetImagePolicy": [
            {
                "action": "imagebuilder:GetImagePolicy"
            }
        ],
        "Imagebuilder.GetImageRecipe": [
            {
                "action": "imagebuilder:GetImageRecipe"
            }
        ],
        "Imagebuilder.GetImageRecipePolicy": [
            {
                "action": "imagebuilder:GetImageRecipePolicy"
            }
        ],
        "Imagebuilder.GetInfrastructureConfiguration": [
            {
                "action": "imagebuilder:GetInfrastructureConfiguration"
            }
        ],
        "Imagebuilder.ListComponentBuildVersions": [
            {
                "action": "imagebuilder:ListComponentBuildVersions"
            }
        ],
        "Imagebuilder.ListComponents": [
            {
                "action": "imagebuilder:ListComponents"
            }
        ],
        "Imagebuilder.ListContainerRecipes": [
            {
                "action": "imagebuilder:ListContainerRecipes"
            }
        ],
        "Imagebuilder.ListDistributionConfigurations": [
            {
                "action": "imagebuilder:ListDistributionConfigurations"
            }
        ],
        "Imagebuilder.ListImageBuildVersions": [
            {
                "action": "imagebuilder:ListImageBuildVersions"
            }
        ],
        "Imagebuilder.ListImagePipelineImages": [
            {
                "action": "imagebuilder:ListImagePipelineImages"
            }
        ],
        "Imagebuilder.ListImagePipelines": [
            {
                "action": "imagebuilder:ListImagePipelines"
            }
        ],
        "Imagebuilder.ListImageRecipes": [
            {
                "action": "imagebuilder:ListImageRecipes"
            }
        ],
        "Imagebuilder.ListImages": [
            {
                "action": "imagebuilder:ListImages"
            }
        ],
        "Imagebuilder.ListInfrastructureConfigurations": [
            {
                "action": "imagebuilder:ListInfrastructureConfigurations"
            }
        ],
        "Imagebuilder.ListTagsForResource": [
            {
                "action": "imagebuilder:ListTagsForResource"
            }
        ],
        "Imagebuilder.PutComponentPolicy": [
            {
                "action": "imagebuilder:PutComponentPolicy"
            }
        ],
        "Imagebuilder.PutContainerRecipePolicy": [
            {
                "action": "imagebuilder:PutContainerRecipePolicy"
            }
        ],
        "Imagebuilder.PutImagePolicy": [
            {
                "action": "imagebuilder:PutImagePolicy"
            }
        ],
        "Imagebuilder.PutImageRecipePolicy": [
            {
                "action": "imagebuilder:PutImageRecipePolicy"
            }
        ],
        "Imagebuilder.StartImagePipelineExecution": [
            {
                "action": "imagebuilder:StartImagePipelineExecution"
            }
        ],
        "Imagebuilder.TagResource": [
            {
                "action": "imagebuilder:TagResource"
            }
        ],
        "Imagebuilder.UntagResource": [
            {
                "action": "imagebuilder:UntagResource"
            }
        ],
        "Imagebuilder.UpdateDistributionConfiguration": [
            {
                "action": "imagebuilder:UpdateDistributionConfiguration"
            }
        ],
        "Imagebuilder.UpdateImagePipeline": [
            {
                "action": "imagebuilder:UpdateImagePipeline"
            }
        ],
        "Imagebuilder.UpdateInfrastructureConfiguration": [
            {
                "action": "imagebuilder:UpdateInfrastructureConfiguration"
            }
        ],
        "Schemas.CreateDiscoverer": [
            {
                "action": "schemas:CreateDiscoverer"
            }
        ],
        "Schemas.CreateRegistry": [
            {
                "action": "schemas:CreateRegistry"
            }
        ],
        "Schemas.CreateSchema": [
            {
                "action": "schemas:CreateSchema"
            }
        ],
        "Schemas.DeleteDiscoverer": [
            {
                "action": "schemas:DeleteDiscoverer"
            }
        ],
        "Schemas.DeleteRegistry": [
            {
                "action": "schemas:DeleteRegistry"
            }
        ],
        "Schemas.DeleteResourcePolicy": [
            {
                "action": "schemas:DeleteResourcePolicy"
            }
        ],
        "Schemas.DeleteSchema": [
            {
                "action": "schemas:DeleteSchema"
            }
        ],
        "Schemas.DeleteSchemaVersion": [
            {
                "action": "schemas:DeleteSchemaVersion"
            }
        ],
        "Schemas.DescribeCodeBinding": [
            {
                "action": "schemas:DescribeCodeBinding"
            }
        ],
        "Schemas.DescribeDiscoverer": [
            {
                "action": "schemas:DescribeDiscoverer"
            }
        ],
        "Schemas.DescribeRegistry": [
            {
                "action": "schemas:DescribeRegistry"
            }
        ],
        "Schemas.DescribeSchema": [
            {
                "action": "schemas:DescribeSchema"
            }
        ],
        "Schemas.ExportSchema": [
            {
                "action": "schemas:ExportSchema"
            }
        ],
        "Schemas.GetCodeBindingSource": [
            {
                "action": "schemas:GetCodeBindingSource"
            }
        ],
        "Schemas.GetDiscoveredSchema": [
            {
                "action": "schemas:GetDiscoveredSchema"
            }
        ],
        "Schemas.GetResourcePolicy": [
            {
                "action": "schemas:GetResourcePolicy"
            }
        ],
        "Schemas.ListDiscoverers": [
            {
                "action": "schemas:ListDiscoverers"
            }
        ],
        "Schemas.ListRegistries": [
            {
                "action": "schemas:ListRegistries"
            }
        ],
        "Schemas.ListSchemaVersions": [
            {
                "action": "schemas:ListSchemaVersions"
            }
        ],
        "Schemas.ListSchemas": [
            {
                "action": "schemas:ListSchemas"
            }
        ],
        "Schemas.ListTagsForResource": [
            {
                "action": "schemas:ListTagsForResource"
            }
        ],
        "Schemas.PutCodeBinding": [
            {
                "action": "schemas:PutCodeBinding"
            }
        ],
        "Schemas.PutResourcePolicy": [
            {
                "action": "schemas:PutResourcePolicy"
            }
        ],
        "Schemas.SearchSchemas": [
            {
                "action": "schemas:SearchSchemas"
            }
        ],
        "Schemas.StartDiscoverer": [
            {
                "action": "schemas:StartDiscoverer"
            }
        ],
        "Schemas.StopDiscoverer": [
            {
                "action": "schemas:StopDiscoverer"
            }
        ],
        "Schemas.TagResource": [
            {
                "action": "schemas:TagResource"
            }
        ],
        "Schemas.UntagResource": [
            {
                "action": "schemas:UntagResource"
            }
        ],
        "Schemas.UpdateDiscoverer": [
            {
                "action": "schemas:UpdateDiscoverer"
            }
        ],
        "Schemas.UpdateRegistry": [
            {
                "action": "schemas:UpdateRegistry"
            }
        ],
        "Schemas.UpdateSchema": [
            {
                "action": "schemas:UpdateSchema"
            }
        ],
        "AccessAnalyzer.ApplyArchiveRule": [
            {
                "action": "access-analyzer:ApplyArchiveRule"
            }
        ],
        "AccessAnalyzer.CreateAnalyzer": [
            {
                "action": "access-analyzer:CreateAnalyzer"
            }
        ],
        "AccessAnalyzer.CreateArchiveRule": [
            {
                "action": "access-analyzer:CreateArchiveRule"
            }
        ],
        "AccessAnalyzer.DeleteAnalyzer": [
            {
                "action": "access-analyzer:DeleteAnalyzer"
            }
        ],
        "AccessAnalyzer.DeleteArchiveRule": [
            {
                "action": "access-analyzer:DeleteArchiveRule"
            }
        ],
        "AccessAnalyzer.GetAnalyzedResource": [
            {
                "action": "access-analyzer:GetAnalyzedResource"
            }
        ],
        "AccessAnalyzer.GetAnalyzer": [
            {
                "action": "access-analyzer:GetAnalyzer"
            }
        ],
        "AccessAnalyzer.GetArchiveRule": [
            {
                "action": "access-analyzer:GetArchiveRule"
            }
        ],
        "AccessAnalyzer.GetFinding": [
            {
                "action": "access-analyzer:GetFinding"
            }
        ],
        "AccessAnalyzer.ListAnalyzedResources": [
            {
                "action": "access-analyzer:ListAnalyzedResources"
            }
        ],
        "AccessAnalyzer.ListAnalyzers": [
            {
                "action": "access-analyzer:ListAnalyzers"
            }
        ],
        "AccessAnalyzer.ListArchiveRules": [
            {
                "action": "access-analyzer:ListArchiveRules"
            }
        ],
        "AccessAnalyzer.ListFindings": [
            {
                "action": "access-analyzer:ListFindings"
            }
        ],
        "AccessAnalyzer.ListTagsForResource": [
            {
                "action": "access-analyzer:ListTagsForResource"
            }
        ],
        "AccessAnalyzer.StartResourceScan": [
            {
                "action": "access-analyzer:StartResourceScan"
            }
        ],
        "AccessAnalyzer.TagResource": [
            {
                "action": "access-analyzer:TagResource"
            }
        ],
        "AccessAnalyzer.UntagResource": [
            {
                "action": "access-analyzer:UntagResource"
            }
        ],
        "AccessAnalyzer.UpdateArchiveRule": [
            {
                "action": "access-analyzer:UpdateArchiveRule"
            }
        ],
        "AccessAnalyzer.UpdateFindings": [
            {
                "action": "access-analyzer:UpdateFindings"
            }
        ],
        "CodeGuruReviewer.AssociateRepository": [
            {
                "action": "codeguru-reviewer:AssociateRepository"
            }
        ],
        "CodeGuruReviewer.DescribeCodeReview": [
            {
                "action": "codeguru-reviewer:DescribeCodeReview"
            }
        ],
        "CodeGuruReviewer.DescribeRecommendationFeedback": [
            {
                "action": "codeguru-reviewer:DescribeRecommendationFeedback"
            }
        ],
        "CodeGuruReviewer.DescribeRepositoryAssociation": [
            {
                "action": "codeguru-reviewer:DescribeRepositoryAssociation"
            }
        ],
        "CodeGuruReviewer.DisassociateRepository": [
            {
                "action": "codeguru-reviewer:DisassociateRepository"
            }
        ],
        "CodeGuruReviewer.ListCodeReviews": [
            {
                "action": "codeguru-reviewer:ListCodeReviews"
            }
        ],
        "CodeGuruReviewer.ListRecommendationFeedback": [
            {
                "action": "codeguru-reviewer:ListRecommendationFeedback"
            }
        ],
        "CodeGuruReviewer.ListRecommendations": [
            {
                "action": "codeguru-reviewer:ListRecommendations"
            }
        ],
        "CodeGuruReviewer.ListRepositoryAssociations": [
            {
                "action": "codeguru-reviewer:ListRepositoryAssociations"
            }
        ],
        "CodeGuruReviewer.PutRecommendationFeedback": [
            {
                "action": "codeguru-reviewer:PutRecommendationFeedback"
            }
        ],
        "CodeGuruProfiler.AddNotificationChannels": [
            {
                "action": "codeguru-profiler:AddNotificationChannels"
            }
        ],
        "CodeGuruProfiler.BatchGetFrameMetricData": [
            {
                "action": "codeguru-profiler:BatchGetFrameMetricData"
            }
        ],
        "CodeGuruProfiler.ConfigureAgent": [
            {
                "action": "codeguru-profiler:ConfigureAgent"
            }
        ],
        "CodeGuruProfiler.CreateProfilingGroup": [
            {
                "action": "codeguru-profiler:CreateProfilingGroup"
            }
        ],
        "CodeGuruProfiler.DeleteProfilingGroup": [
            {
                "action": "codeguru-profiler:DeleteProfilingGroup"
            }
        ],
        "CodeGuruProfiler.DescribeProfilingGroup": [
            {
                "action": "codeguru-profiler:DescribeProfilingGroup"
            }
        ],
        "CodeGuruProfiler.GetFindingsReportAccountSummary": [
            {
                "action": "codeguru-profiler:GetFindingsReportAccountSummary"
            }
        ],
        "CodeGuruProfiler.GetNotificationConfiguration": [
            {
                "action": "codeguru-profiler:GetNotificationConfiguration"
            }
        ],
        "CodeGuruProfiler.GetPolicy": [
            {
                "action": "codeguru-profiler:GetPolicy"
            }
        ],
        "CodeGuruProfiler.GetProfile": [
            {
                "action": "codeguru-profiler:GetProfile"
            }
        ],
        "CodeGuruProfiler.GetRecommendations": [
            {
                "action": "codeguru-profiler:GetRecommendations"
            }
        ],
        "CodeGuruProfiler.ListFindingsReports": [
            {
                "action": "codeguru-profiler:ListFindingsReports"
            }
        ],
        "CodeGuruProfiler.ListProfileTimes": [
            {
                "action": "codeguru-profiler:ListProfileTimes"
            }
        ],
        "CodeGuruProfiler.ListProfilingGroups": [
            {
                "action": "codeguru-profiler:ListProfilingGroups"
            }
        ],
        "CodeGuruProfiler.ListTagsForResource": [
            {
                "action": "codeguru-profiler:ListTagsForResource"
            }
        ],
        "CodeGuruProfiler.PostAgentProfile": [
            {
                "action": "codeguru-profiler:PostAgentProfile"
            }
        ],
        "CodeGuruProfiler.PutPermission": [
            {
                "action": "codeguru-profiler:PutPermission"
            }
        ],
        "CodeGuruProfiler.RemoveNotificationChannel": [
            {
                "action": "codeguru-profiler:RemoveNotificationChannel"
            }
        ],
        "CodeGuruProfiler.RemovePermission": [
            {
                "action": "codeguru-profiler:RemovePermission"
            }
        ],
        "CodeGuruProfiler.SubmitFeedback": [
            {
                "action": "codeguru-profiler:SubmitFeedback"
            }
        ],
        "CodeGuruProfiler.TagResource": [
            {
                "action": "codeguru-profiler:TagResource"
            }
        ],
        "CodeGuruProfiler.UntagResource": [
            {
                "action": "codeguru-profiler:UntagResource"
            }
        ],
        "CodeGuruProfiler.UpdateProfilingGroup": [
            {
                "action": "codeguru-profiler:UpdateProfilingGroup"
            }
        ],
        "ComputeOptimizer.DescribeRecommendationExportJobs": [
            {
                "action": "compute-optimizer:DescribeRecommendationExportJobs"
            }
        ],
        "ComputeOptimizer.ExportAutoScalingGroupRecommendations": [
            {
                "action": "compute-optimizer:ExportAutoScalingGroupRecommendations"
            }
        ],
        "ComputeOptimizer.ExportEC2InstanceRecommendations": [
            {
                "action": "compute-optimizer:ExportEC2InstanceRecommendations"
            }
        ],
        "ComputeOptimizer.GetAutoScalingGroupRecommendations": [
            {
                "action": "compute-optimizer:GetAutoScalingGroupRecommendations"
            }
        ],
        "ComputeOptimizer.GetEBSVolumeRecommendations": [
            {
                "action": "compute-optimizer:GetEBSVolumeRecommendations"
            }
        ],
        "ComputeOptimizer.GetEC2InstanceRecommendations": [
            {
                "action": "compute-optimizer:GetEC2InstanceRecommendations"
            }
        ],
        "ComputeOptimizer.GetEC2RecommendationProjectedMetrics": [
            {
                "action": "compute-optimizer:GetEC2RecommendationProjectedMetrics"
            }
        ],
        "ComputeOptimizer.GetEnrollmentStatus": [
            {
                "action": "compute-optimizer:GetEnrollmentStatus"
            }
        ],
        "ComputeOptimizer.GetLambdaFunctionRecommendations": [
            {
                "action": "compute-optimizer:GetLambdaFunctionRecommendations"
            }
        ],
        "ComputeOptimizer.GetRecommendationSummaries": [
            {
                "action": "compute-optimizer:GetRecommendationSummaries"
            }
        ],
        "ComputeOptimizer.UpdateEnrollmentStatus": [
            {
                "action": "compute-optimizer:UpdateEnrollmentStatus"
            }
        ],
        "FraudDetector.BatchCreateVariable": [
            {
                "action": "frauddetector:BatchCreateVariable"
            }
        ],
        "FraudDetector.BatchGetVariable": [
            {
                "action": "frauddetector:BatchGetVariable"
            }
        ],
        "FraudDetector.CreateDetectorVersion": [
            {
                "action": "frauddetector:CreateDetectorVersion"
            }
        ],
        "FraudDetector.CreateModel": [
            {
                "action": "frauddetector:CreateModel"
            }
        ],
        "FraudDetector.CreateModelVersion": [
            {
                "action": "frauddetector:CreateModelVersion"
            }
        ],
        "FraudDetector.CreateRule": [
            {
                "action": "frauddetector:CreateRule"
            }
        ],
        "FraudDetector.CreateVariable": [
            {
                "action": "frauddetector:CreateVariable"
            }
        ],
        "FraudDetector.DeleteDetector": [
            {
                "action": "frauddetector:DeleteDetector"
            }
        ],
        "FraudDetector.DeleteDetectorVersion": [
            {
                "action": "frauddetector:DeleteDetectorVersion"
            }
        ],
        "FraudDetector.DeleteEntityType": [
            {
                "action": "frauddetector:DeleteEntityType"
            }
        ],
        "FraudDetector.DeleteEvent": [
            {
                "action": "frauddetector:DeleteEvent"
            }
        ],
        "FraudDetector.DeleteEventType": [
            {
                "action": "frauddetector:DeleteEventType"
            }
        ],
        "FraudDetector.DeleteExternalModel": [
            {
                "action": "frauddetector:DeleteExternalModel"
            }
        ],
        "FraudDetector.DeleteLabel": [
            {
                "action": "frauddetector:DeleteLabel"
            }
        ],
        "FraudDetector.DeleteModel": [
            {
                "action": "frauddetector:DeleteModel"
            }
        ],
        "FraudDetector.DeleteModelVersion": [
            {
                "action": "frauddetector:DeleteModelVersion"
            }
        ],
        "FraudDetector.DeleteOutcome": [
            {
                "action": "frauddetector:DeleteOutcome"
            }
        ],
        "FraudDetector.DeleteRule": [
            {
                "action": "frauddetector:DeleteRule"
            }
        ],
        "FraudDetector.DeleteVariable": [
            {
                "action": "frauddetector:DeleteVariable"
            }
        ],
        "FraudDetector.DescribeDetector": [
            {
                "action": "frauddetector:DescribeDetector"
            }
        ],
        "FraudDetector.DescribeModelVersions": [
            {
                "action": "frauddetector:DescribeModelVersions"
            }
        ],
        "FraudDetector.GetDetectorVersion": [
            {
                "action": "frauddetector:GetDetectorVersion"
            }
        ],
        "FraudDetector.GetDetectors": [
            {
                "action": "frauddetector:GetDetectors"
            }
        ],
        "FraudDetector.GetEntityTypes": [
            {
                "action": "frauddetector:GetEntityTypes"
            }
        ],
        "FraudDetector.GetEventPrediction": [
            {
                "action": "frauddetector:GetEventPrediction"
            }
        ],
        "FraudDetector.GetEventTypes": [
            {
                "action": "frauddetector:GetEventTypes"
            }
        ],
        "FraudDetector.GetExternalModels": [
            {
                "action": "frauddetector:GetExternalModels"
            }
        ],
        "FraudDetector.GetKMSEncryptionKey": [
            {
                "action": "frauddetector:GetKMSEncryptionKey"
            }
        ],
        "FraudDetector.GetLabels": [
            {
                "action": "frauddetector:GetLabels"
            }
        ],
        "FraudDetector.GetModelVersion": [
            {
                "action": "frauddetector:GetModelVersion"
            }
        ],
        "FraudDetector.GetModels": [
            {
                "action": "frauddetector:GetModels"
            }
        ],
        "FraudDetector.GetOutcomes": [
            {
                "action": "frauddetector:GetOutcomes"
            }
        ],
        "FraudDetector.GetRules": [
            {
                "action": "frauddetector:GetRules"
            }
        ],
        "FraudDetector.GetVariables": [
            {
                "action": "frauddetector:GetVariables"
            }
        ],
        "FraudDetector.ListTagsForResource": [
            {
                "action": "frauddetector:ListTagsForResource"
            }
        ],
        "FraudDetector.PutDetector": [
            {
                "action": "frauddetector:PutDetector"
            }
        ],
        "FraudDetector.PutEntityType": [
            {
                "action": "frauddetector:PutEntityType"
            }
        ],
        "FraudDetector.PutEventType": [
            {
                "action": "frauddetector:PutEventType"
            }
        ],
        "FraudDetector.PutExternalModel": [
            {
                "action": "frauddetector:PutExternalModel"
            }
        ],
        "FraudDetector.PutKMSEncryptionKey": [
            {
                "action": "frauddetector:PutKMSEncryptionKey"
            }
        ],
        "FraudDetector.PutLabel": [
            {
                "action": "frauddetector:PutLabel"
            }
        ],
        "FraudDetector.PutOutcome": [
            {
                "action": "frauddetector:PutOutcome"
            }
        ],
        "FraudDetector.TagResource": [
            {
                "action": "frauddetector:TagResource"
            }
        ],
        "FraudDetector.UntagResource": [
            {
                "action": "frauddetector:UntagResource"
            }
        ],
        "FraudDetector.UpdateDetectorVersion": [
            {
                "action": "frauddetector:UpdateDetectorVersion"
            }
        ],
        "FraudDetector.UpdateDetectorVersionMetadata": [
            {
                "action": "frauddetector:UpdateDetectorVersionMetadata"
            }
        ],
        "FraudDetector.UpdateDetectorVersionStatus": [
            {
                "action": "frauddetector:UpdateDetectorVersionStatus"
            }
        ],
        "FraudDetector.UpdateModel": [
            {
                "action": "frauddetector:UpdateModel"
            }
        ],
        "FraudDetector.UpdateModelVersion": [
            {
                "action": "frauddetector:UpdateModelVersion"
            }
        ],
        "FraudDetector.UpdateModelVersionStatus": [
            {
                "action": "frauddetector:UpdateModelVersionStatus"
            }
        ],
        "FraudDetector.UpdateRuleMetadata": [
            {
                "action": "frauddetector:UpdateRuleMetadata"
            }
        ],
        "FraudDetector.UpdateRuleVersion": [
            {
                "action": "frauddetector:UpdateRuleVersion"
            }
        ],
        "FraudDetector.UpdateVariable": [
            {
                "action": "frauddetector:UpdateVariable"
            }
        ],
        "Kendra.BatchDeleteDocument": [
            {
                "action": "kendra:BatchDeleteDocument"
            }
        ],
        "Kendra.BatchPutDocument": [
            {
                "action": "kendra:BatchPutDocument"
            }
        ],
        "Kendra.CreateDataSource": [
            {
                "action": "kendra:CreateDataSource"
            }
        ],
        "Kendra.CreateFaq": [
            {
                "action": "kendra:CreateFaq"
            }
        ],
        "Kendra.CreateIndex": [
            {
                "action": "kendra:CreateIndex"
            }
        ],
        "Kendra.CreateThesaurus": [
            {
                "action": "kendra:CreateThesaurus"
            }
        ],
        "Kendra.DeleteDataSource": [
            {
                "action": "kendra:DeleteDataSource"
            }
        ],
        "Kendra.DeleteFaq": [
            {
                "action": "kendra:DeleteFaq"
            }
        ],
        "Kendra.DeleteIndex": [
            {
                "action": "kendra:DeleteIndex"
            }
        ],
        "Kendra.DeleteThesaurus": [
            {
                "action": "kendra:DeleteThesaurus"
            }
        ],
        "Kendra.DescribeDataSource": [
            {
                "action": "kendra:DescribeDataSource"
            }
        ],
        "Kendra.DescribeFaq": [
            {
                "action": "kendra:DescribeFaq"
            }
        ],
        "Kendra.DescribeIndex": [
            {
                "action": "kendra:DescribeIndex"
            }
        ],
        "Kendra.DescribeThesaurus": [
            {
                "action": "kendra:DescribeThesaurus"
            }
        ],
        "Kendra.ListDataSourceSyncJobs": [
            {
                "action": "kendra:ListDataSourceSyncJobs"
            }
        ],
        "Kendra.ListDataSources": [
            {
                "action": "kendra:ListDataSources"
            }
        ],
        "Kendra.ListFaqs": [
            {
                "action": "kendra:ListFaqs"
            }
        ],
        "Kendra.ListIndices": [
            {
                "action": "kendra:ListIndices"
            }
        ],
        "Kendra.ListTagsForResource": [
            {
                "action": "kendra:ListTagsForResource"
            }
        ],
        "Kendra.ListThesauri": [
            {
                "action": "kendra:ListThesauri"
            }
        ],
        "Kendra.Query": [
            {
                "action": "kendra:Query"
            }
        ],
        "Kendra.StartDataSourceSyncJob": [
            {
                "action": "kendra:StartDataSourceSyncJob"
            }
        ],
        "Kendra.StopDataSourceSyncJob": [
            {
                "action": "kendra:StopDataSourceSyncJob"
            }
        ],
        "Kendra.SubmitFeedback": [
            {
                "action": "kendra:SubmitFeedback"
            }
        ],
        "Kendra.TagResource": [
            {
                "action": "kendra:TagResource"
            }
        ],
        "Kendra.UntagResource": [
            {
                "action": "kendra:UntagResource"
            }
        ],
        "Kendra.UpdateDataSource": [
            {
                "action": "kendra:UpdateDataSource"
            }
        ],
        "Kendra.UpdateIndex": [
            {
                "action": "kendra:UpdateIndex"
            }
        ],
        "Kendra.UpdateThesaurus": [
            {
                "action": "kendra:UpdateThesaurus"
            }
        ],
        "NetworkManager.AssociateCustomerGateway": [
            {
                "action": "networkmanager:AssociateCustomerGateway"
            }
        ],
        "NetworkManager.AssociateLink": [
            {
                "action": "networkmanager:AssociateLink"
            }
        ],
        "NetworkManager.AssociateTransitGatewayConnectPeer": [
            {
                "action": "networkmanager:AssociateTransitGatewayConnectPeer"
            }
        ],
        "NetworkManager.CreateConnection": [
            {
                "action": "networkmanager:CreateConnection"
            }
        ],
        "NetworkManager.CreateDevice": [
            {
                "action": "networkmanager:CreateDevice"
            }
        ],
        "NetworkManager.CreateGlobalNetwork": [
            {
                "action": "networkmanager:CreateGlobalNetwork"
            }
        ],
        "NetworkManager.CreateLink": [
            {
                "action": "networkmanager:CreateLink"
            }
        ],
        "NetworkManager.CreateSite": [
            {
                "action": "networkmanager:CreateSite"
            }
        ],
        "NetworkManager.DeleteConnection": [
            {
                "action": "networkmanager:DeleteConnection"
            }
        ],
        "NetworkManager.DeleteDevice": [
            {
                "action": "networkmanager:DeleteDevice"
            }
        ],
        "NetworkManager.DeleteGlobalNetwork": [
            {
                "action": "networkmanager:DeleteGlobalNetwork"
            }
        ],
        "NetworkManager.DeleteLink": [
            {
                "action": "networkmanager:DeleteLink"
            }
        ],
        "NetworkManager.DeleteSite": [
            {
                "action": "networkmanager:DeleteSite"
            }
        ],
        "NetworkManager.DeregisterTransitGateway": [
            {
                "action": "networkmanager:DeregisterTransitGateway"
            }
        ],
        "NetworkManager.DescribeGlobalNetworks": [
            {
                "action": "networkmanager:DescribeGlobalNetworks"
            }
        ],
        "NetworkManager.DisassociateCustomerGateway": [
            {
                "action": "networkmanager:DisassociateCustomerGateway"
            }
        ],
        "NetworkManager.DisassociateLink": [
            {
                "action": "networkmanager:DisassociateLink"
            }
        ],
        "NetworkManager.DisassociateTransitGatewayConnectPeer": [
            {
                "action": "networkmanager:DisassociateTransitGatewayConnectPeer"
            }
        ],
        "NetworkManager.GetConnections": [
            {
                "action": "networkmanager:GetConnections"
            }
        ],
        "NetworkManager.GetCustomerGatewayAssociations": [
            {
                "action": "networkmanager:GetCustomerGatewayAssociations"
            }
        ],
        "NetworkManager.GetDevices": [
            {
                "action": "networkmanager:GetDevices"
            }
        ],
        "NetworkManager.GetLinkAssociations": [
            {
                "action": "networkmanager:GetLinkAssociations"
            }
        ],
        "NetworkManager.GetLinks": [
            {
                "action": "networkmanager:GetLinks"
            }
        ],
        "NetworkManager.GetSites": [
            {
                "action": "networkmanager:GetSites"
            }
        ],
        "NetworkManager.GetTransitGatewayConnectPeerAssociations": [
            {
                "action": "networkmanager:GetTransitGatewayConnectPeerAssociations"
            }
        ],
        "NetworkManager.GetTransitGatewayRegistrations": [
            {
                "action": "networkmanager:GetTransitGatewayRegistrations"
            }
        ],
        "NetworkManager.ListTagsForResource": [
            {
                "action": "networkmanager:ListTagsForResource"
            }
        ],
        "NetworkManager.RegisterTransitGateway": [
            {
                "action": "networkmanager:RegisterTransitGateway"
            }
        ],
        "NetworkManager.TagResource": [
            {
                "action": "networkmanager:TagResource"
            }
        ],
        "NetworkManager.UntagResource": [
            {
                "action": "networkmanager:UntagResource"
            }
        ],
        "NetworkManager.UpdateConnection": [
            {
                "action": "networkmanager:UpdateConnection"
            }
        ],
        "NetworkManager.UpdateDevice": [
            {
                "action": "networkmanager:UpdateDevice"
            }
        ],
        "NetworkManager.UpdateGlobalNetwork": [
            {
                "action": "networkmanager:UpdateGlobalNetwork"
            }
        ],
        "NetworkManager.UpdateLink": [
            {
                "action": "networkmanager:UpdateLink"
            }
        ],
        "NetworkManager.UpdateSite": [
            {
                "action": "networkmanager:UpdateSite"
            }
        ],
        "Outposts.CreateOutpost": [
            {
                "action": "outposts:CreateOutpost"
            }
        ],
        "Outposts.DeleteOutpost": [
            {
                "action": "outposts:DeleteOutpost"
            }
        ],
        "Outposts.DeleteSite": [
            {
                "action": "outposts:DeleteSite"
            }
        ],
        "Outposts.GetOutpost": [
            {
                "action": "outposts:GetOutpost"
            }
        ],
        "Outposts.GetOutpostInstanceTypes": [
            {
                "action": "outposts:GetOutpostInstanceTypes"
            }
        ],
        "Outposts.ListOutposts": [
            {
                "action": "outposts:ListOutposts"
            }
        ],
        "Outposts.ListSites": [
            {
                "action": "outposts:ListSites"
            }
        ],
        "Outposts.ListTagsForResource": [
            {
                "action": "outposts:ListTagsForResource"
            }
        ],
        "Outposts.TagResource": [
            {
                "action": "outposts:TagResource"
            }
        ],
        "Outposts.UntagResource": [
            {
                "action": "outposts:UntagResource"
            }
        ],
        "AugmentedAIRuntime.DeleteHumanLoop": [
            {
                "action": "sagemaker:DeleteHumanLoop"
            }
        ],
        "AugmentedAIRuntime.DescribeHumanLoop": [
            {
                "action": "sagemaker:DescribeHumanLoop"
            }
        ],
        "AugmentedAIRuntime.ListHumanLoops": [
            {
                "action": "sagemaker:ListHumanLoops"
            }
        ],
        "AugmentedAIRuntime.StartHumanLoop": [
            {
                "action": "sagemaker:StartHumanLoop"
            }
        ],
        "AugmentedAIRuntime.StopHumanLoop": [
            {
                "action": "sagemaker:StopHumanLoop"
            }
        ],
        "EBS.CompleteSnapshot": [
            {
                "action": "ebs:CompleteSnapshot"
            }
        ],
        "EBS.GetSnapshotBlock": [
            {
                "action": "ebs:GetSnapshotBlock"
            }
        ],
        "EBS.ListChangedBlocks": [
            {
                "action": "ebs:ListChangedBlocks"
            }
        ],
        "EBS.ListSnapshotBlocks": [
            {
                "action": "ebs:ListSnapshotBlocks"
            }
        ],
        "EBS.PutSnapshotBlock": [
            {
                "action": "ebs:PutSnapshotBlock"
            }
        ],
        "EBS.StartSnapshot": [
            {
                "action": "ebs:StartSnapshot"
            }
        ],
        "KinesisVideoSignalingChannels.GetIceServerConfig": [
            {
                "action": "kinesisvideo:GetIceServerConfig"
            }
        ],
        "KinesisVideoSignalingChannels.SendAlexaOfferToMaster": [
            {
                "action": "kinesisvideo:SendAlexaOfferToMaster"
            }
        ],
        "Detective.AcceptInvitation": [
            {
                "action": "detective:AcceptInvitation"
            }
        ],
        "Detective.CreateGraph": [
            {
                "action": "detective:CreateGraph"
            }
        ],
        "Detective.CreateMembers": [
            {
                "action": "detective:CreateMembers"
            }
        ],
        "Detective.DeleteGraph": [
            {
                "action": "detective:DeleteGraph"
            }
        ],
        "Detective.DeleteMembers": [
            {
                "action": "detective:DeleteMembers"
            }
        ],
        "Detective.DisassociateMembership": [
            {
                "action": "detective:DisassociateMembership"
            }
        ],
        "Detective.GetMembers": [
            {
                "action": "detective:GetMembers"
            }
        ],
        "Detective.ListGraphs": [
            {
                "action": "detective:ListGraphs"
            }
        ],
        "Detective.ListInvitations": [
            {
                "action": "detective:ListInvitations"
            }
        ],
        "Detective.ListMembers": [
            {
                "action": "detective:ListMembers"
            }
        ],
        "Detective.RejectInvitation": [
            {
                "action": "detective:RejectInvitation"
            }
        ],
        "Detective.StartMonitoringMember": [
            {
                "action": "detective:StartMonitoringMember"
            }
        ],
        "CodeStarconnections.CreateConnection": [
            {
                "action": "codestar-connections:CreateConnection"
            }
        ],
        "CodeStarconnections.CreateHost": [
            {
                "action": "codestar-connections:CreateHost"
            }
        ],
        "CodeStarconnections.DeleteConnection": [
            {
                "action": "codestar-connections:DeleteConnection"
            }
        ],
        "CodeStarconnections.DeleteHost": [
            {
                "action": "codestar-connections:DeleteHost"
            }
        ],
        "CodeStarconnections.GetConnection": [
            {
                "action": "codestar-connections:GetConnection"
            }
        ],
        "CodeStarconnections.GetHost": [
            {
                "action": "codestar-connections:GetHost"
            }
        ],
        "CodeStarconnections.ListConnections": [
            {
                "action": "codestar-connections:ListConnections"
            }
        ],
        "CodeStarconnections.ListHosts": [
            {
                "action": "codestar-connections:ListHosts"
            }
        ],
        "CodeStarconnections.ListTagsForResource": [
            {
                "action": "codestar-connections:ListTagsForResource"
            }
        ],
        "CodeStarconnections.TagResource": [
            {
                "action": "codestar-connections:TagResource"
            }
        ],
        "CodeStarconnections.UntagResource": [
            {
                "action": "codestar-connections:UntagResource"
            }
        ],
        "CodeStarconnections.UpdateHost": [
            {
                "action": "codestar-connections:UpdateHost"
            }
        ],
        "Synthetics.CreateCanary": [
            {
                "action": "synthetics:CreateCanary"
            }
        ],
        "Synthetics.DeleteCanary": [
            {
                "action": "synthetics:DeleteCanary"
            }
        ],
        "Synthetics.DescribeCanaries": [
            {
                "action": "synthetics:DescribeCanaries"
            }
        ],
        "Synthetics.DescribeCanariesLastRun": [
            {
                "action": "synthetics:DescribeCanariesLastRun"
            }
        ],
        "Synthetics.GetCanaryRuns": [
            {
                "action": "synthetics:GetCanaryRuns"
            }
        ],
        "Synthetics.ListTagsForResource": [
            {
                "action": "synthetics:ListTagsForResource"
            }
        ],
        "Synthetics.StartCanary": [
            {
                "action": "synthetics:StartCanary"
            }
        ],
        "Synthetics.StopCanary": [
            {
                "action": "synthetics:StopCanary"
            }
        ],
        "Synthetics.TagResource": [
            {
                "action": "synthetics:TagResource"
            }
        ],
        "Synthetics.UntagResource": [
            {
                "action": "synthetics:UntagResource"
            }
        ],
        "Synthetics.UpdateCanary": [
            {
                "action": "synthetics:UpdateCanary"
            }
        ],
        "IoTSiteWise.AssociateAssets": [
            {
                "action": "iotsitewise:AssociateAssets"
            }
        ],
        "IoTSiteWise.BatchAssociateProjectAssets": [
            {
                "action": "iotsitewise:BatchAssociateProjectAssets"
            }
        ],
        "IoTSiteWise.BatchDisassociateProjectAssets": [
            {
                "action": "iotsitewise:BatchDisassociateProjectAssets"
            }
        ],
        "IoTSiteWise.BatchPutAssetPropertyValue": [
            {
                "action": "iotsitewise:BatchPutAssetPropertyValue"
            }
        ],
        "IoTSiteWise.CreateAccessPolicy": [
            {
                "action": "iotsitewise:CreateAccessPolicy"
            }
        ],
        "IoTSiteWise.CreateAsset": [
            {
                "action": "iotsitewise:CreateAsset"
            }
        ],
        "IoTSiteWise.CreateAssetModel": [
            {
                "action": "iotsitewise:CreateAssetModel"
            }
        ],
        "IoTSiteWise.CreateDashboard": [
            {
                "action": "iotsitewise:CreateDashboard"
            }
        ],
        "IoTSiteWise.CreateGateway": [
            {
                "action": "iotsitewise:CreateGateway"
            }
        ],
        "IoTSiteWise.CreatePortal": [
            {
                "action": "iotsitewise:CreatePortal"
            }
        ],
        "IoTSiteWise.CreateProject": [
            {
                "action": "iotsitewise:CreateProject"
            }
        ],
        "IoTSiteWise.DeleteAccessPolicy": [
            {
                "action": "iotsitewise:DeleteAccessPolicy"
            }
        ],
        "IoTSiteWise.DeleteAsset": [
            {
                "action": "iotsitewise:DeleteAsset"
            }
        ],
        "IoTSiteWise.DeleteAssetModel": [
            {
                "action": "iotsitewise:DeleteAssetModel"
            }
        ],
        "IoTSiteWise.DeleteDashboard": [
            {
                "action": "iotsitewise:DeleteDashboard"
            }
        ],
        "IoTSiteWise.DeleteGateway": [
            {
                "action": "iotsitewise:DeleteGateway"
            }
        ],
        "IoTSiteWise.DeletePortal": [
            {
                "action": "iotsitewise:DeletePortal"
            }
        ],
        "IoTSiteWise.DeleteProject": [
            {
                "action": "iotsitewise:DeleteProject"
            }
        ],
        "IoTSiteWise.DescribeAccessPolicy": [
            {
                "action": "iotsitewise:DescribeAccessPolicy"
            }
        ],
        "IoTSiteWise.DescribeAsset": [
            {
                "action": "iotsitewise:DescribeAsset"
            }
        ],
        "IoTSiteWise.DescribeAssetModel": [
            {
                "action": "iotsitewise:DescribeAssetModel"
            }
        ],
        "IoTSiteWise.DescribeAssetProperty": [
            {
                "action": "iotsitewise:DescribeAssetProperty"
            }
        ],
        "IoTSiteWise.DescribeDashboard": [
            {
                "action": "iotsitewise:DescribeDashboard"
            }
        ],
        "IoTSiteWise.DescribeGateway": [
            {
                "action": "iotsitewise:DescribeGateway"
            }
        ],
        "IoTSiteWise.DescribeGatewayCapabilityConfiguration": [
            {
                "action": "iotsitewise:DescribeGatewayCapabilityConfiguration"
            }
        ],
        "IoTSiteWise.DescribeLoggingOptions": [
            {
                "action": "iotsitewise:DescribeLoggingOptions"
            }
        ],
        "IoTSiteWise.DescribePortal": [
            {
                "action": "iotsitewise:DescribePortal"
            }
        ],
        "IoTSiteWise.DescribeProject": [
            {
                "action": "iotsitewise:DescribeProject"
            }
        ],
        "IoTSiteWise.DisassociateAssets": [
            {
                "action": "iotsitewise:DisassociateAssets"
            }
        ],
        "IoTSiteWise.GetAssetPropertyAggregates": [
            {
                "action": "iotsitewise:GetAssetPropertyAggregates"
            }
        ],
        "IoTSiteWise.GetAssetPropertyValue": [
            {
                "action": "iotsitewise:GetAssetPropertyValue"
            }
        ],
        "IoTSiteWise.GetAssetPropertyValueHistory": [
            {
                "action": "iotsitewise:GetAssetPropertyValueHistory"
            }
        ],
        "IoTSiteWise.ListAccessPolicies": [
            {
                "action": "iotsitewise:ListAccessPolicies"
            }
        ],
        "IoTSiteWise.ListAssetModels": [
            {
                "action": "iotsitewise:ListAssetModels"
            }
        ],
        "IoTSiteWise.ListAssetRelationships": [
            {
                "action": "iotsitewise:ListAssetRelationships"
            }
        ],
        "IoTSiteWise.ListAssets": [
            {
                "action": "iotsitewise:ListAssets"
            }
        ],
        "IoTSiteWise.ListAssociatedAssets": [
            {
                "action": "iotsitewise:ListAssociatedAssets"
            }
        ],
        "IoTSiteWise.ListDashboards": [
            {
                "action": "iotsitewise:ListDashboards"
            }
        ],
        "IoTSiteWise.ListGateways": [
            {
                "action": "iotsitewise:ListGateways"
            }
        ],
        "IoTSiteWise.ListPortals": [
            {
                "action": "iotsitewise:ListPortals"
            }
        ],
        "IoTSiteWise.ListProjectAssets": [
            {
                "action": "iotsitewise:ListProjectAssets"
            }
        ],
        "IoTSiteWise.ListProjects": [
            {
                "action": "iotsitewise:ListProjects"
            }
        ],
        "IoTSiteWise.ListTagsForResource": [
            {
                "action": "iotsitewise:ListTagsForResource"
            }
        ],
        "IoTSiteWise.PutLoggingOptions": [
            {
                "action": "iotsitewise:PutLoggingOptions"
            }
        ],
        "IoTSiteWise.TagResource": [
            {
                "action": "iotsitewise:TagResource"
            }
        ],
        "IoTSiteWise.UntagResource": [
            {
                "action": "iotsitewise:UntagResource"
            }
        ],
        "IoTSiteWise.UpdateAccessPolicy": [
            {
                "action": "iotsitewise:UpdateAccessPolicy"
            }
        ],
        "IoTSiteWise.UpdateAsset": [
            {
                "action": "iotsitewise:UpdateAsset"
            }
        ],
        "IoTSiteWise.UpdateAssetModel": [
            {
                "action": "iotsitewise:UpdateAssetModel"
            }
        ],
        "IoTSiteWise.UpdateAssetProperty": [
            {
                "action": "iotsitewise:UpdateAssetProperty"
            }
        ],
        "IoTSiteWise.UpdateDashboard": [
            {
                "action": "iotsitewise:UpdateDashboard"
            }
        ],
        "IoTSiteWise.UpdateGateway": [
            {
                "action": "iotsitewise:UpdateGateway"
            }
        ],
        "IoTSiteWise.UpdateGatewayCapabilityConfiguration": [
            {
                "action": "iotsitewise:UpdateGatewayCapabilityConfiguration"
            }
        ],
        "IoTSiteWise.UpdatePortal": [
            {
                "action": "iotsitewise:UpdatePortal"
            }
        ],
        "IoTSiteWise.UpdateProject": [
            {
                "action": "iotsitewise:UpdateProject"
            }
        ],
        "Macie2.AcceptInvitation": [
            {
                "action": "macie2:AcceptInvitation"
            }
        ],
        "Macie2.BatchGetCustomDataIdentifiers": [
            {
                "action": "macie2:BatchGetCustomDataIdentifiers"
            }
        ],
        "Macie2.CreateClassificationJob": [
            {
                "action": "macie2:CreateClassificationJob"
            }
        ],
        "Macie2.CreateCustomDataIdentifier": [
            {
                "action": "macie2:CreateCustomDataIdentifier"
            }
        ],
        "Macie2.CreateFindingsFilter": [
            {
                "action": "macie2:CreateFindingsFilter"
            }
        ],
        "Macie2.CreateInvitations": [
            {
                "action": "macie2:CreateInvitations"
            }
        ],
        "Macie2.CreateMember": [
            {
                "action": "macie2:CreateMember"
            }
        ],
        "Macie2.CreateSampleFindings": [
            {
                "action": "macie2:CreateSampleFindings"
            }
        ],
        "Macie2.DeclineInvitations": [
            {
                "action": "macie2:DeclineInvitations"
            }
        ],
        "Macie2.DeleteCustomDataIdentifier": [
            {
                "action": "macie2:DeleteCustomDataIdentifier"
            }
        ],
        "Macie2.DeleteFindingsFilter": [
            {
                "action": "macie2:DeleteFindingsFilter"
            }
        ],
        "Macie2.DeleteInvitations": [
            {
                "action": "macie2:DeleteInvitations"
            }
        ],
        "Macie2.DeleteMember": [
            {
                "action": "macie2:DeleteMember"
            }
        ],
        "Macie2.DescribeBuckets": [
            {
                "action": "macie2:DescribeBuckets"
            }
        ],
        "Macie2.DescribeClassificationJob": [
            {
                "action": "macie2:DescribeClassificationJob"
            }
        ],
        "Macie2.DescribeOrganizationConfiguration": [
            {
                "action": "macie2:DescribeOrganizationConfiguration"
            }
        ],
        "Macie2.DisableMacie": [
            {
                "action": "macie2:DisableMacie"
            }
        ],
        "Macie2.DisableOrganizationAdminAccount": [
            {
                "action": "macie2:DisableOrganizationAdminAccount"
            }
        ],
        "Macie2.DisassociateFromMasterAccount": [
            {
                "action": "macie2:DisassociateFromMasterAccount"
            }
        ],
        "Macie2.DisassociateMember": [
            {
                "action": "macie2:DisassociateMember"
            }
        ],
        "Macie2.EnableMacie": [
            {
                "action": "macie2:EnableMacie"
            }
        ],
        "Macie2.EnableOrganizationAdminAccount": [
            {
                "action": "macie2:EnableOrganizationAdminAccount"
            }
        ],
        "Macie2.GetBucketStatistics": [
            {
                "action": "macie2:GetBucketStatistics"
            }
        ],
        "Macie2.GetClassificationExportConfiguration": [
            {
                "action": "macie2:GetClassificationExportConfiguration"
            }
        ],
        "Macie2.GetCustomDataIdentifier": [
            {
                "action": "macie2:GetCustomDataIdentifier"
            }
        ],
        "Macie2.GetFindingStatistics": [
            {
                "action": "macie2:GetFindingStatistics"
            }
        ],
        "Macie2.GetFindings": [
            {
                "action": "macie2:GetFindings"
            }
        ],
        "Macie2.GetFindingsFilter": [
            {
                "action": "macie2:GetFindingsFilter"
            }
        ],
        "Macie2.GetInvitationsCount": [
            {
                "action": "macie2:GetInvitationsCount"
            }
        ],
        "Macie2.GetMacieSession": [
            {
                "action": "macie2:GetMacieSession"
            }
        ],
        "Macie2.GetMasterAccount": [
            {
                "action": "macie2:GetMasterAccount"
            }
        ],
        "Macie2.GetMember": [
            {
                "action": "macie2:GetMember"
            }
        ],
        "Macie2.GetUsageStatistics": [
            {
                "action": "macie2:GetUsageStatistics"
            }
        ],
        "Macie2.GetUsageTotals": [
            {
                "action": "macie2:GetUsageTotals"
            }
        ],
        "Macie2.ListClassificationJobs": [
            {
                "action": "macie2:ListClassificationJobs"
            }
        ],
        "Macie2.ListCustomDataIdentifiers": [
            {
                "action": "macie2:ListCustomDataIdentifiers"
            }
        ],
        "Macie2.ListFindings": [
            {
                "action": "macie2:ListFindings"
            }
        ],
        "Macie2.ListFindingsFilters": [
            {
                "action": "macie2:ListFindingsFilters"
            }
        ],
        "Macie2.ListInvitations": [
            {
                "action": "macie2:ListInvitations"
            }
        ],
        "Macie2.ListMembers": [
            {
                "action": "macie2:ListMembers"
            }
        ],
        "Macie2.ListOrganizationAdminAccounts": [
            {
                "action": "macie2:ListOrganizationAdminAccounts"
            }
        ],
        "Macie2.ListTagsForResource": [
            {
                "action": "macie2:ListTagsForResource"
            }
        ],
        "Macie2.PutClassificationExportConfiguration": [
            {
                "action": "macie2:PutClassificationExportConfiguration"
            }
        ],
        "Macie2.TagResource": [
            {
                "action": "macie2:TagResource"
            }
        ],
        "Macie2.TestCustomDataIdentifier": [
            {
                "action": "macie2:TestCustomDataIdentifier"
            }
        ],
        "Macie2.UntagResource": [
            {
                "action": "macie2:UntagResource"
            }
        ],
        "Macie2.UpdateClassificationJob": [
            {
                "action": "macie2:UpdateClassificationJob"
            }
        ],
        "Macie2.UpdateFindingsFilter": [
            {
                "action": "macie2:UpdateFindingsFilter"
            }
        ],
        "Macie2.UpdateMacieSession": [
            {
                "action": "macie2:UpdateMacieSession"
            }
        ],
        "Macie2.UpdateMemberSession": [
            {
                "action": "macie2:UpdateMemberSession"
            }
        ],
        "Macie2.UpdateOrganizationConfiguration": [
            {
                "action": "macie2:UpdateOrganizationConfiguration"
            }
        ],
        "CodeArtifact.AssociateExternalConnection": [
            {
                "action": "codeartifact:AssociateExternalConnection"
            }
        ],
        "CodeArtifact.CopyPackageVersions": [
            {
                "action": "codeartifact:CopyPackageVersions"
            }
        ],
        "CodeArtifact.CreateDomain": [
            {
                "action": "codeartifact:CreateDomain"
            }
        ],
        "CodeArtifact.CreateRepository": [
            {
                "action": "codeartifact:CreateRepository"
            }
        ],
        "CodeArtifact.DeleteDomain": [
            {
                "action": "codeartifact:DeleteDomain"
            }
        ],
        "CodeArtifact.DeleteDomainPermissionsPolicy": [
            {
                "action": "codeartifact:DeleteDomainPermissionsPolicy"
            }
        ],
        "CodeArtifact.DeletePackageVersions": [
            {
                "action": "codeartifact:DeletePackageVersions"
            }
        ],
        "CodeArtifact.DeleteRepository": [
            {
                "action": "codeartifact:DeleteRepository"
            }
        ],
        "CodeArtifact.DeleteRepositoryPermissionsPolicy": [
            {
                "action": "codeartifact:DeleteRepositoryPermissionsPolicy"
            }
        ],
        "CodeArtifact.DescribeDomain": [
            {
                "action": "codeartifact:DescribeDomain"
            }
        ],
        "CodeArtifact.DescribePackageVersion": [
            {
                "action": "codeartifact:DescribePackageVersion"
            }
        ],
        "CodeArtifact.DescribeRepository": [
            {
                "action": "codeartifact:DescribeRepository"
            }
        ],
        "CodeArtifact.DisassociateExternalConnection": [
            {
                "action": "codeartifact:DisassociateExternalConnection"
            }
        ],
        "CodeArtifact.DisposePackageVersions": [
            {
                "action": "codeartifact:DisposePackageVersions"
            }
        ],
        "CodeArtifact.GetAuthorizationToken": [
            {
                "action": "codeartifact:GetAuthorizationToken"
            }
        ],
        "CodeArtifact.GetDomainPermissionsPolicy": [
            {
                "action": "codeartifact:GetDomainPermissionsPolicy"
            }
        ],
        "CodeArtifact.GetPackageVersionAsset": [
            {
                "action": "codeartifact:GetPackageVersionAsset"
            }
        ],
        "CodeArtifact.GetPackageVersionReadme": [
            {
                "action": "codeartifact:GetPackageVersionReadme"
            }
        ],
        "CodeArtifact.GetRepositoryEndpoint": [
            {
                "action": "codeartifact:GetRepositoryEndpoint"
            }
        ],
        "CodeArtifact.GetRepositoryPermissionsPolicy": [
            {
                "action": "codeartifact:GetRepositoryPermissionsPolicy"
            }
        ],
        "CodeArtifact.ListDomains": [
            {
                "action": "codeartifact:ListDomains"
            }
        ],
        "CodeArtifact.ListPackageVersionAssets": [
            {
                "action": "codeartifact:ListPackageVersionAssets"
            }
        ],
        "CodeArtifact.ListPackageVersionDependencies": [
            {
                "action": "codeartifact:ListPackageVersionDependencies"
            }
        ],
        "CodeArtifact.ListPackageVersions": [
            {
                "action": "codeartifact:ListPackageVersions"
            }
        ],
        "CodeArtifact.ListPackages": [
            {
                "action": "codeartifact:ListPackages"
            }
        ],
        "CodeArtifact.ListRepositories": [
            {
                "action": "codeartifact:ListRepositories"
            }
        ],
        "CodeArtifact.ListRepositoriesInDomain": [
            {
                "action": "codeartifact:ListRepositoriesInDomain"
            }
        ],
        "CodeArtifact.ListTagsForResource": [
            {
                "action": "codeartifact:ListTagsForResource"
            }
        ],
        "CodeArtifact.PutDomainPermissionsPolicy": [
            {
                "action": "codeartifact:PutDomainPermissionsPolicy"
            }
        ],
        "CodeArtifact.PutRepositoryPermissionsPolicy": [
            {
                "action": "codeartifact:PutRepositoryPermissionsPolicy"
            }
        ],
        "CodeArtifact.TagResource": [
            {
                "action": "codeartifact:TagResource"
            }
        ],
        "CodeArtifact.UntagResource": [
            {
                "action": "codeartifact:UntagResource"
            }
        ],
        "CodeArtifact.UpdatePackageVersionsStatus": [
            {
                "action": "codeartifact:UpdatePackageVersionsStatus"
            }
        ],
        "CodeArtifact.UpdateRepository": [
            {
                "action": "codeartifact:UpdateRepository"
            }
        ],
        "Honeycode.BatchCreateTableRows": [
            {
                "action": "honeycode:BatchCreateTableRows"
            }
        ],
        "Honeycode.BatchDeleteTableRows": [
            {
                "action": "honeycode:BatchDeleteTableRows"
            }
        ],
        "Honeycode.BatchUpdateTableRows": [
            {
                "action": "honeycode:BatchUpdateTableRows"
            }
        ],
        "Honeycode.BatchUpsertTableRows": [
            {
                "action": "honeycode:BatchUpsertTableRows"
            }
        ],
        "Honeycode.DescribeTableDataImportJob": [
            {
                "action": "honeycode:DescribeTableDataImportJob"
            }
        ],
        "Honeycode.GetScreenData": [
            {
                "action": "honeycode:GetScreenData"
            }
        ],
        "Honeycode.InvokeScreenAutomation": [
            {
                "action": "honeycode:InvokeScreenAutomation"
            }
        ],
        "Honeycode.ListTableColumns": [
            {
                "action": "honeycode:ListTableColumns"
            }
        ],
        "Honeycode.ListTableRows": [
            {
                "action": "honeycode:ListTableRows"
            }
        ],
        "Honeycode.ListTables": [
            {
                "action": "honeycode:ListTables"
            }
        ],
        "Honeycode.QueryTableRows": [
            {
                "action": "honeycode:QueryTableRows"
            }
        ],
        "Honeycode.StartTableDataImportJob": [
            {
                "action": "honeycode:StartTableDataImportJob"
            }
        ],
        "IVS.BatchGetChannel": [
            {
                "action": "ivs:BatchGetChannel"
            }
        ],
        "IVS.BatchGetStreamKey": [
            {
                "action": "ivs:BatchGetStreamKey"
            }
        ],
        "IVS.CreateChannel": [
            {
                "action": "ivs:CreateChannel"
            }
        ],
        "IVS.CreateStreamKey": [
            {
                "action": "ivs:CreateStreamKey"
            }
        ],
        "IVS.DeleteChannel": [
            {
                "action": "ivs:DeleteChannel"
            }
        ],
        "IVS.DeletePlaybackKeyPair": [
            {
                "action": "ivs:DeletePlaybackKeyPair"
            }
        ],
        "IVS.DeleteStreamKey": [
            {
                "action": "ivs:DeleteStreamKey"
            }
        ],
        "IVS.GetChannel": [
            {
                "action": "ivs:GetChannel"
            }
        ],
        "IVS.GetPlaybackKeyPair": [
            {
                "action": "ivs:GetPlaybackKeyPair"
            }
        ],
        "IVS.GetStream": [
            {
                "action": "ivs:GetStream"
            }
        ],
        "IVS.GetStreamKey": [
            {
                "action": "ivs:GetStreamKey"
            }
        ],
        "IVS.ImportPlaybackKeyPair": [
            {
                "action": "ivs:ImportPlaybackKeyPair"
            }
        ],
        "IVS.ListChannels": [
            {
                "action": "ivs:ListChannels"
            }
        ],
        "IVS.ListPlaybackKeyPairs": [
            {
                "action": "ivs:ListPlaybackKeyPairs"
            }
        ],
        "IVS.ListStreamKeys": [
            {
                "action": "ivs:ListStreamKeys"
            }
        ],
        "IVS.ListStreams": [
            {
                "action": "ivs:ListStreams"
            }
        ],
        "IVS.ListTagsForResource": [
            {
                "action": "ivs:ListTagsForResource"
            }
        ],
        "IVS.PutMetadata": [
            {
                "action": "ivs:PutMetadata"
            }
        ],
        "IVS.StopStream": [
            {
                "action": "ivs:StopStream"
            }
        ],
        "IVS.TagResource": [
            {
                "action": "ivs:TagResource"
            }
        ],
        "IVS.UntagResource": [
            {
                "action": "ivs:UntagResource"
            }
        ],
        "IVS.UpdateChannel": [
            {
                "action": "ivs:UpdateChannel"
            }
        ],
        "Braket.CancelQuantumTask": [
            {
                "action": "braket:CancelQuantumTask"
            }
        ],
        "Braket.CreateQuantumTask": [
            {
                "action": "braket:CreateQuantumTask"
            }
        ],
        "Braket.GetDevice": [
            {
                "action": "braket:GetDevice"
            }
        ],
        "Braket.GetQuantumTask": [
            {
                "action": "braket:GetQuantumTask"
            }
        ],
        "Braket.ListTagsForResource": [
            {
                "action": "braket:ListTagsForResource"
            }
        ],
        "Braket.SearchDevices": [
            {
                "action": "braket:SearchDevices"
            }
        ],
        "Braket.SearchQuantumTasks": [
            {
                "action": "braket:SearchQuantumTasks"
            }
        ],
        "Braket.TagResource": [
            {
                "action": "braket:TagResource"
            }
        ],
        "Braket.UntagResource": [
            {
                "action": "braket:UntagResource"
            }
        ],
        "IdentityStore.DescribeGroup": [
            {
                "action": "identitystore:DescribeGroup"
            }
        ],
        "IdentityStore.DescribeUser": [
            {
                "action": "identitystore:DescribeUser"
            }
        ],
        "IdentityStore.ListGroups": [
            {
                "action": "identitystore:ListGroups"
            }
        ],
        "IdentityStore.ListUsers": [
            {
                "action": "identitystore:ListUsers"
            }
        ],
        "Appflow.CreateConnectorProfile": [
            {
                "action": "appflow:CreateConnectorProfile"
            }
        ],
        "Appflow.CreateFlow": [
            {
                "action": "appflow:CreateFlow"
            }
        ],
        "Appflow.DeleteConnectorProfile": [
            {
                "action": "appflow:DeleteConnectorProfile"
            }
        ],
        "Appflow.DeleteFlow": [
            {
                "action": "appflow:DeleteFlow"
            }
        ],
        "Appflow.DescribeConnectorEntity": [
            {
                "action": "appflow:DescribeConnectorEntity"
            }
        ],
        "Appflow.DescribeConnectorProfiles": [
            {
                "action": "appflow:DescribeConnectorProfiles"
            }
        ],
        "Appflow.DescribeConnectors": [
            {
                "action": "appflow:DescribeConnectors"
            }
        ],
        "Appflow.DescribeFlow": [
            {
                "action": "appflow:DescribeFlow"
            }
        ],
        "Appflow.DescribeFlowExecutionRecords": [
            {
                "action": "appflow:DescribeFlowExecutionRecords"
            }
        ],
        "Appflow.ListConnectorEntities": [
            {
                "action": "appflow:ListConnectorEntities"
            }
        ],
        "Appflow.ListFlows": [
            {
                "action": "appflow:ListFlows"
            }
        ],
        "Appflow.ListTagsForResource": [
            {
                "action": "appflow:ListTagsForResource"
            }
        ],
        "Appflow.StartFlow": [
            {
                "action": "appflow:StartFlow"
            }
        ],
        "Appflow.StopFlow": [
            {
                "action": "appflow:StopFlow"
            }
        ],
        "Appflow.TagResource": [
            {
                "action": "appflow:TagResource"
            }
        ],
        "Appflow.UntagResource": [
            {
                "action": "appflow:UntagResource"
            }
        ],
        "Appflow.UpdateConnectorProfile": [
            {
                "action": "appflow:UpdateConnectorProfile"
            }
        ],
        "Appflow.UpdateFlow": [
            {
                "action": "appflow:UpdateFlow"
            }
        ],
        "RedshiftData.CancelStatement": [
            {
                "action": "redshift-data:CancelStatement"
            }
        ],
        "RedshiftData.DescribeStatement": [
            {
                "action": "redshift-data:DescribeStatement"
            }
        ],
        "RedshiftData.DescribeTable": [
            {
                "action": "redshift-data:DescribeTable"
            }
        ],
        "RedshiftData.ExecuteStatement": [
            {
                "action": "redshift-data:ExecuteStatement"
            }
        ],
        "RedshiftData.GetStatementResult": [
            {
                "action": "redshift-data:GetStatementResult"
            }
        ],
        "RedshiftData.ListDatabases": [
            {
                "action": "redshift-data:ListDatabases"
            }
        ],
        "RedshiftData.ListSchemas": [
            {
                "action": "redshift-data:ListSchemas"
            }
        ],
        "RedshiftData.ListStatements": [
            {
                "action": "redshift-data:ListStatements"
            }
        ],
        "RedshiftData.ListTables": [
            {
                "action": "redshift-data:ListTables"
            }
        ],
        "SSOAdmin.AttachManagedPolicyToPermissionSet": [
            {
                "action": "sso:AttachManagedPolicyToPermissionSet"
            }
        ],
        "SSOAdmin.CreateAccountAssignment": [
            {
                "action": "sso:CreateAccountAssignment"
            }
        ],
        "SSOAdmin.CreateInstanceAccessControlAttributeConfiguration": [
            {
                "action": "sso:CreateInstanceAccessControlAttributeConfiguration"
            }
        ],
        "SSOAdmin.CreatePermissionSet": [
            {
                "action": "sso:CreatePermissionSet"
            }
        ],
        "SSOAdmin.DeleteAccountAssignment": [
            {
                "action": "sso:DeleteAccountAssignment"
            }
        ],
        "SSOAdmin.DeleteInlinePolicyFromPermissionSet": [
            {
                "action": "sso:DeleteInlinePolicyFromPermissionSet"
            }
        ],
        "SSOAdmin.DeleteInstanceAccessControlAttributeConfiguration": [
            {
                "action": "sso:DeleteInstanceAccessControlAttributeConfiguration"
            }
        ],
        "SSOAdmin.DeletePermissionSet": [
            {
                "action": "sso:DeletePermissionSet"
            }
        ],
        "SSOAdmin.DescribeAccountAssignmentCreationStatus": [
            {
                "action": "sso:DescribeAccountAssignmentCreationStatus"
            }
        ],
        "SSOAdmin.DescribeAccountAssignmentDeletionStatus": [
            {
                "action": "sso:DescribeAccountAssignmentDeletionStatus"
            }
        ],
        "SSOAdmin.DescribeInstanceAccessControlAttributeConfiguration": [
            {
                "action": "sso:DescribeInstanceAccessControlAttributeConfiguration"
            }
        ],
        "SSOAdmin.DescribePermissionSet": [
            {
                "action": "sso:DescribePermissionSet"
            }
        ],
        "SSOAdmin.DescribePermissionSetProvisioningStatus": [
            {
                "action": "sso:DescribePermissionSetProvisioningStatus"
            }
        ],
        "SSOAdmin.DetachManagedPolicyFromPermissionSet": [
            {
                "action": "sso:DetachManagedPolicyFromPermissionSet"
            }
        ],
        "SSOAdmin.GetInlinePolicyForPermissionSet": [
            {
                "action": "sso:GetInlinePolicyForPermissionSet"
            }
        ],
        "SSOAdmin.ListAccountAssignmentCreationStatus": [
            {
                "action": "sso:ListAccountAssignmentCreationStatus"
            }
        ],
        "SSOAdmin.ListAccountAssignmentDeletionStatus": [
            {
                "action": "sso:ListAccountAssignmentDeletionStatus"
            }
        ],
        "SSOAdmin.ListAccountAssignments": [
            {
                "action": "sso:ListAccountAssignments"
            }
        ],
        "SSOAdmin.ListAccountsForProvisionedPermissionSet": [
            {
                "action": "sso:ListAccountsForProvisionedPermissionSet"
            }
        ],
        "SSOAdmin.ListInstances": [
            {
                "action": "sso:ListInstances"
            }
        ],
        "SSOAdmin.ListManagedPoliciesInPermissionSet": [
            {
                "action": "sso:ListManagedPoliciesInPermissionSet"
            }
        ],
        "SSOAdmin.ListPermissionSetProvisioningStatus": [
            {
                "action": "sso:ListPermissionSetProvisioningStatus"
            }
        ],
        "SSOAdmin.ListPermissionSets": [
            {
                "action": "sso:ListPermissionSets"
            }
        ],
        "SSOAdmin.ListPermissionSetsProvisionedToAccount": [
            {
                "action": "sso:ListPermissionSetsProvisionedToAccount"
            }
        ],
        "SSOAdmin.ListTagsForResource": [
            {
                "action": "sso:ListTagsForResource"
            }
        ],
        "SSOAdmin.ProvisionPermissionSet": [
            {
                "action": "sso:ProvisionPermissionSet"
            }
        ],
        "SSOAdmin.PutInlinePolicyToPermissionSet": [
            {
                "action": "sso:PutInlinePolicyToPermissionSet"
            }
        ],
        "SSOAdmin.TagResource": [
            {
                "action": "sso:TagResource"
            }
        ],
        "SSOAdmin.UntagResource": [
            {
                "action": "sso:UntagResource"
            }
        ],
        "SSOAdmin.UpdateInstanceAccessControlAttributeConfiguration": [
            {
                "action": "sso:UpdateInstanceAccessControlAttributeConfiguration"
            }
        ],
        "SSOAdmin.UpdatePermissionSet": [
            {
                "action": "sso:UpdatePermissionSet"
            }
        ],
        "TimestreamQuery.CancelQuery": [
            {
                "action": "timestream:CancelQuery"
            }
        ],
        "TimestreamQuery.DescribeEndpoints": [
            {
                "action": "timestream:DescribeEndpoints"
            }
        ],
        "TimestreamWrite.CreateDatabase": [
            {
                "action": "timestream:CreateDatabase"
            }
        ],
        "TimestreamWrite.CreateTable": [
            {
                "action": "timestream:CreateTable"
            }
        ],
        "TimestreamWrite.DeleteDatabase": [
            {
                "action": "timestream:DeleteDatabase"
            }
        ],
        "TimestreamWrite.DeleteTable": [
            {
                "action": "timestream:DeleteTable"
            }
        ],
        "TimestreamWrite.DescribeDatabase": [
            {
                "action": "timestream:DescribeDatabase"
            }
        ],
        "TimestreamWrite.DescribeEndpoints": [
            {
                "action": "timestream:DescribeEndpoints"
            }
        ],
        "TimestreamWrite.DescribeTable": [
            {
                "action": "timestream:DescribeTable"
            }
        ],
        "TimestreamWrite.ListDatabases": [
            {
                "action": "timestream:ListDatabases"
            }
        ],
        "TimestreamWrite.ListTables": [
            {
                "action": "timestream:ListTables"
            }
        ],
        "TimestreamWrite.ListTagsForResource": [
            {
                "action": "timestream:ListTagsForResource"
            }
        ],
        "TimestreamWrite.TagResource": [
            {
                "action": "timestream:TagResource"
            }
        ],
        "TimestreamWrite.UntagResource": [
            {
                "action": "timestream:UntagResource"
            }
        ],
        "TimestreamWrite.UpdateDatabase": [
            {
                "action": "timestream:UpdateDatabase"
            }
        ],
        "TimestreamWrite.UpdateTable": [
            {
                "action": "timestream:UpdateTable"
            }
        ],
        "TimestreamWrite.WriteRecords": [
            {
                "action": "timestream:WriteRecords"
            }
        ],
        "S3Outposts.CreateEndpoint": [
            {
                "action": "s3-outposts:CreateEndpoint"
            }
        ],
        "S3Outposts.DeleteEndpoint": [
            {
                "action": "s3-outposts:DeleteEndpoint"
            }
        ],
        "S3Outposts.ListEndpoints": [
            {
                "action": "s3-outposts:ListEndpoints"
            }
        ],
        "DataBrew.BatchDeleteRecipeVersion": [
            {
                "action": "databrew:BatchDeleteRecipeVersion"
            }
        ],
        "DataBrew.CreateDataset": [
            {
                "action": "databrew:CreateDataset"
            }
        ],
        "DataBrew.CreateProfileJob": [
            {
                "action": "databrew:CreateProfileJob"
            }
        ],
        "DataBrew.CreateProject": [
            {
                "action": "databrew:CreateProject"
            }
        ],
        "DataBrew.CreateRecipe": [
            {
                "action": "databrew:CreateRecipe"
            }
        ],
        "DataBrew.CreateRecipeJob": [
            {
                "action": "databrew:CreateRecipeJob"
            }
        ],
        "DataBrew.CreateSchedule": [
            {
                "action": "databrew:CreateSchedule"
            }
        ],
        "DataBrew.DeleteDataset": [
            {
                "action": "databrew:DeleteDataset"
            }
        ],
        "DataBrew.DeleteJob": [
            {
                "action": "databrew:DeleteJob"
            }
        ],
        "DataBrew.DeleteProject": [
            {
                "action": "databrew:DeleteProject"
            }
        ],
        "DataBrew.DeleteRecipeVersion": [
            {
                "action": "databrew:DeleteRecipeVersion"
            }
        ],
        "DataBrew.DeleteSchedule": [
            {
                "action": "databrew:DeleteSchedule"
            }
        ],
        "DataBrew.DescribeDataset": [
            {
                "action": "databrew:DescribeDataset"
            }
        ],
        "DataBrew.DescribeJob": [
            {
                "action": "databrew:DescribeJob"
            }
        ],
        "DataBrew.DescribeProject": [
            {
                "action": "databrew:DescribeProject"
            }
        ],
        "DataBrew.DescribeRecipe": [
            {
                "action": "databrew:DescribeRecipe"
            }
        ],
        "DataBrew.DescribeSchedule": [
            {
                "action": "databrew:DescribeSchedule"
            }
        ],
        "DataBrew.ListDatasets": [
            {
                "action": "databrew:ListDatasets"
            }
        ],
        "DataBrew.ListJobRuns": [
            {
                "action": "databrew:ListJobRuns"
            }
        ],
        "DataBrew.ListJobs": [
            {
                "action": "databrew:ListJobs"
            }
        ],
        "DataBrew.ListProjects": [
            {
                "action": "databrew:ListProjects"
            }
        ],
        "DataBrew.ListRecipeVersions": [
            {
                "action": "databrew:ListRecipeVersions"
            }
        ],
        "DataBrew.ListRecipes": [
            {
                "action": "databrew:ListRecipes"
            }
        ],
        "DataBrew.ListSchedules": [
            {
                "action": "databrew:ListSchedules"
            }
        ],
        "DataBrew.ListTagsForResource": [
            {
                "action": "databrew:ListTagsForResource"
            }
        ],
        "DataBrew.PublishRecipe": [
            {
                "action": "databrew:PublishRecipe"
            }
        ],
        "DataBrew.SendProjectSessionAction": [
            {
                "action": "databrew:SendProjectSessionAction"
            }
        ],
        "DataBrew.StartJobRun": [
            {
                "action": "databrew:StartJobRun"
            }
        ],
        "DataBrew.StartProjectSession": [
            {
                "action": "databrew:StartProjectSession"
            }
        ],
        "DataBrew.StopJobRun": [
            {
                "action": "databrew:StopJobRun"
            }
        ],
        "DataBrew.TagResource": [
            {
                "action": "databrew:TagResource"
            }
        ],
        "DataBrew.UntagResource": [
            {
                "action": "databrew:UntagResource"
            }
        ],
        "DataBrew.UpdateDataset": [
            {
                "action": "databrew:UpdateDataset"
            }
        ],
        "DataBrew.UpdateProfileJob": [
            {
                "action": "databrew:UpdateProfileJob"
            }
        ],
        "DataBrew.UpdateProject": [
            {
                "action": "databrew:UpdateProject"
            }
        ],
        "DataBrew.UpdateRecipe": [
            {
                "action": "databrew:UpdateRecipe"
            }
        ],
        "DataBrew.UpdateRecipeJob": [
            {
                "action": "databrew:UpdateRecipeJob"
            }
        ],
        "DataBrew.UpdateSchedule": [
            {
                "action": "databrew:UpdateSchedule"
            }
        ],
        "ServiceCatalogAppRegistry.AssociateAttributeGroup": [
            {
                "action": "servicecatalog:AssociateAttributeGroup"
            }
        ],
        "ServiceCatalogAppRegistry.AssociateResource": [
            {
                "action": "servicecatalog:AssociateResource"
            }
        ],
        "ServiceCatalogAppRegistry.CreateApplication": [
            {
                "action": "servicecatalog:CreateApplication"
            }
        ],
        "ServiceCatalogAppRegistry.CreateAttributeGroup": [
            {
                "action": "servicecatalog:CreateAttributeGroup"
            }
        ],
        "ServiceCatalogAppRegistry.DeleteApplication": [
            {
                "action": "servicecatalog:DeleteApplication"
            }
        ],
        "ServiceCatalogAppRegistry.DeleteAttributeGroup": [
            {
                "action": "servicecatalog:DeleteAttributeGroup"
            }
        ],
        "ServiceCatalogAppRegistry.DisassociateAttributeGroup": [
            {
                "action": "servicecatalog:DisassociateAttributeGroup"
            }
        ],
        "ServiceCatalogAppRegistry.DisassociateResource": [
            {
                "action": "servicecatalog:DisassociateResource"
            }
        ],
        "ServiceCatalogAppRegistry.GetApplication": [
            {
                "action": "servicecatalog:GetApplication"
            }
        ],
        "ServiceCatalogAppRegistry.GetAttributeGroup": [
            {
                "action": "servicecatalog:GetAttributeGroup"
            }
        ],
        "ServiceCatalogAppRegistry.ListApplications": [
            {
                "action": "servicecatalog:ListApplications"
            }
        ],
        "ServiceCatalogAppRegistry.ListAssociatedAttributeGroups": [
            {
                "action": "servicecatalog:ListAssociatedAttributeGroups"
            }
        ],
        "ServiceCatalogAppRegistry.ListAssociatedResources": [
            {
                "action": "servicecatalog:ListAssociatedResources"
            }
        ],
        "ServiceCatalogAppRegistry.ListAttributeGroups": [
            {
                "action": "servicecatalog:ListAttributeGroups"
            }
        ],
        "ServiceCatalogAppRegistry.ListTagsForResource": [
            {
                "action": "servicecatalog:ListTagsForResource"
            }
        ],
        "ServiceCatalogAppRegistry.SyncResource": [
            {
                "action": "servicecatalog:SyncResource"
            }
        ],
        "ServiceCatalogAppRegistry.TagResource": [
            {
                "action": "servicecatalog:TagResource"
            }
        ],
        "ServiceCatalogAppRegistry.UntagResource": [
            {
                "action": "servicecatalog:UntagResource"
            }
        ],
        "ServiceCatalogAppRegistry.UpdateApplication": [
            {
                "action": "servicecatalog:UpdateApplication"
            }
        ],
        "ServiceCatalogAppRegistry.UpdateAttributeGroup": [
            {
                "action": "servicecatalog:UpdateAttributeGroup"
            }
        ],
        "NetworkFirewall.AssociateFirewallPolicy": [
            {
                "action": "network-firewall:AssociateFirewallPolicy"
            }
        ],
        "NetworkFirewall.AssociateSubnets": [
            {
                "action": "network-firewall:AssociateSubnets"
            }
        ],
        "NetworkFirewall.CreateFirewall": [
            {
                "action": "network-firewall:CreateFirewall"
            }
        ],
        "NetworkFirewall.CreateFirewallPolicy": [
            {
                "action": "network-firewall:CreateFirewallPolicy"
            }
        ],
        "NetworkFirewall.CreateRuleGroup": [
            {
                "action": "network-firewall:CreateRuleGroup"
            }
        ],
        "NetworkFirewall.DeleteFirewall": [
            {
                "action": "network-firewall:DeleteFirewall"
            }
        ],
        "NetworkFirewall.DeleteFirewallPolicy": [
            {
                "action": "network-firewall:DeleteFirewallPolicy"
            }
        ],
        "NetworkFirewall.DeleteResourcePolicy": [
            {
                "action": "network-firewall:DeleteResourcePolicy"
            }
        ],
        "NetworkFirewall.DeleteRuleGroup": [
            {
                "action": "network-firewall:DeleteRuleGroup"
            }
        ],
        "NetworkFirewall.DescribeFirewall": [
            {
                "action": "network-firewall:DescribeFirewall"
            }
        ],
        "NetworkFirewall.DescribeFirewallPolicy": [
            {
                "action": "network-firewall:DescribeFirewallPolicy"
            }
        ],
        "NetworkFirewall.DescribeLoggingConfiguration": [
            {
                "action": "network-firewall:DescribeLoggingConfiguration"
            }
        ],
        "NetworkFirewall.DescribeResourcePolicy": [
            {
                "action": "network-firewall:DescribeResourcePolicy"
            }
        ],
        "NetworkFirewall.DescribeRuleGroup": [
            {
                "action": "network-firewall:DescribeRuleGroup"
            }
        ],
        "NetworkFirewall.DisassociateSubnets": [
            {
                "action": "network-firewall:DisassociateSubnets"
            }
        ],
        "NetworkFirewall.ListFirewallPolicies": [
            {
                "action": "network-firewall:ListFirewallPolicies"
            }
        ],
        "NetworkFirewall.ListFirewalls": [
            {
                "action": "network-firewall:ListFirewalls"
            }
        ],
        "NetworkFirewall.ListRuleGroups": [
            {
                "action": "network-firewall:ListRuleGroups"
            }
        ],
        "NetworkFirewall.ListTagsForResource": [
            {
                "action": "network-firewall:ListTagsForResource"
            }
        ],
        "NetworkFirewall.PutResourcePolicy": [
            {
                "action": "network-firewall:PutResourcePolicy"
            }
        ],
        "NetworkFirewall.TagResource": [
            {
                "action": "network-firewall:TagResource"
            }
        ],
        "NetworkFirewall.UntagResource": [
            {
                "action": "network-firewall:UntagResource"
            }
        ],
        "NetworkFirewall.UpdateFirewallDeleteProtection": [
            {
                "action": "network-firewall:UpdateFirewallDeleteProtection"
            }
        ],
        "NetworkFirewall.UpdateFirewallDescription": [
            {
                "action": "network-firewall:UpdateFirewallDescription"
            }
        ],
        "NetworkFirewall.UpdateFirewallPolicy": [
            {
                "action": "network-firewall:UpdateFirewallPolicy"
            }
        ],
        "NetworkFirewall.UpdateFirewallPolicyChangeProtection": [
            {
                "action": "network-firewall:UpdateFirewallPolicyChangeProtection"
            }
        ],
        "NetworkFirewall.UpdateLoggingConfiguration": [
            {
                "action": "network-firewall:UpdateLoggingConfiguration"
            }
        ],
        "NetworkFirewall.UpdateRuleGroup": [
            {
                "action": "network-firewall:UpdateRuleGroup"
            }
        ],
        "NetworkFirewall.UpdateSubnetChangeProtection": [
            {
                "action": "network-firewall:UpdateSubnetChangeProtection"
            }
        ],
        "MWAA.CreateCliToken": [
            {
                "action": "airflow:CreateCliToken"
            }
        ],
        "MWAA.CreateEnvironment": [
            {
                "action": "airflow:CreateEnvironment"
            }
        ],
        "MWAA.CreateWebLoginToken": [
            {
                "action": "airflow:CreateWebLoginToken"
            }
        ],
        "MWAA.DeleteEnvironment": [
            {
                "action": "airflow:DeleteEnvironment"
            }
        ],
        "MWAA.GetEnvironment": [
            {
                "action": "airflow:GetEnvironment"
            }
        ],
        "MWAA.ListEnvironments": [
            {
                "action": "airflow:ListEnvironments"
            }
        ],
        "MWAA.ListTagsForResource": [
            {
                "action": "airflow:ListTagsForResource"
            }
        ],
        "MWAA.PublishMetrics": [
            {
                "action": "airflow:PublishMetrics"
            }
        ],
        "MWAA.TagResource": [
            {
                "action": "airflow:TagResource"
            }
        ],
        "MWAA.UntagResource": [
            {
                "action": "airflow:UntagResource"
            }
        ],
        "MWAA.UpdateEnvironment": [
            {
                "action": "airflow:UpdateEnvironment"
            }
        ],
        "AmplifyBackend.CloneBackend": [
            {
                "action": "amplifybackend:CloneBackend"
            }
        ],
        "AmplifyBackend.CreateBackend": [
            {
                "action": "amplifybackend:CreateBackend"
            }
        ],
        "AmplifyBackend.CreateBackendAPI": [
            {
                "action": "amplifybackend:CreateBackendAPI"
            }
        ],
        "AmplifyBackend.CreateBackendAuth": [
            {
                "action": "amplifybackend:CreateBackendAuth"
            }
        ],
        "AmplifyBackend.CreateBackendConfig": [
            {
                "action": "amplifybackend:CreateBackendConfig"
            }
        ],
        "AmplifyBackend.CreateToken": [
            {
                "action": "amplifybackend:CreateToken"
            }
        ],
        "AmplifyBackend.DeleteBackend": [
            {
                "action": "amplifybackend:DeleteBackend"
            }
        ],
        "AmplifyBackend.DeleteBackendAPI": [
            {
                "action": "amplifybackend:DeleteBackendAPI"
            }
        ],
        "AmplifyBackend.DeleteBackendAuth": [
            {
                "action": "amplifybackend:DeleteBackendAuth"
            }
        ],
        "AmplifyBackend.DeleteToken": [
            {
                "action": "amplifybackend:DeleteToken"
            }
        ],
        "AmplifyBackend.GenerateBackendAPIModels": [
            {
                "action": "amplifybackend:GenerateBackendAPIModels"
            }
        ],
        "AmplifyBackend.GetBackend": [
            {
                "action": "amplifybackend:GetBackend"
            }
        ],
        "AmplifyBackend.GetBackendAPI": [
            {
                "action": "amplifybackend:GetBackendAPI"
            }
        ],
        "AmplifyBackend.GetBackendAPIModels": [
            {
                "action": "amplifybackend:GetBackendAPIModels"
            }
        ],
        "AmplifyBackend.GetBackendAuth": [
            {
                "action": "amplifybackend:GetBackendAuth"
            }
        ],
        "AmplifyBackend.GetBackendJob": [
            {
                "action": "amplifybackend:GetBackendJob"
            }
        ],
        "AmplifyBackend.GetToken": [
            {
                "action": "amplifybackend:GetToken"
            }
        ],
        "AmplifyBackend.ListBackendJobs": [
            {
                "action": "amplifybackend:ListBackendJobs"
            }
        ],
        "AmplifyBackend.RemoveAllBackends": [
            {
                "action": "amplifybackend:RemoveAllBackends"
            }
        ],
        "AmplifyBackend.RemoveBackendConfig": [
            {
                "action": "amplifybackend:RemoveBackendConfig"
            }
        ],
        "AmplifyBackend.UpdateBackendAPI": [
            {
                "action": "amplifybackend:UpdateBackendAPI"
            }
        ],
        "AmplifyBackend.UpdateBackendAuth": [
            {
                "action": "amplifybackend:UpdateBackendAuth"
            }
        ],
        "AmplifyBackend.UpdateBackendConfig": [
            {
                "action": "amplifybackend:UpdateBackendConfig"
            }
        ],
        "AmplifyBackend.UpdateBackendJob": [
            {
                "action": "amplifybackend:UpdateBackendJob"
            }
        ],
        "AppIntegrations.CreateEventIntegration": [
            {
                "action": "app-integrations:CreateEventIntegration"
            }
        ],
        "AppIntegrations.DeleteEventIntegration": [
            {
                "action": "app-integrations:DeleteEventIntegration"
            }
        ],
        "AppIntegrations.GetEventIntegration": [
            {
                "action": "app-integrations:GetEventIntegration"
            }
        ],
        "AppIntegrations.ListEventIntegrationAssociations": [
            {
                "action": "app-integrations:ListEventIntegrationAssociations"
            }
        ],
        "AppIntegrations.ListEventIntegrations": [
            {
                "action": "app-integrations:ListEventIntegrations"
            }
        ],
        "AppIntegrations.ListTagsForResource": [
            {
                "action": "app-integrations:ListTagsForResource"
            }
        ],
        "AppIntegrations.TagResource": [
            {
                "action": "app-integrations:TagResource"
            }
        ],
        "AppIntegrations.UntagResource": [
            {
                "action": "app-integrations:UntagResource"
            }
        ],
        "AppIntegrations.UpdateEventIntegration": [
            {
                "action": "app-integrations:UpdateEventIntegration"
            }
        ],
        "DevOpsGuru.AddNotificationChannel": [
            {
                "action": "devops-guru:AddNotificationChannel"
            }
        ],
        "DevOpsGuru.DescribeAccountHealth": [
            {
                "action": "devops-guru:DescribeAccountHealth"
            }
        ],
        "DevOpsGuru.DescribeAccountOverview": [
            {
                "action": "devops-guru:DescribeAccountOverview"
            }
        ],
        "DevOpsGuru.DescribeAnomaly": [
            {
                "action": "devops-guru:DescribeAnomaly"
            }
        ],
        "DevOpsGuru.DescribeInsight": [
            {
                "action": "devops-guru:DescribeInsight"
            }
        ],
        "DevOpsGuru.DescribeResourceCollectionHealth": [
            {
                "action": "devops-guru:DescribeResourceCollectionHealth"
            }
        ],
        "DevOpsGuru.DescribeServiceIntegration": [
            {
                "action": "devops-guru:DescribeServiceIntegration"
            }
        ],
        "DevOpsGuru.GetResourceCollection": [
            {
                "action": "devops-guru:GetResourceCollection"
            }
        ],
        "DevOpsGuru.ListAnomaliesForInsight": [
            {
                "action": "devops-guru:ListAnomaliesForInsight"
            }
        ],
        "DevOpsGuru.ListEvents": [
            {
                "action": "devops-guru:ListEvents"
            }
        ],
        "DevOpsGuru.ListInsights": [
            {
                "action": "devops-guru:ListInsights"
            }
        ],
        "DevOpsGuru.ListNotificationChannels": [
            {
                "action": "devops-guru:ListNotificationChannels"
            }
        ],
        "DevOpsGuru.ListRecommendations": [
            {
                "action": "devops-guru:ListRecommendations"
            }
        ],
        "DevOpsGuru.PutFeedback": [
            {
                "action": "devops-guru:PutFeedback"
            }
        ],
        "DevOpsGuru.RemoveNotificationChannel": [
            {
                "action": "devops-guru:RemoveNotificationChannel"
            }
        ],
        "DevOpsGuru.SearchInsights": [
            {
                "action": "devops-guru:SearchInsights"
            }
        ],
        "DevOpsGuru.UpdateResourceCollection": [
            {
                "action": "devops-guru:UpdateResourceCollection"
            }
        ],
        "DevOpsGuru.UpdateServiceIntegration": [
            {
                "action": "devops-guru:UpdateServiceIntegration"
            }
        ],
        "ECRPUBLIC.BatchCheckLayerAvailability": [
            {
                "action": "ecr-public:BatchCheckLayerAvailability"
            }
        ],
        "ECRPUBLIC.BatchDeleteImage": [
            {
                "action": "ecr-public:BatchDeleteImage"
            }
        ],
        "ECRPUBLIC.CompleteLayerUpload": [
            {
                "action": "ecr-public:CompleteLayerUpload"
            }
        ],
        "ECRPUBLIC.CreateRepository": [
            {
                "action": "ecr-public:CreateRepository"
            }
        ],
        "ECRPUBLIC.DeleteRepository": [
            {
                "action": "ecr-public:DeleteRepository"
            }
        ],
        "ECRPUBLIC.DeleteRepositoryPolicy": [
            {
                "action": "ecr-public:DeleteRepositoryPolicy"
            }
        ],
        "ECRPUBLIC.DescribeImageTags": [
            {
                "action": "ecr-public:DescribeImageTags"
            }
        ],
        "ECRPUBLIC.DescribeImages": [
            {
                "action": "ecr-public:DescribeImages"
            }
        ],
        "ECRPUBLIC.DescribeRegistries": [
            {
                "action": "ecr-public:DescribeRegistries"
            }
        ],
        "ECRPUBLIC.DescribeRepositories": [
            {
                "action": "ecr-public:DescribeRepositories"
            }
        ],
        "ECRPUBLIC.GetAuthorizationToken": [
            {
                "action": "ecr-public:GetAuthorizationToken"
            }
        ],
        "ECRPUBLIC.GetRegistryCatalogData": [
            {
                "action": "ecr-public:GetRegistryCatalogData"
            }
        ],
        "ECRPUBLIC.GetRepositoryCatalogData": [
            {
                "action": "ecr-public:GetRepositoryCatalogData"
            }
        ],
        "ECRPUBLIC.GetRepositoryPolicy": [
            {
                "action": "ecr-public:GetRepositoryPolicy"
            }
        ],
        "ECRPUBLIC.InitiateLayerUpload": [
            {
                "action": "ecr-public:InitiateLayerUpload"
            }
        ],
        "ECRPUBLIC.PutImage": [
            {
                "action": "ecr-public:PutImage"
            }
        ],
        "ECRPUBLIC.PutRegistryCatalogData": [
            {
                "action": "ecr-public:PutRegistryCatalogData"
            }
        ],
        "ECRPUBLIC.PutRepositoryCatalogData": [
            {
                "action": "ecr-public:PutRepositoryCatalogData"
            }
        ],
        "ECRPUBLIC.SetRepositoryPolicy": [
            {
                "action": "ecr-public:SetRepositoryPolicy"
            }
        ],
        "ECRPUBLIC.UploadLayerPart": [
            {
                "action": "ecr-public:UploadLayerPart"
            }
        ],
        "LookoutVision.CreateDataset": [
            {
                "action": "lookoutvision:CreateDataset"
            }
        ],
        "LookoutVision.CreateModel": [
            {
                "action": "lookoutvision:CreateModel"
            }
        ],
        "LookoutVision.CreateProject": [
            {
                "action": "lookoutvision:CreateProject"
            }
        ],
        "LookoutVision.DeleteDataset": [
            {
                "action": "lookoutvision:DeleteDataset"
            }
        ],
        "LookoutVision.DeleteModel": [
            {
                "action": "lookoutvision:DeleteModel"
            }
        ],
        "LookoutVision.DeleteProject": [
            {
                "action": "lookoutvision:DeleteProject"
            }
        ],
        "LookoutVision.DescribeDataset": [
            {
                "action": "lookoutvision:DescribeDataset"
            }
        ],
        "LookoutVision.DescribeModel": [
            {
                "action": "lookoutvision:DescribeModel"
            }
        ],
        "LookoutVision.DescribeProject": [
            {
                "action": "lookoutvision:DescribeProject"
            }
        ],
        "LookoutVision.DetectAnomalies": [
            {
                "action": "lookoutvision:DetectAnomalies"
            }
        ],
        "LookoutVision.ListDatasetEntries": [
            {
                "action": "lookoutvision:ListDatasetEntries"
            }
        ],
        "LookoutVision.ListModels": [
            {
                "action": "lookoutvision:ListModels"
            }
        ],
        "LookoutVision.ListProjects": [
            {
                "action": "lookoutvision:ListProjects"
            }
        ],
        "LookoutVision.StartModel": [
            {
                "action": "lookoutvision:StartModel"
            }
        ],
        "LookoutVision.StopModel": [
            {
                "action": "lookoutvision:StopModel"
            }
        ],
        "LookoutVision.UpdateDatasetEntries": [
            {
                "action": "lookoutvision:UpdateDatasetEntries"
            }
        ],
        "SageMakerFeatureStoreRuntime.DeleteRecord": [
            {
                "action": "sagemaker:DeleteRecord"
            }
        ],
        "SageMakerFeatureStoreRuntime.GetRecord": [
            {
                "action": "sagemaker:GetRecord"
            }
        ],
        "SageMakerFeatureStoreRuntime.PutRecord": [
            {
                "action": "sagemaker:PutRecord"
            }
        ],
        "CustomerProfiles.AddProfileKey": [
            {
                "action": "profile:AddProfileKey"
            }
        ],
        "CustomerProfiles.CreateDomain": [
            {
                "action": "profile:CreateDomain"
            }
        ],
        "CustomerProfiles.CreateProfile": [
            {
                "action": "profile:CreateProfile"
            }
        ],
        "CustomerProfiles.DeleteDomain": [
            {
                "action": "profile:DeleteDomain"
            }
        ],
        "CustomerProfiles.DeleteIntegration": [
            {
                "action": "profile:DeleteIntegration"
            }
        ],
        "CustomerProfiles.DeleteProfile": [
            {
                "action": "profile:DeleteProfile"
            }
        ],
        "CustomerProfiles.DeleteProfileKey": [
            {
                "action": "profile:DeleteProfileKey"
            }
        ],
        "CustomerProfiles.DeleteProfileObject": [
            {
                "action": "profile:DeleteProfileObject"
            }
        ],
        "CustomerProfiles.DeleteProfileObjectType": [
            {
                "action": "profile:DeleteProfileObjectType"
            }
        ],
        "CustomerProfiles.GetDomain": [
            {
                "action": "profile:GetDomain"
            }
        ],
        "CustomerProfiles.GetIntegration": [
            {
                "action": "profile:GetIntegration"
            }
        ],
        "CustomerProfiles.GetProfileObjectType": [
            {
                "action": "profile:GetProfileObjectType"
            }
        ],
        "CustomerProfiles.GetProfileObjectTypeTemplate": [
            {
                "action": "profile:GetProfileObjectTypeTemplate"
            }
        ],
        "CustomerProfiles.ListAccountIntegrations": [
            {
                "action": "profile:ListAccountIntegrations"
            }
        ],
        "CustomerProfiles.ListDomains": [
            {
                "action": "profile:ListDomains"
            }
        ],
        "CustomerProfiles.ListIntegrations": [
            {
                "action": "profile:ListIntegrations"
            }
        ],
        "CustomerProfiles.ListProfileObjectTypeTemplates": [
            {
                "action": "profile:ListProfileObjectTypeTemplates"
            }
        ],
        "CustomerProfiles.ListProfileObjectTypes": [
            {
                "action": "profile:ListProfileObjectTypes"
            }
        ],
        "CustomerProfiles.ListProfileObjects": [
            {
                "action": "profile:ListProfileObjects"
            }
        ],
        "CustomerProfiles.ListTagsForResource": [
            {
                "action": "profile:ListTagsForResource"
            }
        ],
        "CustomerProfiles.PutIntegration": [
            {
                "action": "profile:PutIntegration"
            }
        ],
        "CustomerProfiles.PutProfileObject": [
            {
                "action": "profile:PutProfileObject"
            }
        ],
        "CustomerProfiles.PutProfileObjectType": [
            {
                "action": "profile:PutProfileObjectType"
            }
        ],
        "CustomerProfiles.SearchProfiles": [
            {
                "action": "profile:SearchProfiles"
            }
        ],
        "CustomerProfiles.TagResource": [
            {
                "action": "profile:TagResource"
            }
        ],
        "CustomerProfiles.UntagResource": [
            {
                "action": "profile:UntagResource"
            }
        ],
        "CustomerProfiles.UpdateDomain": [
            {
                "action": "profile:UpdateDomain"
            }
        ],
        "CustomerProfiles.UpdateProfile": [
            {
                "action": "profile:UpdateProfile"
            }
        ],
        "AuditManager.AssociateAssessmentReportEvidenceFolder": [
            {
                "action": "auditmanager:AssociateAssessmentReportEvidenceFolder"
            }
        ],
        "AuditManager.BatchAssociateAssessmentReportEvidence": [
            {
                "action": "auditmanager:BatchAssociateAssessmentReportEvidence"
            }
        ],
        "AuditManager.BatchCreateDelegationByAssessment": [
            {
                "action": "auditmanager:BatchCreateDelegationByAssessment"
            }
        ],
        "AuditManager.BatchDeleteDelegationByAssessment": [
            {
                "action": "auditmanager:BatchDeleteDelegationByAssessment"
            }
        ],
        "AuditManager.BatchDisassociateAssessmentReportEvidence": [
            {
                "action": "auditmanager:BatchDisassociateAssessmentReportEvidence"
            }
        ],
        "AuditManager.BatchImportEvidenceToAssessmentControl": [
            {
                "action": "auditmanager:BatchImportEvidenceToAssessmentControl"
            }
        ],
        "AuditManager.CreateAssessment": [
            {
                "action": "auditmanager:CreateAssessment"
            }
        ],
        "AuditManager.CreateAssessmentFramework": [
            {
                "action": "auditmanager:CreateAssessmentFramework"
            }
        ],
        "AuditManager.CreateAssessmentReport": [
            {
                "action": "auditmanager:CreateAssessmentReport"
            }
        ],
        "AuditManager.CreateControl": [
            {
                "action": "auditmanager:CreateControl"
            }
        ],
        "AuditManager.DeleteAssessment": [
            {
                "action": "auditmanager:DeleteAssessment"
            }
        ],
        "AuditManager.DeleteAssessmentFramework": [
            {
                "action": "auditmanager:DeleteAssessmentFramework"
            }
        ],
        "AuditManager.DeleteAssessmentReport": [
            {
                "action": "auditmanager:DeleteAssessmentReport"
            }
        ],
        "AuditManager.DeleteControl": [
            {
                "action": "auditmanager:DeleteControl"
            }
        ],
        "AuditManager.DeregisterAccount": [
            {
                "action": "auditmanager:DeregisterAccount"
            }
        ],
        "AuditManager.DeregisterOrganizationAdminAccount": [
            {
                "action": "auditmanager:DeregisterOrganizationAdminAccount"
            }
        ],
        "AuditManager.DisassociateAssessmentReportEvidenceFolder": [
            {
                "action": "auditmanager:DisassociateAssessmentReportEvidenceFolder"
            }
        ],
        "AuditManager.GetAccountStatus": [
            {
                "action": "auditmanager:GetAccountStatus"
            }
        ],
        "AuditManager.GetAssessment": [
            {
                "action": "auditmanager:GetAssessment"
            }
        ],
        "AuditManager.GetAssessmentFramework": [
            {
                "action": "auditmanager:GetAssessmentFramework"
            }
        ],
        "AuditManager.GetAssessmentReportUrl": [
            {
                "action": "auditmanager:GetAssessmentReportUrl"
            }
        ],
        "AuditManager.GetChangeLogs": [
            {
                "action": "auditmanager:GetChangeLogs"
            }
        ],
        "AuditManager.GetControl": [
            {
                "action": "auditmanager:GetControl"
            }
        ],
        "AuditManager.GetDelegations": [
            {
                "action": "auditmanager:GetDelegations"
            }
        ],
        "AuditManager.GetEvidence": [
            {
                "action": "auditmanager:GetEvidence"
            }
        ],
        "AuditManager.GetEvidenceByEvidenceFolder": [
            {
                "action": "auditmanager:GetEvidenceByEvidenceFolder"
            }
        ],
        "AuditManager.GetEvidenceFolder": [
            {
                "action": "auditmanager:GetEvidenceFolder"
            }
        ],
        "AuditManager.GetEvidenceFoldersByAssessment": [
            {
                "action": "auditmanager:GetEvidenceFoldersByAssessment"
            }
        ],
        "AuditManager.GetEvidenceFoldersByAssessmentControl": [
            {
                "action": "auditmanager:GetEvidenceFoldersByAssessmentControl"
            }
        ],
        "AuditManager.GetOrganizationAdminAccount": [
            {
                "action": "auditmanager:GetOrganizationAdminAccount"
            }
        ],
        "AuditManager.GetServicesInScope": [
            {
                "action": "auditmanager:GetServicesInScope"
            }
        ],
        "AuditManager.GetSettings": [
            {
                "action": "auditmanager:GetSettings"
            }
        ],
        "AuditManager.ListAssessmentFrameworks": [
            {
                "action": "auditmanager:ListAssessmentFrameworks"
            }
        ],
        "AuditManager.ListAssessmentReports": [
            {
                "action": "auditmanager:ListAssessmentReports"
            }
        ],
        "AuditManager.ListAssessments": [
            {
                "action": "auditmanager:ListAssessments"
            }
        ],
        "AuditManager.ListControls": [
            {
                "action": "auditmanager:ListControls"
            }
        ],
        "AuditManager.ListKeywordsForDataSource": [
            {
                "action": "auditmanager:ListKeywordsForDataSource"
            }
        ],
        "AuditManager.ListNotifications": [
            {
                "action": "auditmanager:ListNotifications"
            }
        ],
        "AuditManager.ListTagsForResource": [
            {
                "action": "auditmanager:ListTagsForResource"
            }
        ],
        "AuditManager.RegisterAccount": [
            {
                "action": "auditmanager:RegisterAccount"
            }
        ],
        "AuditManager.RegisterOrganizationAdminAccount": [
            {
                "action": "auditmanager:RegisterOrganizationAdminAccount"
            }
        ],
        "AuditManager.TagResource": [
            {
                "action": "auditmanager:TagResource"
            }
        ],
        "AuditManager.UntagResource": [
            {
                "action": "auditmanager:UntagResource"
            }
        ],
        "AuditManager.UpdateAssessment": [
            {
                "action": "auditmanager:UpdateAssessment"
            }
        ],
        "AuditManager.UpdateAssessmentControl": [
            {
                "action": "auditmanager:UpdateAssessmentControl"
            }
        ],
        "AuditManager.UpdateAssessmentControlSetStatus": [
            {
                "action": "auditmanager:UpdateAssessmentControlSetStatus"
            }
        ],
        "AuditManager.UpdateAssessmentFramework": [
            {
                "action": "auditmanager:UpdateAssessmentFramework"
            }
        ],
        "AuditManager.UpdateAssessmentStatus": [
            {
                "action": "auditmanager:UpdateAssessmentStatus"
            }
        ],
        "AuditManager.UpdateControl": [
            {
                "action": "auditmanager:UpdateControl"
            }
        ],
        "AuditManager.UpdateSettings": [
            {
                "action": "auditmanager:UpdateSettings"
            }
        ],
        "AuditManager.ValidateAssessmentReportIntegrity": [
            {
                "action": "auditmanager:ValidateAssessmentReportIntegrity"
            }
        ],
        "EMRcontainers.CancelJobRun": [
            {
                "action": "emr-containers:CancelJobRun"
            }
        ],
        "EMRcontainers.CreateVirtualCluster": [
            {
                "action": "emr-containers:CreateVirtualCluster"
            }
        ],
        "EMRcontainers.DeleteVirtualCluster": [
            {
                "action": "emr-containers:DeleteVirtualCluster"
            }
        ],
        "EMRcontainers.DescribeJobRun": [
            {
                "action": "emr-containers:DescribeJobRun"
            }
        ],
        "EMRcontainers.DescribeVirtualCluster": [
            {
                "action": "emr-containers:DescribeVirtualCluster"
            }
        ],
        "EMRcontainers.ListJobRuns": [
            {
                "action": "emr-containers:ListJobRuns"
            }
        ],
        "EMRcontainers.ListTagsForResource": [
            {
                "action": "emr-containers:ListTagsForResource"
            }
        ],
        "EMRcontainers.ListVirtualClusters": [
            {
                "action": "emr-containers:ListVirtualClusters"
            }
        ],
        "EMRcontainers.StartJobRun": [
            {
                "action": "emr-containers:StartJobRun"
            }
        ],
        "EMRcontainers.TagResource": [
            {
                "action": "emr-containers:TagResource"
            }
        ],
        "EMRcontainers.UntagResource": [
            {
                "action": "emr-containers:UntagResource"
            }
        ],
        "SagemakerEdge.GetDeviceRegistration": [
            {
                "action": "sagemaker:GetDeviceRegistration"
            }
        ],
        "SagemakerEdge.SendHeartbeat": [
            {
                "action": "sagemaker:SendHeartbeat"
            }
        ],
        "Amp.CreateWorkspace": [
            {
                "action": "aps:CreateWorkspace"
            }
        ],
        "Amp.DeleteWorkspace": [
            {
                "action": "aps:DeleteWorkspace"
            }
        ],
        "Amp.DescribeWorkspace": [
            {
                "action": "aps:DescribeWorkspace"
            }
        ],
        "Amp.ListWorkspaces": [
            {
                "action": "aps:ListWorkspaces"
            }
        ],
        "Amp.UpdateWorkspaceAlias": [
            {
                "action": "aps:UpdateWorkspaceAlias"
            }
        ],
        "GreengrassV2.CancelDeployment": [
            {
                "action": "greengrass:CancelDeployment"
            }
        ],
        "GreengrassV2.CreateComponentVersion": [
            {
                "action": "greengrass:CreateComponentVersion"
            }
        ],
        "GreengrassV2.CreateDeployment": [
            {
                "action": "greengrass:CreateDeployment"
            }
        ],
        "GreengrassV2.DeleteComponent": [
            {
                "action": "greengrass:DeleteComponent"
            }
        ],
        "GreengrassV2.DeleteCoreDevice": [
            {
                "action": "greengrass:DeleteCoreDevice"
            }
        ],
        "GreengrassV2.DescribeComponent": [
            {
                "action": "greengrass:DescribeComponent"
            }
        ],
        "GreengrassV2.GetComponent": [
            {
                "action": "greengrass:GetComponent"
            }
        ],
        "GreengrassV2.GetCoreDevice": [
            {
                "action": "greengrass:GetCoreDevice"
            }
        ],
        "GreengrassV2.GetDeployment": [
            {
                "action": "greengrass:GetDeployment"
            }
        ],
        "GreengrassV2.ListComponentVersions": [
            {
                "action": "greengrass:ListComponentVersions"
            }
        ],
        "GreengrassV2.ListComponents": [
            {
                "action": "greengrass:ListComponents"
            }
        ],
        "GreengrassV2.ListCoreDevices": [
            {
                "action": "greengrass:ListCoreDevices"
            }
        ],
        "GreengrassV2.ListDeployments": [
            {
                "action": "greengrass:ListDeployments"
            }
        ],
        "GreengrassV2.ListEffectiveDeployments": [
            {
                "action": "greengrass:ListEffectiveDeployments"
            }
        ],
        "GreengrassV2.ListInstalledComponents": [
            {
                "action": "greengrass:ListInstalledComponents"
            }
        ],
        "GreengrassV2.ListTagsForResource": [
            {
                "action": "greengrass:ListTagsForResource"
            }
        ],
        "GreengrassV2.TagResource": [
            {
                "action": "greengrass:TagResource"
            }
        ],
        "GreengrassV2.UntagResource": [
            {
                "action": "greengrass:UntagResource"
            }
        ],
        "IotDeviceAdvisor.CreateSuiteDefinition": [
            {
                "action": "iotdeviceadvisor:CreateSuiteDefinition"
            }
        ],
        "IotDeviceAdvisor.DeleteSuiteDefinition": [
            {
                "action": "iotdeviceadvisor:DeleteSuiteDefinition"
            }
        ],
        "IotDeviceAdvisor.GetSuiteDefinition": [
            {
                "action": "iotdeviceadvisor:GetSuiteDefinition"
            }
        ],
        "IotDeviceAdvisor.GetSuiteRun": [
            {
                "action": "iotdeviceadvisor:GetSuiteRun"
            }
        ],
        "IotDeviceAdvisor.GetSuiteRunReport": [
            {
                "action": "iotdeviceadvisor:GetSuiteRunReport"
            }
        ],
        "IotDeviceAdvisor.ListSuiteDefinitions": [
            {
                "action": "iotdeviceadvisor:ListSuiteDefinitions"
            }
        ],
        "IotDeviceAdvisor.ListSuiteRuns": [
            {
                "action": "iotdeviceadvisor:ListSuiteRuns"
            }
        ],
        "IotDeviceAdvisor.ListTagsForResource": [
            {
                "action": "iotdeviceadvisor:ListTagsForResource"
            }
        ],
        "IotDeviceAdvisor.ListTestCases": [
            {
                "action": "iotdeviceadvisor:ListTestCases"
            }
        ],
        "IotDeviceAdvisor.StartSuiteRun": [
            {
                "action": "iotdeviceadvisor:StartSuiteRun"
            }
        ],
        "IotDeviceAdvisor.TagResource": [
            {
                "action": "iotdeviceadvisor:TagResource"
            }
        ],
        "IotDeviceAdvisor.UntagResource": [
            {
                "action": "iotdeviceadvisor:UntagResource"
            }
        ],
        "IotDeviceAdvisor.UpdateSuiteDefinition": [
            {
                "action": "iotdeviceadvisor:UpdateSuiteDefinition"
            }
        ],
        "IoTFleetHub.CreateApplication": [
            {
                "action": "iotfleethub:CreateApplication"
            }
        ],
        "IoTFleetHub.DeleteApplication": [
            {
                "action": "iotfleethub:DeleteApplication"
            }
        ],
        "IoTFleetHub.DescribeApplication": [
            {
                "action": "iotfleethub:DescribeApplication"
            }
        ],
        "IoTFleetHub.ListApplications": [
            {
                "action": "iotfleethub:ListApplications"
            }
        ],
        "IoTFleetHub.ListTagsForResource": [
            {
                "action": "iotfleethub:ListTagsForResource"
            }
        ],
        "IoTFleetHub.TagResource": [
            {
                "action": "iotfleethub:TagResource"
            }
        ],
        "IoTFleetHub.UntagResource": [
            {
                "action": "iotfleethub:UntagResource"
            }
        ],
        "IoTFleetHub.UpdateApplication": [
            {
                "action": "iotfleethub:UpdateApplication"
            }
        ],
        "IoTWireless.AssociateAwsAccountWithPartnerAccount": [
            {
                "action": "iotwireless:AssociateAwsAccountWithPartnerAccount"
            }
        ],
        "IoTWireless.AssociateWirelessDeviceWithThing": [
            {
                "action": "iotwireless:AssociateWirelessDeviceWithThing"
            }
        ],
        "IoTWireless.AssociateWirelessGatewayWithCertificate": [
            {
                "action": "iotwireless:AssociateWirelessGatewayWithCertificate"
            }
        ],
        "IoTWireless.AssociateWirelessGatewayWithThing": [
            {
                "action": "iotwireless:AssociateWirelessGatewayWithThing"
            }
        ],
        "IoTWireless.CreateDestination": [
            {
                "action": "iotwireless:CreateDestination"
            }
        ],
        "IoTWireless.CreateDeviceProfile": [
            {
                "action": "iotwireless:CreateDeviceProfile"
            }
        ],
        "IoTWireless.CreateServiceProfile": [
            {
                "action": "iotwireless:CreateServiceProfile"
            }
        ],
        "IoTWireless.CreateWirelessDevice": [
            {
                "action": "iotwireless:CreateWirelessDevice"
            }
        ],
        "IoTWireless.CreateWirelessGateway": [
            {
                "action": "iotwireless:CreateWirelessGateway"
            }
        ],
        "IoTWireless.CreateWirelessGatewayTask": [
            {
                "action": "iotwireless:CreateWirelessGatewayTask"
            }
        ],
        "IoTWireless.CreateWirelessGatewayTaskDefinition": [
            {
                "action": "iotwireless:CreateWirelessGatewayTaskDefinition"
            }
        ],
        "IoTWireless.DeleteDestination": [
            {
                "action": "iotwireless:DeleteDestination"
            }
        ],
        "IoTWireless.DeleteDeviceProfile": [
            {
                "action": "iotwireless:DeleteDeviceProfile"
            }
        ],
        "IoTWireless.DeleteServiceProfile": [
            {
                "action": "iotwireless:DeleteServiceProfile"
            }
        ],
        "IoTWireless.DeleteWirelessDevice": [
            {
                "action": "iotwireless:DeleteWirelessDevice"
            }
        ],
        "IoTWireless.DeleteWirelessGateway": [
            {
                "action": "iotwireless:DeleteWirelessGateway"
            }
        ],
        "IoTWireless.DeleteWirelessGatewayTask": [
            {
                "action": "iotwireless:DeleteWirelessGatewayTask"
            }
        ],
        "IoTWireless.DeleteWirelessGatewayTaskDefinition": [
            {
                "action": "iotwireless:DeleteWirelessGatewayTaskDefinition"
            }
        ],
        "IoTWireless.DisassociateAwsAccountFromPartnerAccount": [
            {
                "action": "iotwireless:DisassociateAwsAccountFromPartnerAccount"
            }
        ],
        "IoTWireless.DisassociateWirelessDeviceFromThing": [
            {
                "action": "iotwireless:DisassociateWirelessDeviceFromThing"
            }
        ],
        "IoTWireless.DisassociateWirelessGatewayFromCertificate": [
            {
                "action": "iotwireless:DisassociateWirelessGatewayFromCertificate"
            }
        ],
        "IoTWireless.DisassociateWirelessGatewayFromThing": [
            {
                "action": "iotwireless:DisassociateWirelessGatewayFromThing"
            }
        ],
        "IoTWireless.GetDestination": [
            {
                "action": "iotwireless:GetDestination"
            }
        ],
        "IoTWireless.GetDeviceProfile": [
            {
                "action": "iotwireless:GetDeviceProfile"
            }
        ],
        "IoTWireless.GetPartnerAccount": [
            {
                "action": "iotwireless:GetPartnerAccount"
            }
        ],
        "IoTWireless.GetServiceEndpoint": [
            {
                "action": "iotwireless:GetServiceEndpoint"
            }
        ],
        "IoTWireless.GetServiceProfile": [
            {
                "action": "iotwireless:GetServiceProfile"
            }
        ],
        "IoTWireless.GetWirelessDevice": [
            {
                "action": "iotwireless:GetWirelessDevice"
            }
        ],
        "IoTWireless.GetWirelessDeviceStatistics": [
            {
                "action": "iotwireless:GetWirelessDeviceStatistics"
            }
        ],
        "IoTWireless.GetWirelessGateway": [
            {
                "action": "iotwireless:GetWirelessGateway"
            }
        ],
        "IoTWireless.GetWirelessGatewayCertificate": [
            {
                "action": "iotwireless:GetWirelessGatewayCertificate"
            }
        ],
        "IoTWireless.GetWirelessGatewayFirmwareInformation": [
            {
                "action": "iotwireless:GetWirelessGatewayFirmwareInformation"
            }
        ],
        "IoTWireless.GetWirelessGatewayStatistics": [
            {
                "action": "iotwireless:GetWirelessGatewayStatistics"
            }
        ],
        "IoTWireless.GetWirelessGatewayTask": [
            {
                "action": "iotwireless:GetWirelessGatewayTask"
            }
        ],
        "IoTWireless.GetWirelessGatewayTaskDefinition": [
            {
                "action": "iotwireless:GetWirelessGatewayTaskDefinition"
            }
        ],
        "IoTWireless.ListDestinations": [
            {
                "action": "iotwireless:ListDestinations"
            }
        ],
        "IoTWireless.ListDeviceProfiles": [
            {
                "action": "iotwireless:ListDeviceProfiles"
            }
        ],
        "IoTWireless.ListPartnerAccounts": [
            {
                "action": "iotwireless:ListPartnerAccounts"
            }
        ],
        "IoTWireless.ListServiceProfiles": [
            {
                "action": "iotwireless:ListServiceProfiles"
            }
        ],
        "IoTWireless.ListTagsForResource": [
            {
                "action": "iotwireless:ListTagsForResource"
            }
        ],
        "IoTWireless.ListWirelessDevices": [
            {
                "action": "iotwireless:ListWirelessDevices"
            }
        ],
        "IoTWireless.ListWirelessGatewayTaskDefinitions": [
            {
                "action": "iotwireless:ListWirelessGatewayTaskDefinitions"
            }
        ],
        "IoTWireless.ListWirelessGateways": [
            {
                "action": "iotwireless:ListWirelessGateways"
            }
        ],
        "IoTWireless.SendDataToWirelessDevice": [
            {
                "action": "iotwireless:SendDataToWirelessDevice"
            }
        ],
        "IoTWireless.TagResource": [
            {
                "action": "iotwireless:TagResource"
            }
        ],
        "IoTWireless.TestWirelessDevice": [
            {
                "action": "iotwireless:TestWirelessDevice"
            }
        ],
        "IoTWireless.UntagResource": [
            {
                "action": "iotwireless:UntagResource"
            }
        ],
        "IoTWireless.UpdateDestination": [
            {
                "action": "iotwireless:UpdateDestination"
            }
        ],
        "IoTWireless.UpdatePartnerAccount": [
            {
                "action": "iotwireless:UpdatePartnerAccount"
            }
        ],
        "IoTWireless.UpdateWirelessDevice": [
            {
                "action": "iotwireless:UpdateWirelessDevice"
            }
        ],
        "IoTWireless.UpdateWirelessGateway": [
            {
                "action": "iotwireless:UpdateWirelessGateway"
            }
        ],
        "Location.AssociateTrackerConsumer": [
            {
                "action": "geo:AssociateTrackerConsumer"
            }
        ],
        "Location.BatchDeleteGeofence": [
            {
                "action": "geo:BatchDeleteGeofence"
            }
        ],
        "Location.BatchEvaluateGeofences": [
            {
                "action": "geo:BatchEvaluateGeofences"
            }
        ],
        "Location.BatchGetDevicePosition": [
            {
                "action": "geo:BatchGetDevicePosition"
            }
        ],
        "Location.BatchPutGeofence": [
            {
                "action": "geo:BatchPutGeofence"
            }
        ],
        "Location.BatchUpdateDevicePosition": [
            {
                "action": "geo:BatchUpdateDevicePosition"
            }
        ],
        "Location.CreateGeofenceCollection": [
            {
                "action": "geo:CreateGeofenceCollection"
            }
        ],
        "Location.CreateMap": [
            {
                "action": "geo:CreateMap"
            }
        ],
        "Location.CreatePlaceIndex": [
            {
                "action": "geo:CreatePlaceIndex"
            }
        ],
        "Location.CreateTracker": [
            {
                "action": "geo:CreateTracker"
            }
        ],
        "Location.DeleteGeofenceCollection": [
            {
                "action": "geo:DeleteGeofenceCollection"
            }
        ],
        "Location.DeleteMap": [
            {
                "action": "geo:DeleteMap"
            }
        ],
        "Location.DeletePlaceIndex": [
            {
                "action": "geo:DeletePlaceIndex"
            }
        ],
        "Location.DeleteTracker": [
            {
                "action": "geo:DeleteTracker"
            }
        ],
        "Location.DescribeGeofenceCollection": [
            {
                "action": "geo:DescribeGeofenceCollection"
            }
        ],
        "Location.DescribeMap": [
            {
                "action": "geo:DescribeMap"
            }
        ],
        "Location.DescribePlaceIndex": [
            {
                "action": "geo:DescribePlaceIndex"
            }
        ],
        "Location.DescribeTracker": [
            {
                "action": "geo:DescribeTracker"
            }
        ],
        "Location.DisassociateTrackerConsumer": [
            {
                "action": "geo:DisassociateTrackerConsumer"
            }
        ],
        "Location.GetDevicePosition": [
            {
                "action": "geo:GetDevicePosition"
            }
        ],
        "Location.GetDevicePositionHistory": [
            {
                "action": "geo:GetDevicePositionHistory"
            }
        ],
        "Location.GetGeofence": [
            {
                "action": "geo:GetGeofence"
            }
        ],
        "Location.GetMapGlyphs": [
            {
                "action": "geo:GetMapGlyphs"
            }
        ],
        "Location.GetMapSprites": [
            {
                "action": "geo:GetMapSprites"
            }
        ],
        "Location.GetMapStyleDescriptor": [
            {
                "action": "geo:GetMapStyleDescriptor"
            }
        ],
        "Location.GetMapTile": [
            {
                "action": "geo:GetMapTile"
            }
        ],
        "Location.ListGeofenceCollections": [
            {
                "action": "geo:ListGeofenceCollections"
            }
        ],
        "Location.ListGeofences": [
            {
                "action": "geo:ListGeofences"
            }
        ],
        "Location.ListMaps": [
            {
                "action": "geo:ListMaps"
            }
        ],
        "Location.ListPlaceIndexes": [
            {
                "action": "geo:ListPlaceIndexes"
            }
        ],
        "Location.ListTrackerConsumers": [
            {
                "action": "geo:ListTrackerConsumers"
            }
        ],
        "Location.ListTrackers": [
            {
                "action": "geo:ListTrackers"
            }
        ],
        "Location.PutGeofence": [
            {
                "action": "geo:PutGeofence"
            }
        ],
        "Location.SearchPlaceIndexForPosition": [
            {
                "action": "geo:SearchPlaceIndexForPosition"
            }
        ],
        "Location.SearchPlaceIndexForText": [
            {
                "action": "geo:SearchPlaceIndexForText"
            }
        ],
        "WellArchitected.AssociateLenses": [
            {
                "action": "wellarchitected:AssociateLenses"
            }
        ],
        "WellArchitected.CreateMilestone": [
            {
                "action": "wellarchitected:CreateMilestone"
            }
        ],
        "WellArchitected.CreateWorkload": [
            {
                "action": "wellarchitected:CreateWorkload"
            }
        ],
        "WellArchitected.CreateWorkloadShare": [
            {
                "action": "wellarchitected:CreateWorkloadShare"
            }
        ],
        "WellArchitected.DeleteWorkload": [
            {
                "action": "wellarchitected:DeleteWorkload"
            }
        ],
        "WellArchitected.DeleteWorkloadShare": [
            {
                "action": "wellarchitected:DeleteWorkloadShare"
            }
        ],
        "WellArchitected.DisassociateLenses": [
            {
                "action": "wellarchitected:DisassociateLenses"
            }
        ],
        "WellArchitected.GetAnswer": [
            {
                "action": "wellarchitected:GetAnswer"
            }
        ],
        "WellArchitected.GetLensReview": [
            {
                "action": "wellarchitected:GetLensReview"
            }
        ],
        "WellArchitected.GetLensReviewReport": [
            {
                "action": "wellarchitected:GetLensReviewReport"
            }
        ],
        "WellArchitected.GetLensVersionDifference": [
            {
                "action": "wellarchitected:GetLensVersionDifference"
            }
        ],
        "WellArchitected.GetMilestone": [
            {
                "action": "wellarchitected:GetMilestone"
            }
        ],
        "WellArchitected.GetWorkload": [
            {
                "action": "wellarchitected:GetWorkload"
            }
        ],
        "WellArchitected.ListAnswers": [
            {
                "action": "wellarchitected:ListAnswers"
            }
        ],
        "WellArchitected.ListLensReviewImprovements": [
            {
                "action": "wellarchitected:ListLensReviewImprovements"
            }
        ],
        "WellArchitected.ListLensReviews": [
            {
                "action": "wellarchitected:ListLensReviews"
            }
        ],
        "WellArchitected.ListLenses": [
            {
                "action": "wellarchitected:ListLenses"
            }
        ],
        "WellArchitected.ListMilestones": [
            {
                "action": "wellarchitected:ListMilestones"
            }
        ],
        "WellArchitected.ListNotifications": [
            {
                "action": "wellarchitected:ListNotifications"
            }
        ],
        "WellArchitected.ListShareInvitations": [
            {
                "action": "wellarchitected:ListShareInvitations"
            }
        ],
        "WellArchitected.ListWorkloadShares": [
            {
                "action": "wellarchitected:ListWorkloadShares"
            }
        ],
        "WellArchitected.ListWorkloads": [
            {
                "action": "wellarchitected:ListWorkloads"
            }
        ],
        "WellArchitected.UpdateAnswer": [
            {
                "action": "wellarchitected:UpdateAnswer"
            }
        ],
        "WellArchitected.UpdateLensReview": [
            {
                "action": "wellarchitected:UpdateLensReview"
            }
        ],
        "WellArchitected.UpdateShareInvitation": [
            {
                "action": "wellarchitected:UpdateShareInvitation"
            }
        ],
        "WellArchitected.UpdateWorkload": [
            {
                "action": "wellarchitected:UpdateWorkload"
            }
        ],
        "WellArchitected.UpdateWorkloadShare": [
            {
                "action": "wellarchitected:UpdateWorkloadShare"
            }
        ],
        "WellArchitected.UpgradeLensReview": [
            {
                "action": "wellarchitected:UpgradeLensReview"
            }
        ],
        "LexModelsV2.BuildBotLocale": [
            {
                "action": "lex:BuildBotLocale"
            }
        ],
        "LexModelsV2.CreateBotLocale": [
            {
                "action": "lex:CreateBotLocale"
            }
        ],
        "LexModelsV2.CreateBotVersion": [
            {
                "action": "lex:CreateBotVersion"
            }
        ],
        "LexModelsV2.CreateSlot": [
            {
                "action": "lex:CreateSlot"
            }
        ],
        "LexModelsV2.DeleteBot": [
            {
                "action": "lex:DeleteBot"
            }
        ],
        "LexModelsV2.DeleteBotAlias": [
            {
                "action": "lex:DeleteBotAlias"
            }
        ],
        "LexModelsV2.DeleteBotLocale": [
            {
                "action": "lex:DeleteBotLocale"
            }
        ],
        "LexModelsV2.DeleteBotVersion": [
            {
                "action": "lex:DeleteBotVersion"
            }
        ],
        "LexModelsV2.DeleteIntent": [
            {
                "action": "lex:DeleteIntent"
            }
        ],
        "LexModelsV2.DeleteSlot": [
            {
                "action": "lex:DeleteSlot"
            }
        ],
        "LexModelsV2.DeleteSlotType": [
            {
                "action": "lex:DeleteSlotType"
            }
        ],
        "LexModelsV2.DescribeBot": [
            {
                "action": "lex:DescribeBot"
            }
        ],
        "LexModelsV2.DescribeBotAlias": [
            {
                "action": "lex:DescribeBotAlias"
            }
        ],
        "LexModelsV2.DescribeBotLocale": [
            {
                "action": "lex:DescribeBotLocale"
            }
        ],
        "LexModelsV2.DescribeBotVersion": [
            {
                "action": "lex:DescribeBotVersion"
            }
        ],
        "LexModelsV2.DescribeSlot": [
            {
                "action": "lex:DescribeSlot"
            }
        ],
        "LexModelsV2.ListBotAliases": [
            {
                "action": "lex:ListBotAliases"
            }
        ],
        "LexModelsV2.ListBotLocales": [
            {
                "action": "lex:ListBotLocales"
            }
        ],
        "LexModelsV2.ListSlots": [
            {
                "action": "lex:ListSlots"
            }
        ],
        "LexModelsV2.ListTagsForResource": [
            {
                "action": "lex:ListTagsForResource"
            }
        ],
        "LexModelsV2.TagResource": [
            {
                "action": "lex:TagResource"
            }
        ],
        "LexModelsV2.UntagResource": [
            {
                "action": "lex:UntagResource"
            }
        ],
        "LexModelsV2.UpdateBotLocale": [
            {
                "action": "lex:UpdateBotLocale"
            }
        ],
        "LexModelsV2.UpdateSlot": [
            {
                "action": "lex:UpdateSlot"
            }
        ],
        "LexRuntimeV2.DeleteSession": [
            {
                "action": "lex:DeleteSession"
            }
        ],
        "LexRuntimeV2.GetSession": [
            {
                "action": "lex:GetSession"
            }
        ],
        "LexRuntimeV2.PutSession": [
            {
                "action": "lex:PutSession"
            }
        ],
        "LexRuntimeV2.RecognizeText": [
            {
                "action": "lex:RecognizeText"
            }
        ]
    },
    "sdk_service_mappings": {
        "ACMPCA": "acm-pca",
        "AccessAnalyzer": "access-analyzer",
        "AlexaForBusiness": "a4b",
        "Amp": "aps",
        "Amplify": "amplify",
        "AmplifyBackend": "amplifybackend",
        "ApiGatewayManagementApi": "apigateway",
        "ApiGatewayV2": "apigateway",
        "App Mesh": "appmesh",
        "AppConfig": "appconfig",
        "AppIntegrations": "app-integrations",
        "AppStream": "appstream",
        "AppSync": "appsync",
        "Appflow": "appflow",
        "Application Auto Scaling": "application-autoscaling",
        "Application Insights": "applicationinsights",
        "ApplicationAutoScaling": "application-autoscaling",
        "AuditManager": "auditmanager",
        "AugmentedAIRuntime": "sagemaker",
        "Auto Scaling Plans": "autoscaling-plans",
        "AutoScalingPlans": "autoscaling-plans",
        "Braket": "braket",
        "CloudDirectory": "clouddirectory",
        "CloudHSM V2": "cloudhsm",
        "CloudHSMV2": "cloudhsm",
        "CloudSearch Domain": "cloudsearch",
        "CloudSearchDomain": "cloudsearch",
        "CloudWatchEvents": "events",
        "CloudWatchLogs": "logs",
        "CodeGuru Reviewer": "codeguru-reviewer",
        "CodeGuruProfiler": "codeguru-profiler",
        "CodeGuruReviewer": "codeguru-reviewer",
        "CodeStar connections": "codestar-connections",
        "CodeStarNotifications": "codestar-notifications",
        "CodeStarconnections": "codestar-connections",
        "CognitoIdentity": "cognito-identity",
        "CognitoIdentityServiceProvider": "cognito-idp",
        "CognitoSync": "cognito-sync",
        "Comprehend": "comprehend",
        "ComprehendMedical": "comprehendmedical",
        "Compute Optimizer": "compute-optimizer",
        "ComputeOptimizer": "compute-optimizer",
        "ConfigService": "config",
        "Connect Contact Lens": "connect",
        "Connect": "connect",
        "ConnectContactLens": null,
        "ConnectParticipant": "execute-api",
        "Cost Explorer": "ce",
        "Cost and Usage Report Service": "cur",
        "CostExplorer": "ce",
        "Customer Profiles": "profile",
        "CustomerProfiles": "profile",
        "DLM": "dlm",
        "DataBrew": "databrew",
        "DataExchange": "dataexchange",
        "DataSync": "datasync",
        "Detective": "detective",
        "DevOps Guru": "devops-guru",
        "DevOpsGuru": "devops-guru",
        "DirectoryService": "ds",
        "DocDB": "rds",
        "DynamoDB Streams": "dynamodb",
        "DynamoDBStreams": "dynamodb",
        "EC2InstanceConnect": "ec2-instance-connect",
        "ECR PUBLIC": "ecr-public",
        "ECR": "ecr",
        "ECRPUBLIC": "ecr-public",
        "EFS": "elasticfilesystem",
        "EKS": "eks",
        "ELB": "elasticloadbalancing",
        "ELBv2": "elasticloadbalancing",
        "EMR containers": "emr-containers",
        "EMR": "elasticmapreduce",
        "EMRcontainers": "emr-containers",
        "Elastic Inference": "elastic-inference",
        "ElasticInference": "elastic-inference",
        "EventBridge": "events",
        "FSx": "fsx",
        "ForecastQueryService": "forecast",
        "ForecastService": "forecast",
        "Global Accelerator": "globalaccelerator",
        "Greengrass": "greengrass",
        "GreengrassV2": "greengrass",
        "GroundStation": "groundstation",
        "GuardDuty": "guardduty",
        "HealthLake": "healthlake",
        "Honeycode": "honeycode",
        "IoT 1Click Devices Service": "iot1click",
        "IoT 1Click Projects": "iot1click",
        "IoT Data Plane": "iot",
        "IoT Events Data": "iotevents",
        "IoT Events": "iotevents",
        "IoT Jobs Data Plane": "iot",
        "IoT Wireless": "iot",
        "IoT": "iot",
        "IoT1ClickDevicesService": "iot1click",
        "IoT1ClickProjects": "iot1click",
        "IoTAnalytics": "iotanalytics",
        "IoTEventsData": "iotevents",
        "IoTFleetHub": "iotfleethub",
        "IoTJobsDataPlane": "iot",
        "IoTSecureTunneling": "iot",
        "IoTSiteWise": "iotsitewise",
        "IoTThingsGraph": "iotthingsgraph",
        "IotData": "iot",
        "IotDeviceAdvisor": "iotdeviceadvisor",
        "Kafka": "kafka",
        "Kinesis Analytics V2": "kinesisanalytics",
        "KinesisAnalyticsV2": "kinesisanalytics",
        "KinesisVideoArchivedMedia": "kinesisvideo",
        "KinesisVideoMedia": "kinesisvideo",
        "KinesisVideoSignalingChannels": "kinesisvideo",
        "LakeFormation": "lakeformation",
        "Lex Model Building Service": "lex",
        "Lex Models V2": "lex",
        "Lex Runtime Service": "lex",
        "Lex Runtime V2": "lex",
        "LexModelBuildingService": "lex",
        "LexModelsV2": "lex",
        "LexRuntime": "lex",
        "LexRuntimeV2": "lex",
        "LicenseManager": "license-manager",
        "Location": "geo",
        "LookoutVision": "lookoutvision",
        "MTurk": "mechanicalturk",
        "MWAA": "airflow",
        "Macie2": "macie2",
        "ManagedBlockchain": "managedblockchain",
        "Marketplace Catalog": "aws-marketplace",
        "Marketplace Commerce Analytics": "marketplacecommerceanalytics",
        "Marketplace Entitlement Service": "aws-marketplace",
        "Marketplace Metering": "aws-marketplace",
        "MarketplaceCatalog": "aws-marketplace",
        "MarketplaceEntitlementService": "aws-marketplace",
        "MarketplaceMetering": "aws-marketplace",
        "MediaConnect": "mediaconnect",
        "MediaConvert": "mediaconvert",
        "MediaLive": "medialive",
        "MediaPackage Vod": "mediapackage-vod",
        "MediaPackage": "mediapackage",
        "MediaPackageVod": "mediapackage-vod",
        "MediaStore Data": "mediastore",
        "MediaStore": "mediastore",
        "MediaStoreData": "mediastore",
        "MediaTailor": "mediatailor",
        "MigrationHub Config": "mgh",
        "MigrationHub": "mgh",
        "MigrationHubConfig": "mgh",
        "Mobile": "mobilehub",
        "Neptune": "rds",
        "Network Firewall": "network-firewall",
        "NetworkFirewall": "network-firewall",
        "NetworkManager": "networkmanager",
        "OpsWorksCM": "opsworks-cm",
        "Outposts": "outposts",
        "PI": "pi",
        "Personalize Events": "personalize",
        "Personalize Runtime": "personalize",
        "Personalize": "personalize",
        "PersonalizeEvents": "personalize",
        "PersonalizeRuntime": "personalize",
        "Pinpoint Email": "ses",
        "Pinpoint SMS Voice": "sms-voice",
        "Pinpoint": "mobiletargeting",
        "PinpointEmail": "ses",
        "PinpointSMSVoice": "sms-voice",
        "Pricing": "pricing",
        "QLDB Session": "qldb",
        "QLDB": "qldb",
        "QLDBSession": "qldb",
        "RDS Data": "rds-data",
        "RDSDataService": "rds-data",
        "Redshift Data": "redshift-data",
        "RedshiftData": "redshift-data",
        "Resource Groups": "resource-groups",
        "ResourceGroups": "resource-groups",
        "ResourceGroupsTaggingAPI": "tag",
        "RoboMaker": "robomaker",
        "S3 Control": "s3",
        "S3Control": "s3-outposts",
        "S3Outposts": "s3-outposts",
        "SES": "ses",
        "SESV2": "ses",
        "SESv2": "ses",
        "SSO Admin": "sso",
        "SSO OIDC": "sso-directory",
        "SSO": "sso",
        "SSOAdmin": "sso",
        "SSOOIDC": "sso-directory",
        "SageMaker A2I Runtime": "sagemaker",
        "SageMaker FeatureStore Runtime": "sagemaker",
        "SageMaker Runtime": "sagemaker",
        "SageMaker": "sagemaker",
        "SageMakerFeatureStoreRuntime": "sagemaker",
        "SageMakerRuntime": "sagemaker",
        "Sagemaker Edge": "sagemaker",
        "SagemakerEdge": "sagemaker",
        "Secrets Manager": "secretsmanager",
        "SecurityHub": "securityhub",
        "ServerlessApplicationRepository": "serverlessrepo",
        "Service Catalog AppRegistry": "servicecatalog",
        "ServiceCatalogAppRegistry": "servicecatalog",
        "SimpleDB": "sdb",
        "SimpleWorkflow": "swf",
        "StepFunctions": "states",
        "Timestream Query": "timestream",
        "Timestream Write": "timestream",
        "TimestreamQuery": "timestream",
        "TimestreamWrite": "timestream",
        "Transcribe": "transcribe",
        "TranscribeService": "transcribe",
        "Transfer": "transfer",
        "Translate": "translate",
        "WAFRegional": "waf-regional",
        "WellArchitected": "wellarchitected",
        "WorkLink": "worklink",
        "codestar notifications": "codestar-notifications",
        "forecastquery": "forecast"
    }
}