{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy",
  "createdate": "2024-05-02T02:47:48+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "apigateway:GET"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:apigateway:*::/account",
          "arn:aws:apigateway:*::/apis",
          "arn:aws:apigateway:*::/apis/*",
          "arn:aws:apigateway:*::/apis/*/authorizers",
          "arn:aws:apigateway:*::/apis/*/authorizers/*",
          "arn:aws:apigateway:*::/apis/*/deployments",
          "arn:aws:apigateway:*::/apis/*/deployments/*",
          "arn:aws:apigateway:*::/apis/*/integrations",
          "arn:aws:apigateway:*::/apis/*/integrations/*",
          "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
          "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
          "arn:aws:apigateway:*::/apis/*/models",
          "arn:aws:apigateway:*::/apis/*/models/*",
          "arn:aws:apigateway:*::/apis/*/routes",
          "arn:aws:apigateway:*::/apis/*/routes/*",
          "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
          "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
          "arn:aws:apigateway:*::/apis/*/stages",
          "arn:aws:apigateway:*::/apis/*/stages/*",
          "arn:aws:apigateway:*::/clientcertificates",
          "arn:aws:apigateway:*::/clientcertificates/*",
          "arn:aws:apigateway:*::/domainnames",
          "arn:aws:apigateway:*::/domainnames/*",
          "arn:aws:apigateway:*::/domainnames/*/apimappings",
          "arn:aws:apigateway:*::/domainnames/*/apimappings/*",
          "arn:aws:apigateway:*::/domainnames/*/basepathmappings",
          "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
          "arn:aws:apigateway:*::/restapis",
          "arn:aws:apigateway:*::/restapis/*",
          "arn:aws:apigateway:*::/restapis/*/authorizers",
          "arn:aws:apigateway:*::/restapis/*/authorizers/*",
          "arn:aws:apigateway:*::/restapis/*/deployments",
          "arn:aws:apigateway:*::/restapis/*/deployments/*",
          "arn:aws:apigateway:*::/restapis/*/models",
          "arn:aws:apigateway:*::/restapis/*/models/*",
          "arn:aws:apigateway:*::/restapis/*/models/*/default_template",
          "arn:aws:apigateway:*::/restapis/*/resources",
          "arn:aws:apigateway:*::/restapis/*/resources/*",
          "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
          "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
          "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
          "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
          "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
          "arn:aws:apigateway:*::/restapis/*/stages",
          "arn:aws:apigateway:*::/restapis/*/stages/*",
          "arn:aws:apigateway:*::/usageplans",
          "arn:aws:apigateway:*::/usageplans/*",
          "arn:aws:apigateway:*::/vpclinks",
          "arn:aws:apigateway:*::/vpclinks/*"
        ],
        "Sid": "AWSSupportAPIGatewayAccess"
      },
      {
        "Action": [
          "iam:DeleteRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
        ],
        "Sid": "AWSSupportDeleteRoleAccess"
      },
      {
        "Action": [
          "access-analyzer:getAccessPreview",
          "access-analyzer:getAnalyzedResource",
          "access-analyzer:getAnalyzer",
          "access-analyzer:getArchiveRule",
          "access-analyzer:getFinding",
          "access-analyzer:getGeneratedPolicy",
          "access-analyzer:listAccessPreviewFindings",
          "access-analyzer:listAccessPreviews",
          "access-analyzer:listAnalyzedResources",
          "access-analyzer:listAnalyzers",
          "access-analyzer:listArchiveRules",
          "access-analyzer:listFindings",
          "access-analyzer:listPolicyGenerations",
          "acm-pca:describeCertificateAuthority",
          "acm-pca:describeCertificateAuthorityAuditReport",
          "acm-pca:getCertificate",
          "acm-pca:getCertificateAuthorityCertificate",
          "acm-pca:getCertificateAuthorityCsr",
          "acm-pca:listCertificateAuthorities",
          "acm-pca:listTags",
          "acm:describeCertificate",
          "acm:getAccountConfiguration",
          "acm:getCertificate",
          "acm:listCertificates",
          "acm:listTagsForCertificate",
          "airflow:getEnvironment",
          "airflow:listEnvironments",
          "airflow:listTagsForResource",
          "amplify:getApp",
          "amplify:getBackendEnvironment",
          "amplify:getBranch",
          "amplify:getDomainAssociation",
          "amplify:getJob",
          "amplify:getWebhook",
          "amplify:listApps",
          "amplify:listBackendEnvironments",
          "amplify:listBranches",
          "amplify:listDomainAssociations",
          "amplify:listWebhooks",
          "amplifyuibuilder:exportComponents",
          "amplifyuibuilder:exportThemes",
          "appflow:describeConnectorEntity",
          "appflow:describeConnectorProfiles",
          "appflow:describeConnectors",
          "appflow:describeFlow",
          "appflow:describeFlowExecutionRecords",
          "appflow:listConnectorEntities",
          "appflow:listFlows",
          "application-autoscaling:describeScalableTargets",
          "application-autoscaling:describeScalingActivities",
          "application-autoscaling:describeScalingPolicies",
          "application-autoscaling:describeScheduledActions",
          "applicationinsights:describeApplication",
          "applicationinsights:describeComponent",
          "applicationinsights:describeComponentConfiguration",
          "applicationinsights:describeComponentConfigurationRecommendation",
          "applicationinsights:describeLogPattern",
          "applicationinsights:describeObservation",
          "applicationinsights:describeProblem",
          "applicationinsights:describeProblemObservations",
          "applicationinsights:listApplications",
          "applicationinsights:listComponents",
          "applicationinsights:listConfigurationHistory",
          "applicationinsights:listLogPatterns",
          "applicationinsights:listLogPatternSets",
          "applicationinsights:listProblems",
          "appmesh:describeGatewayRoute",
          "appmesh:describeMesh",
          "appmesh:describeRoute",
          "appmesh:describeVirtualGateway",
          "appmesh:describeVirtualNode",
          "appmesh:describeVirtualRouter",
          "appmesh:describeVirtualService",
          "appmesh:listGatewayRoutes",
          "appmesh:listMeshes",
          "appmesh:listRoutes",
          "appmesh:listTagsForResource",
          "appmesh:listVirtualGateways",
          "appmesh:listVirtualNodes",
          "appmesh:listVirtualRouters",
          "appmesh:listVirtualServices",
          "apprunner:describeAutoScalingConfiguration",
          "apprunner:describeCustomDomains",
          "apprunner:describeOperation",
          "apprunner:describeService",
          "apprunner:listAutoScalingConfigurations",
          "apprunner:listConnections",
          "apprunner:listOperations",
          "apprunner:listServices",
          "apprunner:listTagsForResource",
          "appstream:describeAppBlockBuilderAppBlockAssociations",
          "appstream:describeAppBlockBuilders",
          "appstream:describeAppBlocks",
          "appstream:describeApplicationFleetAssociations",
          "appstream:describeApplications",
          "appstream:describeDirectoryConfigs",
          "appstream:describeEntitlements",
          "appstream:describeFleets",
          "appstream:describeImageBuilders",
          "appstream:describeImagePermissions",
          "appstream:describeImages",
          "appstream:describeSessions",
          "appstream:describeStacks",
          "appstream:describeUsageReportSubscriptions",
          "appstream:describeUsers",
          "appstream:describeUserStackAssociations",
          "appstream:listAssociatedFleets",
          "appstream:listAssociatedStacks",
          "appstream:listEntitledApplications",
          "appstream:listTagsForResource",
          "appsync:getApiAssociation",
          "appsync:getApiCache",
          "appsync:getDomainName",
          "appsync:getFunction",
          "appsync:getGraphqlApi",
          "appsync:getIntrospectionSchema",
          "appsync:getResolver",
          "appsync:getSchemaCreationStatus",
          "appsync:getSourceApiAssociation",
          "appsync:getType",
          "appsync:listDataSources",
          "appsync:listDomainNames",
          "appsync:listFunctions",
          "appsync:listGraphqlApis",
          "appsync:listResolvers",
          "appsync:listResolversByFunction",
          "appsync:listSourceApiAssociations",
          "appsync:listTypes",
          "appsync:listTypesByAssociation",
          "aps:describeAlertManagerDefinition",
          "aps:describeRuleGroupsNamespace",
          "aps:describeScraper",
          "aps:describeWorkspace",
          "aps:listRuleGroupsNamespaces",
          "aps:listScrapers",
          "aps:listWorkspaces",
          "athena:batchGetNamedQuery",
          "athena:batchGetQueryExecution",
          "athena:getCalculationExecution",
          "athena:getCalculationExecutionStatus",
          "athena:getDataCatalog",
          "athena:getNamedQuery",
          "athena:getNotebookMetadata",
          "athena:getQueryExecution",
          "athena:getQueryRuntimeStatistics",
          "athena:getSession",
          "athena:getSessionStatus",
          "athena:getWorkGroup",
          "athena:listApplicationDPUSizes",
          "athena:listCalculationExecutions",
          "athena:listDataCatalogs",
          "athena:listEngineVersions",
          "athena:listExecutors",
          "athena:listNamedQueries",
          "athena:listNotebookMetadata",
          "athena:listNotebookSessions",
          "athena:listQueryExecutions",
          "athena:listSessions",
          "athena:listTagsForResource",
          "athena:listWorkGroups",
          "auditmanager:getAccountStatus",
          "auditmanager:getDelegations",
          "auditmanager:listAssessmentFrameworks",
          "auditmanager:listAssessmentReports",
          "auditmanager:listAssessments",
          "auditmanager:listControls",
          "auditmanager:listKeywordsForDataSource",
          "auditmanager:listNotifications",
          "autoscaling-plans:describeScalingPlanResources",
          "autoscaling-plans:describeScalingPlans",
          "autoscaling-plans:getScalingPlanResourceForecastData",
          "autoscaling:describeAccountLimits",
          "autoscaling:describeAdjustmentTypes",
          "autoscaling:describeAutoScalingGroups",
          "autoscaling:describeAutoScalingInstances",
          "autoscaling:describeAutoScalingNotificationTypes",
          "autoscaling:describeInstanceRefreshes",
          "autoscaling:describeLaunchConfigurations",
          "autoscaling:describeLifecycleHooks",
          "autoscaling:describeLifecycleHookTypes",
          "autoscaling:describeLoadBalancers",
          "autoscaling:describeLoadBalancerTargetGroups",
          "autoscaling:describeMetricCollectionTypes",
          "autoscaling:describeNotificationConfigurations",
          "autoscaling:describePolicies",
          "autoscaling:describeScalingActivities",
          "autoscaling:describeScalingProcessTypes",
          "autoscaling:describeScheduledActions",
          "autoscaling:describeTags",
          "autoscaling:describeTerminationPolicyTypes",
          "autoscaling:describeWarmPool",
          "backup:describeBackupJob",
          "backup:describeBackupVault",
          "backup:describeCopyJob",
          "backup:describeFramework",
          "backup:describeGlobalSettings",
          "backup:describeProtectedResource",
          "backup:describeRecoveryPoint",
          "backup:describeRegionSettings",
          "backup:describeReportJob",
          "backup:describeReportPlan",
          "backup:describeRestoreJob",
          "backup:getBackupPlan",
          "backup:getBackupPlanFromJSON",
          "backup:getBackupPlanFromTemplate",
          "backup:getBackupSelection",
          "backup:getBackupVaultAccessPolicy",
          "backup:getBackupVaultNotifications",
          "backup:getLegalHold",
          "backup:getRecoveryPointRestoreMetadata",
          "backup:getRestoreJobMetadata",
          "backup:getRestoreTestingInferredMetadata",
          "backup:getRestoreTestingPlan",
          "backup:getRestoreTestingSelection",
          "backup:getSupportedResourceTypes",
          "backup:listBackupJobs",
          "backup:listBackupPlans",
          "backup:listBackupPlanTemplates",
          "backup:listBackupPlanVersions",
          "backup:listBackupSelections",
          "backup:listBackupVaults",
          "backup:listCopyJobs",
          "backup:listFrameworks",
          "backup:listLegalHolds",
          "backup:listProtectedResources",
          "backup:listRecoveryPointsByBackupVault",
          "backup:listRecoveryPointsByLegalHold",
          "backup:listRecoveryPointsByResource",
          "backup:listReportJobs",
          "backup:listReportPlans",
          "backup:listRestoreJobs",
          "backup:listRestoreJobsByProtectedResource",
          "backup:listRestoreTestingPlans",
          "backup:listRestoreTestingSelections",
          "backup:listTags",
          "backup-gateway:getGateway",
          "backup-gateway:getHypervisor",
          "backup-gateway:getHypervisorPropertyMappings",
          "backup-gateway:getVirtualMachine",
          "backup-gateway:listGateways",
          "backup-gateway:listHypervisors",
          "backup-gateway:listVirtualMachines",
          "batch:describeComputeEnvironments",
          "batch:describeJobDefinitions",
          "batch:describeJobQueues",
          "batch:describeJobs",
          "batch:listJobs",
          "braket:getDevice",
          "braket:getQuantumTask",
          "braket:searchDevices",
          "braket:searchQuantumTasks",
          "budgets:viewBudget",
          "ce:getCostAndUsage",
          "ce:getCostAndUsageWithResources",
          "ce:getCostForecast",
          "ce:getDimensionValues",
          "ce:getReservationCoverage",
          "ce:getReservationPurchaseRecommendation",
          "ce:getReservationUtilization",
          "ce:getRightsizingRecommendation",
          "ce:getSavingsPlansCoverage",
          "ce:getSavingsPlansPurchaseRecommendation",
          "ce:getSavingsPlansUtilization",
          "ce:getSavingsPlansUtilizationDetails",
          "ce:getTags",
          "chime:describeAppInstance",
          "chime:getAttendee",
          "chime:getGlobalSettings",
          "chime:getMediaCapturePipeline",
          "chime:getMediaPipeline",
          "chime:getMeeting",
          "chime:getProxySession",
          "chime:getSipMediaApplication",
          "chime:getSipRule",
          "chime:getVoiceConnector",
          "chime:getVoiceConnectorGroup",
          "chime:getVoiceConnectorLoggingConfiguration",
          "chime:listAppInstances",
          "chime:listAttendees",
          "chime:listChannelBans",
          "chime:listChannels",
          "chime:listChannelsModeratedByAppInstanceUser",
          "chime:listMediaCapturePipelines",
          "chime:listMediaPipelines",
          "chime:listMeetings",
          "chime:listSipMediaApplications",
          "chime:listSipRules",
          "chime:listVoiceConnectorGroups",
          "chime:listVoiceConnectors",
          "cleanrooms:batchGetCollaborationAnalysisTemplate",
          "cleanrooms:batchGetSchema",
          "cleanrooms:getAnalysisTemplate",
          "cleanrooms:getCollaboration",
          "cleanrooms:getCollaborationAnalysisTemplate",
          "cleanrooms:getConfiguredTable",
          "cleanrooms:getConfiguredTableAssociation",
          "cleanrooms:getMembership",
          "cleanrooms:getSchema",
          "cleanrooms:listAnalysisTemplates",
          "cleanrooms:listCollaborationAnalysisTemplates",
          "cleanrooms:listCollaborations",
          "cleanrooms:listConfiguredTableAssociations",
          "cleanrooms:listConfiguredTables",
          "cleanrooms:listMembers",
          "cleanrooms:listMemberships",
          "cleanrooms:listSchemas",
          "cloud9:describeEnvironmentMemberships",
          "cloud9:describeEnvironments",
          "cloud9:listEnvironments",
          "clouddirectory:getDirectory",
          "clouddirectory:listDirectories",
          "cloudformation:batchDescribeTypeConfigurations",
          "cloudformation:describeAccountLimits",
          "cloudformation:describeChangeSet",
          "cloudformation:describeChangeSetHooks",
          "cloudformation:describePublisher",
          "cloudformation:describeStackEvents",
          "cloudformation:describeStackInstance",
          "cloudformation:describeStackResource",
          "cloudformation:describeStackResources",
          "cloudformation:describeStacks",
          "cloudformation:describeStackSet",
          "cloudformation:describeStackSetOperation",
          "cloudformation:describeType",
          "cloudformation:describeTypeRegistration",
          "cloudformation:estimateTemplateCost",
          "cloudformation:getStackPolicy",
          "cloudformation:getTemplate",
          "cloudformation:getTemplateSummary",
          "cloudformation:listChangeSets",
          "cloudformation:listExports",
          "cloudformation:listImports",
          "cloudformation:listStackInstances",
          "cloudformation:listStackResources",
          "cloudformation:listStacks",
          "cloudformation:listStackSetOperationResults",
          "cloudformation:listStackSetOperations",
          "cloudformation:listStackSets",
          "cloudformation:listTypeRegistrations",
          "cloudformation:listTypes",
          "cloudformation:listTypeVersions",
          "cloudfront:describeFunction",
          "cloudfront:getCachePolicy",
          "cloudfront:getCachePolicyConfig",
          "cloudfront:getCloudFrontOriginAccessIdentity",
          "cloudfront:getCloudFrontOriginAccessIdentityConfig",
          "cloudfront:getContinuousDeploymentPolicy",
          "cloudfront:getContinuousDeploymentPolicyConfig",
          "cloudfront:getDistribution",
          "cloudfront:getDistributionConfig",
          "cloudfront:getInvalidation",
          "cloudfront:getKeyGroup",
          "cloudfront:getKeyGroupConfig",
          "cloudfront:getMonitoringSubscription",
          "cloudfront:getOriginAccessControl",
          "cloudfront:getOriginAccessControlConfig",
          "cloudfront:getOriginRequestPolicy",
          "cloudfront:getOriginRequestPolicyConfig",
          "cloudfront:getPublicKey",
          "cloudfront:getPublicKeyConfig",
          "cloudfront:getRealtimeLogConfig",
          "cloudfront:getResponseHeadersPolicy",
          "cloudfront:getResponseHeadersPolicyConfig",
          "cloudfront:getStreamingDistribution",
          "cloudfront:getStreamingDistributionConfig",
          "cloudfront:listCachePolicies",
          "cloudfront:listCloudFrontOriginAccessIdentities",
          "cloudfront:listContinuousDeploymentPolicies",
          "cloudfront:listDistributions",
          "cloudfront:listDistributionsByCachePolicyId",
          "cloudfront:listDistributionsByKeyGroup",
          "cloudfront:listDistributionsByOriginRequestPolicyId",
          "cloudfront:listDistributionsByRealtimeLogConfig",
          "cloudfront:listDistributionsByResponseHeadersPolicyId",
          "cloudfront:listDistributionsByWebACLId",
          "cloudfront:listFunctions",
          "cloudfront:listInvalidations",
          "cloudfront:listKeyGroups",
          "cloudfront:listOriginAccessControls",
          "cloudfront:listOriginRequestPolicies",
          "cloudfront:listPublicKeys",
          "cloudfront:listRealtimeLogConfigs",
          "cloudfront:listResponseHeadersPolicies",
          "cloudfront:listStreamingDistributions",
          "cloudhsm:describeBackups",
          "cloudhsm:describeClusters",
          "cloudsearch:describeAnalysisSchemes",
          "cloudsearch:describeAvailabilityOptions",
          "cloudsearch:describeDomains",
          "cloudsearch:describeExpressions",
          "cloudsearch:describeIndexFields",
          "cloudsearch:describeScalingParameters",
          "cloudsearch:describeServiceAccessPolicies",
          "cloudsearch:describeSuggesters",
          "cloudsearch:listDomainNames",
          "cloudtrail:describeTrails",
          "cloudtrail:getEventSelectors",
          "cloudtrail:getInsightSelectors",
          "cloudtrail:getTrail",
          "cloudtrail:getTrailStatus",
          "cloudtrail:listPublicKeys",
          "cloudtrail:listTags",
          "cloudtrail:listTrails",
          "cloudtrail:lookupEvents",
          "cloudwatch:describeAlarmHistory",
          "cloudwatch:describeAlarms",
          "cloudwatch:describeAlarmsForMetric",
          "cloudwatch:describeAnomalyDetectors",
          "cloudwatch:describeInsightRules",
          "cloudwatch:getDashboard",
          "cloudwatch:getInsightRuleReport",
          "cloudwatch:getMetricData",
          "cloudwatch:getMetricStatistics",
          "cloudwatch:getMetricStream",
          "cloudwatch:listDashboards",
          "cloudwatch:listManagedInsightRules",
          "cloudwatch:listMetrics",
          "cloudwatch:listMetricStreams",
          "codeartifact:describeDomain",
          "codeartifact:describePackageVersion",
          "codeartifact:describeRepository",
          "codeartifact:getDomainPermissionsPolicy",
          "codeartifact:getRepositoryEndpoint",
          "codeartifact:getRepositoryPermissionsPolicy",
          "codeartifact:listDomains",
          "codeartifact:listPackages",
          "codeartifact:listPackageVersionAssets",
          "codeartifact:listPackageVersions",
          "codeartifact:listRepositories",
          "codeartifact:listRepositoriesInDomain",
          "codebuild:batchGetBuildBatches",
          "codebuild:batchGetBuilds",
          "codebuild:batchGetFleets",
          "codebuild:batchGetProjects",
          "codebuild:listBuildBatches",
          "codebuild:listBuildBatchesForProject",
          "codebuild:listBuilds",
          "codebuild:listBuildsForProject",
          "codebuild:listCuratedEnvironmentImages",
          "codebuild:listFleets",
          "codebuild:listProjects",
          "codebuild:listSourceCredentials",
          "codecommit:batchGetRepositories",
          "codecommit:getBranch",
          "codecommit:getRepository",
          "codecommit:getRepositoryTriggers",
          "codecommit:listBranches",
          "codecommit:listRepositories",
          "codedeploy:batchGetApplicationRevisions",
          "codedeploy:batchGetApplications",
          "codedeploy:batchGetDeploymentGroups",
          "codedeploy:batchGetDeploymentInstances",
          "codedeploy:batchGetDeployments",
          "codedeploy:batchGetDeploymentTargets",
          "codedeploy:batchGetOnPremisesInstances",
          "codedeploy:getApplication",
          "codedeploy:getApplicationRevision",
          "codedeploy:getDeployment",
          "codedeploy:getDeploymentConfig",
          "codedeploy:getDeploymentGroup",
          "codedeploy:getDeploymentInstance",
          "codedeploy:getDeploymentTarget",
          "codedeploy:getOnPremisesInstance",
          "codedeploy:listApplicationRevisions",
          "codedeploy:listApplications",
          "codedeploy:listDeploymentConfigs",
          "codedeploy:listDeploymentGroups",
          "codedeploy:listDeploymentInstances",
          "codedeploy:listDeployments",
          "codedeploy:listDeploymentTargets",
          "codedeploy:listGitHubAccountTokenNames",
          "codedeploy:listOnPremisesInstances",
          "codepipeline:getJobDetails",
          "codepipeline:getPipeline",
          "codepipeline:getPipelineExecution",
          "codepipeline:getPipelineState",
          "codepipeline:listActionExecutions",
          "codepipeline:listActionTypes",
          "codepipeline:listPipelineExecutions",
          "codepipeline:listPipelines",
          "codepipeline:listWebhooks",
          "codestar:describeProject",
          "codestar:listProjects",
          "codestar:listResources",
          "codestar:listTeamMembers",
          "codestar:listUserProfiles",
          "codestar-connections:getConnection",
          "codestar-connections:getHost",
          "codestar-connections:listConnections",
          "codestar-connections:listHosts",
          "cognito-identity:describeIdentityPool",
          "cognito-identity:getIdentityPoolRoles",
          "cognito-identity:listIdentities",
          "cognito-identity:listIdentityPools",
          "cognito-idp:describeIdentityProvider",
          "cognito-idp:describeResourceServer",
          "cognito-idp:describeRiskConfiguration",
          "cognito-idp:describeUserImportJob",
          "cognito-idp:describeUserPool",
          "cognito-idp:describeUserPoolClient",
          "cognito-idp:describeUserPoolDomain",
          "cognito-idp:getGroup",
          "cognito-idp:getUICustomization",
          "cognito-idp:getUserPoolMfaConfig",
          "cognito-idp:listGroups",
          "cognito-idp:listIdentityProviders",
          "cognito-idp:listResourceServers",
          "cognito-idp:listUserImportJobs",
          "cognito-idp:listUserPoolClients",
          "cognito-idp:listUserPools",
          "cognito-sync:describeDataset",
          "cognito-sync:describeIdentityPoolUsage",
          "cognito-sync:describeIdentityUsage",
          "cognito-sync:getCognitoEvents",
          "cognito-sync:getIdentityPoolConfiguration",
          "cognito-sync:listDatasets",
          "cognito-sync:listIdentityPoolUsage",
          "comprehend:describeDocumentClassificationJob",
          "comprehend:describeDocumentClassifier",
          "comprehend:describeDominantLanguageDetectionJob",
          "comprehend:describeEndpoint",
          "comprehend:describeEntitiesDetectionJob",
          "comprehend:describeEntityRecognizer",
          "comprehend:describeEventsDetectionJob",
          "comprehend:describeFlywheel",
          "comprehend:describeFlywheelIteration",
          "comprehend:describeKeyPhrasesDetectionJob",
          "comprehend:describePiiEntitiesDetectionJob",
          "comprehend:describeSentimentDetectionJob",
          "comprehend:describeTargetedSentimentDetectionJob",
          "comprehend:describeTopicsDetectionJob",
          "comprehend:listDocumentClassificationJobs",
          "comprehend:listDocumentClassifiers",
          "comprehend:listDominantLanguageDetectionJobs",
          "comprehend:listEndpoints",
          "comprehend:listEntitiesDetectionJobs",
          "comprehend:listEntityRecognizers",
          "comprehend:listEventsDetectionJobs",
          "comprehend:listFlywheelIterationHistory",
          "comprehend:listFlywheels",
          "comprehend:listKeyPhrasesDetectionJobs",
          "comprehend:listPiiEntitiesDetectionJobs",
          "comprehend:listSentimentDetectionJobs",
          "comprehend:listTargetedSentimentDetectionJobs",
          "comprehend:listTopicsDetectionJobs",
          "compute-optimizer:getAutoScalingGroupRecommendations",
          "compute-optimizer:getEBSVolumeRecommendations",
          "compute-optimizer:getEC2InstanceRecommendations",
          "compute-optimizer:getEC2RecommendationProjectedMetrics",
          "compute-optimizer:getECSServiceRecommendations",
          "compute-optimizer:getECSServiceRecommendationProjectedMetrics",
          "compute-optimizer:getEnrollmentStatus",
          "compute-optimizer:getRecommendationSummaries",
          "config:batchGetAggregateResourceConfig",
          "config:batchGetResourceConfig",
          "config:describeAggregateComplianceByConfigRules",
          "config:describeAggregationAuthorizations",
          "config:describeComplianceByConfigRule",
          "config:describeComplianceByResource",
          "config:describeConfigRuleEvaluationStatus",
          "config:describeConfigRules",
          "config:describeConfigurationAggregators",
          "config:describeConfigurationAggregatorSourcesStatus",
          "config:describeConfigurationRecorders",
          "config:describeConfigurationRecorderStatus",
          "config:describeConformancePackCompliance",
          "config:describeConformancePacks",
          "config:describeConformancePackStatus",
          "config:describeDeliveryChannels",
          "config:describeDeliveryChannelStatus",
          "config:describeOrganizationConfigRules",
          "config:describeOrganizationConfigRuleStatuses",
          "config:describeOrganizationConformancePacks",
          "config:describeOrganizationConformancePackStatuses",
          "config:describePendingAggregationRequests",
          "config:describeRemediationConfigurations",
          "config:describeRemediationExceptions",
          "config:describeRemediationExecutionStatus",
          "config:describeRetentionConfigurations",
          "config:getAggregateComplianceDetailsByConfigRule",
          "config:getAggregateConfigRuleComplianceSummary",
          "config:getAggregateDiscoveredResourceCounts",
          "config:getAggregateResourceConfig",
          "config:getComplianceDetailsByConfigRule",
          "config:getComplianceDetailsByResource",
          "config:getComplianceSummaryByConfigRule",
          "config:getComplianceSummaryByResourceType",
          "config:getConformancePackComplianceDetails",
          "config:getConformancePackComplianceSummary",
          "config:getDiscoveredResourceCounts",
          "config:getOrganizationConfigRuleDetailedStatus",
          "config:getOrganizationConformancePackDetailedStatus",
          "config:getResourceConfigHistory",
          "config:listAggregateDiscoveredResources",
          "config:listDiscoveredResources",
          "config:listTagsForResource",
          "connect:describeContact",
          "connect:describePhoneNumber",
          "connect:describeQuickConnect",
          "connect:describeUser",
          "connect:getCurrentMetricData",
          "connect:getMetricData",
          "connect:listContactEvaluations",
          "connect:listEvaluationForms",
          "connect:listEvaluationFormVersions",
          "connect:listPhoneNumbersV2",
          "connect:listQuickConnects",
          "connect:listRoutingProfiles",
          "connect:listSecurityProfiles",
          "connect:listUsers",
          "connect:listViews",
          "connect:listViewVersions",
          "controltower:describeAccountFactoryConfig",
          "controltower:describeCoreService",
          "controltower:describeGuardrail",
          "controltower:describeGuardrailForTarget",
          "controltower:describeManagedAccount",
          "controltower:describeSingleSignOn",
          "controltower:getAvailableUpdates",
          "controltower:getHomeRegion",
          "controltower:getLandingZone",
          "controltower:getLandingZoneStatus",
          "controltower:listDirectoryGroups",
          "controltower:listEnabledControls",
          "controltower:listGuardrailsForTarget",
          "controltower:listGuardrailViolations",
          "controltower:listLandingZones",
          "controltower:listManagedAccounts",
          "controltower:listManagedAccountsForGuardrail",
          "controltower:listManagedAccountsForParent",
          "controltower:listManagedOrganizationalUnits",
          "controltower:listManagedOrganizationalUnitsForGuardrail",
          "cost-optimization-hub:getPreferences",
          "cost-optimization-hub:getRecommendation",
          "cost-optimization-hub:listEnrollmentStatuses",
          "cost-optimization-hub:listRecommendations",
          "cost-optimization-hub:listRecommendationSummaries",
          "databrew:describeDataset",
          "databrew:describeJob",
          "databrew:describeProject",
          "databrew:describeRecipe",
          "databrew:listDatasets",
          "databrew:listJobRuns",
          "databrew:listJobs",
          "databrew:listProjects",
          "databrew:listRecipes",
          "databrew:listRecipeVersions",
          "databrew:listTagsForResource",
          "datapipeline:describeObjects",
          "datapipeline:describePipelines",
          "datapipeline:getPipelineDefinition",
          "datapipeline:listPipelines",
          "datapipeline:queryObjects",
          "datasync:describeAgent",
          "datasync:describeLocationEfs",
          "datasync:describeLocationFsxLustre",
          "datasync:describeLocationFsxOpenZfs",
          "datasync:describeLocationFsxWindows",
          "datasync:describeLocationHdfs",
          "datasync:describeLocationNfs",
          "datasync:describeLocationObjectStorage",
          "datasync:describeLocationS3",
          "datasync:describeLocationSmb",
          "datasync:describeTask",
          "datasync:describeTaskExecution",
          "datasync:listAgents",
          "datasync:listLocations",
          "datasync:listTaskExecutions",
          "datasync:listTasks",
          "dax:describeClusters",
          "dax:describeDefaultParameters",
          "dax:describeEvents",
          "dax:describeParameterGroups",
          "dax:describeParameters",
          "dax:describeSubnetGroups",
          "detective:getMembers",
          "detective:listGraphs",
          "detective:listInvitations",
          "detective:listMembers",
          "devicefarm:getAccountSettings",
          "devicefarm:getDevice",
          "devicefarm:getDevicePool",
          "devicefarm:getDevicePoolCompatibility",
          "devicefarm:getJob",
          "devicefarm:getProject",
          "devicefarm:getRemoteAccessSession",
          "devicefarm:getRun",
          "devicefarm:getSuite",
          "devicefarm:getTest",
          "devicefarm:getTestGridProject",
          "devicefarm:getTestGridSession",
          "devicefarm:getUpload",
          "devicefarm:listArtifacts",
          "devicefarm:listDevicePools",
          "devicefarm:listDevices",
          "devicefarm:listJobs",
          "devicefarm:listProjects",
          "devicefarm:listRemoteAccessSessions",
          "devicefarm:listRuns",
          "devicefarm:listSamples",
          "devicefarm:listSuites",
          "devicefarm:listTestGridProjects",
          "devicefarm:listTestGridSessionActions",
          "devicefarm:listTestGridSessionArtifacts",
          "devicefarm:listTestGridSessions",
          "devicefarm:listTests",
          "devicefarm:listUniqueProblems",
          "devicefarm:listUploads",
          "directconnect:describeConnectionLoa",
          "directconnect:describeConnections",
          "directconnect:describeConnectionsOnInterconnect",
          "directconnect:describeCustomerMetadata",
          "directconnect:describeDirectConnectGatewayAssociationProposals",
          "directconnect:describeDirectConnectGatewayAssociations",
          "directconnect:describeDirectConnectGatewayAttachments",
          "directconnect:describeDirectConnectGateways",
          "directconnect:describeHostedConnections",
          "directconnect:describeInterconnectLoa",
          "directconnect:describeInterconnects",
          "directconnect:describeLags",
          "directconnect:describeLoa",
          "directconnect:describeLocations",
          "directconnect:describeRouterConfiguration",
          "directconnect:describeVirtualGateways",
          "directconnect:describeVirtualInterfaces",
          "dlm:getLifecyclePolicies",
          "dlm:getLifecyclePolicy",
          "dms:describeAccountAttributes",
          "dms:describeApplicableIndividualAssessments",
          "dms:describeConnections",
          "dms:describeEndpoints",
          "dms:describeEndpointSettings",
          "dms:describeEndpointTypes",
          "dms:describeEventCategories",
          "dms:describeEvents",
          "dms:describeEventSubscriptions",
          "dms:describeFleetAdvisorCollectors",
          "dms:describeFleetAdvisorDatabases",
          "dms:describeFleetAdvisorLsaAnalysis",
          "dms:describeFleetAdvisorSchemaObjectSummary",
          "dms:describeFleetAdvisorSchemas",
          "dms:describeOrderableReplicationInstances",
          "dms:describePendingMaintenanceActions",
          "dms:describeRefreshSchemasStatus",
          "dms:describeReplicationInstances",
          "dms:describeReplicationInstanceTaskLogs",
          "dms:describeReplicationSubnetGroups",
          "dms:describeReplicationTaskAssessmentResults",
          "dms:describeReplicationTaskAssessmentRuns",
          "dms:describeReplicationTaskIndividualAssessments",
          "dms:describeReplicationTasks",
          "dms:describeSchemas",
          "dms:describeTableStatistics",
          "docdb-elastic:getCluster",
          "docdb-elastic:getClusterSnapshot",
          "docdb-elastic:listClusters",
          "docdb-elastic:listClusterSnapshots",
          "drs:describeJobLogItems",
          "drs:describeJobs",
          "drs:describeLaunchConfigurationTemplates",
          "drs:describeRecoveryInstances",
          "drs:describeRecoverySnapshots",
          "drs:describeReplicationConfigurationTemplates",
          "drs:describeSourceNetworks",
          "drs:describeSourceServers",
          "drs:getLaunchConfiguration",
          "drs:getReplicationConfiguration",
          "drs:listExtensibleSourceServers",
          "drs:listLaunchActions",
          "drs:listStagingAccounts",
          "ds:describeClientAuthenticationSettings",
          "ds:describeConditionalForwarders",
          "ds:describeDirectories",
          "ds:describeDomainControllers",
          "ds:describeEventTopics",
          "ds:describeLDAPSSettings",
          "ds:describeSharedDirectories",
          "ds:describeSnapshots",
          "ds:describeTrusts",
          "ds:getDirectoryLimits",
          "ds:getSnapshotLimits",
          "ds:listIpRoutes",
          "ds:listSchemaExtensions",
          "ds:listTagsForResource",
          "dynamodb:describeBackup",
          "dynamodb:describeContinuousBackups",
          "dynamodb:describeContributorInsights",
          "dynamodb:describeExport",
          "dynamodb:describeGlobalTable",
          "dynamodb:describeImport",
          "dynamodb:describeKinesisStreamingDestination",
          "dynamodb:describeLimits",
          "dynamodb:describeStream",
          "dynamodb:describeTable",
          "dynamodb:describeTimeToLive",
          "dynamodb:listBackups",
          "dynamodb:listContributorInsights",
          "dynamodb:listExports",
          "dynamodb:listGlobalTables",
          "dynamodb:listImports",
          "dynamodb:listStreams",
          "dynamodb:listTables",
          "dynamodb:listTagsOfResource",
          "ec2:describeAccountAttributes",
          "ec2:describeAddresses",
          "ec2:describeAddressesAttribute",
          "ec2:describeAddressTransfers",
          "ec2:describeAggregateIdFormat",
          "ec2:describeAvailabilityZones",
          "ec2:describeBundleTasks",
          "ec2:describeByoipCidrs",
          "ec2:describeCapacityReservationFleets",
          "ec2:describeCapacityReservations",
          "ec2:describeCarrierGateways",
          "ec2:describeClassicLinkInstances",
          "ec2:describeClientVpnAuthorizationRules",
          "ec2:describeClientVpnConnections",
          "ec2:describeClientVpnEndpoints",
          "ec2:describeClientVpnRoutes",
          "ec2:describeClientVpnTargetNetworks",
          "ec2:describeCoipPools",
          "ec2:describeConversionTasks",
          "ec2:describeCustomerGateways",
          "ec2:describeDhcpOptions",
          "ec2:describeEgressOnlyInternetGateways",
          "ec2:describeExportImageTasks",
          "ec2:describeExportTasks",
          "ec2:describeFastLaunchImages",
          "ec2:describeFastSnapshotRestores",
          "ec2:describeFleetHistory",
          "ec2:describeFleetInstances",
          "ec2:describeFleets",
          "ec2:describeFlowLogs",
          "ec2:describeFpgaImageAttribute",
          "ec2:describeFpgaImages",
          "ec2:describeHostReservationOfferings",
          "ec2:describeHostReservations",
          "ec2:describeHosts",
          "ec2:describeIamInstanceProfileAssociations",
          "ec2:describeIdentityIdFormat",
          "ec2:describeIdFormat",
          "ec2:describeImageAttribute",
          "ec2:describeImages",
          "ec2:describeImportImageTasks",
          "ec2:describeImportSnapshotTasks",
          "ec2:describeInstanceAttribute",
          "ec2:describeInstanceCreditSpecifications",
          "ec2:describeInstanceEventNotificationAttributes",
          "ec2:describeInstanceEventWindows",
          "ec2:describeInstances",
          "ec2:describeInstanceStatus",
          "ec2:describeInstanceTypeOfferings",
          "ec2:describeInstanceTypes",
          "ec2:describeInternetGateways",
          "ec2:describeIpamPools",
          "ec2:describeIpams",
          "ec2:describeIpamScopes",
          "ec2:describeIpv6Pools",
          "ec2:describeKeyPairs",
          "ec2:describeLaunchTemplates",
          "ec2:describeLaunchTemplateVersions",
          "ec2:describeLocalGatewayRouteTables",
          "ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
          "ec2:describeLocalGatewayRouteTableVpcAssociations",
          "ec2:describeLocalGateways",
          "ec2:describeLocalGatewayVirtualInterfaceGroups",
          "ec2:describeLocalGatewayVirtualInterfaces",
          "ec2:describeManagedPrefixLists",
          "ec2:describeMovingAddresses",
          "ec2:describeNatGateways",
          "ec2:describeNetworkAcls",
          "ec2:describeNetworkInterfaceAttribute",
          "ec2:describeNetworkInterfaces",
          "ec2:describePlacementGroups",
          "ec2:describePrefixLists",
          "ec2:describePrincipalIdFormat",
          "ec2:describePublicIpv4Pools",
          "ec2:describeRegions",
          "ec2:describeReservedInstances",
          "ec2:describeReservedInstancesListings",
          "ec2:describeReservedInstancesModifications",
          "ec2:describeReservedInstancesOfferings",
          "ec2:describeRouteTables",
          "ec2:describeScheduledInstanceAvailability",
          "ec2:describeScheduledInstances",
          "ec2:describeSecurityGroupReferences",
          "ec2:describeSecurityGroupRules",
          "ec2:describeSecurityGroups",
          "ec2:describeSnapshotAttribute",
          "ec2:describeSnapshots",
          "ec2:describeSpotDatafeedSubscription",
          "ec2:describeSpotFleetInstances",
          "ec2:describeSpotFleetRequestHistory",
          "ec2:describeSpotFleetRequests",
          "ec2:describeSpotInstanceRequests",
          "ec2:describeSpotPriceHistory",
          "ec2:describeStaleSecurityGroups",
          "ec2:describeStoreImageTasks",
          "ec2:describeSubnets",
          "ec2:describeTags",
          "ec2:describeTrafficMirrorFilters",
          "ec2:describeTrafficMirrorSessions",
          "ec2:describeTrafficMirrorTargets",
          "ec2:describeTransitGatewayAttachments",
          "ec2:describeTransitGatewayConnectPeers",
          "ec2:describeTransitGatewayMulticastDomains",
          "ec2:describeTransitGatewayPeeringAttachments",
          "ec2:describeTransitGatewayPolicyTables",
          "ec2:describeTransitGatewayRouteTableAnnouncements",
          "ec2:describeTransitGatewayRouteTables",
          "ec2:describeTransitGateways",
          "ec2:describeTransitGatewayVpcAttachments",
          "ec2:describeVerifiedAccessEndpoints",
          "ec2:describeVerifiedAccessGroups",
          "ec2:describeVerifiedAccessInstances",
          "ec2:describeVerifiedAccessTrustProviders",
          "ec2:describeVolumeAttribute",
          "ec2:describeVolumes",
          "ec2:describeVolumesModifications",
          "ec2:describeVolumeStatus",
          "ec2:describeVpcAttribute",
          "ec2:describeVpcClassicLink",
          "ec2:describeVpcClassicLinkDnsSupport",
          "ec2:describeVpcEndpointConnectionNotifications",
          "ec2:describeVpcEndpointConnections",
          "ec2:describeVpcEndpoints",
          "ec2:describeVpcEndpointServiceConfigurations",
          "ec2:describeVpcEndpointServicePermissions",
          "ec2:describeVpcEndpointServices",
          "ec2:describeVpcPeeringConnections",
          "ec2:describeVpcs",
          "ec2:describeVpnConnections",
          "ec2:describeVpnGateways",
          "ec2:getAssociatedIpv6PoolCidrs",
          "ec2:getCapacityReservationUsage",
          "ec2:getCoipPoolUsage",
          "ec2:getConsoleOutput",
          "ec2:getConsoleScreenshot",
          "ec2:getDefaultCreditSpecification",
          "ec2:getEbsDefaultKmsKeyId",
          "ec2:getEbsEncryptionByDefault",
          "ec2:getGroupsForCapacityReservation",
          "ec2:getHostReservationPurchasePreview",
          "ec2:getInstanceTypesFromInstanceRequirements",
          "ec2:getIpamAddressHistory",
          "ec2:getIpamPoolAllocations",
          "ec2:getIpamPoolCidrs",
          "ec2:getIpamResourceCidrs",
          "ec2:getLaunchTemplateData",
          "ec2:getManagedPrefixListAssociations",
          "ec2:getManagedPrefixListEntries",
          "ec2:getReservedInstancesExchangeQuote",
          "ec2:getSerialConsoleAccessStatus",
          "ec2:getSpotPlacementScores",
          "ec2:getTransitGatewayMulticastDomainAssociations",
          "ec2:getTransitGatewayPrefixListReferences",
          "ec2:getVerifiedAccessEndpointPolicy",
          "ec2:getVerifiedAccessGroupPolicy",
          "ec2:listImagesInRecycleBin",
          "ec2:listSnapshotsInRecycleBin",
          "ec2:searchLocalGatewayRoutes",
          "ec2:searchTransitGatewayMulticastGroups",
          "ec2:searchTransitGatewayRoutes",
          "ecr-public:describeImages",
          "ecr-public:describeImageTags",
          "ecr-public:describeRegistries",
          "ecr-public:describeRepositories",
          "ecr-public:getRegistryCatalogData",
          "ecr-public:getRepositoryCatalogData",
          "ecr-public:getRepositoryPolicy",
          "ecr-public:listTagsForResource",
          "ecr:batchCheckLayerAvailability",
          "ecr:batchGetRepositoryScanningConfiguration",
          "ecr:describeImages",
          "ecr:describeImageReplicationStatus",
          "ecr:describeImageScanFindings",
          "ecr:describePullThroughCacheRules",
          "ecr:describeRegistry",
          "ecr:describeRepositories",
          "ecr:getLifecyclePolicy",
          "ecr:getLifecyclePolicyPreview",
          "ecr:getRegistryPolicy",
          "ecr:getRegistryScanningConfiguration",
          "ecr:getRepositoryPolicy",
          "ecr:listImages",
          "ecr:listTagsForResource",
          "ecs:describeCapacityProviders",
          "ecs:describeClusters",
          "ecs:describeContainerInstances",
          "ecs:describeServices",
          "ecs:describeTaskDefinition",
          "ecs:describeTasks",
          "ecs:describeTaskSets",
          "ecs:getTaskProtection",
          "ecs:listAccountSettings",
          "ecs:listAttributes",
          "ecs:listClusters",
          "ecs:listContainerInstances",
          "ecs:listServices",
          "ecs:listServicesByNamespace",
          "ecs:listTagsForResource",
          "ecs:listTaskDefinitionFamilies",
          "ecs:listTaskDefinitions",
          "ecs:listTasks",
          "eks:describeAccessEntry",
          "eks:describeAddon",
          "eks:describeAddonConfiguration",
          "eks:describeAddonVersions",
          "eks:describeCluster",
          "eks:describeEksAnywhereSubscription",
          "eks:describeFargateProfile",
          "eks:describeIdentityProviderConfig",
          "eks:describeNodegroup",
          "eks:describeUpdate",
          "eks:listAccessEntries",
          "eks:listAccessPolicies",
          "eks:listAddons",
          "eks:listAssociatedAccessPolicies",
          "eks:listClusters",
          "eks:listEksAnywhereSubscriptions",
          "eks:listFargateProfiles",
          "eks:listIdentityProviderConfigs",
          "eks:listNodegroups",
          "eks:listUpdates",
          "elasticache:describeCacheClusters",
          "elasticache:describeCacheEngineVersions",
          "elasticache:describeCacheParameterGroups",
          "elasticache:describeCacheParameters",
          "elasticache:describeCacheSecurityGroups",
          "elasticache:describeCacheSubnetGroups",
          "elasticache:describeEngineDefaultParameters",
          "elasticache:describeEvents",
          "elasticache:describeGlobalReplicationGroups",
          "elasticache:describeReplicationGroups",
          "elasticache:describeReservedCacheNodes",
          "elasticache:describeReservedCacheNodesOfferings",
          "elasticache:describeServerlessCaches",
          "elasticache:describeServerlessCacheSnapshots",
          "elasticache:describeServiceUpdates",
          "elasticache:describeSnapshots",
          "elasticache:describeUpdateActions",
          "elasticache:describeUserGroups",
          "elasticache:describeUsers",
          "elasticache:listAllowedNodeTypeModifications",
          "elasticache:listTagsForResource",
          "elasticbeanstalk:checkDNSAvailability",
          "elasticbeanstalk:describeAccountAttributes",
          "elasticbeanstalk:describeApplicationVersions",
          "elasticbeanstalk:describeApplications",
          "elasticbeanstalk:describeConfigurationOptions",
          "elasticbeanstalk:describeEnvironmentHealth",
          "elasticbeanstalk:describeEnvironmentManagedActionHistory",
          "elasticbeanstalk:describeEnvironmentManagedActions",
          "elasticbeanstalk:describeEnvironmentResources",
          "elasticbeanstalk:describeEnvironments",
          "elasticbeanstalk:describeEvents",
          "elasticbeanstalk:describeInstancesHealth",
          "elasticbeanstalk:describePlatformVersion",
          "elasticbeanstalk:listAvailableSolutionStacks",
          "elasticbeanstalk:listPlatformBranches",
          "elasticbeanstalk:listPlatformVersions",
          "elasticbeanstalk:validateConfigurationSettings",
          "elasticfilesystem:describeAccessPoints",
          "elasticfilesystem:describeFileSystemPolicy",
          "elasticfilesystem:describeFileSystems",
          "elasticfilesystem:describeLifecycleConfiguration",
          "elasticfilesystem:describeMountTargets",
          "elasticfilesystem:describeMountTargetSecurityGroups",
          "elasticfilesystem:describeTags",
          "elasticfilesystem:listTagsForResource",
          "elasticloadbalancing:describeAccountLimits",
          "elasticloadbalancing:describeInstanceHealth",
          "elasticloadbalancing:describeListenerCertificates",
          "elasticloadbalancing:describeListeners",
          "elasticloadbalancing:describeLoadBalancerAttributes",
          "elasticloadbalancing:describeLoadBalancerPolicies",
          "elasticloadbalancing:describeLoadBalancerPolicyTypes",
          "elasticloadbalancing:describeLoadBalancers",
          "elasticloadbalancing:describeRules",
          "elasticloadbalancing:describeSSLPolicies",
          "elasticloadbalancing:describeTags",
          "elasticloadbalancing:describeTargetGroupAttributes",
          "elasticloadbalancing:describeTargetGroups",
          "elasticloadbalancing:describeTargetHealth",
          "elasticmapreduce:describeCluster",
          "elasticmapreduce:describeNotebookExecution",
          "elasticmapreduce:describeReleaseLabel",
          "elasticmapreduce:describeSecurityConfiguration",
          "elasticmapreduce:describeStep",
          "elasticmapreduce:describeStudio",
          "elasticmapreduce:getAutoTerminationPolicy",
          "elasticmapreduce:getBlockPublicAccessConfiguration",
          "elasticmapreduce:getManagedScalingPolicy",
          "elasticmapreduce:getStudioSessionMapping",
          "elasticmapreduce:listBootstrapActions",
          "elasticmapreduce:listClusters",
          "elasticmapreduce:listInstanceFleets",
          "elasticmapreduce:listInstanceGroups",
          "elasticmapreduce:listInstances",
          "elasticmapreduce:listNotebookExecutions",
          "elasticmapreduce:listReleaseLabels",
          "elasticmapreduce:listSecurityConfigurations",
          "elasticmapreduce:listSteps",
          "elasticmapreduce:listStudios",
          "elasticmapreduce:listStudioSessionMappings",
          "elastictranscoder:listJobsByPipeline",
          "elastictranscoder:listJobsByStatus",
          "elastictranscoder:listPipelines",
          "elastictranscoder:listPresets",
          "elastictranscoder:readPipeline",
          "elastictranscoder:readPreset",
          "emr-containers:describeJobRun",
          "emr-containers:describeJobTemplate",
          "emr-containers:describeManagedEndpoint",
          "emr-containers:describeVirtualCluster",
          "emr-containers:listJobRuns",
          "emr-containers:listJobTemplates",
          "emr-containers:listManagedEndpoints",
          "emr-containers:listVirtualClusters",
          "emr-serverless:getApplication",
          "emr-serverless:getJobRun",
          "emr-serverless:listApplications",
          "es:describeDomain",
          "es:describeDomainAutoTunes",
          "es:describeDomainChangeProgress",
          "es:describeDomainConfig",
          "es:describeDomains",
          "es:describeDryRunProgress",
          "es:describeElasticsearchDomain",
          "es:describeElasticsearchDomainConfig",
          "es:describeElasticsearchDomains",
          "es:describeInboundConnections",
          "es:describeInstanceTypeLimits",
          "es:describeOutboundConnections",
          "es:describePackages",
          "es:describeReservedInstanceOfferings",
          "es:describeReservedInstances",
          "es:describeVpcEndpoints",
          "es:getCompatibleVersions",
          "es:getPackageVersionHistory",
          "es:getUpgradeHistory",
          "es:getUpgradeStatus",
          "es:listDomainNames",
          "es:listDomainsForPackage",
          "es:listInstanceTypeDetails",
          "es:listPackagesForDomain",
          "es:listScheduledActions",
          "es:listTags",
          "es:listVersions",
          "es:listVpcEndpointAccess",
          "es:listVpcEndpoints",
          "es:listVpcEndpointsForDomain",
          "evidently:getExperiment",
          "evidently:getFeature",
          "evidently:getLaunch",
          "evidently:getProject",
          "evidently:getSegment",
          "evidently:listExperiments",
          "evidently:listFeatures",
          "evidently:listLaunches",
          "evidently:listProjects",
          "evidently:listSegments",
          "evidently:listSegmentReferences",
          "events:describeApiDestination",
          "events:describeArchive",
          "events:describeConnection",
          "events:describeEndpoint",
          "events:describeEventBus",
          "events:describeEventSource",
          "events:describePartnerEventSource",
          "events:describeReplay",
          "events:describeRule",
          "events:listArchives",
          "events:listApiDestinations",
          "events:listConnections",
          "events:listEndpoints",
          "events:listEventBuses",
          "events:listEventSources",
          "events:listPartnerEventSourceAccounts",
          "events:listPartnerEventSources",
          "events:listReplays",
          "events:listRuleNamesByTarget",
          "events:listRules",
          "events:listTargetsByRule",
          "events:testEventPattern",
          "firehose:describeDeliveryStream",
          "firehose:listDeliveryStreams",
          "fms:getAdminAccount",
          "fms:getComplianceDetail",
          "fms:getNotificationChannel",
          "fms:getPolicy",
          "fms:getProtectionStatus",
          "fms:listComplianceStatus",
          "fms:listMemberAccounts",
          "fms:listPolicies",
          "forecast:describeDataset",
          "forecast:describeDatasetGroup",
          "forecast:describeDatasetImportJob",
          "forecast:describeForecast",
          "forecast:describeForecastExportJob",
          "forecast:describePredictor",
          "forecast:getAccuracyMetrics",
          "forecast:listDatasetGroups",
          "forecast:listDatasetImportJobs",
          "forecast:listDatasets",
          "forecast:listForecastExportJobs",
          "forecast:listForecasts",
          "forecast:listPredictors",
          "fsx:describeBackups",
          "fsx:describeDataRepositoryAssociations",
          "fsx:describeDataRepositoryTasks",
          "fsx:describeFileCaches",
          "fsx:describeFileSystems",
          "fsx:describeSnapshots",
          "fsx:describeStorageVirtualMachines",
          "fsx:describeVolumes",
          "fsx:listTagsForResource",
          "gamelift:describeAlias",
          "gamelift:describeBuild",
          "gamelift:describeEC2InstanceLimits",
          "gamelift:describeFleetAttributes",
          "gamelift:describeFleetCapacity",
          "gamelift:describeFleetEvents",
          "gamelift:describeFleetLocationAttributes",
          "gamelift:describeFleetLocationCapacity",
          "gamelift:describeFleetLocationUtilization",
          "gamelift:describeFleetPortSettings",
          "gamelift:describeFleetUtilization",
          "gamelift:describeGameServer",
          "gamelift:describeGameServerGroup",
          "gamelift:describeGameSessionDetails",
          "gamelift:describeGameSessionPlacement",
          "gamelift:describeGameSessionQueues",
          "gamelift:describeGameSessions",
          "gamelift:describeInstances",
          "gamelift:describeMatchmaking",
          "gamelift:describeMatchmakingConfigurations",
          "gamelift:describeMatchmakingRuleSets",
          "gamelift:describePlayerSessions",
          "gamelift:describeRuntimeConfiguration",
          "gamelift:describeScalingPolicies",
          "gamelift:describeScript",
          "gamelift:listAliases",
          "gamelift:listBuilds",
          "gamelift:listFleets",
          "gamelift:listGameServerGroups",
          "gamelift:listGameServers",
          "gamelift:listScripts",
          "gamelift:resolveAlias",
          "glacier:describeJob",
          "glacier:describeVault",
          "glacier:getDataRetrievalPolicy",
          "glacier:getVaultAccessPolicy",
          "glacier:getVaultLock",
          "glacier:getVaultNotifications",
          "glacier:listJobs",
          "glacier:listTagsForVault",
          "glacier:listVaults",
          "globalaccelerator:describeAccelerator",
          "globalaccelerator:describeAcceleratorAttributes",
          "globalaccelerator:describeEndpointGroup",
          "globalaccelerator:describeListener",
          "globalaccelerator:listAccelerators",
          "globalaccelerator:listEndpointGroups",
          "globalaccelerator:listListeners",
          "glue:batchGetBlueprints",
          "glue:batchGetCrawlers",
          "glue:batchGetDevEndpoints",
          "glue:batchGetJobs",
          "glue:batchGetPartition",
          "glue:batchGetTriggers",
          "glue:batchGetWorkflows",
          "glue:checkSchemaVersionValidity",
          "glue:getBlueprint",
          "glue:getBlueprintRun",
          "glue:getBlueprintRuns",
          "glue:getCatalogImportStatus",
          "glue:getClassifier",
          "glue:getClassifiers",
          "glue:getColumnStatisticsForPartition",
          "glue:getColumnStatisticsForTable",
          "glue:getCrawler",
          "glue:getCrawlerMetrics",
          "glue:getCrawlers",
          "glue:getCustomEntityType",
          "glue:getDatabase",
          "glue:getDatabases",
          "glue:getDataflowGraph",
          "glue:getDataQualityResult",
          "glue:getDataQualityRuleRecommendationRun",
          "glue:getDataQualityRuleset",
          "glue:getDataQualityRulesetEvaluationRun",
          "glue:getDevEndpoint",
          "glue:getDevEndpoints",
          "glue:getJob",
          "glue:getJobRun",
          "glue:getJobRuns",
          "glue:getJobs",
          "glue:getMapping",
          "glue:getMLTaskRun",
          "glue:getMLTaskRuns",
          "glue:getMLTransform",
          "glue:getMLTransforms",
          "glue:getPartition",
          "glue:getPartitionIndexes",
          "glue:getPartitions",
          "glue:getRegistry",
          "glue:getResourcePolicies",
          "glue:getResourcePolicy",
          "glue:getSchema",
          "glue:getSchemaByDefinition",
          "glue:getSchemaVersion",
          "glue:getSchemaVersionsDiff",
          "glue:getSession",
          "glue:getStatement",
          "glue:getTable",
          "glue:getTables",
          "glue:getTableVersions",
          "glue:getTrigger",
          "glue:getTriggers",
          "glue:getUserDefinedFunction",
          "glue:getUserDefinedFunctions",
          "glue:getWorkflow",
          "glue:getWorkflowRun",
          "glue:getWorkflowRuns",
          "glue:listCrawlers",
          "glue:listCrawls",
          "glue:listDataQualityResults",
          "glue:listDataQualityRuleRecommendationRuns",
          "glue:listDataQualityRulesetEvaluationRuns",
          "glue:listDataQualityRulesets",
          "glue:listDevEndpoints",
          "glue:listMLTransforms",
          "glue:listRegistries",
          "glue:listSchemas",
          "glue:listSchemaVersions",
          "glue:listSessions",
          "glue:listStatements",
          "glue:querySchemaVersionMetadata",
          "grafana:describeWorkspace",
          "grafana:describeWorkspaceAuthentication",
          "grafana:listPermissions",
          "grafana:listVersions",
          "grafana:listWorkspaces",
          "greengrass:getConnectivityInfo",
          "greengrass:getCoreDefinition",
          "greengrass:getCoreDefinitionVersion",
          "greengrass:getDeploymentStatus",
          "greengrass:getDeviceDefinition",
          "greengrass:getDeviceDefinitionVersion",
          "greengrass:getFunctionDefinition",
          "greengrass:getFunctionDefinitionVersion",
          "greengrass:getGroup",
          "greengrass:getGroupCertificateAuthority",
          "greengrass:getGroupVersion",
          "greengrass:getLoggerDefinition",
          "greengrass:getLoggerDefinitionVersion",
          "greengrass:getResourceDefinitionVersion",
          "greengrass:getServiceRoleForAccount",
          "greengrass:getSubscriptionDefinition",
          "greengrass:getSubscriptionDefinitionVersion",
          "greengrass:listCoreDefinitions",
          "greengrass:listCoreDefinitionVersions",
          "greengrass:listDeployments",
          "greengrass:listDeviceDefinitions",
          "greengrass:listDeviceDefinitionVersions",
          "greengrass:listFunctionDefinitions",
          "greengrass:listFunctionDefinitionVersions",
          "greengrass:listGroups",
          "greengrass:listGroupVersions",
          "greengrass:listLoggerDefinitions",
          "greengrass:listLoggerDefinitionVersions",
          "greengrass:listResourceDefinitions",
          "greengrass:listResourceDefinitionVersions",
          "greengrass:listSubscriptionDefinitions",
          "greengrass:listSubscriptionDefinitionVersions",
          "guardduty:getDetector",
          "guardduty:getFindings",
          "guardduty:getFindingsStatistics",
          "guardduty:getInvitationsCount",
          "guardduty:getIPSet",
          "guardduty:getMasterAccount",
          "guardduty:getMembers",
          "guardduty:getThreatIntelSet",
          "guardduty:listDetectors",
          "guardduty:listFindings",
          "guardduty:listInvitations",
          "guardduty:listIPSets",
          "guardduty:listMembers",
          "guardduty:listThreatIntelSets",
          "health:describeAffectedAccountsForOrganization",
          "health:describeAffectedEntities",
          "health:describeAffectedEntitiesForOrganization",
          "health:describeEntityAggregates",
          "health:describeEntityAggregatesForOrganization",
          "health:describeEventAggregates",
          "health:describeEventDetails",
          "health:describeEventDetailsForOrganization",
          "health:describeEvents",
          "health:describeEventsForOrganization",
          "health:describeEventTypes",
          "health:describeHealthServiceStatusForOrganization",
          "iam:getAccessKeyLastUsed",
          "iam:getAccountAuthorizationDetails",
          "iam:getAccountPasswordPolicy",
          "iam:getAccountSummary",
          "iam:getContextKeysForCustomPolicy",
          "iam:getContextKeysForPrincipalPolicy",
          "iam:getCredentialReport",
          "iam:getGroup",
          "iam:getGroupPolicy",
          "iam:getInstanceProfile",
          "iam:getLoginProfile",
          "iam:getOpenIDConnectProvider",
          "iam:getPolicy",
          "iam:getPolicyVersion",
          "iam:getRole",
          "iam:getRolePolicy",
          "iam:getSAMLProvider",
          "iam:getServerCertificate",
          "iam:getServiceLinkedRoleDeletionStatus",
          "iam:getSSHPublicKey",
          "iam:getUser",
          "iam:getUserPolicy",
          "iam:listAccessKeys",
          "iam:listAccountAliases",
          "iam:listAttachedGroupPolicies",
          "iam:listAttachedRolePolicies",
          "iam:listAttachedUserPolicies",
          "iam:listEntitiesForPolicy",
          "iam:listGroupPolicies",
          "iam:listGroups",
          "iam:listGroupsForUser",
          "iam:listInstanceProfiles",
          "iam:listInstanceProfilesForRole",
          "iam:listMFADevices",
          "iam:listOpenIDConnectProviders",
          "iam:listPolicies",
          "iam:listPolicyVersions",
          "iam:listRolePolicies",
          "iam:listRoles",
          "iam:listSAMLProviders",
          "iam:listServerCertificates",
          "iam:listSigningCertificates",
          "iam:listSSHPublicKeys",
          "iam:listUserPolicies",
          "iam:listUsers",
          "iam:listVirtualMFADevices",
          "iam:simulateCustomPolicy",
          "iam:simulatePrincipalPolicy",
          "imagebuilder:getComponent",
          "imagebuilder:getComponentPolicy",
          "imagebuilder:getContainerRecipe",
          "imagebuilder:getDistributionConfiguration",
          "imagebuilder:getImage",
          "imagebuilder:getImagePipeline",
          "imagebuilder:getImagePolicy",
          "imagebuilder:getImageRecipe",
          "imagebuilder:getImageRecipePolicy",
          "imagebuilder:getInfrastructureConfiguration",
          "imagebuilder:getLifecycleExecution",
          "imagebuilder:getLifecyclePolicy",
          "imagebuilder:getWorkflow",
          "imagebuilder:getWorkflowExecution",
          "imagebuilder:getWorkflowStepExecution",
          "imagebuilder:listComponentBuildVersions",
          "imagebuilder:listComponents",
          "imagebuilder:listContainerRecipes",
          "imagebuilder:listDistributionConfigurations",
          "imagebuilder:listImageBuildVersions",
          "imagebuilder:listImagePipelineImages",
          "imagebuilder:listImagePipelines",
          "imagebuilder:listImageRecipes",
          "imagebuilder:listImages",
          "imagebuilder:listImageScanFindingAggregations",
          "imagebuilder:listInfrastructureConfigurations",
          "imagebuilder:listLifecycleExecutions",
          "imagebuilder:listLifecycleExecutionResources",
          "imagebuilder:listLifecyclePolicies",
          "imagebuilder:listWorkflowBuildVersions",
          "imagebuilder:listWorkflowExecutions",
          "imagebuilder:listWorkflows",
          "imagebuilder:listWorkflowStepExecutions",
          "imagebuilder:listTagsForResource",
          "inspector:describeAssessmentRuns",
          "inspector:describeAssessmentTargets",
          "inspector:describeAssessmentTemplates",
          "inspector:describeCrossAccountAccessRole",
          "inspector:describeResourceGroups",
          "inspector:describeRulesPackages",
          "inspector:getTelemetryMetadata",
          "inspector:listAssessmentRunAgents",
          "inspector:listAssessmentRuns",
          "inspector:listAssessmentTargets",
          "inspector:listAssessmentTemplates",
          "inspector:listEventSubscriptions",
          "inspector:listRulesPackages",
          "inspector:listTagsForResource",
          "inspector2:batchGetAccountStatus",
          "inspector2:batchGetFreeTrialInfo",
          "inspector2:describeOrganizationConfiguration",
          "inspector2:getDelegatedAdminAccount",
          "inspector2:getMember",
          "inspector2:getSbomExport",
          "inspector2:listCisScanConfigurations",
          "inspector2:listCisScanResultsAggregatedByChecks",
          "inspector2:listCisScanResultsAggregatedByTargetResource",
          "inspector2:listCisScans",
          "inspector2:listCoverage",
          "inspector2:listDelegatedAdminAccounts",
          "inspector2:listFilters",
          "inspector2:listFindings",
          "inspector2:listMembers",
          "inspector2:listUsageTotals",
          "inspector-scan:scanSbom",
          "internetmonitor:getMonitor",
          "internetmonitor:listMonitors",
          "internetmonitor:getHealthEvent",
          "internetmonitor:listHealthEvents",
          "iot:describeAuthorizer",
          "iot:describeCACertificate",
          "iot:describeCertificate",
          "iot:describeDefaultAuthorizer",
          "iot:describeDomainConfiguration",
          "iot:describeEndpoint",
          "iot:describeIndex",
          "iot:describeJobExecution",
          "iot:describeThing",
          "iot:describeThingGroup",
          "iot:describeTunnel",
          "iot:getEffectivePolicies",
          "iot:getIndexingConfiguration",
          "iot:getLoggingOptions",
          "iot:getPolicy",
          "iot:getPolicyVersion",
          "iot:getTopicRule",
          "iot:getV2LoggingOptions",
          "iot:listAttachedPolicies",
          "iot:listAuthorizers",
          "iot:listCACertificates",
          "iot:listCertificates",
          "iot:listCertificatesByCA",
          "iot:listDomainConfigurations",
          "iot:listJobExecutionsForJob",
          "iot:listJobExecutionsForThing",
          "iot:listJobs",
          "iot:listNamedShadowsForThing",
          "iot:listOutgoingCertificates",
          "iot:listPackages",
          "iot:listPackageVersions",
          "iot:listPolicies",
          "iot:listPolicyPrincipals",
          "iot:listPolicyVersions",
          "iot:listPrincipalPolicies",
          "iot:listPrincipalThings",
          "iot:listRoleAliases",
          "iot:listTargetsForPolicy",
          "iot:listThingGroups",
          "iot:listThingGroupsForThing",
          "iot:listThingPrincipals",
          "iot:listThingRegistrationTasks",
          "iot:listThings",
          "iot:listThingsInThingGroup",
          "iot:listThingTypes",
          "iot:listTopicRules",
          "iot:listTunnels",
          "iot:listV2LoggingLevels",
          "iotevents:describeDetector",
          "iotevents:describeDetectorModel",
          "iotevents:describeInput",
          "iotevents:describeLoggingOptions",
          "iotevents:listDetectorModels",
          "iotevents:listDetectorModelVersions",
          "iotevents:listDetectors",
          "iotevents:listInputs",
          "iotfleetwise:getCampaign",
          "iotfleetwise:getDecoderManifest",
          "iotfleetwise:getFleet",
          "iotfleetwise:getModelManifest",
          "iotfleetwise:getSignalCatalog",
          "iotfleetwise:getVehicle",
          "iotfleetwise:getVehicleStatus",
          "iotfleetwise:listCampaigns",
          "iotfleetwise:listDecoderManifests",
          "iotfleetwise:listDecoderManifestNetworkInterfaces",
          "iotfleetwise:listDecoderManifestSignals",
          "iotfleetwise:listFleets",
          "iotfleetwise:listFleetsForVehicle",
          "iotfleetwise:listModelManifests",
          "iotfleetwise:listModelManifestNodes",
          "iotfleetwise:listSignalCatalogs",
          "iotfleetwise:listSignalCatalogNodes",
          "iotfleetwise:listVehicles",
          "iotsitewise:describeAccessPolicy",
          "iotsitewise:describeAsset",
          "iotsitewise:describeAssetModel",
          "iotsitewise:describeAssetProperty",
          "iotsitewise:describeDashboard",
          "iotsitewise:describeGateway",
          "iotsitewise:describeGatewayCapabilityConfiguration",
          "iotsitewise:describeLoggingOptions",
          "iotsitewise:describePortal",
          "iotsitewise:describeProject",
          "iotsitewise:listAccessPolicies",
          "iotsitewise:listAssetModels",
          "iotsitewise:listAssets",
          "iotsitewise:listAssociatedAssets",
          "iotsitewise:listDashboards",
          "iotsitewise:listGateways",
          "iotsitewise:listPortals",
          "iotsitewise:listProjectAssets",
          "iotsitewise:listProjects",
          "iottwinmaker:getComponentType",
          "iottwinmaker:getEntity",
          "iottwinmaker:getPricingPlan",
          "iottwinmaker:getScene",
          "iottwinmaker:getWorkspace",
          "iottwinmaker:listComponentTypes",
          "iottwinmaker:listEntities",
          "iottwinmaker:listScenes",
          "iottwinmaker:getSyncJob",
          "iottwinmaker:listSyncJobs",
          "iottwinmaker:listSyncResources",
          "iottwinmaker:listWorkspaces",
          "iotwireless:getDestination",
          "iotwireless:getDeviceProfile",
          "iotwireless:getPartnerAccount",
          "iotwireless:getServiceEndpoint",
          "iotwireless:getServiceProfile",
          "iotwireless:getWirelessDevice",
          "iotwireless:getWirelessDeviceStatistics",
          "iotwireless:getWirelessGateway",
          "iotwireless:getWirelessGatewayCertificate",
          "iotwireless:getWirelessGatewayFirmwareInformation",
          "iotwireless:getWirelessGatewayStatistics",
          "iotwireless:getWirelessGatewayTask",
          "iotwireless:getWirelessGatewayTaskDefinition",
          "iotwireless:listDestinations",
          "iotwireless:listDeviceProfiles",
          "iotwireless:listPartnerAccounts",
          "iotwireless:listServiceProfiles",
          "iotwireless:listTagsForResource",
          "iotwireless:listWirelessDevices",
          "iotwireless:listWirelessGateways",
          "iotwireless:listWirelessGatewayTaskDefinitions",
          "ivs:getChannel",
          "ivs:getRecordingConfiguration",
          "ivs:getStream",
          "ivs:getStreamSession",
          "ivs:listChannels",
          "ivs:listPlaybackKeyPairs",
          "ivs:listRecordingConfigurations",
          "ivs:listStreamKeys",
          "ivs:listStreams",
          "ivs:listStreamSessions",
          "kafka:describeCluster",
          "kafka:describeClusterOperation",
          "kafka:describeClusterOperationV2",
          "kafka:describeClusterV2",
          "kafka:describeConfiguration",
          "kafka:describeConfigurationRevision",
          "kafka:describeReplicator",
          "kafka:describeVpcConnection",
          "kafka:getBootstrapBrokers",
          "kafka:getClusterPolicy",
          "kafka:listConfigurations",
          "kafka:listConfigurationRevisions",
          "kafka:listClientVpcConnections",
          "kafka:listClusterOperations",
          "kafka:listClusterOperationsV2",
          "kafka:listClusters",
          "kafka:listClustersV2",
          "kafka:listNodes",
          "kafka:listReplicators",
          "kafka:listScramSecrets",
          "kafka:listVpcConnections",
          "kafkaconnect:describeConnector",
          "kafkaconnect:describeCustomPlugin",
          "kafkaconnect:describeWorkerConfiguration",
          "kafkaconnect:listConnectors",
          "kafkaconnect:listCustomPlugins",
          "kafkaconnect:listWorkerConfigurations",
          "kendra:describeDataSource",
          "kendra:describeFaq",
          "kendra:describeIndex",
          "kendra:listDataSources",
          "kendra:listFaqs",
          "kendra:listIndices",
          "kinesis:describeStream",
          "kinesis:describeStreamConsumer",
          "kinesis:describeStreamSummary",
          "kinesis:listShards",
          "kinesis:listStreams",
          "kinesis:listStreamConsumers",
          "kinesis:listTagsForStream",
          "kinesisanalytics:describeApplication",
          "kinesisanalytics:describeApplicationSnapshot",
          "kinesisanalytics:listApplications",
          "kinesisanalytics:listApplicationSnapshots",
          "kinesisvideo:describeImageGenerationConfiguration",
          "kinesisvideo:describeNotificationConfiguration",
          "kinesisvideo:describeSignalingChannel",
          "kinesisvideo:describeStream",
          "kinesisvideo:getDataEndpoint",
          "kinesisvideo:getIceServerConfig",
          "kinesisvideo:getSignalingChannelEndpoint",
          "kinesisvideo:listSignalingChannels",
          "kinesisvideo:listStreams",
          "kms:describeKey",
          "kms:getKeyPolicy",
          "kms:getKeyRotationStatus",
          "kms:listAliases",
          "kms:listGrants",
          "kms:listKeyPolicies",
          "kms:listKeys",
          "kms:listResourceTags",
          "kms:listRetirableGrants",
          "lambda:getAccountSettings",
          "lambda:getAlias",
          "lambda:getCodeSigningConfig",
          "lambda:getEventSourceMapping",
          "lambda:getFunction",
          "lambda:getFunctionCodeSigningConfig",
          "lambda:getFunctionConcurrency",
          "lambda:getFunctionConfiguration",
          "lambda:getFunctionEventInvokeConfig",
          "lambda:getFunctionUrlConfig",
          "lambda:getLayerVersion",
          "lambda:getLayerVersionPolicy",
          "lambda:getPolicy",
          "lambda:getProvisionedConcurrencyConfig",
          "lambda:getRuntimeManagementConfig",
          "lambda:listAliases",
          "lambda:listCodeSigningConfigs",
          "lambda:listEventSourceMappings",
          "lambda:listFunctionEventInvokeConfigs",
          "lambda:listFunctions",
          "lambda:listFunctionsByCodeSigningConfig",
          "lambda:listFunctionUrlConfigs",
          "lambda:listLayers",
          "lambda:listLayerVersions",
          "lambda:listProvisionedConcurrencyConfigs",
          "lambda:listVersionsByFunction",
          "launchwizard:describeProvisionedApp",
          "launchwizard:describeProvisioningEvents",
          "launchwizard:listProvisionedApps",
          "lex:describeBot",
          "lex:describeBotAlias",
          "lex:describeBotLocale",
          "lex:describeBotRecommendation",
          "lex:describeBotVersion",
          "lex:describeCustomVocabularyMetadata",
          "lex:describeExport",
          "lex:describeImport",
          "lex:describeIntent",
          "lex:describeResourcePolicy",
          "lex:describeSlot",
          "lex:describeSlotType",
          "lex:getBot",
          "lex:getBotAlias",
          "lex:getBotAliases",
          "lex:getBotChannelAssociation",
          "lex:getBotChannelAssociations",
          "lex:getBots",
          "lex:getBotVersions",
          "lex:getBuiltinIntent",
          "lex:getBuiltinIntents",
          "lex:getBuiltinSlotTypes",
          "lex:getIntent",
          "lex:getIntents",
          "lex:getIntentVersions",
          "lex:getSlotType",
          "lex:getSlotTypes",
          "lex:getSlotTypeVersions",
          "lex:listBotAliases",
          "lex:listBotLocales",
          "lex:listBotRecommendations",
          "lex:listBots",
          "lex:listBotVersions",
          "lex:listExports",
          "lex:listImports",
          "lex:listIntents",
          "lex:listRecommendedIntents",
          "lex:listSlots",
          "lex:listSlotTypes",
          "license-manager:getLicenseConfiguration",
          "license-manager:getServiceSettings",
          "license-manager:listAssociationsForLicenseConfiguration",
          "license-manager:listFailuresForLicenseConfigurationOperations",
          "license-manager:listLicenseConfigurations",
          "license-manager:listLicenseSpecificationsForResource",
          "license-manager:listResourceInventory",
          "license-manager:listUsageForLicenseConfiguration",
          "lightsail:getActiveNames",
          "lightsail:getAlarms",
          "lightsail:getAutoSnapshots",
          "lightsail:getBlueprints",
          "lightsail:getBucketBundles",
          "lightsail:getBucketMetricData",
          "lightsail:getBuckets",
          "lightsail:getBundles",
          "lightsail:getCertificates",
          "lightsail:getContainerImages",
          "lightsail:getContainerServiceDeployments",
          "lightsail:getContainerServiceMetricData",
          "lightsail:getContainerServicePowers",
          "lightsail:getContainerServices",
          "lightsail:getDisk",
          "lightsail:getDisks",
          "lightsail:getDiskSnapshot",
          "lightsail:getDiskSnapshots",
          "lightsail:getDistributionBundles",
          "lightsail:getDistributionMetricData",
          "lightsail:getDistributions",
          "lightsail:getDomain",
          "lightsail:getDomains",
          "lightsail:getExportSnapshotRecords",
          "lightsail:getInstance",
          "lightsail:getInstanceMetricData",
          "lightsail:getInstancePortStates",
          "lightsail:getInstances",
          "lightsail:getInstanceSnapshot",
          "lightsail:getInstanceSnapshots",
          "lightsail:getInstanceState",
          "lightsail:getKeyPair",
          "lightsail:getKeyPairs",
          "lightsail:getLoadBalancer",
          "lightsail:getLoadBalancerMetricData",
          "lightsail:getLoadBalancers",
          "lightsail:getLoadBalancerTlsCertificates",
          "lightsail:getOperation",
          "lightsail:getOperations",
          "lightsail:getOperationsForResource",
          "lightsail:getRegions",
          "lightsail:getRelationalDatabase",
          "lightsail:getRelationalDatabaseMetricData",
          "lightsail:getRelationalDatabases",
          "lightsail:getRelationalDatabaseSnapshot",
          "lightsail:getRelationalDatabaseSnapshots",
          "lightsail:getStaticIp",
          "lightsail:getStaticIps",
          "lightsail:isVpcPeered",
          "logs:describeAccountPolicies",
          "logs:describeDeliveries",
          "logs:describeDeliveryDestinations",
          "logs:describeDeliverySources",
          "logs:describeDestinations",
          "logs:describeExportTasks",
          "logs:describeLogGroups",
          "logs:describeLogStreams",
          "logs:describeMetricFilters",
          "logs:describeQueries",
          "logs:describeQueryDefinitions",
          "logs:describeResourcePolicies",
          "logs:describeSubscriptionFilters",
          "logs:getDataProtectionPolicy",
          "logs:getDelivery",
          "logs:getDeliveryDestination",
          "logs:getDeliveryDestinationPolicy",
          "logs:getDeliverySource",
          "logs:getLogAnomalyDetector",
          "logs:getLogDelivery",
          "logs:getLogGroupFields",
          "logs:listAnomalies",
          "logs:listLogAnomalyDetectors",
          "logs:listLogDeliveries",
          "logs:testMetricFilter",
          "lookoutequipment:describeDataIngestionJob",
          "lookoutequipment:describeDataset",
          "lookoutequipment:describeInferenceScheduler",
          "lookoutequipment:describeModel",
          "lookoutequipment:listDataIngestionJobs",
          "lookoutequipment:listDatasets",
          "lookoutequipment:listInferenceExecutions",
          "lookoutequipment:listInferenceSchedulers",
          "lookoutequipment:listModels",
          "lookoutmetrics:describeAlert",
          "lookoutmetrics:describeAnomalyDetectionExecutions",
          "lookoutmetrics:describeAnomalyDetector",
          "lookoutmetrics:describeMetricSet",
          "lookoutmetrics:getAnomalyGroup",
          "lookoutmetrics:getDataQualityMetrics",
          "lookoutmetrics:getFeedback",
          "lookoutmetrics:getSampleData",
          "lookoutmetrics:listAlerts",
          "lookoutmetrics:listAnomalyDetectors",
          "lookoutmetrics:listAnomalyGroupSummaries",
          "lookoutmetrics:listAnomalyGroupTimeSeries",
          "lookoutmetrics:listMetricSets",
          "lookoutmetrics:listTagsForResource",
          "machinelearning:describeBatchPredictions",
          "machinelearning:describeDataSources",
          "machinelearning:describeEvaluations",
          "machinelearning:describeMLModels",
          "machinelearning:getBatchPrediction",
          "machinelearning:getDataSource",
          "machinelearning:getEvaluation",
          "machinelearning:getMLModel",
          "macie2:getClassificationExportConfiguration",
          "macie2:getCustomDataIdentifier",
          "macie2:getFindings",
          "macie2:getFindingStatistics",
          "macie2:listClassificationJobs",
          "macie2:listCustomDataIdentifiers",
          "macie2:listFindings",
          "managedblockchain:getMember",
          "managedblockchain:getNetwork",
          "managedblockchain:getNode",
          "managedblockchain:listMembers",
          "managedblockchain:listNetworks",
          "managedblockchain:listNodes",
          "mediaconnect:describeFlow",
          "mediaconnect:listEntitlements",
          "mediaconnect:listFlows",
          "mediaconvert:describeEndpoints",
          "mediaconvert:getJob",
          "mediaconvert:getJobTemplate",
          "mediaconvert:getPreset",
          "mediaconvert:getQueue",
          "mediaconvert:listJobs",
          "mediaconvert:listJobTemplates",
          "medialive:describeChannel",
          "medialive:describeInput",
          "medialive:describeInputDevice",
          "medialive:describeInputSecurityGroup",
          "medialive:describeMultiplex",
          "medialive:describeOffering",
          "medialive:describeReservation",
          "medialive:describeSchedule",
          "medialive:listChannels",
          "medialive:listInputDevices",
          "medialive:listInputs",
          "medialive:listInputSecurityGroups",
          "medialive:listMultiplexes",
          "medialive:listOfferings",
          "medialive:listReservations",
          "mediapackage:describeChannel",
          "mediapackage:describeOriginEndpoint",
          "mediapackage:listChannels",
          "mediapackage:listOriginEndpoints",
          "mediastore:describeContainer",
          "mediastore:getContainerPolicy",
          "mediastore:getCorsPolicy",
          "mediastore:listContainers",
          "mediatailor:getPlaybackConfiguration",
          "mediatailor:listPlaybackConfigurations",
          "medical-imaging:getDatastore",
          "medical-imaging:listDatastores",
          "mgn:describeJobLogItems",
          "mgn:describeJobs",
          "mgn:describeLaunchConfigurationTemplates",
          "mgn:describeReplicationConfigurationTemplates",
          "mgn:describeSourceServers",
          "mgn:describeVcenterClients",
          "mgn:getLaunchConfiguration",
          "mgn:getReplicationConfiguration",
          "mgn:listApplications",
          "mgn:listSourceServerActions",
          "mgn:listTemplateActions",
          "mgn:listWaves",
          "mobiletargeting:getAdmChannel",
          "mobiletargeting:getApnsChannel",
          "mobiletargeting:getApnsSandboxChannel",
          "mobiletargeting:getApnsVoipChannel",
          "mobiletargeting:getApnsVoipSandboxChannel",
          "mobiletargeting:getApp",
          "mobiletargeting:getApplicationSettings",
          "mobiletargeting:getApps",
          "mobiletargeting:getBaiduChannel",
          "mobiletargeting:getCampaign",
          "mobiletargeting:getCampaignActivities",
          "mobiletargeting:getCampaigns",
          "mobiletargeting:getCampaignVersion",
          "mobiletargeting:getCampaignVersions",
          "mobiletargeting:getEmailChannel",
          "mobiletargeting:getEndpoint",
          "mobiletargeting:getEventStream",
          "mobiletargeting:getExportJob",
          "mobiletargeting:getExportJobs",
          "mobiletargeting:getGcmChannel",
          "mobiletargeting:getImportJob",
          "mobiletargeting:getImportJobs",
          "mobiletargeting:getJourney",
          "mobiletargeting:getJourneyExecutionMetrics",
          "mobiletargeting:getJourneyExecutionActivityMetrics",
          "mobiletargeting:getJourneyRunExecutionActivityMetrics",
          "mobiletargeting:getJourneyRunExecutionMetrics",
          "mobiletargeting:getJourneyRuns",
          "mobiletargeting:getSegment",
          "mobiletargeting:getSegmentImportJobs",
          "mobiletargeting:getSegments",
          "mobiletargeting:getSegmentVersion",
          "mobiletargeting:getSegmentVersions",
          "mobiletargeting:getSmsChannel",
          "mobiletargeting:listJourneys",
          "mq:describeBroker",
          "mq:describeConfiguration",
          "mq:describeConfigurationRevision",
          "mq:describeUser",
          "mq:listBrokers",
          "mq:listConfigurationRevisions",
          "mq:listConfigurations",
          "mq:listUsers",
          "m2:getApplication",
          "m2:getApplicationVersion",
          "m2:getBatchJobExecution",
          "m2:getDataSetDetails",
          "m2:getDataSetImportTask",
          "m2:getDeployment",
          "m2:getEnvironment",
          "m2:listApplications",
          "m2:listApplicationVersions",
          "m2:listBatchJobDefinitions",
          "m2:listBatchJobExecutions",
          "m2:listDataSetImportHistory",
          "m2:listDataSets",
          "m2:listDeployments",
          "m2:listEngineVersions",
          "m2:listEnvironments",
          "network-firewall:describeFirewall",
          "network-firewall:describeFirewallPolicy",
          "network-firewall:describeLoggingConfiguration",
          "network-firewall:describeRuleGroup",
          "network-firewall:describeTlsInspectionConfiguration",
          "network-firewall:listFirewallPolicies",
          "network-firewall:listFirewalls",
          "network-firewall:listRuleGroups",
          "network-firewall:listTlsInspectionConfigurations",
          "networkmanager:describeGlobalNetworks",
          "networkmanager:getConnectAttachment",
          "networkmanager:getConnections",
          "networkmanager:getConnectPeer",
          "networkmanager:getConnectPeerAssociations",
          "networkmanager:getCoreNetwork",
          "networkmanager:getCoreNetworkChangeEvents",
          "networkmanager:getCoreNetworkChangeSet",
          "networkmanager:getCoreNetworkPolicy",
          "networkmanager:getCustomerGatewayAssociations",
          "networkmanager:getDevices",
          "networkmanager:getLinkAssociations",
          "networkmanager:getLinks",
          "networkmanager:getNetworkResourceCounts",
          "networkmanager:getNetworkResourceRelationships",
          "networkmanager:getNetworkResources",
          "networkmanager:getNetworkRoutes",
          "networkmanager:getNetworkTelemetry",
          "networkmanager:getResourcePolicy",
          "networkmanager:getRouteAnalysis",
          "networkmanager:getSites",
          "networkmanager:getSiteToSiteVpnAttachment",
          "networkmanager:getTransitGatewayConnectPeerAssociations",
          "networkmanager:getTransitGatewayPeering",
          "networkmanager:getTransitGatewayRegistrations",
          "networkmanager:getTransitGatewayRouteTableAttachment",
          "networkmanager:getVpcAttachment",
          "networkmanager:listAttachments",
          "networkmanager:listConnectPeers",
          "networkmanager:listCoreNetworkPolicyVersions",
          "networkmanager:listCoreNetworks",
          "networkmanager:listOrganizationServiceAccessStatus",
          "networkmanager:listPeerings",
          "networkmanager:listTagsForResource",
          "networkmonitor:getMonitor",
          "networkmonitor:getProbe",
          "networkmonitor:listMonitors",
          "nimble:getEula",
          "nimble:getLaunchProfile",
          "nimble:getLaunchProfileDetails",
          "nimble:getLaunchProfileInitialization",
          "nimble:getLaunchProfileMember",
          "nimble:getStreamingImage",
          "nimble:getStreamingSession",
          "nimble:getStreamingSessionStream",
          "nimble:getStudio",
          "nimble:getStudioComponent",
          "nimble:listEulaAcceptances",
          "nimble:listEulas",
          "nimble:listLaunchProfiles",
          "nimble:listStreamingImages",
          "nimble:listStreamingSessions",
          "nimble:listStudioComponents",
          "nimble:listStudios",
          "notifications:getEventRule",
          "notifications:getNotificationConfiguration",
          "notifications:getNotificationEvent",
          "notifications:listChannels",
          "notifications:listEventRules",
          "notifications:listNotificationConfigurations",
          "notifications:listNotificationEvents",
          "notifications:listNotificationHubs",
          "notifications-contacts:getEmailContact",
          "notifications-contacts:listEmailContacts",
          "oam:getLink",
          "oam:getSink",
          "oam:getSinkPolicy",
          "oam:listAttachedLinks",
          "oam:listLinks",
          "oam:listSinks",
          "omics:getAnnotationImportJob",
          "omics:getAnnotationStore",
          "omics:getReadSetImportJob",
          "omics:getReadSetMetadata",
          "omics:getReference",
          "omics:getReferenceImportJob",
          "omics:getReferenceMetadata",
          "omics:getReferenceStore",
          "omics:getRun",
          "omics:getRunGroup",
          "omics:getSequenceStore",
          "omics:getVariantImportJob",
          "omics:getVariantStore",
          "omics:getWorkflow",
          "omics:listAnnotationImportJobs",
          "omics:listAnnotationStores",
          "omics:listMultipartReadSetUploads",
          "omics:listReadSetImportJobs",
          "omics:listReadSets",
          "omics:listReadSetUploadParts",
          "omics:listReferenceImportJobs",
          "omics:listReferenceStores",
          "omics:listReferences",
          "omics:listRunGroups",
          "omics:listRunTasks",
          "omics:listRuns",
          "omics:listSequenceStores",
          "omics:listVariantImportJobs",
          "omics:listVariantStores",
          "omics:listWorkflows",
          "opsworks-cm:describeAccountAttributes",
          "opsworks-cm:describeBackups",
          "opsworks-cm:describeEvents",
          "opsworks-cm:describeNodeAssociationStatus",
          "opsworks-cm:describeServers",
          "opsworks:describeAgentVersions",
          "opsworks:describeApps",
          "opsworks:describeCommands",
          "opsworks:describeDeployments",
          "opsworks:describeEcsClusters",
          "opsworks:describeElasticIps",
          "opsworks:describeElasticLoadBalancers",
          "opsworks:describeInstances",
          "opsworks:describeLayers",
          "opsworks:describeLoadBasedAutoScaling",
          "opsworks:describeMyUserProfile",
          "opsworks:describePermissions",
          "opsworks:describeRaidArrays",
          "opsworks:describeRdsDbInstances",
          "opsworks:describeServiceErrors",
          "opsworks:describeStackProvisioningParameters",
          "opsworks:describeStacks",
          "opsworks:describeStackSummary",
          "opsworks:describeTimeBasedAutoScaling",
          "opsworks:describeUserProfiles",
          "opsworks:describeVolumes",
          "opsworks:getHostnameSuggestion",
          "organizations:listAccounts",
          "organizations:listTagsForResource",
          "outposts:getCatalogItem",
          "outposts:getConnection",
          "outposts:getOrder",
          "outposts:getOutpost",
          "outposts:getOutpostInstanceTypes",
          "outposts:getSite",
          "outposts:listAssets",
          "outposts:listCatalogItems",
          "outposts:listOrders",
          "outposts:listOutposts",
          "outposts:listSites",
          "personalize:describeAlgorithm",
          "personalize:describeBatchInferenceJob",
          "personalize:describeBatchSegmentJob",
          "personalize:describeCampaign",
          "personalize:describeDataset",
          "personalize:describeDatasetExportJob",
          "personalize:describeDatasetGroup",
          "personalize:describeDatasetImportJob",
          "personalize:describeEventTracker",
          "personalize:describeFeatureTransformation",
          "personalize:describeFilter",
          "personalize:describeRecipe",
          "personalize:describeRecommender",
          "personalize:describeSchema",
          "personalize:describeSolution",
          "personalize:describeSolutionVersion",
          "personalize:getPersonalizedRanking",
          "personalize:getRecommendations",
          "personalize:getSolutionMetrics",
          "personalize:listBatchInferenceJobs",
          "personalize:listBatchSegmentJobs",
          "personalize:listCampaigns",
          "personalize:listDatasetExportJobs",
          "personalize:listDatasetGroups",
          "personalize:listDatasetImportJobs",
          "personalize:listDatasets",
          "personalize:listEventTrackers",
          "personalize:listRecipes",
          "personalize:listRecommenders",
          "personalize:listSchemas",
          "personalize:listSolutions",
          "personalize:listSolutionVersions",
          "pipes:describePipe",
          "pipes:listPipes",
          "pipes:listTagsForResource",
          "polly:describeVoices",
          "polly:getLexicon",
          "polly:listLexicons",
          "pricing:describeServices",
          "pricing:getAttributeValues",
          "pricing:getProducts",
          "private-networks:getDeviceIdentifier",
          "private-networks:getNetwork",
          "private-networks:getNetworkResource",
          "private-networks:listDeviceIdentifiers",
          "private-networks:listNetworks",
          "private-networks:listNetworkResources",
          "qbusiness:getApplication",
          "qbusiness:getDataSource",
          "qbusiness:getIndex",
          "qbusiness:getRetriever",
          "qbusiness:getWebExperience",
          "qbusiness:listApplications",
          "qbusiness:listDataSources",
          "qbusiness:listDataSourceSyncJobs",
          "qbusiness:listIndices",
          "qbusiness:listRetrievers",
          "qbusiness:listWebExperiences",
          "quicksight:describeAccountCustomization",
          "quicksight:describeAccountSettings",
          "quicksight:describeAccountSubscription",
          "quicksight:describeAnalysis",
          "quicksight:describeAnalysisPermissions",
          "quicksight:describeDashboard",
          "quicksight:describeDashboardPermissions",
          "quicksight:describeDataSet",
          "quicksight:describeDataSetPermissions",
          "quicksight:describeDataSetRefreshProperties",
          "quicksight:describeDataSource",
          "quicksight:describeDataSourcePermissions",
          "quicksight:describeFolder",
          "quicksight:describeFolderPermissions",
          "quicksight:describeFolderResolvedPermissions",
          "quicksight:describeGroup",
          "quicksight:describeGroupMembership",
          "quicksight:describeIAMPolicyAssignment",
          "quicksight:describeIngestion",
          "quicksight:describeIpRestriction",
          "quicksight:describeNamespace",
          "quicksight:describeRefreshSchedule",
          "quicksight:describeTemplate",
          "quicksight:describeTemplateAlias",
          "quicksight:describeTemplatePermissions",
          "quicksight:describeTheme",
          "quicksight:describeThemeAlias",
          "quicksight:describeThemePermissions",
          "quicksight:describeTopic",
          "quicksight:describeTopicPermissions",
          "quicksight:describeTopicRefresh",
          "quicksight:describeTopicRefreshSchedule",
          "quicksight:describeUser",
          "quicksight:describeVPCConnection",
          "quicksight:listAnalyses",
          "quicksight:listDashboards",
          "quicksight:listDashboardVersions",
          "quicksight:listDataSets",
          "quicksight:listDataSources",
          "quicksight:listFolderMembers",
          "quicksight:listFolders",
          "quicksight:listGroupMemberships",
          "quicksight:listGroups",
          "quicksight:listIAMPolicyAssignments",
          "quicksight:listIAMPolicyAssignmentsForUser",
          "quicksight:listIngestions",
          "quicksight:listNamespaces",
          "quicksight:listRefreshSchedules",
          "quicksight:listTemplateAliases",
          "quicksight:listTemplates",
          "quicksight:listTemplateVersions",
          "quicksight:listThemeAliases",
          "quicksight:listThemes",
          "quicksight:listThemeVersions",
          "quicksight:listTopicRefreshSchedules",
          "quicksight:listTopics",
          "quicksight:listUserGroups",
          "quicksight:listUsers",
          "quicksight:listVPCConnections",
          "quicksight:searchAnalyses",
          "quicksight:searchDashboards",
          "quicksight:searchDataSets",
          "quicksight:searchDataSources",
          "quicksight:searchFolders",
          "quicksight:searchGroups",
          "ram:getPermission",
          "ram:getResourceShareAssociations",
          "ram:getResourceShareInvitations",
          "ram:getResourceShares",
          "ram:listPendingInvitationResources",
          "ram:listPrincipals",
          "ram:listResources",
          "ram:listResourceSharePermissions",
          "rbin:getRule",
          "rbin:listRules",
          "rds:describeAccountAttributes",
          "rds:describeBlueGreenDeployments",
          "rds:describeCertificates",
          "rds:describeDBClusterEndpoints",
          "rds:describeDBClusterParameterGroups",
          "rds:describeDBClusterParameters",
          "rds:describeDBClusters",
          "rds:describeDBClusterSnapshots",
          "rds:describeDBEngineVersions",
          "rds:describeDBInstanceAutomatedBackups",
          "rds:describeDBInstances",
          "rds:describeDBLogFiles",
          "rds:describeDBParameterGroups",
          "rds:describeDBParameters",
          "rds:describeDBSecurityGroups",
          "rds:describeDBSnapshotAttributes",
          "rds:describeDBSnapshots",
          "rds:describeDBSubnetGroups",
          "rds:describeEngineDefaultClusterParameters",
          "rds:describeEngineDefaultParameters",
          "rds:describeEventCategories",
          "rds:describeEvents",
          "rds:describeEventSubscriptions",
          "rds:describeExportTasks",
          "rds:describeGlobalClusters",
          "rds:describeIntegrations",
          "rds:describeOptionGroupOptions",
          "rds:describeOptionGroups",
          "rds:describeOrderableDBInstanceOptions",
          "rds:describePendingMaintenanceActions",
          "rds:describeReservedDBInstances",
          "rds:describeReservedDBInstancesOfferings",
          "rds:describeSourceRegions",
          "rds:describeValidDBInstanceModifications",
          "rds:listTagsForResource",
          "redshift-data:describeStatement",
          "redshift-data:listStatements",
          "redshift:describeClusterParameterGroups",
          "redshift:describeClusterParameters",
          "redshift:describeClusters",
          "redshift:describeClusterSecurityGroups",
          "redshift:describeClusterSnapshots",
          "redshift:describeClusterSubnetGroups",
          "redshift:describeClusterVersions",
          "redshift:describeDataShares",
          "redshift:describeDataSharesForConsumer",
          "redshift:describeDataSharesForProducer",
          "redshift:describeDefaultClusterParameters",
          "redshift:describeEventCategories",
          "redshift:describeEvents",
          "redshift:describeEventSubscriptions",
          "redshift:describeHsmClientCertificates",
          "redshift:describeHsmConfigurations",
          "redshift:describeLoggingStatus",
          "redshift:describeOrderableClusterOptions",
          "redshift:describeReservedNodeOfferings",
          "redshift:describeReservedNodes",
          "redshift:describeResize",
          "redshift:describeSnapshotCopyGrants",
          "redshift:describeStorage",
          "redshift:describeTableRestoreStatus",
          "redshift:describeTags",
          "redshift-serverless:getEndpointAccess",
          "redshift-serverless:getNamespace",
          "redshift-serverless:getRecoveryPoint",
          "redshift-serverless:getSnapshot",
          "redshift-serverless:getTableRestoreStatus",
          "redshift-serverless:getUsageLimit",
          "redshift-serverless:getWorkgroup",
          "redshift-serverless:listEndpointAccess",
          "redshift-serverless:listNamespaces",
          "redshift-serverless:listRecoveryPoints",
          "redshift-serverless:listSnapshots",
          "redshift-serverless:listTableRestoreStatus",
          "redshift-serverless:listUsageLimits",
          "redshift-serverless:listWorkgroups",
          "rekognition:listCollections",
          "rekognition:listFaces",
          "resource-explorer-2:getAccountLevelServiceConfiguration",
          "resource-explorer-2:getIndex",
          "resource-explorer-2:getView",
          "resource-explorer-2:listIndexes",
          "resource-explorer-2:listViews",
          "resource-explorer-2:search",
          "resource-groups:getGroup",
          "resource-groups:getGroupQuery",
          "resource-groups:getTags",
          "resource-groups:listGroupResources",
          "resource-groups:listGroups",
          "resource-groups:searchResources",
          "robomaker:batchDescribeSimulationJob",
          "robomaker:describeDeploymentJob",
          "robomaker:describeFleet",
          "robomaker:describeRobot",
          "robomaker:describeRobotApplication",
          "robomaker:describeSimulationApplication",
          "robomaker:describeSimulationJob",
          "robomaker:listDeploymentJobs",
          "robomaker:listFleets",
          "robomaker:listRobotApplications",
          "robomaker:listRobots",
          "robomaker:listSimulationApplications",
          "robomaker:listSimulationJobs",
          "route53-recovery-cluster:getRoutingControlState",
          "route53-recovery-cluster:listRoutingControls",
          "route53-recovery-control-config:describeControlPanel",
          "route53-recovery-control-config:describeRoutingControl",
          "route53-recovery-control-config:describeSafetyRule",
          "route53-recovery-control-config:listControlPanels",
          "route53-recovery-control-config:listRoutingControls",
          "route53-recovery-control-config:listSafetyRules",
          "route53-recovery-readiness:getCell",
          "route53-recovery-readiness:getCellReadinessSummary",
          "route53-recovery-readiness:getReadinessCheck",
          "route53-recovery-readiness:getReadinessCheckResourceStatus",
          "route53-recovery-readiness:getReadinessCheckStatus",
          "route53-recovery-readiness:getRecoveryGroup",
          "route53-recovery-readiness:getRecoveryGroupReadinessSummary",
          "route53-recovery-readiness:listCells",
          "route53-recovery-readiness:listReadinessChecks",
          "route53-recovery-readiness:listRecoveryGroups",
          "route53-recovery-readiness:listResourceSets",
          "route53:getAccountLimit",
          "route53:getChange",
          "route53:getCheckerIpRanges",
          "route53:getDNSSEC",
          "route53:getGeoLocation",
          "route53:getHealthCheck",
          "route53:getHealthCheckCount",
          "route53:getHealthCheckLastFailureReason",
          "route53:getHealthCheckStatus",
          "route53:getHostedZone",
          "route53:getHostedZoneCount",
          "route53:getHostedZoneLimit",
          "route53:getQueryLoggingConfig",
          "route53:getReusableDelegationSet",
          "route53:getTrafficPolicy",
          "route53:getTrafficPolicyInstance",
          "route53:getTrafficPolicyInstanceCount",
          "route53:listCidrBlocks",
          "route53:listCidrCollections",
          "route53:listCidrLocations",
          "route53:listGeoLocations",
          "route53:listHealthChecks",
          "route53:listHostedZones",
          "route53:listHostedZonesByName",
          "route53:listHostedZonesByVpc",
          "route53:listQueryLoggingConfigs",
          "route53:listResourceRecordSets",
          "route53:listReusableDelegationSets",
          "route53:listTrafficPolicies",
          "route53:listTrafficPolicyInstances",
          "route53:listTrafficPolicyInstancesByHostedZone",
          "route53:listTrafficPolicyInstancesByPolicy",
          "route53:listTrafficPolicyVersions",
          "route53:listVPCAssociationAuthorizations",
          "route53domains:checkDomainAvailability",
          "route53domains:getContactReachabilityStatus",
          "route53domains:getDomainDetail",
          "route53domains:getOperationDetail",
          "route53domains:listDomains",
          "route53domains:listOperations",
          "route53domains:listPrices",
          "route53domains:listTagsForDomain",
          "route53domains:viewBilling",
          "route53resolver:getFirewallConfig",
          "route53resolver:getFirewallDomainList",
          "route53resolver:getFirewallRuleGroup",
          "route53resolver:getFirewallRuleGroupAssociation",
          "route53resolver:getFirewallRuleGroupPolicy",
          "route53resolver:getOutpostResolver",
          "route53resolver:getResolverDnssecConfig",
          "route53resolver:getResolverQueryLogConfig",
          "route53resolver:getResolverQueryLogConfigAssociation",
          "route53resolver:getResolverQueryLogConfigPolicy",
          "route53resolver:getResolverRule",
          "route53resolver:getResolverRuleAssociation",
          "route53resolver:getResolverRulePolicy",
          "route53resolver:listFirewallConfigs",
          "route53resolver:listFirewallDomainLists",
          "route53resolver:listFirewallDomains",
          "route53resolver:listFirewallRuleGroupAssociations",
          "route53resolver:listFirewallRuleGroups",
          "route53resolver:listFirewallRules",
          "route53resolver:listOutpostResolvers",
          "route53resolver:listResolverConfigs",
          "route53resolver:listResolverDnssecConfigs",
          "route53resolver:listResolverEndpointIpAddresses",
          "route53resolver:listResolverEndpoints",
          "route53resolver:listResolverQueryLogConfigAssociations",
          "route53resolver:listResolverQueryLogConfigs",
          "route53resolver:listResolverRuleAssociations",
          "route53resolver:listResolverRules",
          "route53resolver:listTagsForResource",
          "rum:batchGetRumMetricDefinitions",
          "rum:getAppMonitor",
          "rum:listAppMonitors",
          "rum:listRumMetricsDestinations",
          "s3:describeJob",
          "s3:describeMultiRegionAccessPointOperation",
          "s3:getAccelerateConfiguration",
          "s3:getAccessPoint",
          "s3:getAccessPointConfigurationForObjectLambda",
          "s3:getAccessPointForObjectLambda",
          "s3:getAccessPointPolicy",
          "s3:getAccessPointPolicyForObjectLambda",
          "s3:getAccessPointPolicyStatus",
          "s3:getAccessPointPolicyStatusForObjectLambda",
          "s3:getAccountPublicAccessBlock",
          "s3:getAnalyticsConfiguration",
          "s3:getBucketAcl",
          "s3:getBucketCORS",
          "s3:getBucketLocation",
          "s3:getBucketLogging",
          "s3:getBucketNotification",
          "s3:getBucketObjectLockConfiguration",
          "s3:getBucketOwnershipControls",
          "s3:getBucketPolicy",
          "s3:getBucketPolicyStatus",
          "s3:getBucketPublicAccessBlock",
          "s3:getBucketRequestPayment",
          "s3:getBucketVersioning",
          "s3:getBucketWebsite",
          "s3:getEncryptionConfiguration",
          "s3:getIntelligentTieringConfiguration",
          "s3:getInventoryConfiguration",
          "s3:getLifecycleConfiguration",
          "s3:getMetricsConfiguration",
          "s3:getMultiRegionAccessPoint",
          "s3:getMultiRegionAccessPointPolicy",
          "s3:getMultiRegionAccessPointPolicyStatus",
          "s3:getMultiRegionAccessPointRoutes",
          "s3:getObjectLegalHold",
          "s3:getObjectRetention",
          "s3:getReplicationConfiguration",
          "s3:getStorageLensConfiguration",
          "s3:listAccessPoints",
          "s3:listAccessPointsForObjectLambda",
          "s3:listAllMyBuckets",
          "s3:listBucket",
          "s3:listBucketMultipartUploads",
          "s3:listBucketVersions",
          "s3:listJobs",
          "s3:listMultipartUploadParts",
          "s3:listMultiRegionAccessPoints",
          "s3:listStorageLensConfigurations",
          "s3express:getBucketPolicy",
          "s3express:listAllMyDirectoryBuckets",
          "sagemaker:describeAction",
          "sagemaker:describeAlgorithm",
          "sagemaker:describeApp",
          "sagemaker:describeAppImageConfig",
          "sagemaker:describeArtifact",
          "sagemaker:describeAutoMLJob",
          "sagemaker:describeCluster",
          "sagemaker:describeClusterNode",
          "sagemaker:describeCodeRepository",
          "sagemaker:describeCompilationJob",
          "sagemaker:describeContext",
          "sagemaker:describeDataQualityJobDefinition",
          "sagemaker:describeDevice",
          "sagemaker:describeDeviceFleet",
          "sagemaker:describeDomain",
          "sagemaker:describeEdgeDeploymentPlan",
          "sagemaker:describeEdgePackagingJob",
          "sagemaker:describeEndpoint",
          "sagemaker:describeEndpointConfig",
          "sagemaker:describeExperiment",
          "sagemaker:describeFeatureGroup",
          "sagemaker:describeFeatureMetadata",
          "sagemaker:describeFlowDefinition",
          "sagemaker:describeHub",
          "sagemaker:describeHubContent",
          "sagemaker:describeHumanTaskUi",
          "sagemaker:describeHyperParameterTuningJob",
          "sagemaker:describeImage",
          "sagemaker:describeImageVersion",
          "sagemaker:describeInferenceComponent",
          "sagemaker:describeInferenceExperiment",
          "sagemaker:describeInferenceRecommendationsJob",
          "sagemaker:describeLabelingJob",
          "sagemaker:describeModel",
          "sagemaker:describeModelBiasJobDefinition",
          "sagemaker:describeModelCard",
          "sagemaker:describeModelCardExportJob",
          "sagemaker:describeModelExplainabilityJobDefinition",
          "sagemaker:describeModelPackage",
          "sagemaker:describeModelPackageGroup",
          "sagemaker:describeModelQualityJobDefinition",
          "sagemaker:describeMonitoringSchedule",
          "sagemaker:describeNotebookInstance",
          "sagemaker:describeNotebookInstanceLifecycleConfig",
          "sagemaker:describePipeline",
          "sagemaker:describePipelineDefinitionForExecution",
          "sagemaker:describePipelineExecution",
          "sagemaker:describeProcessingJob",
          "sagemaker:describeProject",
          "sagemaker:describeSpace",
          "sagemaker:describeStudioLifecycleConfig",
          "sagemaker:describeSubscribedWorkteam",
          "sagemaker:describeTrainingJob",
          "sagemaker:describeTransformJob",
          "sagemaker:describeTrial",
          "sagemaker:describeTrialComponent",
          "sagemaker:describeUserProfile",
          "sagemaker:describeWorkforce",
          "sagemaker:describeWorkteam",
          "sagemaker:getDeviceFleetReport",
          "sagemaker:getModelPackageGroupPolicy",
          "sagemaker:getSagemakerServicecatalogPortfolioStatus",
          "sagemaker:listActions",
          "sagemaker:listAlgorithms",
          "sagemaker:listAliases",
          "sagemaker:listAppImageConfigs",
          "sagemaker:listApps",
          "sagemaker:listArtifacts",
          "sagemaker:listAssociations",
          "sagemaker:listAutoMLJobs",
          "sagemaker:listCandidatesForAutoMLJob",
          "sagemaker:listClusterNodes",
          "sagemaker:listClusters",
          "sagemaker:listCodeRepositories",
          "sagemaker:listCompilationJobs",
          "sagemaker:listContexts",
          "sagemaker:listDataQualityJobDefinitions",
          "sagemaker:listDeviceFleets",
          "sagemaker:listDevices",
          "sagemaker:listDomains",
          "sagemaker:listEdgeDeploymentPlans",
          "sagemaker:listEdgePackagingJobs",
          "sagemaker:listEndpointConfigs",
          "sagemaker:listEndpoints",
          "sagemaker:listExperiments",
          "sagemaker:listFeatureGroups",
          "sagemaker:listFlowDefinitions",
          "sagemaker:listHubContents",
          "sagemaker:listHubContentVersions",
          "sagemaker:listHubs",
          "sagemaker:listHumanTaskUis",
          "sagemaker:listHyperParameterTuningJobs",
          "sagemaker:listImages",
          "sagemaker:listImageVersions",
          "sagemaker:listInferenceComponents",
          "sagemaker:listInferenceExperiments",
          "sagemaker:listInferenceRecommendationsJobs",
          "sagemaker:listInferenceRecommendationsJobSteps",
          "sagemaker:listLabelingJobs",
          "sagemaker:listLabelingJobsForWorkteam",
          "sagemaker:listLineageGroups",
          "sagemaker:listModelBiasJobDefinitions",
          "sagemaker:listModelCardExportJobs",
          "sagemaker:listModelCards",
          "sagemaker:listModelCardVersions",
          "sagemaker:listModelExplainabilityJobDefinitions",
          "sagemaker:listModelMetadata",
          "sagemaker:listModelPackageGroups",
          "sagemaker:listModelPackages",
          "sagemaker:listModelQualityJobDefinitions",
          "sagemaker:listModels",
          "sagemaker:listMonitoringAlertHistory",
          "sagemaker:listMonitoringAlerts",
          "sagemaker:listMonitoringExecutions",
          "sagemaker:listMonitoringSchedules",
          "sagemaker:listNotebookInstanceLifecycleConfigs",
          "sagemaker:listNotebookInstances",
          "sagemaker:listPipelineExecutions",
          "sagemaker:listPipelineExecutionSteps",
          "sagemaker:listPipelineParametersForExecution",
          "sagemaker:listPipelines",
          "sagemaker:listProcessingJobs",
          "sagemaker:listProjects",
          "sagemaker:listSpaces",
          "sagemaker:listStageDevices",
          "sagemaker:listStudioLifecycleConfigs",
          "sagemaker:listSubscribedWorkteams",
          "sagemaker:listTags",
          "sagemaker:listTrainingJobs",
          "sagemaker:listTrainingJobsForHyperParameterTuningJob",
          "sagemaker:listTransformJobs",
          "sagemaker:listTrialComponents",
          "sagemaker:listTrials",
          "sagemaker:listUserProfiles",
          "sagemaker:listWorkforces",
          "sagemaker:listWorkteams",
          "savingsplans:describeSavingsPlans",
          "scheduler:getSchedule",
          "scheduler:getScheduleGroup",
          "scheduler:listScheduleGroups",
          "scheduler:listSchedules",
          "schemas:describeCodeBinding",
          "schemas:describeDiscoverer",
          "schemas:describeRegistry",
          "schemas:describeSchema",
          "schemas:getCodeBindingSource",
          "schemas:getDiscoveredSchema",
          "schemas:getResourcePolicy",
          "schemas:listDiscoverers",
          "schemas:listRegistries",
          "schemas:listSchemas",
          "schemas:listSchemaVersions",
          "sdb:domainMetadata",
          "sdb:listDomains",
          "secretsmanager:describeSecret",
          "secretsmanager:getResourcePolicy",
          "secretsmanager:listSecrets",
          "secretsmanager:listSecretVersionIds",
          "securityhub:getEnabledStandards",
          "securityhub:getFindings",
          "securityhub:getInsightResults",
          "securityhub:getInsights",
          "securityhub:getMasterAccount",
          "securityhub:getMembers",
          "securityhub:listEnabledProductsForImport",
          "securityhub:listInvitations",
          "securityhub:listMembers",
          "securitylake:getDataLakeExceptionSubscription",
          "securitylake:getDataLakeOrganizationConfiguration",
          "securitylake:getDataLakeSources",
          "securitylake:getSubscriber",
          "securitylake:listDataLakeExceptions",
          "securitylake:listDataLakes",
          "securitylake:listLogSources",
          "securitylake:listSubscribers",
          "serverlessrepo:getApplication",
          "serverlessrepo:getApplicationPolicy",
          "serverlessrepo:getCloudFormationTemplate",
          "serverlessrepo:listApplicationDependencies",
          "serverlessrepo:listApplications",
          "serverlessrepo:listApplicationVersions",
          "servicecatalog:describeConstraint",
          "servicecatalog:describePortfolio",
          "servicecatalog:describeProduct",
          "servicecatalog:describeProductAsAdmin",
          "servicecatalog:describeProductView",
          "servicecatalog:describeProvisioningArtifact",
          "servicecatalog:describeProvisioningParameters",
          "servicecatalog:describeRecord",
          "servicecatalog:listAcceptedPortfolioShares",
          "servicecatalog:listConstraintsForPortfolio",
          "servicecatalog:listLaunchPaths",
          "servicecatalog:listPortfolioAccess",
          "servicecatalog:listPortfolios",
          "servicecatalog:listPortfoliosForProduct",
          "servicecatalog:listPrincipalsForPortfolio",
          "servicecatalog:listProvisioningArtifacts",
          "servicecatalog:listRecordHistory",
          "servicecatalog:scanProvisionedProducts",
          "servicecatalog:searchProducts",
          "servicequotas:getAssociationForServiceQuotaTemplate",
          "servicequotas:getAWSDefaultServiceQuota",
          "servicequotas:getRequestedServiceQuotaChange",
          "servicequotas:getServiceQuota",
          "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
          "servicequotas:listAWSDefaultServiceQuotas",
          "servicequotas:listRequestedServiceQuotaChangeHistory",
          "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
          "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
          "servicequotas:listServiceQuotas",
          "servicequotas:listServices",
          "ses:describeActiveReceiptRuleSet",
          "ses:describeConfigurationSet",
          "ses:describeReceiptRule",
          "ses:describeReceiptRuleSet",
          "ses:getAccount",
          "ses:getAccountSendingEnabled",
          "ses:getBlacklistReports",
          "ses:getConfigurationSet",
          "ses:getConfigurationSetEventDestinations",
          "ses:getContactList",
          "ses:getDedicatedIp",
          "ses:getDedicatedIpPool",
          "ses:getDedicatedIps",
          "ses:getDeliverabilityDashboardOptions",
          "ses:getDeliverabilityTestReport",
          "ses:getDomainDeliverabilityCampaign",
          "ses:getDomainStatisticsReport",
          "ses:getEmailIdentity",
          "ses:getIdentityDkimAttributes",
          "ses:getIdentityMailFromDomainAttributes",
          "ses:getIdentityNotificationAttributes",
          "ses:getIdentityPolicies",
          "ses:getIdentityVerificationAttributes",
          "ses:getImportJob",
          "ses:getSendQuota",
          "ses:getSendStatistics",
          "ses:listConfigurationSets",
          "ses:listContactLists",
          "ses:listContacts",
          "ses:listCustomVerificationEmailTemplates",
          "ses:listDedicatedIpPools",
          "ses:listDeliverabilityTestReports",
          "ses:listDomainDeliverabilityCampaigns",
          "ses:listEmailIdentities",
          "ses:listEmailTemplates",
          "ses:listIdentities",
          "ses:listIdentityPolicies",
          "ses:listImportJobs",
          "ses:listReceiptFilters",
          "ses:listReceiptRuleSets",
          "ses:listRecommendations",
          "ses:listTagsForResource",
          "ses:listTemplates",
          "ses:listVerifiedEmailAddresses",
          "shield:describeAttack",
          "shield:describeProtection",
          "shield:describeSubscription",
          "shield:listAttacks",
          "shield:listProtections",
          "sms-voice:getConfigurationSetEventDestinations",
          "sms:getConnectors",
          "sms:getReplicationJobs",
          "sms:getReplicationRuns",
          "sms:getServers",
          "snowball:describeAddress",
          "snowball:describeAddresses",
          "snowball:describeJob",
          "snowball:getSnowballUsage",
          "snowball:listJobs",
          "snowball:listServiceVersions",
          "sns:checkIfPhoneNumberIsOptedOut",
          "sns:getDataProtectionPolicy",
          "sns:getEndpointAttributes",
          "sns:getPlatformApplicationAttributes",
          "sns:getSMSAttributes",
          "sns:getSMSSandboxAccountStatus",
          "sns:getSubscriptionAttributes",
          "sns:getTopicAttributes",
          "sns:listEndpointsByPlatformApplication",
          "sns:listOriginationNumbers",
          "sns:listPhoneNumbersOptedOut",
          "sns:listPlatformApplications",
          "sns:listSMSSandboxPhoneNumbers",
          "sns:listSubscriptions",
          "sns:listSubscriptionsByTopic",
          "sns:listTopics",
          "sqs:getQueueAttributes",
          "sqs:getQueueUrl",
          "sqs:listDeadLetterSourceQueues",
          "sqs:listQueues",
          "ssm-contacts:describeEngagement",
          "ssm-contacts:describePage",
          "ssm-contacts:getContact",
          "ssm-contacts:getContactChannel",
          "ssm-contacts:getContactPolicy",
          "ssm-contacts:getRotation",
          "ssm-contacts:getRotationOverride",
          "ssm-contacts:listContactChannels",
          "ssm-contacts:listContacts",
          "ssm-contacts:listEngagements",
          "ssm-contacts:listPageReceipts",
          "ssm-contacts:listPageResolutions",
          "ssm-contacts:listPagesByContact",
          "ssm-contacts:listPagesByEngagement",
          "ssm-contacts:listPreviewRotationShifts",
          "ssm-contacts:listRotationOverrides",
          "ssm-contacts:listRotations",
          "ssm-contacts:listRotationShifts",
          "ssm-incidents:getIncidentRecord",
          "ssm-incidents:getReplicationSet",
          "ssm-incidents:getResourcePolicies",
          "ssm-incidents:getResponsePlan",
          "ssm-incidents:getTimelineEvent",
          "ssm-incidents:listIncidentRecords",
          "ssm-incidents:listRelatedItems",
          "ssm-incidents:listReplicationSets",
          "ssm-incidents:listResponsePlans",
          "ssm-incidents:listTimelineEvents",
          "ssm-sap:getApplication",
          "ssm-sap:getComponent",
          "ssm-sap:getDatabase",
          "ssm-sap:getOperation",
          "ssm-sap:getResourcePermission",
          "ssm-sap:listApplications",
          "ssm-sap:listComponents",
          "ssm-sap:listDatabases",
          "ssm-sap:listOperations",
          "ssm:describeActivations",
          "ssm:describeAssociation",
          "ssm:describeAssociationExecutions",
          "ssm:describeAssociationExecutionTargets",
          "ssm:describeAutomationExecutions",
          "ssm:describeAutomationStepExecutions",
          "ssm:describeAvailablePatches",
          "ssm:describeDocument",
          "ssm:describeDocumentPermission",
          "ssm:describeEffectiveInstanceAssociations",
          "ssm:describeEffectivePatchesForPatchBaseline",
          "ssm:describeInstanceAssociationsStatus",
          "ssm:describeInstanceInformation",
          "ssm:describeInstancePatches",
          "ssm:describeInstancePatchStates",
          "ssm:describeInstancePatchStatesForPatchGroup",
          "ssm:describeInventoryDeletions",
          "ssm:describeMaintenanceWindowExecutions",
          "ssm:describeMaintenanceWindowExecutionTaskInvocations",
          "ssm:describeMaintenanceWindowExecutionTasks",
          "ssm:describeMaintenanceWindows",
          "ssm:describeMaintenanceWindowSchedule",
          "ssm:describeMaintenanceWindowsForTarget",
          "ssm:describeMaintenanceWindowTargets",
          "ssm:describeMaintenanceWindowTasks",
          "ssm:describeOpsItems",
          "ssm:describeParameters",
          "ssm:describePatchBaselines",
          "ssm:describePatchGroups",
          "ssm:describePatchGroupState",
          "ssm:describePatchProperties",
          "ssm:describeSessions",
          "ssm:getAutomationExecution",
          "ssm:getCalendarState",
          "ssm:getCommandInvocation",
          "ssm:getConnectionStatus",
          "ssm:getDefaultPatchBaseline",
          "ssm:getDeployablePatchSnapshotForInstance",
          "ssm:getInventorySchema",
          "ssm:getMaintenanceWindow",
          "ssm:getMaintenanceWindowExecution",
          "ssm:getMaintenanceWindowExecutionTask",
          "ssm:getMaintenanceWindowExecutionTaskInvocation",
          "ssm:getMaintenanceWindowTask",
          "ssm:getOpsItem",
          "ssm:getOpsMetadata",
          "ssm:getOpsSummary",
          "ssm:getPatchBaseline",
          "ssm:getPatchBaselineForPatchGroup",
          "ssm:getResourcePolicies",
          "ssm:getServiceSetting",
          "ssm:listAssociations",
          "ssm:listAssociationVersions",
          "ssm:listCommandInvocations",
          "ssm:listCommands",
          "ssm:listComplianceItems",
          "ssm:listComplianceSummaries",
          "ssm:listDocuments",
          "ssm:listDocumentMetadataHistory",
          "ssm:listDocumentVersions",
          "ssm:listOpsItemEvents",
          "ssm:listOpsItemRelatedItems",
          "ssm:listOpsMetadata",
          "ssm:listResourceComplianceSummaries",
          "ssm:listResourceDataSync",
          "ssm:listTagsForResource",
          "sso:describeApplicationAssignment",
          "sso:describeApplicationProvider",
          "sso:describeApplication",
          "sso:describeInstance",
          "sso:describeTrustedTokenIssuer",
          "sso:getApplicationAccessScope",
          "sso:getApplicationAssignmentConfiguration",
          "sso:getApplicationAuthenticationMethod",
          "sso:getApplicationGrant",
          "sso:getApplicationInstance",
          "sso:getApplicationTemplate",
          "sso:getManagedApplicationInstance",
          "sso:getSharedSsoConfiguration",
          "sso:listApplicationAccessScopes",
          "sso:listApplicationAssignments",
          "sso:listApplicationAuthenticationMethods",
          "sso:listApplicationGrants",
          "sso:listApplicationInstances",
          "sso:listApplicationProviders",
          "sso:listApplications",
          "sso:listApplicationTemplates",
          "sso:listDirectoryAssociations",
          "sso:listInstances",
          "sso:listProfileAssociations",
          "sso:listTrustedTokenIssuers",
          "states:describeActivity",
          "states:describeExecution",
          "states:describeMapRun",
          "states:describeStateMachine",
          "states:describeStateMachineAlias",
          "states:describeStateMachineForExecution",
          "states:getExecutionHistory",
          "states:listActivities",
          "states:listExecutions",
          "states:listMapRuns",
          "states:listStateMachineAliases",
          "states:listStateMachines",
          "states:listStateMachineVersions",
          "storagegateway:describeBandwidthRateLimit",
          "storagegateway:describeCache",
          "storagegateway:describeCachediSCSIVolumes",
          "storagegateway:describeFileSystemAssociations",
          "storagegateway:describeGatewayInformation",
          "storagegateway:describeMaintenanceStartTime",
          "storagegateway:describeNFSFileShares",
          "storagegateway:describeSMBFileShares",
          "storagegateway:describeSMBSettings",
          "storagegateway:describeSnapshotSchedule",
          "storagegateway:describeStorediSCSIVolumes",
          "storagegateway:describeTapeArchives",
          "storagegateway:describeTapeRecoveryPoints",
          "storagegateway:describeTapes",
          "storagegateway:describeUploadBuffer",
          "storagegateway:describeVTLDevices",
          "storagegateway:describeWorkingStorage",
          "storagegateway:listAutomaticTapeCreationPolicies",
          "storagegateway:listFileShares",
          "storagegateway:listFileSystemAssociations",
          "storagegateway:listGateways",
          "storagegateway:listLocalDisks",
          "storagegateway:listTagsForResource",
          "storagegateway:listTapes",
          "storagegateway:listVolumeInitiators",
          "storagegateway:listVolumeRecoveryPoints",
          "storagegateway:listVolumes",
          "swf:countClosedWorkflowExecutions",
          "swf:countOpenWorkflowExecutions",
          "swf:countPendingActivityTasks",
          "swf:countPendingDecisionTasks",
          "swf:describeActivityType",
          "swf:describeDomain",
          "swf:describeWorkflowExecution",
          "swf:describeWorkflowType",
          "swf:getWorkflowExecutionHistory",
          "swf:listActivityTypes",
          "swf:listClosedWorkflowExecutions",
          "swf:listDomains",
          "swf:listOpenWorkflowExecutions",
          "swf:listWorkflowTypes",
          "synthetics:describeCanaries",
          "synthetics:describeCanariesLastRun",
          "synthetics:describeRuntimeVersions",
          "synthetics:getCanary",
          "synthetics:getCanaryRuns",
          "synthetics:getGroup",
          "synthetics:listAssociatedGroups",
          "synthetics:listGroupResources",
          "synthetics:listGroups",
          "tiros:createQuery",
          "tiros:getQueryAnswer",
          "tiros:getQueryExplanation",
          "transcribe:describeLanguageModel",
          "transcribe:getCallAnalyticsCategory",
          "transcribe:getCallAnalyticsJob",
          "transcribe:getMedicalTranscriptionJob",
          "transcribe:getMedicalVocabulary",
          "transcribe:getTranscriptionJob",
          "transcribe:getVocabulary",
          "transcribe:getVocabularyFilter",
          "transcribe:listCallAnalyticsCategories",
          "transcribe:listCallAnalyticsJobs",
          "transcribe:listLanguageModels",
          "transcribe:listMedicalTranscriptionJobs",
          "transcribe:listMedicalVocabularies",
          "transcribe:listTranscriptionJobs",
          "transcribe:listVocabularies",
          "transcribe:listVocabularyFilters",
          "transfer:describeAccess",
          "transfer:describeAgreement",
          "transfer:describeConnector",
          "transfer:describeExecution",
          "transfer:describeProfile",
          "transfer:describeServer",
          "transfer:describeUser",
          "transfer:describeWorkflow",
          "transfer:listAccesses",
          "transfer:listAgreements",
          "transfer:listConnectors",
          "transfer:listExecutions",
          "transfer:listHostKeys",
          "transfer:listProfiles",
          "transfer:listServers",
          "transfer:listTagsForResource",
          "transfer:listUsers",
          "transfer:listWorkflows",
          "transfer:sendWorkflowStepState",
          "trustedadvisor:getOrganizationRecommendation",
          "trustedadvisor:getRecommendation",
          "trustedadvisor:listChecks",
          "trustedadvisor:listOrganizationRecommendationAccounts",
          "trustedadvisor:listOrganizationRecommendationResources",
          "trustedadvisor:listOrganizationRecommendations",
          "trustedadvisor:listRecommendationResources",
          "trustedadvisor:listRecommendations",
          "verifiedpermissions:getIdentitySource",
          "verifiedpermissions:getPolicy",
          "verifiedpermissions:getPolicyStore",
          "verifiedpermissions:getPolicyTemplate",
          "verifiedpermissions:getSchema",
          "verifiedpermissions:listIdentitySources",
          "verifiedpermissions:listPolicies",
          "verifiedpermissions:listPolicyStores",
          "verifiedpermissions:listPolicyTemplates",
          "vpc-lattice:getAccessLogSubscription",
          "vpc-lattice:getAuthPolicy",
          "vpc-lattice:getListener",
          "vpc-lattice:getResourcePolicy",
          "vpc-lattice:getRule",
          "vpc-lattice:getService",
          "vpc-lattice:getServiceNetwork",
          "vpc-lattice:getServiceNetworkServiceAssociation",
          "vpc-lattice:getServiceNetworkVpcAssociation",
          "vpc-lattice:getTargetGroup",
          "vpc-lattice:listAccessLogSubscriptions",
          "vpc-lattice:listListeners",
          "vpc-lattice:listRules",
          "vpc-lattice:listServiceNetworks",
          "vpc-lattice:listServiceNetworkServiceAssociations",
          "vpc-lattice:listServiceNetworkVpcAssociations",
          "vpc-lattice:listServices",
          "vpc-lattice:listTargetGroups",
          "vpc-lattice:listTargets",
          "waf-regional:getByteMatchSet",
          "waf-regional:getChangeTokenStatus",
          "waf-regional:getGeoMatchSet",
          "waf-regional:getIPSet",
          "waf-regional:getLoggingConfiguration",
          "waf-regional:getRateBasedRule",
          "waf-regional:getRegexMatchSet",
          "waf-regional:getRegexPatternSet",
          "waf-regional:getRule",
          "waf-regional:getRuleGroup",
          "waf-regional:getSqlInjectionMatchSet",
          "waf-regional:getWebACL",
          "waf-regional:getWebACLForResource",
          "waf-regional:listActivatedRulesInRuleGroup",
          "waf-regional:listByteMatchSets",
          "waf-regional:listGeoMatchSets",
          "waf-regional:listIPSets",
          "waf-regional:listLoggingConfigurations",
          "waf-regional:listRateBasedRules",
          "waf-regional:listRegexMatchSets",
          "waf-regional:listRegexPatternSets",
          "waf-regional:listResourcesForWebACL",
          "waf-regional:listRuleGroups",
          "waf-regional:listRules",
          "waf-regional:listSqlInjectionMatchSets",
          "waf-regional:listWebACLs",
          "waf:getByteMatchSet",
          "waf:getChangeTokenStatus",
          "waf:getGeoMatchSet",
          "waf:getIPSet",
          "waf:getLoggingConfiguration",
          "waf:getRateBasedRule",
          "waf:getRegexMatchSet",
          "waf:getRegexPatternSet",
          "waf:getRule",
          "waf:getRuleGroup",
          "waf:getSampledRequests",
          "waf:getSizeConstraintSet",
          "waf:getSqlInjectionMatchSet",
          "waf:getWebACL",
          "waf:getXssMatchSet",
          "waf:listActivatedRulesInRuleGroup",
          "waf:listByteMatchSets",
          "waf:listGeoMatchSets",
          "waf:listIPSets",
          "waf:listLoggingConfigurations",
          "waf:listRateBasedRules",
          "waf:listRegexMatchSets",
          "waf:listRegexPatternSets",
          "waf:listRuleGroups",
          "waf:listRules",
          "waf:listSizeConstraintSets",
          "waf:listSqlInjectionMatchSets",
          "waf:listWebACLs",
          "waf:listXssMatchSets",
          "wafv2:checkCapacity",
          "wafv2:describeManagedRuleGroup",
          "wafv2:getIPSet",
          "wafv2:getLoggingConfiguration",
          "wafv2:getPermissionPolicy",
          "wafv2:getRateBasedStatementManagedKeys",
          "wafv2:getRegexPatternSet",
          "wafv2:getRuleGroup",
          "wafv2:getSampledRequests",
          "wafv2:getWebACL",
          "wafv2:getWebACLForResource",
          "wafv2:listAvailableManagedRuleGroups",
          "wafv2:listIPSets",
          "wafv2:listLoggingConfigurations",
          "wafv2:listRegexPatternSets",
          "wafv2:listResourcesForWebACL",
          "wafv2:listRuleGroups",
          "wafv2:listTagsForResource",
          "wafv2:listWebACLs",
          "workdocs:checkAlias",
          "workdocs:describeAvailableDirectories",
          "workdocs:describeInstances",
          "workmail:describeGroup",
          "workmail:describeOrganization",
          "workmail:describeResource",
          "workmail:describeUser",
          "workmail:listAliases",
          "workmail:listGroupMembers",
          "workmail:listGroups",
          "workmail:listMailboxPermissions",
          "workmail:listOrganizations",
          "workmail:listResourceDelegates",
          "workmail:listResources",
          "workmail:listUsers",
          "workspaces-web:getBrowserSettings",
          "workspaces-web:getIdentityProvider",
          "workspaces-web:getNetworkSettings",
          "workspaces-web:getPortal",
          "workspaces-web:getPortalServiceProviderMetadata",
          "workspaces-web:getTrustStoreCertificate",
          "workspaces-web:getUserSettings",
          "workspaces-web:listBrowserSettings",
          "workspaces-web:listIdentityProviders",
          "workspaces-web:listNetworkSettings",
          "workspaces-web:listPortals",
          "workspaces-web:listTagsForResource",
          "workspaces-web:listTrustStoreCertificates",
          "workspaces-web:listTrustStores",
          "workspaces-web:listUserSettings",
          "workspaces:describeAccount",
          "workspaces:describeAccountModifications",
          "workspaces:describeIpGroups",
          "workspaces:describeTags",
          "workspaces:describeWorkspaceBundles",
          "workspaces:describeWorkspaceDirectories",
          "workspaces:describeWorkspaceImages",
          "workspaces:describeWorkspaces",
          "workspaces:describeWorkspacesConnectionStatus",
          "xray:getEncryptionConfig",
          "xray:getGroup",
          "xray:getGroups",
          "xray:getSamplingRules",
          "xray:listResourcePolicies"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "AWSSupportActions"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AWSSupportServiceRolePolicy",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "apigateway:GET",
      "condition": null
    },
    {
      "action": "iam:DeleteRole",
      "condition": null
    },
    {
      "action": "access-analyzer:getAccessPreview",
      "condition": null
    },
    {
      "action": "access-analyzer:getAnalyzedResource",
      "condition": null
    },
    {
      "action": "access-analyzer:getAnalyzer",
      "condition": null
    },
    {
      "action": "access-analyzer:getArchiveRule",
      "condition": null
    },
    {
      "action": "access-analyzer:getFinding",
      "condition": null
    },
    {
      "action": "access-analyzer:getGeneratedPolicy",
      "condition": null
    },
    {
      "action": "access-analyzer:listAccessPreviewFindings",
      "condition": null
    },
    {
      "action": "access-analyzer:listAccessPreviews",
      "condition": null
    },
    {
      "action": "access-analyzer:listAnalyzedResources",
      "condition": null
    },
    {
      "action": "access-analyzer:listAnalyzers",
      "condition": null
    },
    {
      "action": "access-analyzer:listArchiveRules",
      "condition": null
    },
    {
      "action": "access-analyzer:listFindings",
      "condition": null
    },
    {
      "action": "access-analyzer:listPolicyGenerations",
      "condition": null
    },
    {
      "action": "acm-pca:describeCertificateAuthority",
      "condition": null
    },
    {
      "action": "acm-pca:describeCertificateAuthorityAuditReport",
      "condition": null
    },
    {
      "action": "acm-pca:getCertificate",
      "condition": null
    },
    {
      "action": "acm-pca:getCertificateAuthorityCertificate",
      "condition": null
    },
    {
      "action": "acm-pca:getCertificateAuthorityCsr",
      "condition": null
    },
    {
      "action": "acm-pca:listCertificateAuthorities",
      "condition": null
    },
    {
      "action": "acm-pca:listTags",
      "condition": null
    },
    {
      "action": "acm:describeCertificate",
      "condition": null
    },
    {
      "action": "acm:getAccountConfiguration",
      "condition": null
    },
    {
      "action": "acm:getCertificate",
      "condition": null
    },
    {
      "action": "acm:listCertificates",
      "condition": null
    },
    {
      "action": "acm:listTagsForCertificate",
      "condition": null
    },
    {
      "action": "airflow:getEnvironment",
      "condition": null
    },
    {
      "action": "airflow:listEnvironments",
      "condition": null
    },
    {
      "action": "airflow:listTagsForResource",
      "condition": null
    },
    {
      "action": "amplify:getApp",
      "condition": null
    },
    {
      "action": "amplify:getBackendEnvironment",
      "condition": null
    },
    {
      "action": "amplify:getBranch",
      "condition": null
    },
    {
      "action": "amplify:getDomainAssociation",
      "condition": null
    },
    {
      "action": "amplify:getJob",
      "condition": null
    },
    {
      "action": "amplify:getWebhook",
      "condition": null
    },
    {
      "action": "amplify:listApps",
      "condition": null
    },
    {
      "action": "amplify:listBackendEnvironments",
      "condition": null
    },
    {
      "action": "amplify:listBranches",
      "condition": null
    },
    {
      "action": "amplify:listDomainAssociations",
      "condition": null
    },
    {
      "action": "amplify:listWebhooks",
      "condition": null
    },
    {
      "action": "amplifyuibuilder:exportComponents",
      "condition": null
    },
    {
      "action": "amplifyuibuilder:exportThemes",
      "condition": null
    },
    {
      "action": "appflow:describeConnectorEntity",
      "condition": null
    },
    {
      "action": "appflow:describeConnectorProfiles",
      "condition": null
    },
    {
      "action": "appflow:describeConnectors",
      "condition": null
    },
    {
      "action": "appflow:describeFlow",
      "condition": null
    },
    {
      "action": "appflow:describeFlowExecutionRecords",
      "condition": null
    },
    {
      "action": "appflow:listConnectorEntities",
      "condition": null
    },
    {
      "action": "appflow:listFlows",
      "condition": null
    },
    {
      "action": "application-autoscaling:describeScalableTargets",
      "condition": null
    },
    {
      "action": "application-autoscaling:describeScalingActivities",
      "condition": null
    },
    {
      "action": "application-autoscaling:describeScalingPolicies",
      "condition": null
    },
    {
      "action": "application-autoscaling:describeScheduledActions",
      "condition": null
    },
    {
      "action": "applicationinsights:describeApplication",
      "condition": null
    },
    {
      "action": "applicationinsights:describeComponent",
      "condition": null
    },
    {
      "action": "applicationinsights:describeComponentConfiguration",
      "condition": null
    },
    {
      "action": "applicationinsights:describeComponentConfigurationRecommendation",
      "condition": null
    },
    {
      "action": "applicationinsights:describeLogPattern",
      "condition": null
    },
    {
      "action": "applicationinsights:describeObservation",
      "condition": null
    },
    {
      "action": "applicationinsights:describeProblem",
      "condition": null
    },
    {
      "action": "applicationinsights:describeProblemObservations",
      "condition": null
    },
    {
      "action": "applicationinsights:listApplications",
      "condition": null
    },
    {
      "action": "applicationinsights:listComponents",
      "condition": null
    },
    {
      "action": "applicationinsights:listConfigurationHistory",
      "condition": null
    },
    {
      "action": "applicationinsights:listLogPatterns",
      "condition": null
    },
    {
      "action": "applicationinsights:listLogPatternSets",
      "condition": null
    },
    {
      "action": "applicationinsights:listProblems",
      "condition": null
    },
    {
      "action": "appmesh:describeGatewayRoute",
      "condition": null
    },
    {
      "action": "appmesh:describeMesh",
      "condition": null
    },
    {
      "action": "appmesh:describeRoute",
      "condition": null
    },
    {
      "action": "appmesh:describeVirtualGateway",
      "condition": null
    },
    {
      "action": "appmesh:describeVirtualNode",
      "condition": null
    },
    {
      "action": "appmesh:describeVirtualRouter",
      "condition": null
    },
    {
      "action": "appmesh:describeVirtualService",
      "condition": null
    },
    {
      "action": "appmesh:listGatewayRoutes",
      "condition": null
    },
    {
      "action": "appmesh:listMeshes",
      "condition": null
    },
    {
      "action": "appmesh:listRoutes",
      "condition": null
    },
    {
      "action": "appmesh:listTagsForResource",
      "condition": null
    },
    {
      "action": "appmesh:listVirtualGateways",
      "condition": null
    },
    {
      "action": "appmesh:listVirtualNodes",
      "condition": null
    },
    {
      "action": "appmesh:listVirtualRouters",
      "condition": null
    },
    {
      "action": "appmesh:listVirtualServices",
      "condition": null
    },
    {
      "action": "apprunner:describeAutoScalingConfiguration",
      "condition": null
    },
    {
      "action": "apprunner:describeCustomDomains",
      "condition": null
    },
    {
      "action": "apprunner:describeOperation",
      "condition": null
    },
    {
      "action": "apprunner:describeService",
      "condition": null
    },
    {
      "action": "apprunner:listAutoScalingConfigurations",
      "condition": null
    },
    {
      "action": "apprunner:listConnections",
      "condition": null
    },
    {
      "action": "apprunner:listOperations",
      "condition": null
    },
    {
      "action": "apprunner:listServices",
      "condition": null
    },
    {
      "action": "apprunner:listTagsForResource",
      "condition": null
    },
    {
      "action": "appstream:describeAppBlockBuilderAppBlockAssociations",
      "condition": null
    },
    {
      "action": "appstream:describeAppBlockBuilders",
      "condition": null
    },
    {
      "action": "appstream:describeAppBlocks",
      "condition": null
    },
    {
      "action": "appstream:describeApplicationFleetAssociations",
      "condition": null
    },
    {
      "action": "appstream:describeApplications",
      "condition": null
    },
    {
      "action": "appstream:describeDirectoryConfigs",
      "condition": null
    },
    {
      "action": "appstream:describeEntitlements",
      "condition": null
    },
    {
      "action": "appstream:describeFleets",
      "condition": null
    },
    {
      "action": "appstream:describeImageBuilders",
      "condition": null
    },
    {
      "action": "appstream:describeImagePermissions",
      "condition": null
    },
    {
      "action": "appstream:describeImages",
      "condition": null
    },
    {
      "action": "appstream:describeSessions",
      "condition": null
    },
    {
      "action": "appstream:describeStacks",
      "condition": null
    },
    {
      "action": "appstream:describeUsageReportSubscriptions",
      "condition": null
    },
    {
      "action": "appstream:describeUsers",
      "condition": null
    },
    {
      "action": "appstream:describeUserStackAssociations",
      "condition": null
    },
    {
      "action": "appstream:listAssociatedFleets",
      "condition": null
    },
    {
      "action": "appstream:listAssociatedStacks",
      "condition": null
    },
    {
      "action": "appstream:listEntitledApplications",
      "condition": null
    },
    {
      "action": "appstream:listTagsForResource",
      "condition": null
    },
    {
      "action": "appsync:getApiAssociation",
      "condition": null
    },
    {
      "action": "appsync:getApiCache",
      "condition": null
    },
    {
      "action": "appsync:getDomainName",
      "condition": null
    },
    {
      "action": "appsync:getFunction",
      "condition": null
    },
    {
      "action": "appsync:getGraphqlApi",
      "condition": null
    },
    {
      "action": "appsync:getIntrospectionSchema",
      "condition": null
    },
    {
      "action": "appsync:getResolver",
      "condition": null
    },
    {
      "action": "appsync:getSchemaCreationStatus",
      "condition": null
    },
    {
      "action": "appsync:getSourceApiAssociation",
      "condition": null
    },
    {
      "action": "appsync:getType",
      "condition": null
    },
    {
      "action": "appsync:listDataSources",
      "condition": null
    },
    {
      "action": "appsync:listDomainNames",
      "condition": null
    },
    {
      "action": "appsync:listFunctions",
      "condition": null
    },
    {
      "action": "appsync:listGraphqlApis",
      "condition": null
    },
    {
      "action": "appsync:listResolvers",
      "condition": null
    },
    {
      "action": "appsync:listResolversByFunction",
      "condition": null
    },
    {
      "action": "appsync:listSourceApiAssociations",
      "condition": null
    },
    {
      "action": "appsync:listTypes",
      "condition": null
    },
    {
      "action": "appsync:listTypesByAssociation",
      "condition": null
    },
    {
      "action": "aps:describeAlertManagerDefinition",
      "condition": null
    },
    {
      "action": "aps:describeRuleGroupsNamespace",
      "condition": null
    },
    {
      "action": "aps:describeScraper",
      "condition": null
    },
    {
      "action": "aps:describeWorkspace",
      "condition": null
    },
    {
      "action": "aps:listRuleGroupsNamespaces",
      "condition": null
    },
    {
      "action": "aps:listScrapers",
      "condition": null
    },
    {
      "action": "aps:listWorkspaces",
      "condition": null
    },
    {
      "action": "athena:batchGetNamedQuery",
      "condition": null
    },
    {
      "action": "athena:batchGetQueryExecution",
      "condition": null
    },
    {
      "action": "athena:getCalculationExecution",
      "condition": null
    },
    {
      "action": "athena:getCalculationExecutionStatus",
      "condition": null
    },
    {
      "action": "athena:getDataCatalog",
      "condition": null
    },
    {
      "action": "athena:getNamedQuery",
      "condition": null
    },
    {
      "action": "athena:getNotebookMetadata",
      "condition": null
    },
    {
      "action": "athena:getQueryExecution",
      "condition": null
    },
    {
      "action": "athena:getQueryRuntimeStatistics",
      "condition": null
    },
    {
      "action": "athena:getSession",
      "condition": null
    },
    {
      "action": "athena:getSessionStatus",
      "condition": null
    },
    {
      "action": "athena:getWorkGroup",
      "condition": null
    },
    {
      "action": "athena:listApplicationDPUSizes",
      "condition": null
    },
    {
      "action": "athena:listCalculationExecutions",
      "condition": null
    },
    {
      "action": "athena:listDataCatalogs",
      "condition": null
    },
    {
      "action": "athena:listEngineVersions",
      "condition": null
    },
    {
      "action": "athena:listExecutors",
      "condition": null
    },
    {
      "action": "athena:listNamedQueries",
      "condition": null
    },
    {
      "action": "athena:listNotebookMetadata",
      "condition": null
    },
    {
      "action": "athena:listNotebookSessions",
      "condition": null
    },
    {
      "action": "athena:listQueryExecutions",
      "condition": null
    },
    {
      "action": "athena:listSessions",
      "condition": null
    },
    {
      "action": "athena:listTagsForResource",
      "condition": null
    },
    {
      "action": "athena:listWorkGroups",
      "condition": null
    },
    {
      "action": "auditmanager:getAccountStatus",
      "condition": null
    },
    {
      "action": "auditmanager:getDelegations",
      "condition": null
    },
    {
      "action": "auditmanager:listAssessmentFrameworks",
      "condition": null
    },
    {
      "action": "auditmanager:listAssessmentReports",
      "condition": null
    },
    {
      "action": "auditmanager:listAssessments",
      "condition": null
    },
    {
      "action": "auditmanager:listControls",
      "condition": null
    },
    {
      "action": "auditmanager:listKeywordsForDataSource",
      "condition": null
    },
    {
      "action": "auditmanager:listNotifications",
      "condition": null
    },
    {
      "action": "autoscaling-plans:describeScalingPlanResources",
      "condition": null
    },
    {
      "action": "autoscaling-plans:describeScalingPlans",
      "condition": null
    },
    {
      "action": "autoscaling-plans:getScalingPlanResourceForecastData",
      "condition": null
    },
    {
      "action": "autoscaling:describeAccountLimits",
      "condition": null
    },
    {
      "action": "autoscaling:describeAdjustmentTypes",
      "condition": null
    },
    {
      "action": "autoscaling:describeAutoScalingGroups",
      "condition": null
    },
    {
      "action": "autoscaling:describeAutoScalingInstances",
      "condition": null
    },
    {
      "action": "autoscaling:describeAutoScalingNotificationTypes",
      "condition": null
    },
    {
      "action": "autoscaling:describeInstanceRefreshes",
      "condition": null
    },
    {
      "action": "autoscaling:describeLaunchConfigurations",
      "condition": null
    },
    {
      "action": "autoscaling:describeLifecycleHooks",
      "condition": null
    },
    {
      "action": "autoscaling:describeLifecycleHookTypes",
      "condition": null
    },
    {
      "action": "autoscaling:describeLoadBalancers",
      "condition": null
    },
    {
      "action": "autoscaling:describeLoadBalancerTargetGroups",
      "condition": null
    },
    {
      "action": "autoscaling:describeMetricCollectionTypes",
      "condition": null
    },
    {
      "action": "autoscaling:describeNotificationConfigurations",
      "condition": null
    },
    {
      "action": "autoscaling:describePolicies",
      "condition": null
    },
    {
      "action": "autoscaling:describeScalingActivities",
      "condition": null
    },
    {
      "action": "autoscaling:describeScalingProcessTypes",
      "condition": null
    },
    {
      "action": "autoscaling:describeScheduledActions",
      "condition": null
    },
    {
      "action": "autoscaling:describeTags",
      "condition": null
    },
    {
      "action": "autoscaling:describeTerminationPolicyTypes",
      "condition": null
    },
    {
      "action": "autoscaling:describeWarmPool",
      "condition": null
    },
    {
      "action": "backup:describeBackupJob",
      "condition": null
    },
    {
      "action": "backup:describeBackupVault",
      "condition": null
    },
    {
      "action": "backup:describeCopyJob",
      "condition": null
    },
    {
      "action": "backup:describeFramework",
      "condition": null
    },
    {
      "action": "backup:describeGlobalSettings",
      "condition": null
    },
    {
      "action": "backup:describeProtectedResource",
      "condition": null
    },
    {
      "action": "backup:describeRecoveryPoint",
      "condition": null
    },
    {
      "action": "backup:describeRegionSettings",
      "condition": null
    },
    {
      "action": "backup:describeReportJob",
      "condition": null
    },
    {
      "action": "backup:describeReportPlan",
      "condition": null
    },
    {
      "action": "backup:describeRestoreJob",
      "condition": null
    },
    {
      "action": "backup:getBackupPlan",
      "condition": null
    },
    {
      "action": "backup:getBackupPlanFromJSON",
      "condition": null
    },
    {
      "action": "backup:getBackupPlanFromTemplate",
      "condition": null
    },
    {
      "action": "backup:getBackupSelection",
      "condition": null
    },
    {
      "action": "backup:getBackupVaultAccessPolicy",
      "condition": null
    },
    {
      "action": "backup:getBackupVaultNotifications",
      "condition": null
    },
    {
      "action": "backup:getLegalHold",
      "condition": null
    },
    {
      "action": "backup:getRecoveryPointRestoreMetadata",
      "condition": null
    },
    {
      "action": "backup:getRestoreJobMetadata",
      "condition": null
    },
    {
      "action": "backup:getRestoreTestingInferredMetadata",
      "condition": null
    },
    {
      "action": "backup:getRestoreTestingPlan",
      "condition": null
    },
    {
      "action": "backup:getRestoreTestingSelection",
      "condition": null
    },
    {
      "action": "backup:getSupportedResourceTypes",
      "condition": null
    },
    {
      "action": "backup:listBackupJobs",
      "condition": null
    },
    {
      "action": "backup:listBackupPlans",
      "condition": null
    },
    {
      "action": "backup:listBackupPlanTemplates",
      "condition": null
    },
    {
      "action": "backup:listBackupPlanVersions",
      "condition": null
    },
    {
      "action": "backup:listBackupSelections",
      "condition": null
    },
    {
      "action": "backup:listBackupVaults",
      "condition": null
    },
    {
      "action": "backup:listCopyJobs",
      "condition": null
    },
    {
      "action": "backup:listFrameworks",
      "condition": null
    },
    {
      "action": "backup:listLegalHolds",
      "condition": null
    },
    {
      "action": "backup:listProtectedResources",
      "condition": null
    },
    {
      "action": "backup:listRecoveryPointsByBackupVault",
      "condition": null
    },
    {
      "action": "backup:listRecoveryPointsByLegalHold",
      "condition": null
    },
    {
      "action": "backup:listRecoveryPointsByResource",
      "condition": null
    },
    {
      "action": "backup:listReportJobs",
      "condition": null
    },
    {
      "action": "backup:listReportPlans",
      "condition": null
    },
    {
      "action": "backup:listRestoreJobs",
      "condition": null
    },
    {
      "action": "backup:listRestoreJobsByProtectedResource",
      "condition": null
    },
    {
      "action": "backup:listRestoreTestingPlans",
      "condition": null
    },
    {
      "action": "backup:listRestoreTestingSelections",
      "condition": null
    },
    {
      "action": "backup:listTags",
      "condition": null
    },
    {
      "action": "backup-gateway:getGateway",
      "condition": null
    },
    {
      "action": "backup-gateway:getHypervisor",
      "condition": null
    },
    {
      "action": "backup-gateway:getHypervisorPropertyMappings",
      "condition": null
    },
    {
      "action": "backup-gateway:getVirtualMachine",
      "condition": null
    },
    {
      "action": "backup-gateway:listGateways",
      "condition": null
    },
    {
      "action": "backup-gateway:listHypervisors",
      "condition": null
    },
    {
      "action": "backup-gateway:listVirtualMachines",
      "condition": null
    },
    {
      "action": "batch:describeComputeEnvironments",
      "condition": null
    },
    {
      "action": "batch:describeJobDefinitions",
      "condition": null
    },
    {
      "action": "batch:describeJobQueues",
      "condition": null
    },
    {
      "action": "batch:describeJobs",
      "condition": null
    },
    {
      "action": "batch:listJobs",
      "condition": null
    },
    {
      "action": "braket:getDevice",
      "condition": null
    },
    {
      "action": "braket:getQuantumTask",
      "condition": null
    },
    {
      "action": "braket:searchDevices",
      "condition": null
    },
    {
      "action": "braket:searchQuantumTasks",
      "condition": null
    },
    {
      "action": "budgets:viewBudget",
      "condition": null
    },
    {
      "action": "ce:getCostAndUsage",
      "condition": null
    },
    {
      "action": "ce:getCostAndUsageWithResources",
      "condition": null
    },
    {
      "action": "ce:getCostForecast",
      "condition": null
    },
    {
      "action": "ce:getDimensionValues",
      "condition": null
    },
    {
      "action": "ce:getReservationCoverage",
      "condition": null
    },
    {
      "action": "ce:getReservationPurchaseRecommendation",
      "condition": null
    },
    {
      "action": "ce:getReservationUtilization",
      "condition": null
    },
    {
      "action": "ce:getRightsizingRecommendation",
      "condition": null
    },
    {
      "action": "ce:getSavingsPlansCoverage",
      "condition": null
    },
    {
      "action": "ce:getSavingsPlansPurchaseRecommendation",
      "condition": null
    },
    {
      "action": "ce:getSavingsPlansUtilization",
      "condition": null
    },
    {
      "action": "ce:getSavingsPlansUtilizationDetails",
      "condition": null
    },
    {
      "action": "ce:getTags",
      "condition": null
    },
    {
      "action": "chime:describeAppInstance",
      "condition": null
    },
    {
      "action": "chime:getAttendee",
      "condition": null
    },
    {
      "action": "chime:getGlobalSettings",
      "condition": null
    },
    {
      "action": "chime:getMediaCapturePipeline",
      "condition": null
    },
    {
      "action": "chime:getMediaPipeline",
      "condition": null
    },
    {
      "action": "chime:getMeeting",
      "condition": null
    },
    {
      "action": "chime:getProxySession",
      "condition": null
    },
    {
      "action": "chime:getSipMediaApplication",
      "condition": null
    },
    {
      "action": "chime:getSipRule",
      "condition": null
    },
    {
      "action": "chime:getVoiceConnector",
      "condition": null
    },
    {
      "action": "chime:getVoiceConnectorGroup",
      "condition": null
    },
    {
      "action": "chime:getVoiceConnectorLoggingConfiguration",
      "condition": null
    },
    {
      "action": "chime:listAppInstances",
      "condition": null
    },
    {
      "action": "chime:listAttendees",
      "condition": null
    },
    {
      "action": "chime:listChannelBans",
      "condition": null
    },
    {
      "action": "chime:listChannels",
      "condition": null
    },
    {
      "action": "chime:listChannelsModeratedByAppInstanceUser",
      "condition": null
    },
    {
      "action": "chime:listMediaCapturePipelines",
      "condition": null
    },
    {
      "action": "chime:listMediaPipelines",
      "condition": null
    },
    {
      "action": "chime:listMeetings",
      "condition": null
    },
    {
      "action": "chime:listSipMediaApplications",
      "condition": null
    },
    {
      "action": "chime:listSipRules",
      "condition": null
    },
    {
      "action": "chime:listVoiceConnectorGroups",
      "condition": null
    },
    {
      "action": "chime:listVoiceConnectors",
      "condition": null
    },
    {
      "action": "cleanrooms:batchGetCollaborationAnalysisTemplate",
      "condition": null
    },
    {
      "action": "cleanrooms:batchGetSchema",
      "condition": null
    },
    {
      "action": "cleanrooms:getAnalysisTemplate",
      "condition": null
    },
    {
      "action": "cleanrooms:getCollaboration",
      "condition": null
    },
    {
      "action": "cleanrooms:getCollaborationAnalysisTemplate",
      "condition": null
    },
    {
      "action": "cleanrooms:getConfiguredTable",
      "condition": null
    },
    {
      "action": "cleanrooms:getConfiguredTableAssociation",
      "condition": null
    },
    {
      "action": "cleanrooms:getMembership",
      "condition": null
    },
    {
      "action": "cleanrooms:getSchema",
      "condition": null
    },
    {
      "action": "cleanrooms:listAnalysisTemplates",
      "condition": null
    },
    {
      "action": "cleanrooms:listCollaborationAnalysisTemplates",
      "condition": null
    },
    {
      "action": "cleanrooms:listCollaborations",
      "condition": null
    },
    {
      "action": "cleanrooms:listConfiguredTableAssociations",
      "condition": null
    },
    {
      "action": "cleanrooms:listConfiguredTables",
      "condition": null
    },
    {
      "action": "cleanrooms:listMembers",
      "condition": null
    },
    {
      "action": "cleanrooms:listMemberships",
      "condition": null
    },
    {
      "action": "cleanrooms:listSchemas",
      "condition": null
    },
    {
      "action": "cloud9:describeEnvironmentMemberships",
      "condition": null
    },
    {
      "action": "cloud9:describeEnvironments",
      "condition": null
    },
    {
      "action": "cloud9:listEnvironments",
      "condition": null
    },
    {
      "action": "clouddirectory:getDirectory",
      "condition": null
    },
    {
      "action": "clouddirectory:listDirectories",
      "condition": null
    },
    {
      "action": "cloudformation:batchDescribeTypeConfigurations",
      "condition": null
    },
    {
      "action": "cloudformation:describeAccountLimits",
      "condition": null
    },
    {
      "action": "cloudformation:describeChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:describeChangeSetHooks",
      "condition": null
    },
    {
      "action": "cloudformation:describePublisher",
      "condition": null
    },
    {
      "action": "cloudformation:describeStackEvents",
      "condition": null
    },
    {
      "action": "cloudformation:describeStackInstance",
      "condition": null
    },
    {
      "action": "cloudformation:describeStackResource",
      "condition": null
    },
    {
      "action": "cloudformation:describeStackResources",
      "condition": null
    },
    {
      "action": "cloudformation:describeStacks",
      "condition": null
    },
    {
      "action": "cloudformation:describeStackSet",
      "condition": null
    },
    {
      "action": "cloudformation:describeStackSetOperation",
      "condition": null
    },
    {
      "action": "cloudformation:describeType",
      "condition": null
    },
    {
      "action": "cloudformation:describeTypeRegistration",
      "condition": null
    },
    {
      "action": "cloudformation:estimateTemplateCost",
      "condition": null
    },
    {
      "action": "cloudformation:getStackPolicy",
      "condition": null
    },
    {
      "action": "cloudformation:getTemplate",
      "condition": null
    },
    {
      "action": "cloudformation:getTemplateSummary",
      "condition": null
    },
    {
      "action": "cloudformation:listChangeSets",
      "condition": null
    },
    {
      "action": "cloudformation:listExports",
      "condition": null
    },
    {
      "action": "cloudformation:listImports",
      "condition": null
    },
    {
      "action": "cloudformation:listStackInstances",
      "condition": null
    },
    {
      "action": "cloudformation:listStackResources",
      "condition": null
    },
    {
      "action": "cloudformation:listStacks",
      "condition": null
    },
    {
      "action": "cloudformation:listStackSetOperationResults",
      "condition": null
    },
    {
      "action": "cloudformation:listStackSetOperations",
      "condition": null
    },
    {
      "action": "cloudformation:listStackSets",
      "condition": null
    },
    {
      "action": "cloudformation:listTypeRegistrations",
      "condition": null
    },
    {
      "action": "cloudformation:listTypes",
      "condition": null
    },
    {
      "action": "cloudformation:listTypeVersions",
      "condition": null
    },
    {
      "action": "cloudfront:describeFunction",
      "condition": null
    },
    {
      "action": "cloudfront:getCachePolicy",
      "condition": null
    },
    {
      "action": "cloudfront:getCachePolicyConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getCloudFrontOriginAccessIdentity",
      "condition": null
    },
    {
      "action": "cloudfront:getCloudFrontOriginAccessIdentityConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getContinuousDeploymentPolicy",
      "condition": null
    },
    {
      "action": "cloudfront:getContinuousDeploymentPolicyConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getDistribution",
      "condition": null
    },
    {
      "action": "cloudfront:getDistributionConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getInvalidation",
      "condition": null
    },
    {
      "action": "cloudfront:getKeyGroup",
      "condition": null
    },
    {
      "action": "cloudfront:getKeyGroupConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getMonitoringSubscription",
      "condition": null
    },
    {
      "action": "cloudfront:getOriginAccessControl",
      "condition": null
    },
    {
      "action": "cloudfront:getOriginAccessControlConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getOriginRequestPolicy",
      "condition": null
    },
    {
      "action": "cloudfront:getOriginRequestPolicyConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getPublicKey",
      "condition": null
    },
    {
      "action": "cloudfront:getPublicKeyConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getRealtimeLogConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getResponseHeadersPolicy",
      "condition": null
    },
    {
      "action": "cloudfront:getResponseHeadersPolicyConfig",
      "condition": null
    },
    {
      "action": "cloudfront:getStreamingDistribution",
      "condition": null
    },
    {
      "action": "cloudfront:getStreamingDistributionConfig",
      "condition": null
    },
    {
      "action": "cloudfront:listCachePolicies",
      "condition": null
    },
    {
      "action": "cloudfront:listCloudFrontOriginAccessIdentities",
      "condition": null
    },
    {
      "action": "cloudfront:listContinuousDeploymentPolicies",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributions",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributionsByCachePolicyId",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributionsByKeyGroup",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributionsByOriginRequestPolicyId",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributionsByRealtimeLogConfig",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributionsByResponseHeadersPolicyId",
      "condition": null
    },
    {
      "action": "cloudfront:listDistributionsByWebACLId",
      "condition": null
    },
    {
      "action": "cloudfront:listFunctions",
      "condition": null
    },
    {
      "action": "cloudfront:listInvalidations",
      "condition": null
    },
    {
      "action": "cloudfront:listKeyGroups",
      "condition": null
    },
    {
      "action": "cloudfront:listOriginAccessControls",
      "condition": null
    },
    {
      "action": "cloudfront:listOriginRequestPolicies",
      "condition": null
    },
    {
      "action": "cloudfront:listPublicKeys",
      "condition": null
    },
    {
      "action": "cloudfront:listRealtimeLogConfigs",
      "condition": null
    },
    {
      "action": "cloudfront:listResponseHeadersPolicies",
      "condition": null
    },
    {
      "action": "cloudfront:listStreamingDistributions",
      "condition": null
    },
    {
      "action": "cloudhsm:describeBackups",
      "condition": null
    },
    {
      "action": "cloudhsm:describeClusters",
      "condition": null
    },
    {
      "action": "cloudsearch:describeAnalysisSchemes",
      "condition": null
    },
    {
      "action": "cloudsearch:describeAvailabilityOptions",
      "condition": null
    },
    {
      "action": "cloudsearch:describeDomains",
      "condition": null
    },
    {
      "action": "cloudsearch:describeExpressions",
      "condition": null
    },
    {
      "action": "cloudsearch:describeIndexFields",
      "condition": null
    },
    {
      "action": "cloudsearch:describeScalingParameters",
      "condition": null
    },
    {
      "action": "cloudsearch:describeServiceAccessPolicies",
      "condition": null
    },
    {
      "action": "cloudsearch:describeSuggesters",
      "condition": null
    },
    {
      "action": "cloudsearch:listDomainNames",
      "condition": null
    },
    {
      "action": "cloudtrail:describeTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:getEventSelectors",
      "condition": null
    },
    {
      "action": "cloudtrail:getInsightSelectors",
      "condition": null
    },
    {
      "action": "cloudtrail:getTrail",
      "condition": null
    },
    {
      "action": "cloudtrail:getTrailStatus",
      "condition": null
    },
    {
      "action": "cloudtrail:listPublicKeys",
      "condition": null
    },
    {
      "action": "cloudtrail:listTags",
      "condition": null
    },
    {
      "action": "cloudtrail:listTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:lookupEvents",
      "condition": null
    },
    {
      "action": "cloudwatch:describeAlarmHistory",
      "condition": null
    },
    {
      "action": "cloudwatch:describeAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:describeAlarmsForMetric",
      "condition": null
    },
    {
      "action": "cloudwatch:describeAnomalyDetectors",
      "condition": null
    },
    {
      "action": "cloudwatch:describeInsightRules",
      "condition": null
    },
    {
      "action": "cloudwatch:getDashboard",
      "condition": null
    },
    {
      "action": "cloudwatch:getInsightRuleReport",
      "condition": null
    },
    {
      "action": "cloudwatch:getMetricData",
      "condition": null
    },
    {
      "action": "cloudwatch:getMetricStatistics",
      "condition": null
    },
    {
      "action": "cloudwatch:getMetricStream",
      "condition": null
    },
    {
      "action": "cloudwatch:listDashboards",
      "condition": null
    },
    {
      "action": "cloudwatch:listManagedInsightRules",
      "condition": null
    },
    {
      "action": "cloudwatch:listMetrics",
      "condition": null
    },
    {
      "action": "cloudwatch:listMetricStreams",
      "condition": null
    },
    {
      "action": "codeartifact:describeDomain",
      "condition": null
    },
    {
      "action": "codeartifact:describePackageVersion",
      "condition": null
    },
    {
      "action": "codeartifact:describeRepository",
      "condition": null
    },
    {
      "action": "codeartifact:getDomainPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:getRepositoryEndpoint",
      "condition": null
    },
    {
      "action": "codeartifact:getRepositoryPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:listDomains",
      "condition": null
    },
    {
      "action": "codeartifact:listPackages",
      "condition": null
    },
    {
      "action": "codeartifact:listPackageVersionAssets",
      "condition": null
    },
    {
      "action": "codeartifact:listPackageVersions",
      "condition": null
    },
    {
      "action": "codeartifact:listRepositories",
      "condition": null
    },
    {
      "action": "codeartifact:listRepositoriesInDomain",
      "condition": null
    },
    {
      "action": "codebuild:batchGetBuildBatches",
      "condition": null
    },
    {
      "action": "codebuild:batchGetBuilds",
      "condition": null
    },
    {
      "action": "codebuild:batchGetFleets",
      "condition": null
    },
    {
      "action": "codebuild:batchGetProjects",
      "condition": null
    },
    {
      "action": "codebuild:listBuildBatches",
      "condition": null
    },
    {
      "action": "codebuild:listBuildBatchesForProject",
      "condition": null
    },
    {
      "action": "codebuild:listBuilds",
      "condition": null
    },
    {
      "action": "codebuild:listBuildsForProject",
      "condition": null
    },
    {
      "action": "codebuild:listCuratedEnvironmentImages",
      "condition": null
    },
    {
      "action": "codebuild:listFleets",
      "condition": null
    },
    {
      "action": "codebuild:listProjects",
      "condition": null
    },
    {
      "action": "codebuild:listSourceCredentials",
      "condition": null
    },
    {
      "action": "codecommit:batchGetRepositories",
      "condition": null
    },
    {
      "action": "codecommit:getBranch",
      "condition": null
    },
    {
      "action": "codecommit:getRepository",
      "condition": null
    },
    {
      "action": "codecommit:getRepositoryTriggers",
      "condition": null
    },
    {
      "action": "codecommit:listBranches",
      "condition": null
    },
    {
      "action": "codecommit:listRepositories",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetApplicationRevisions",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetApplications",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetDeploymentGroups",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetDeploymentInstances",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetDeployments",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetDeploymentTargets",
      "condition": null
    },
    {
      "action": "codedeploy:batchGetOnPremisesInstances",
      "condition": null
    },
    {
      "action": "codedeploy:getApplication",
      "condition": null
    },
    {
      "action": "codedeploy:getApplicationRevision",
      "condition": null
    },
    {
      "action": "codedeploy:getDeployment",
      "condition": null
    },
    {
      "action": "codedeploy:getDeploymentConfig",
      "condition": null
    },
    {
      "action": "codedeploy:getDeploymentGroup",
      "condition": null
    },
    {
      "action": "codedeploy:getDeploymentInstance",
      "condition": null
    },
    {
      "action": "codedeploy:getDeploymentTarget",
      "condition": null
    },
    {
      "action": "codedeploy:getOnPremisesInstance",
      "condition": null
    },
    {
      "action": "codedeploy:listApplicationRevisions",
      "condition": null
    },
    {
      "action": "codedeploy:listApplications",
      "condition": null
    },
    {
      "action": "codedeploy:listDeploymentConfigs",
      "condition": null
    },
    {
      "action": "codedeploy:listDeploymentGroups",
      "condition": null
    },
    {
      "action": "codedeploy:listDeploymentInstances",
      "condition": null
    },
    {
      "action": "codedeploy:listDeployments",
      "condition": null
    },
    {
      "action": "codedeploy:listDeploymentTargets",
      "condition": null
    },
    {
      "action": "codedeploy:listGitHubAccountTokenNames",
      "condition": null
    },
    {
      "action": "codedeploy:listOnPremisesInstances",
      "condition": null
    },
    {
      "action": "codepipeline:getJobDetails",
      "condition": null
    },
    {
      "action": "codepipeline:getPipeline",
      "condition": null
    },
    {
      "action": "codepipeline:getPipelineExecution",
      "condition": null
    },
    {
      "action": "codepipeline:getPipelineState",
      "condition": null
    },
    {
      "action": "codepipeline:listActionExecutions",
      "condition": null
    },
    {
      "action": "codepipeline:listActionTypes",
      "condition": null
    },
    {
      "action": "codepipeline:listPipelineExecutions",
      "condition": null
    },
    {
      "action": "codepipeline:listPipelines",
      "condition": null
    },
    {
      "action": "codepipeline:listWebhooks",
      "condition": null
    },
    {
      "action": "codestar:describeProject",
      "condition": null
    },
    {
      "action": "codestar:listProjects",
      "condition": null
    },
    {
      "action": "codestar:listResources",
      "condition": null
    },
    {
      "action": "codestar:listTeamMembers",
      "condition": null
    },
    {
      "action": "codestar:listUserProfiles",
      "condition": null
    },
    {
      "action": "codestar-connections:getConnection",
      "condition": null
    },
    {
      "action": "codestar-connections:getHost",
      "condition": null
    },
    {
      "action": "codestar-connections:listConnections",
      "condition": null
    },
    {
      "action": "codestar-connections:listHosts",
      "condition": null
    },
    {
      "action": "cognito-identity:describeIdentityPool",
      "condition": null
    },
    {
      "action": "cognito-identity:getIdentityPoolRoles",
      "condition": null
    },
    {
      "action": "cognito-identity:listIdentities",
      "condition": null
    },
    {
      "action": "cognito-identity:listIdentityPools",
      "condition": null
    },
    {
      "action": "cognito-idp:describeIdentityProvider",
      "condition": null
    },
    {
      "action": "cognito-idp:describeResourceServer",
      "condition": null
    },
    {
      "action": "cognito-idp:describeRiskConfiguration",
      "condition": null
    },
    {
      "action": "cognito-idp:describeUserImportJob",
      "condition": null
    },
    {
      "action": "cognito-idp:describeUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:describeUserPoolClient",
      "condition": null
    },
    {
      "action": "cognito-idp:describeUserPoolDomain",
      "condition": null
    },
    {
      "action": "cognito-idp:getGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:getUICustomization",
      "condition": null
    },
    {
      "action": "cognito-idp:getUserPoolMfaConfig",
      "condition": null
    },
    {
      "action": "cognito-idp:listGroups",
      "condition": null
    },
    {
      "action": "cognito-idp:listIdentityProviders",
      "condition": null
    },
    {
      "action": "cognito-idp:listResourceServers",
      "condition": null
    },
    {
      "action": "cognito-idp:listUserImportJobs",
      "condition": null
    },
    {
      "action": "cognito-idp:listUserPoolClients",
      "condition": null
    },
    {
      "action": "cognito-idp:listUserPools",
      "condition": null
    },
    {
      "action": "cognito-sync:describeDataset",
      "condition": null
    },
    {
      "action": "cognito-sync:describeIdentityPoolUsage",
      "condition": null
    },
    {
      "action": "cognito-sync:describeIdentityUsage",
      "condition": null
    },
    {
      "action": "cognito-sync:getCognitoEvents",
      "condition": null
    },
    {
      "action": "cognito-sync:getIdentityPoolConfiguration",
      "condition": null
    },
    {
      "action": "cognito-sync:listDatasets",
      "condition": null
    },
    {
      "action": "cognito-sync:listIdentityPoolUsage",
      "condition": null
    },
    {
      "action": "comprehend:describeDocumentClassificationJob",
      "condition": null
    },
    {
      "action": "comprehend:describeDocumentClassifier",
      "condition": null
    },
    {
      "action": "comprehend:describeDominantLanguageDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describeEndpoint",
      "condition": null
    },
    {
      "action": "comprehend:describeEntitiesDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describeEntityRecognizer",
      "condition": null
    },
    {
      "action": "comprehend:describeEventsDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describeFlywheel",
      "condition": null
    },
    {
      "action": "comprehend:describeFlywheelIteration",
      "condition": null
    },
    {
      "action": "comprehend:describeKeyPhrasesDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describePiiEntitiesDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describeSentimentDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describeTargetedSentimentDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:describeTopicsDetectionJob",
      "condition": null
    },
    {
      "action": "comprehend:listDocumentClassificationJobs",
      "condition": null
    },
    {
      "action": "comprehend:listDocumentClassifiers",
      "condition": null
    },
    {
      "action": "comprehend:listDominantLanguageDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listEndpoints",
      "condition": null
    },
    {
      "action": "comprehend:listEntitiesDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listEntityRecognizers",
      "condition": null
    },
    {
      "action": "comprehend:listEventsDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listFlywheelIterationHistory",
      "condition": null
    },
    {
      "action": "comprehend:listFlywheels",
      "condition": null
    },
    {
      "action": "comprehend:listKeyPhrasesDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listPiiEntitiesDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listSentimentDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listTargetedSentimentDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehend:listTopicsDetectionJobs",
      "condition": null
    },
    {
      "action": "compute-optimizer:getAutoScalingGroupRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:getEBSVolumeRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:getEC2InstanceRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:getEC2RecommendationProjectedMetrics",
      "condition": null
    },
    {
      "action": "compute-optimizer:getECSServiceRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:getECSServiceRecommendationProjectedMetrics",
      "condition": null
    },
    {
      "action": "compute-optimizer:getEnrollmentStatus",
      "condition": null
    },
    {
      "action": "compute-optimizer:getRecommendationSummaries",
      "condition": null
    },
    {
      "action": "config:batchGetAggregateResourceConfig",
      "condition": null
    },
    {
      "action": "config:batchGetResourceConfig",
      "condition": null
    },
    {
      "action": "config:describeAggregateComplianceByConfigRules",
      "condition": null
    },
    {
      "action": "config:describeAggregationAuthorizations",
      "condition": null
    },
    {
      "action": "config:describeComplianceByConfigRule",
      "condition": null
    },
    {
      "action": "config:describeComplianceByResource",
      "condition": null
    },
    {
      "action": "config:describeConfigRuleEvaluationStatus",
      "condition": null
    },
    {
      "action": "config:describeConfigRules",
      "condition": null
    },
    {
      "action": "config:describeConfigurationAggregators",
      "condition": null
    },
    {
      "action": "config:describeConfigurationAggregatorSourcesStatus",
      "condition": null
    },
    {
      "action": "config:describeConfigurationRecorders",
      "condition": null
    },
    {
      "action": "config:describeConfigurationRecorderStatus",
      "condition": null
    },
    {
      "action": "config:describeConformancePackCompliance",
      "condition": null
    },
    {
      "action": "config:describeConformancePacks",
      "condition": null
    },
    {
      "action": "config:describeConformancePackStatus",
      "condition": null
    },
    {
      "action": "config:describeDeliveryChannels",
      "condition": null
    },
    {
      "action": "config:describeDeliveryChannelStatus",
      "condition": null
    },
    {
      "action": "config:describeOrganizationConfigRules",
      "condition": null
    },
    {
      "action": "config:describeOrganizationConfigRuleStatuses",
      "condition": null
    },
    {
      "action": "config:describeOrganizationConformancePacks",
      "condition": null
    },
    {
      "action": "config:describeOrganizationConformancePackStatuses",
      "condition": null
    },
    {
      "action": "config:describePendingAggregationRequests",
      "condition": null
    },
    {
      "action": "config:describeRemediationConfigurations",
      "condition": null
    },
    {
      "action": "config:describeRemediationExceptions",
      "condition": null
    },
    {
      "action": "config:describeRemediationExecutionStatus",
      "condition": null
    },
    {
      "action": "config:describeRetentionConfigurations",
      "condition": null
    },
    {
      "action": "config:getAggregateComplianceDetailsByConfigRule",
      "condition": null
    },
    {
      "action": "config:getAggregateConfigRuleComplianceSummary",
      "condition": null
    },
    {
      "action": "config:getAggregateDiscoveredResourceCounts",
      "condition": null
    },
    {
      "action": "config:getAggregateResourceConfig",
      "condition": null
    },
    {
      "action": "config:getComplianceDetailsByConfigRule",
      "condition": null
    },
    {
      "action": "config:getComplianceDetailsByResource",
      "condition": null
    },
    {
      "action": "config:getComplianceSummaryByConfigRule",
      "condition": null
    },
    {
      "action": "config:getComplianceSummaryByResourceType",
      "condition": null
    },
    {
      "action": "config:getConformancePackComplianceDetails",
      "condition": null
    },
    {
      "action": "config:getConformancePackComplianceSummary",
      "condition": null
    },
    {
      "action": "config:getDiscoveredResourceCounts",
      "condition": null
    },
    {
      "action": "config:getOrganizationConfigRuleDetailedStatus",
      "condition": null
    },
    {
      "action": "config:getOrganizationConformancePackDetailedStatus",
      "condition": null
    },
    {
      "action": "config:getResourceConfigHistory",
      "condition": null
    },
    {
      "action": "config:listAggregateDiscoveredResources",
      "condition": null
    },
    {
      "action": "config:listDiscoveredResources",
      "condition": null
    },
    {
      "action": "config:listTagsForResource",
      "condition": null
    },
    {
      "action": "connect:describeContact",
      "condition": null
    },
    {
      "action": "connect:describePhoneNumber",
      "condition": null
    },
    {
      "action": "connect:describeQuickConnect",
      "condition": null
    },
    {
      "action": "connect:describeUser",
      "condition": null
    },
    {
      "action": "connect:getCurrentMetricData",
      "condition": null
    },
    {
      "action": "connect:getMetricData",
      "condition": null
    },
    {
      "action": "connect:listContactEvaluations",
      "condition": null
    },
    {
      "action": "connect:listEvaluationForms",
      "condition": null
    },
    {
      "action": "connect:listEvaluationFormVersions",
      "condition": null
    },
    {
      "action": "connect:listPhoneNumbersV2",
      "condition": null
    },
    {
      "action": "connect:listQuickConnects",
      "condition": null
    },
    {
      "action": "connect:listRoutingProfiles",
      "condition": null
    },
    {
      "action": "connect:listSecurityProfiles",
      "condition": null
    },
    {
      "action": "connect:listUsers",
      "condition": null
    },
    {
      "action": "connect:listViews",
      "condition": null
    },
    {
      "action": "connect:listViewVersions",
      "condition": null
    },
    {
      "action": "controltower:describeAccountFactoryConfig",
      "condition": null
    },
    {
      "action": "controltower:describeCoreService",
      "condition": null
    },
    {
      "action": "controltower:describeGuardrail",
      "condition": null
    },
    {
      "action": "controltower:describeGuardrailForTarget",
      "condition": null
    },
    {
      "action": "controltower:describeManagedAccount",
      "condition": null
    },
    {
      "action": "controltower:describeSingleSignOn",
      "condition": null
    },
    {
      "action": "controltower:getAvailableUpdates",
      "condition": null
    },
    {
      "action": "controltower:getHomeRegion",
      "condition": null
    },
    {
      "action": "controltower:getLandingZone",
      "condition": null
    },
    {
      "action": "controltower:getLandingZoneStatus",
      "condition": null
    },
    {
      "action": "controltower:listDirectoryGroups",
      "condition": null
    },
    {
      "action": "controltower:listEnabledControls",
      "condition": null
    },
    {
      "action": "controltower:listGuardrailsForTarget",
      "condition": null
    },
    {
      "action": "controltower:listGuardrailViolations",
      "condition": null
    },
    {
      "action": "controltower:listLandingZones",
      "condition": null
    },
    {
      "action": "controltower:listManagedAccounts",
      "condition": null
    },
    {
      "action": "controltower:listManagedAccountsForGuardrail",
      "condition": null
    },
    {
      "action": "controltower:listManagedAccountsForParent",
      "condition": null
    },
    {
      "action": "controltower:listManagedOrganizationalUnits",
      "condition": null
    },
    {
      "action": "controltower:listManagedOrganizationalUnitsForGuardrail",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:getPreferences",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:getRecommendation",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:listEnrollmentStatuses",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:listRecommendations",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:listRecommendationSummaries",
      "condition": null
    },
    {
      "action": "databrew:describeDataset",
      "condition": null
    },
    {
      "action": "databrew:describeJob",
      "condition": null
    },
    {
      "action": "databrew:describeProject",
      "condition": null
    },
    {
      "action": "databrew:describeRecipe",
      "condition": null
    },
    {
      "action": "databrew:listDatasets",
      "condition": null
    },
    {
      "action": "databrew:listJobRuns",
      "condition": null
    },
    {
      "action": "databrew:listJobs",
      "condition": null
    },
    {
      "action": "databrew:listProjects",
      "condition": null
    },
    {
      "action": "databrew:listRecipes",
      "condition": null
    },
    {
      "action": "databrew:listRecipeVersions",
      "condition": null
    },
    {
      "action": "databrew:listTagsForResource",
      "condition": null
    },
    {
      "action": "datapipeline:describeObjects",
      "condition": null
    },
    {
      "action": "datapipeline:describePipelines",
      "condition": null
    },
    {
      "action": "datapipeline:getPipelineDefinition",
      "condition": null
    },
    {
      "action": "datapipeline:listPipelines",
      "condition": null
    },
    {
      "action": "datapipeline:queryObjects",
      "condition": null
    },
    {
      "action": "datasync:describeAgent",
      "condition": null
    },
    {
      "action": "datasync:describeLocationEfs",
      "condition": null
    },
    {
      "action": "datasync:describeLocationFsxLustre",
      "condition": null
    },
    {
      "action": "datasync:describeLocationFsxOpenZfs",
      "condition": null
    },
    {
      "action": "datasync:describeLocationFsxWindows",
      "condition": null
    },
    {
      "action": "datasync:describeLocationHdfs",
      "condition": null
    },
    {
      "action": "datasync:describeLocationNfs",
      "condition": null
    },
    {
      "action": "datasync:describeLocationObjectStorage",
      "condition": null
    },
    {
      "action": "datasync:describeLocationS3",
      "condition": null
    },
    {
      "action": "datasync:describeLocationSmb",
      "condition": null
    },
    {
      "action": "datasync:describeTask",
      "condition": null
    },
    {
      "action": "datasync:describeTaskExecution",
      "condition": null
    },
    {
      "action": "datasync:listAgents",
      "condition": null
    },
    {
      "action": "datasync:listLocations",
      "condition": null
    },
    {
      "action": "datasync:listTaskExecutions",
      "condition": null
    },
    {
      "action": "datasync:listTasks",
      "condition": null
    },
    {
      "action": "dax:describeClusters",
      "condition": null
    },
    {
      "action": "dax:describeDefaultParameters",
      "condition": null
    },
    {
      "action": "dax:describeEvents",
      "condition": null
    },
    {
      "action": "dax:describeParameterGroups",
      "condition": null
    },
    {
      "action": "dax:describeParameters",
      "condition": null
    },
    {
      "action": "dax:describeSubnetGroups",
      "condition": null
    },
    {
      "action": "detective:getMembers",
      "condition": null
    },
    {
      "action": "detective:listGraphs",
      "condition": null
    },
    {
      "action": "detective:listInvitations",
      "condition": null
    },
    {
      "action": "detective:listMembers",
      "condition": null
    },
    {
      "action": "devicefarm:getAccountSettings",
      "condition": null
    },
    {
      "action": "devicefarm:getDevice",
      "condition": null
    },
    {
      "action": "devicefarm:getDevicePool",
      "condition": null
    },
    {
      "action": "devicefarm:getDevicePoolCompatibility",
      "condition": null
    },
    {
      "action": "devicefarm:getJob",
      "condition": null
    },
    {
      "action": "devicefarm:getProject",
      "condition": null
    },
    {
      "action": "devicefarm:getRemoteAccessSession",
      "condition": null
    },
    {
      "action": "devicefarm:getRun",
      "condition": null
    },
    {
      "action": "devicefarm:getSuite",
      "condition": null
    },
    {
      "action": "devicefarm:getTest",
      "condition": null
    },
    {
      "action": "devicefarm:getTestGridProject",
      "condition": null
    },
    {
      "action": "devicefarm:getTestGridSession",
      "condition": null
    },
    {
      "action": "devicefarm:getUpload",
      "condition": null
    },
    {
      "action": "devicefarm:listArtifacts",
      "condition": null
    },
    {
      "action": "devicefarm:listDevicePools",
      "condition": null
    },
    {
      "action": "devicefarm:listDevices",
      "condition": null
    },
    {
      "action": "devicefarm:listJobs",
      "condition": null
    },
    {
      "action": "devicefarm:listProjects",
      "condition": null
    },
    {
      "action": "devicefarm:listRemoteAccessSessions",
      "condition": null
    },
    {
      "action": "devicefarm:listRuns",
      "condition": null
    },
    {
      "action": "devicefarm:listSamples",
      "condition": null
    },
    {
      "action": "devicefarm:listSuites",
      "condition": null
    },
    {
      "action": "devicefarm:listTestGridProjects",
      "condition": null
    },
    {
      "action": "devicefarm:listTestGridSessionActions",
      "condition": null
    },
    {
      "action": "devicefarm:listTestGridSessionArtifacts",
      "condition": null
    },
    {
      "action": "devicefarm:listTestGridSessions",
      "condition": null
    },
    {
      "action": "devicefarm:listTests",
      "condition": null
    },
    {
      "action": "devicefarm:listUniqueProblems",
      "condition": null
    },
    {
      "action": "devicefarm:listUploads",
      "condition": null
    },
    {
      "action": "directconnect:describeConnectionLoa",
      "condition": null
    },
    {
      "action": "directconnect:describeConnections",
      "condition": null
    },
    {
      "action": "directconnect:describeConnectionsOnInterconnect",
      "condition": null
    },
    {
      "action": "directconnect:describeCustomerMetadata",
      "condition": null
    },
    {
      "action": "directconnect:describeDirectConnectGatewayAssociationProposals",
      "condition": null
    },
    {
      "action": "directconnect:describeDirectConnectGatewayAssociations",
      "condition": null
    },
    {
      "action": "directconnect:describeDirectConnectGatewayAttachments",
      "condition": null
    },
    {
      "action": "directconnect:describeDirectConnectGateways",
      "condition": null
    },
    {
      "action": "directconnect:describeHostedConnections",
      "condition": null
    },
    {
      "action": "directconnect:describeInterconnectLoa",
      "condition": null
    },
    {
      "action": "directconnect:describeInterconnects",
      "condition": null
    },
    {
      "action": "directconnect:describeLags",
      "condition": null
    },
    {
      "action": "directconnect:describeLoa",
      "condition": null
    },
    {
      "action": "directconnect:describeLocations",
      "condition": null
    },
    {
      "action": "directconnect:describeRouterConfiguration",
      "condition": null
    },
    {
      "action": "directconnect:describeVirtualGateways",
      "condition": null
    },
    {
      "action": "directconnect:describeVirtualInterfaces",
      "condition": null
    },
    {
      "action": "dlm:getLifecyclePolicies",
      "condition": null
    },
    {
      "action": "dlm:getLifecyclePolicy",
      "condition": null
    },
    {
      "action": "dms:describeAccountAttributes",
      "condition": null
    },
    {
      "action": "dms:describeApplicableIndividualAssessments",
      "condition": null
    },
    {
      "action": "dms:describeConnections",
      "condition": null
    },
    {
      "action": "dms:describeEndpoints",
      "condition": null
    },
    {
      "action": "dms:describeEndpointSettings",
      "condition": null
    },
    {
      "action": "dms:describeEndpointTypes",
      "condition": null
    },
    {
      "action": "dms:describeEventCategories",
      "condition": null
    },
    {
      "action": "dms:describeEvents",
      "condition": null
    },
    {
      "action": "dms:describeEventSubscriptions",
      "condition": null
    },
    {
      "action": "dms:describeFleetAdvisorCollectors",
      "condition": null
    },
    {
      "action": "dms:describeFleetAdvisorDatabases",
      "condition": null
    },
    {
      "action": "dms:describeFleetAdvisorLsaAnalysis",
      "condition": null
    },
    {
      "action": "dms:describeFleetAdvisorSchemaObjectSummary",
      "condition": null
    },
    {
      "action": "dms:describeFleetAdvisorSchemas",
      "condition": null
    },
    {
      "action": "dms:describeOrderableReplicationInstances",
      "condition": null
    },
    {
      "action": "dms:describePendingMaintenanceActions",
      "condition": null
    },
    {
      "action": "dms:describeRefreshSchemasStatus",
      "condition": null
    },
    {
      "action": "dms:describeReplicationInstances",
      "condition": null
    },
    {
      "action": "dms:describeReplicationInstanceTaskLogs",
      "condition": null
    },
    {
      "action": "dms:describeReplicationSubnetGroups",
      "condition": null
    },
    {
      "action": "dms:describeReplicationTaskAssessmentResults",
      "condition": null
    },
    {
      "action": "dms:describeReplicationTaskAssessmentRuns",
      "condition": null
    },
    {
      "action": "dms:describeReplicationTaskIndividualAssessments",
      "condition": null
    },
    {
      "action": "dms:describeReplicationTasks",
      "condition": null
    },
    {
      "action": "dms:describeSchemas",
      "condition": null
    },
    {
      "action": "dms:describeTableStatistics",
      "condition": null
    },
    {
      "action": "docdb-elastic:getCluster",
      "condition": null
    },
    {
      "action": "docdb-elastic:getClusterSnapshot",
      "condition": null
    },
    {
      "action": "docdb-elastic:listClusters",
      "condition": null
    },
    {
      "action": "docdb-elastic:listClusterSnapshots",
      "condition": null
    },
    {
      "action": "drs:describeJobLogItems",
      "condition": null
    },
    {
      "action": "drs:describeJobs",
      "condition": null
    },
    {
      "action": "drs:describeLaunchConfigurationTemplates",
      "condition": null
    },
    {
      "action": "drs:describeRecoveryInstances",
      "condition": null
    },
    {
      "action": "drs:describeRecoverySnapshots",
      "condition": null
    },
    {
      "action": "drs:describeReplicationConfigurationTemplates",
      "condition": null
    },
    {
      "action": "drs:describeSourceNetworks",
      "condition": null
    },
    {
      "action": "drs:describeSourceServers",
      "condition": null
    },
    {
      "action": "drs:getLaunchConfiguration",
      "condition": null
    },
    {
      "action": "drs:getReplicationConfiguration",
      "condition": null
    },
    {
      "action": "drs:listExtensibleSourceServers",
      "condition": null
    },
    {
      "action": "drs:listLaunchActions",
      "condition": null
    },
    {
      "action": "drs:listStagingAccounts",
      "condition": null
    },
    {
      "action": "ds:describeClientAuthenticationSettings",
      "condition": null
    },
    {
      "action": "ds:describeConditionalForwarders",
      "condition": null
    },
    {
      "action": "ds:describeDirectories",
      "condition": null
    },
    {
      "action": "ds:describeDomainControllers",
      "condition": null
    },
    {
      "action": "ds:describeEventTopics",
      "condition": null
    },
    {
      "action": "ds:describeLDAPSSettings",
      "condition": null
    },
    {
      "action": "ds:describeSharedDirectories",
      "condition": null
    },
    {
      "action": "ds:describeSnapshots",
      "condition": null
    },
    {
      "action": "ds:describeTrusts",
      "condition": null
    },
    {
      "action": "ds:getDirectoryLimits",
      "condition": null
    },
    {
      "action": "ds:getSnapshotLimits",
      "condition": null
    },
    {
      "action": "ds:listIpRoutes",
      "condition": null
    },
    {
      "action": "ds:listSchemaExtensions",
      "condition": null
    },
    {
      "action": "ds:listTagsForResource",
      "condition": null
    },
    {
      "action": "dynamodb:describeBackup",
      "condition": null
    },
    {
      "action": "dynamodb:describeContinuousBackups",
      "condition": null
    },
    {
      "action": "dynamodb:describeContributorInsights",
      "condition": null
    },
    {
      "action": "dynamodb:describeExport",
      "condition": null
    },
    {
      "action": "dynamodb:describeGlobalTable",
      "condition": null
    },
    {
      "action": "dynamodb:describeImport",
      "condition": null
    },
    {
      "action": "dynamodb:describeKinesisStreamingDestination",
      "condition": null
    },
    {
      "action": "dynamodb:describeLimits",
      "condition": null
    },
    {
      "action": "dynamodb:describeStream",
      "condition": null
    },
    {
      "action": "dynamodb:describeTable",
      "condition": null
    },
    {
      "action": "dynamodb:describeTimeToLive",
      "condition": null
    },
    {
      "action": "dynamodb:listBackups",
      "condition": null
    },
    {
      "action": "dynamodb:listContributorInsights",
      "condition": null
    },
    {
      "action": "dynamodb:listExports",
      "condition": null
    },
    {
      "action": "dynamodb:listGlobalTables",
      "condition": null
    },
    {
      "action": "dynamodb:listImports",
      "condition": null
    },
    {
      "action": "dynamodb:listStreams",
      "condition": null
    },
    {
      "action": "dynamodb:listTables",
      "condition": null
    },
    {
      "action": "dynamodb:listTagsOfResource",
      "condition": null
    },
    {
      "action": "ec2:describeAccountAttributes",
      "condition": null
    },
    {
      "action": "ec2:describeAddresses",
      "condition": null
    },
    {
      "action": "ec2:describeAddressesAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeAddressTransfers",
      "condition": null
    },
    {
      "action": "ec2:describeAggregateIdFormat",
      "condition": null
    },
    {
      "action": "ec2:describeAvailabilityZones",
      "condition": null
    },
    {
      "action": "ec2:describeBundleTasks",
      "condition": null
    },
    {
      "action": "ec2:describeByoipCidrs",
      "condition": null
    },
    {
      "action": "ec2:describeCapacityReservationFleets",
      "condition": null
    },
    {
      "action": "ec2:describeCapacityReservations",
      "condition": null
    },
    {
      "action": "ec2:describeCarrierGateways",
      "condition": null
    },
    {
      "action": "ec2:describeClassicLinkInstances",
      "condition": null
    },
    {
      "action": "ec2:describeClientVpnAuthorizationRules",
      "condition": null
    },
    {
      "action": "ec2:describeClientVpnConnections",
      "condition": null
    },
    {
      "action": "ec2:describeClientVpnEndpoints",
      "condition": null
    },
    {
      "action": "ec2:describeClientVpnRoutes",
      "condition": null
    },
    {
      "action": "ec2:describeClientVpnTargetNetworks",
      "condition": null
    },
    {
      "action": "ec2:describeCoipPools",
      "condition": null
    },
    {
      "action": "ec2:describeConversionTasks",
      "condition": null
    },
    {
      "action": "ec2:describeCustomerGateways",
      "condition": null
    },
    {
      "action": "ec2:describeDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:describeEgressOnlyInternetGateways",
      "condition": null
    },
    {
      "action": "ec2:describeExportImageTasks",
      "condition": null
    },
    {
      "action": "ec2:describeExportTasks",
      "condition": null
    },
    {
      "action": "ec2:describeFastLaunchImages",
      "condition": null
    },
    {
      "action": "ec2:describeFastSnapshotRestores",
      "condition": null
    },
    {
      "action": "ec2:describeFleetHistory",
      "condition": null
    },
    {
      "action": "ec2:describeFleetInstances",
      "condition": null
    },
    {
      "action": "ec2:describeFleets",
      "condition": null
    },
    {
      "action": "ec2:describeFlowLogs",
      "condition": null
    },
    {
      "action": "ec2:describeFpgaImageAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeFpgaImages",
      "condition": null
    },
    {
      "action": "ec2:describeHostReservationOfferings",
      "condition": null
    },
    {
      "action": "ec2:describeHostReservations",
      "condition": null
    },
    {
      "action": "ec2:describeHosts",
      "condition": null
    },
    {
      "action": "ec2:describeIamInstanceProfileAssociations",
      "condition": null
    },
    {
      "action": "ec2:describeIdentityIdFormat",
      "condition": null
    },
    {
      "action": "ec2:describeIdFormat",
      "condition": null
    },
    {
      "action": "ec2:describeImageAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeImages",
      "condition": null
    },
    {
      "action": "ec2:describeImportImageTasks",
      "condition": null
    },
    {
      "action": "ec2:describeImportSnapshotTasks",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceCreditSpecifications",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceEventNotificationAttributes",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceEventWindows",
      "condition": null
    },
    {
      "action": "ec2:describeInstances",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceStatus",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceTypeOfferings",
      "condition": null
    },
    {
      "action": "ec2:describeInstanceTypes",
      "condition": null
    },
    {
      "action": "ec2:describeInternetGateways",
      "condition": null
    },
    {
      "action": "ec2:describeIpamPools",
      "condition": null
    },
    {
      "action": "ec2:describeIpams",
      "condition": null
    },
    {
      "action": "ec2:describeIpamScopes",
      "condition": null
    },
    {
      "action": "ec2:describeIpv6Pools",
      "condition": null
    },
    {
      "action": "ec2:describeKeyPairs",
      "condition": null
    },
    {
      "action": "ec2:describeLaunchTemplates",
      "condition": null
    },
    {
      "action": "ec2:describeLaunchTemplateVersions",
      "condition": null
    },
    {
      "action": "ec2:describeLocalGatewayRouteTables",
      "condition": null
    },
    {
      "action": "ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "condition": null
    },
    {
      "action": "ec2:describeLocalGatewayRouteTableVpcAssociations",
      "condition": null
    },
    {
      "action": "ec2:describeLocalGateways",
      "condition": null
    },
    {
      "action": "ec2:describeLocalGatewayVirtualInterfaceGroups",
      "condition": null
    },
    {
      "action": "ec2:describeLocalGatewayVirtualInterfaces",
      "condition": null
    },
    {
      "action": "ec2:describeManagedPrefixLists",
      "condition": null
    },
    {
      "action": "ec2:describeMovingAddresses",
      "condition": null
    },
    {
      "action": "ec2:describeNatGateways",
      "condition": null
    },
    {
      "action": "ec2:describeNetworkAcls",
      "condition": null
    },
    {
      "action": "ec2:describeNetworkInterfaceAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeNetworkInterfaces",
      "condition": null
    },
    {
      "action": "ec2:describePlacementGroups",
      "condition": null
    },
    {
      "action": "ec2:describePrefixLists",
      "condition": null
    },
    {
      "action": "ec2:describePrincipalIdFormat",
      "condition": null
    },
    {
      "action": "ec2:describePublicIpv4Pools",
      "condition": null
    },
    {
      "action": "ec2:describeRegions",
      "condition": null
    },
    {
      "action": "ec2:describeReservedInstances",
      "condition": null
    },
    {
      "action": "ec2:describeReservedInstancesListings",
      "condition": null
    },
    {
      "action": "ec2:describeReservedInstancesModifications",
      "condition": null
    },
    {
      "action": "ec2:describeReservedInstancesOfferings",
      "condition": null
    },
    {
      "action": "ec2:describeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:describeScheduledInstanceAvailability",
      "condition": null
    },
    {
      "action": "ec2:describeScheduledInstances",
      "condition": null
    },
    {
      "action": "ec2:describeSecurityGroupReferences",
      "condition": null
    },
    {
      "action": "ec2:describeSecurityGroupRules",
      "condition": null
    },
    {
      "action": "ec2:describeSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:describeSnapshotAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeSnapshots",
      "condition": null
    },
    {
      "action": "ec2:describeSpotDatafeedSubscription",
      "condition": null
    },
    {
      "action": "ec2:describeSpotFleetInstances",
      "condition": null
    },
    {
      "action": "ec2:describeSpotFleetRequestHistory",
      "condition": null
    },
    {
      "action": "ec2:describeSpotFleetRequests",
      "condition": null
    },
    {
      "action": "ec2:describeSpotInstanceRequests",
      "condition": null
    },
    {
      "action": "ec2:describeSpotPriceHistory",
      "condition": null
    },
    {
      "action": "ec2:describeStaleSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:describeStoreImageTasks",
      "condition": null
    },
    {
      "action": "ec2:describeSubnets",
      "condition": null
    },
    {
      "action": "ec2:describeTags",
      "condition": null
    },
    {
      "action": "ec2:describeTrafficMirrorFilters",
      "condition": null
    },
    {
      "action": "ec2:describeTrafficMirrorSessions",
      "condition": null
    },
    {
      "action": "ec2:describeTrafficMirrorTargets",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayAttachments",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayConnectPeers",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayMulticastDomains",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayPeeringAttachments",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayPolicyTables",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayRouteTableAnnouncements",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayRouteTables",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGateways",
      "condition": null
    },
    {
      "action": "ec2:describeTransitGatewayVpcAttachments",
      "condition": null
    },
    {
      "action": "ec2:describeVerifiedAccessEndpoints",
      "condition": null
    },
    {
      "action": "ec2:describeVerifiedAccessGroups",
      "condition": null
    },
    {
      "action": "ec2:describeVerifiedAccessInstances",
      "condition": null
    },
    {
      "action": "ec2:describeVerifiedAccessTrustProviders",
      "condition": null
    },
    {
      "action": "ec2:describeVolumeAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeVolumes",
      "condition": null
    },
    {
      "action": "ec2:describeVolumesModifications",
      "condition": null
    },
    {
      "action": "ec2:describeVolumeStatus",
      "condition": null
    },
    {
      "action": "ec2:describeVpcAttribute",
      "condition": null
    },
    {
      "action": "ec2:describeVpcClassicLink",
      "condition": null
    },
    {
      "action": "ec2:describeVpcClassicLinkDnsSupport",
      "condition": null
    },
    {
      "action": "ec2:describeVpcEndpointConnectionNotifications",
      "condition": null
    },
    {
      "action": "ec2:describeVpcEndpointConnections",
      "condition": null
    },
    {
      "action": "ec2:describeVpcEndpoints",
      "condition": null
    },
    {
      "action": "ec2:describeVpcEndpointServiceConfigurations",
      "condition": null
    },
    {
      "action": "ec2:describeVpcEndpointServicePermissions",
      "condition": null
    },
    {
      "action": "ec2:describeVpcEndpointServices",
      "condition": null
    },
    {
      "action": "ec2:describeVpcPeeringConnections",
      "condition": null
    },
    {
      "action": "ec2:describeVpcs",
      "condition": null
    },
    {
      "action": "ec2:describeVpnConnections",
      "condition": null
    },
    {
      "action": "ec2:describeVpnGateways",
      "condition": null
    },
    {
      "action": "ec2:getAssociatedIpv6PoolCidrs",
      "condition": null
    },
    {
      "action": "ec2:getCapacityReservationUsage",
      "condition": null
    },
    {
      "action": "ec2:getCoipPoolUsage",
      "condition": null
    },
    {
      "action": "ec2:getConsoleOutput",
      "condition": null
    },
    {
      "action": "ec2:getConsoleScreenshot",
      "condition": null
    },
    {
      "action": "ec2:getDefaultCreditSpecification",
      "condition": null
    },
    {
      "action": "ec2:getEbsDefaultKmsKeyId",
      "condition": null
    },
    {
      "action": "ec2:getEbsEncryptionByDefault",
      "condition": null
    },
    {
      "action": "ec2:getGroupsForCapacityReservation",
      "condition": null
    },
    {
      "action": "ec2:getHostReservationPurchasePreview",
      "condition": null
    },
    {
      "action": "ec2:getInstanceTypesFromInstanceRequirements",
      "condition": null
    },
    {
      "action": "ec2:getIpamAddressHistory",
      "condition": null
    },
    {
      "action": "ec2:getIpamPoolAllocations",
      "condition": null
    },
    {
      "action": "ec2:getIpamPoolCidrs",
      "condition": null
    },
    {
      "action": "ec2:getIpamResourceCidrs",
      "condition": null
    },
    {
      "action": "ec2:getLaunchTemplateData",
      "condition": null
    },
    {
      "action": "ec2:getManagedPrefixListAssociations",
      "condition": null
    },
    {
      "action": "ec2:getManagedPrefixListEntries",
      "condition": null
    },
    {
      "action": "ec2:getReservedInstancesExchangeQuote",
      "condition": null
    },
    {
      "action": "ec2:getSerialConsoleAccessStatus",
      "condition": null
    },
    {
      "action": "ec2:getSpotPlacementScores",
      "condition": null
    },
    {
      "action": "ec2:getTransitGatewayMulticastDomainAssociations",
      "condition": null
    },
    {
      "action": "ec2:getTransitGatewayPrefixListReferences",
      "condition": null
    },
    {
      "action": "ec2:getVerifiedAccessEndpointPolicy",
      "condition": null
    },
    {
      "action": "ec2:getVerifiedAccessGroupPolicy",
      "condition": null
    },
    {
      "action": "ec2:listImagesInRecycleBin",
      "condition": null
    },
    {
      "action": "ec2:listSnapshotsInRecycleBin",
      "condition": null
    },
    {
      "action": "ec2:searchLocalGatewayRoutes",
      "condition": null
    },
    {
      "action": "ec2:searchTransitGatewayMulticastGroups",
      "condition": null
    },
    {
      "action": "ec2:searchTransitGatewayRoutes",
      "condition": null
    },
    {
      "action": "ecr-public:describeImages",
      "condition": null
    },
    {
      "action": "ecr-public:describeImageTags",
      "condition": null
    },
    {
      "action": "ecr-public:describeRegistries",
      "condition": null
    },
    {
      "action": "ecr-public:describeRepositories",
      "condition": null
    },
    {
      "action": "ecr-public:getRegistryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:getRepositoryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:getRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr-public:listTagsForResource",
      "condition": null
    },
    {
      "action": "ecr:batchCheckLayerAvailability",
      "condition": null
    },
    {
      "action": "ecr:batchGetRepositoryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:describeImages",
      "condition": null
    },
    {
      "action": "ecr:describeImageReplicationStatus",
      "condition": null
    },
    {
      "action": "ecr:describeImageScanFindings",
      "condition": null
    },
    {
      "action": "ecr:describePullThroughCacheRules",
      "condition": null
    },
    {
      "action": "ecr:describeRegistry",
      "condition": null
    },
    {
      "action": "ecr:describeRepositories",
      "condition": null
    },
    {
      "action": "ecr:getLifecyclePolicy",
      "condition": null
    },
    {
      "action": "ecr:getLifecyclePolicyPreview",
      "condition": null
    },
    {
      "action": "ecr:getRegistryPolicy",
      "condition": null
    },
    {
      "action": "ecr:getRegistryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:getRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr:listImages",
      "condition": null
    },
    {
      "action": "ecr:listTagsForResource",
      "condition": null
    },
    {
      "action": "ecs:describeCapacityProviders",
      "condition": null
    },
    {
      "action": "ecs:describeClusters",
      "condition": null
    },
    {
      "action": "ecs:describeContainerInstances",
      "condition": null
    },
    {
      "action": "ecs:describeServices",
      "condition": null
    },
    {
      "action": "ecs:describeTaskDefinition",
      "condition": null
    },
    {
      "action": "ecs:describeTasks",
      "condition": null
    },
    {
      "action": "ecs:describeTaskSets",
      "condition": null
    },
    {
      "action": "ecs:getTaskProtection",
      "condition": null
    },
    {
      "action": "ecs:listAccountSettings",
      "condition": null
    },
    {
      "action": "ecs:listAttributes",
      "condition": null
    },
    {
      "action": "ecs:listClusters",
      "condition": null
    },
    {
      "action": "ecs:listContainerInstances",
      "condition": null
    },
    {
      "action": "ecs:listServices",
      "condition": null
    },
    {
      "action": "ecs:listServicesByNamespace",
      "condition": null
    },
    {
      "action": "ecs:listTagsForResource",
      "condition": null
    },
    {
      "action": "ecs:listTaskDefinitionFamilies",
      "condition": null
    },
    {
      "action": "ecs:listTaskDefinitions",
      "condition": null
    },
    {
      "action": "ecs:listTasks",
      "condition": null
    },
    {
      "action": "eks:describeAccessEntry",
      "condition": null
    },
    {
      "action": "eks:describeAddon",
      "condition": null
    },
    {
      "action": "eks:describeAddonConfiguration",
      "condition": null
    },
    {
      "action": "eks:describeAddonVersions",
      "condition": null
    },
    {
      "action": "eks:describeCluster",
      "condition": null
    },
    {
      "action": "eks:describeEksAnywhereSubscription",
      "condition": null
    },
    {
      "action": "eks:describeFargateProfile",
      "condition": null
    },
    {
      "action": "eks:describeIdentityProviderConfig",
      "condition": null
    },
    {
      "action": "eks:describeNodegroup",
      "condition": null
    },
    {
      "action": "eks:describeUpdate",
      "condition": null
    },
    {
      "action": "eks:listAccessEntries",
      "condition": null
    },
    {
      "action": "eks:listAccessPolicies",
      "condition": null
    },
    {
      "action": "eks:listAddons",
      "condition": null
    },
    {
      "action": "eks:listAssociatedAccessPolicies",
      "condition": null
    },
    {
      "action": "eks:listClusters",
      "condition": null
    },
    {
      "action": "eks:listEksAnywhereSubscriptions",
      "condition": null
    },
    {
      "action": "eks:listFargateProfiles",
      "condition": null
    },
    {
      "action": "eks:listIdentityProviderConfigs",
      "condition": null
    },
    {
      "action": "eks:listNodegroups",
      "condition": null
    },
    {
      "action": "eks:listUpdates",
      "condition": null
    },
    {
      "action": "elasticache:describeCacheClusters",
      "condition": null
    },
    {
      "action": "elasticache:describeCacheEngineVersions",
      "condition": null
    },
    {
      "action": "elasticache:describeCacheParameterGroups",
      "condition": null
    },
    {
      "action": "elasticache:describeCacheParameters",
      "condition": null
    },
    {
      "action": "elasticache:describeCacheSecurityGroups",
      "condition": null
    },
    {
      "action": "elasticache:describeCacheSubnetGroups",
      "condition": null
    },
    {
      "action": "elasticache:describeEngineDefaultParameters",
      "condition": null
    },
    {
      "action": "elasticache:describeEvents",
      "condition": null
    },
    {
      "action": "elasticache:describeGlobalReplicationGroups",
      "condition": null
    },
    {
      "action": "elasticache:describeReplicationGroups",
      "condition": null
    },
    {
      "action": "elasticache:describeReservedCacheNodes",
      "condition": null
    },
    {
      "action": "elasticache:describeReservedCacheNodesOfferings",
      "condition": null
    },
    {
      "action": "elasticache:describeServerlessCaches",
      "condition": null
    },
    {
      "action": "elasticache:describeServerlessCacheSnapshots",
      "condition": null
    },
    {
      "action": "elasticache:describeServiceUpdates",
      "condition": null
    },
    {
      "action": "elasticache:describeSnapshots",
      "condition": null
    },
    {
      "action": "elasticache:describeUpdateActions",
      "condition": null
    },
    {
      "action": "elasticache:describeUserGroups",
      "condition": null
    },
    {
      "action": "elasticache:describeUsers",
      "condition": null
    },
    {
      "action": "elasticache:listAllowedNodeTypeModifications",
      "condition": null
    },
    {
      "action": "elasticache:listTagsForResource",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:checkDNSAvailability",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeAccountAttributes",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeApplicationVersions",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeApplications",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeConfigurationOptions",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeEnvironmentHealth",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeEnvironmentManagedActionHistory",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeEnvironmentManagedActions",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeEnvironmentResources",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeEnvironments",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeEvents",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describeInstancesHealth",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:describePlatformVersion",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:listAvailableSolutionStacks",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:listPlatformBranches",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:listPlatformVersions",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:validateConfigurationSettings",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeAccessPoints",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeFileSystemPolicy",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeFileSystems",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeMountTargets",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeMountTargetSecurityGroups",
      "condition": null
    },
    {
      "action": "elasticfilesystem:describeTags",
      "condition": null
    },
    {
      "action": "elasticfilesystem:listTagsForResource",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeAccountLimits",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeInstanceHealth",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeListenerCertificates",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeLoadBalancerAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeLoadBalancerPolicies",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeLoadBalancerPolicyTypes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeRules",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeSSLPolicies",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeTags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeTargetGroupAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeTargetGroups",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:describeTargetHealth",
      "condition": null
    },
    {
      "action": "elasticmapreduce:describeCluster",
      "condition": null
    },
    {
      "action": "elasticmapreduce:describeNotebookExecution",
      "condition": null
    },
    {
      "action": "elasticmapreduce:describeReleaseLabel",
      "condition": null
    },
    {
      "action": "elasticmapreduce:describeSecurityConfiguration",
      "condition": null
    },
    {
      "action": "elasticmapreduce:describeStep",
      "condition": null
    },
    {
      "action": "elasticmapreduce:describeStudio",
      "condition": null
    },
    {
      "action": "elasticmapreduce:getAutoTerminationPolicy",
      "condition": null
    },
    {
      "action": "elasticmapreduce:getBlockPublicAccessConfiguration",
      "condition": null
    },
    {
      "action": "elasticmapreduce:getManagedScalingPolicy",
      "condition": null
    },
    {
      "action": "elasticmapreduce:getStudioSessionMapping",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listBootstrapActions",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listClusters",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listInstanceFleets",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listInstanceGroups",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listInstances",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listNotebookExecutions",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listReleaseLabels",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listSecurityConfigurations",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listSteps",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listStudios",
      "condition": null
    },
    {
      "action": "elasticmapreduce:listStudioSessionMappings",
      "condition": null
    },
    {
      "action": "elastictranscoder:listJobsByPipeline",
      "condition": null
    },
    {
      "action": "elastictranscoder:listJobsByStatus",
      "condition": null
    },
    {
      "action": "elastictranscoder:listPipelines",
      "condition": null
    },
    {
      "action": "elastictranscoder:listPresets",
      "condition": null
    },
    {
      "action": "elastictranscoder:readPipeline",
      "condition": null
    },
    {
      "action": "elastictranscoder:readPreset",
      "condition": null
    },
    {
      "action": "emr-containers:describeJobRun",
      "condition": null
    },
    {
      "action": "emr-containers:describeJobTemplate",
      "condition": null
    },
    {
      "action": "emr-containers:describeManagedEndpoint",
      "condition": null
    },
    {
      "action": "emr-containers:describeVirtualCluster",
      "condition": null
    },
    {
      "action": "emr-containers:listJobRuns",
      "condition": null
    },
    {
      "action": "emr-containers:listJobTemplates",
      "condition": null
    },
    {
      "action": "emr-containers:listManagedEndpoints",
      "condition": null
    },
    {
      "action": "emr-containers:listVirtualClusters",
      "condition": null
    },
    {
      "action": "emr-serverless:getApplication",
      "condition": null
    },
    {
      "action": "emr-serverless:getJobRun",
      "condition": null
    },
    {
      "action": "emr-serverless:listApplications",
      "condition": null
    },
    {
      "action": "es:describeDomain",
      "condition": null
    },
    {
      "action": "es:describeDomainAutoTunes",
      "condition": null
    },
    {
      "action": "es:describeDomainChangeProgress",
      "condition": null
    },
    {
      "action": "es:describeDomainConfig",
      "condition": null
    },
    {
      "action": "es:describeDomains",
      "condition": null
    },
    {
      "action": "es:describeDryRunProgress",
      "condition": null
    },
    {
      "action": "es:describeElasticsearchDomain",
      "condition": null
    },
    {
      "action": "es:describeElasticsearchDomainConfig",
      "condition": null
    },
    {
      "action": "es:describeElasticsearchDomains",
      "condition": null
    },
    {
      "action": "es:describeInboundConnections",
      "condition": null
    },
    {
      "action": "es:describeInstanceTypeLimits",
      "condition": null
    },
    {
      "action": "es:describeOutboundConnections",
      "condition": null
    },
    {
      "action": "es:describePackages",
      "condition": null
    },
    {
      "action": "es:describeReservedInstanceOfferings",
      "condition": null
    },
    {
      "action": "es:describeReservedInstances",
      "condition": null
    },
    {
      "action": "es:describeVpcEndpoints",
      "condition": null
    },
    {
      "action": "es:getCompatibleVersions",
      "condition": null
    },
    {
      "action": "es:getPackageVersionHistory",
      "condition": null
    },
    {
      "action": "es:getUpgradeHistory",
      "condition": null
    },
    {
      "action": "es:getUpgradeStatus",
      "condition": null
    },
    {
      "action": "es:listDomainNames",
      "condition": null
    },
    {
      "action": "es:listDomainsForPackage",
      "condition": null
    },
    {
      "action": "es:listInstanceTypeDetails",
      "condition": null
    },
    {
      "action": "es:listPackagesForDomain",
      "condition": null
    },
    {
      "action": "es:listScheduledActions",
      "condition": null
    },
    {
      "action": "es:listTags",
      "condition": null
    },
    {
      "action": "es:listVersions",
      "condition": null
    },
    {
      "action": "es:listVpcEndpointAccess",
      "condition": null
    },
    {
      "action": "es:listVpcEndpoints",
      "condition": null
    },
    {
      "action": "es:listVpcEndpointsForDomain",
      "condition": null
    },
    {
      "action": "evidently:getExperiment",
      "condition": null
    },
    {
      "action": "evidently:getFeature",
      "condition": null
    },
    {
      "action": "evidently:getLaunch",
      "condition": null
    },
    {
      "action": "evidently:getProject",
      "condition": null
    },
    {
      "action": "evidently:getSegment",
      "condition": null
    },
    {
      "action": "evidently:listExperiments",
      "condition": null
    },
    {
      "action": "evidently:listFeatures",
      "condition": null
    },
    {
      "action": "evidently:listLaunches",
      "condition": null
    },
    {
      "action": "evidently:listProjects",
      "condition": null
    },
    {
      "action": "evidently:listSegments",
      "condition": null
    },
    {
      "action": "evidently:listSegmentReferences",
      "condition": null
    },
    {
      "action": "events:describeApiDestination",
      "condition": null
    },
    {
      "action": "events:describeArchive",
      "condition": null
    },
    {
      "action": "events:describeConnection",
      "condition": null
    },
    {
      "action": "events:describeEndpoint",
      "condition": null
    },
    {
      "action": "events:describeEventBus",
      "condition": null
    },
    {
      "action": "events:describeEventSource",
      "condition": null
    },
    {
      "action": "events:describePartnerEventSource",
      "condition": null
    },
    {
      "action": "events:describeReplay",
      "condition": null
    },
    {
      "action": "events:describeRule",
      "condition": null
    },
    {
      "action": "events:listArchives",
      "condition": null
    },
    {
      "action": "events:listApiDestinations",
      "condition": null
    },
    {
      "action": "events:listConnections",
      "condition": null
    },
    {
      "action": "events:listEndpoints",
      "condition": null
    },
    {
      "action": "events:listEventBuses",
      "condition": null
    },
    {
      "action": "events:listEventSources",
      "condition": null
    },
    {
      "action": "events:listPartnerEventSourceAccounts",
      "condition": null
    },
    {
      "action": "events:listPartnerEventSources",
      "condition": null
    },
    {
      "action": "events:listReplays",
      "condition": null
    },
    {
      "action": "events:listRuleNamesByTarget",
      "condition": null
    },
    {
      "action": "events:listRules",
      "condition": null
    },
    {
      "action": "events:listTargetsByRule",
      "condition": null
    },
    {
      "action": "events:testEventPattern",
      "condition": null
    },
    {
      "action": "firehose:describeDeliveryStream",
      "condition": null
    },
    {
      "action": "firehose:listDeliveryStreams",
      "condition": null
    },
    {
      "action": "fms:getAdminAccount",
      "condition": null
    },
    {
      "action": "fms:getComplianceDetail",
      "condition": null
    },
    {
      "action": "fms:getNotificationChannel",
      "condition": null
    },
    {
      "action": "fms:getPolicy",
      "condition": null
    },
    {
      "action": "fms:getProtectionStatus",
      "condition": null
    },
    {
      "action": "fms:listComplianceStatus",
      "condition": null
    },
    {
      "action": "fms:listMemberAccounts",
      "condition": null
    },
    {
      "action": "fms:listPolicies",
      "condition": null
    },
    {
      "action": "forecast:describeDataset",
      "condition": null
    },
    {
      "action": "forecast:describeDatasetGroup",
      "condition": null
    },
    {
      "action": "forecast:describeDatasetImportJob",
      "condition": null
    },
    {
      "action": "forecast:describeForecast",
      "condition": null
    },
    {
      "action": "forecast:describeForecastExportJob",
      "condition": null
    },
    {
      "action": "forecast:describePredictor",
      "condition": null
    },
    {
      "action": "forecast:getAccuracyMetrics",
      "condition": null
    },
    {
      "action": "forecast:listDatasetGroups",
      "condition": null
    },
    {
      "action": "forecast:listDatasetImportJobs",
      "condition": null
    },
    {
      "action": "forecast:listDatasets",
      "condition": null
    },
    {
      "action": "forecast:listForecastExportJobs",
      "condition": null
    },
    {
      "action": "forecast:listForecasts",
      "condition": null
    },
    {
      "action": "forecast:listPredictors",
      "condition": null
    },
    {
      "action": "fsx:describeBackups",
      "condition": null
    },
    {
      "action": "fsx:describeDataRepositoryAssociations",
      "condition": null
    },
    {
      "action": "fsx:describeDataRepositoryTasks",
      "condition": null
    },
    {
      "action": "fsx:describeFileCaches",
      "condition": null
    },
    {
      "action": "fsx:describeFileSystems",
      "condition": null
    },
    {
      "action": "fsx:describeSnapshots",
      "condition": null
    },
    {
      "action": "fsx:describeStorageVirtualMachines",
      "condition": null
    },
    {
      "action": "fsx:describeVolumes",
      "condition": null
    },
    {
      "action": "fsx:listTagsForResource",
      "condition": null
    },
    {
      "action": "gamelift:describeAlias",
      "condition": null
    },
    {
      "action": "gamelift:describeBuild",
      "condition": null
    },
    {
      "action": "gamelift:describeEC2InstanceLimits",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetAttributes",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetCapacity",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetEvents",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetLocationAttributes",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetLocationCapacity",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetLocationUtilization",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetPortSettings",
      "condition": null
    },
    {
      "action": "gamelift:describeFleetUtilization",
      "condition": null
    },
    {
      "action": "gamelift:describeGameServer",
      "condition": null
    },
    {
      "action": "gamelift:describeGameServerGroup",
      "condition": null
    },
    {
      "action": "gamelift:describeGameSessionDetails",
      "condition": null
    },
    {
      "action": "gamelift:describeGameSessionPlacement",
      "condition": null
    },
    {
      "action": "gamelift:describeGameSessionQueues",
      "condition": null
    },
    {
      "action": "gamelift:describeGameSessions",
      "condition": null
    },
    {
      "action": "gamelift:describeInstances",
      "condition": null
    },
    {
      "action": "gamelift:describeMatchmaking",
      "condition": null
    },
    {
      "action": "gamelift:describeMatchmakingConfigurations",
      "condition": null
    },
    {
      "action": "gamelift:describeMatchmakingRuleSets",
      "condition": null
    },
    {
      "action": "gamelift:describePlayerSessions",
      "condition": null
    },
    {
      "action": "gamelift:describeRuntimeConfiguration",
      "condition": null
    },
    {
      "action": "gamelift:describeScalingPolicies",
      "condition": null
    },
    {
      "action": "gamelift:describeScript",
      "condition": null
    },
    {
      "action": "gamelift:listAliases",
      "condition": null
    },
    {
      "action": "gamelift:listBuilds",
      "condition": null
    },
    {
      "action": "gamelift:listFleets",
      "condition": null
    },
    {
      "action": "gamelift:listGameServerGroups",
      "condition": null
    },
    {
      "action": "gamelift:listGameServers",
      "condition": null
    },
    {
      "action": "gamelift:listScripts",
      "condition": null
    },
    {
      "action": "gamelift:resolveAlias",
      "condition": null
    },
    {
      "action": "glacier:describeJob",
      "condition": null
    },
    {
      "action": "glacier:describeVault",
      "condition": null
    },
    {
      "action": "glacier:getDataRetrievalPolicy",
      "condition": null
    },
    {
      "action": "glacier:getVaultAccessPolicy",
      "condition": null
    },
    {
      "action": "glacier:getVaultLock",
      "condition": null
    },
    {
      "action": "glacier:getVaultNotifications",
      "condition": null
    },
    {
      "action": "glacier:listJobs",
      "condition": null
    },
    {
      "action": "glacier:listTagsForVault",
      "condition": null
    },
    {
      "action": "glacier:listVaults",
      "condition": null
    },
    {
      "action": "globalaccelerator:describeAccelerator",
      "condition": null
    },
    {
      "action": "globalaccelerator:describeAcceleratorAttributes",
      "condition": null
    },
    {
      "action": "globalaccelerator:describeEndpointGroup",
      "condition": null
    },
    {
      "action": "globalaccelerator:describeListener",
      "condition": null
    },
    {
      "action": "globalaccelerator:listAccelerators",
      "condition": null
    },
    {
      "action": "globalaccelerator:listEndpointGroups",
      "condition": null
    },
    {
      "action": "globalaccelerator:listListeners",
      "condition": null
    },
    {
      "action": "glue:batchGetBlueprints",
      "condition": null
    },
    {
      "action": "glue:batchGetCrawlers",
      "condition": null
    },
    {
      "action": "glue:batchGetDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:batchGetJobs",
      "condition": null
    },
    {
      "action": "glue:batchGetPartition",
      "condition": null
    },
    {
      "action": "glue:batchGetTriggers",
      "condition": null
    },
    {
      "action": "glue:batchGetWorkflows",
      "condition": null
    },
    {
      "action": "glue:checkSchemaVersionValidity",
      "condition": null
    },
    {
      "action": "glue:getBlueprint",
      "condition": null
    },
    {
      "action": "glue:getBlueprintRun",
      "condition": null
    },
    {
      "action": "glue:getBlueprintRuns",
      "condition": null
    },
    {
      "action": "glue:getCatalogImportStatus",
      "condition": null
    },
    {
      "action": "glue:getClassifier",
      "condition": null
    },
    {
      "action": "glue:getClassifiers",
      "condition": null
    },
    {
      "action": "glue:getColumnStatisticsForPartition",
      "condition": null
    },
    {
      "action": "glue:getColumnStatisticsForTable",
      "condition": null
    },
    {
      "action": "glue:getCrawler",
      "condition": null
    },
    {
      "action": "glue:getCrawlerMetrics",
      "condition": null
    },
    {
      "action": "glue:getCrawlers",
      "condition": null
    },
    {
      "action": "glue:getCustomEntityType",
      "condition": null
    },
    {
      "action": "glue:getDatabase",
      "condition": null
    },
    {
      "action": "glue:getDatabases",
      "condition": null
    },
    {
      "action": "glue:getDataflowGraph",
      "condition": null
    },
    {
      "action": "glue:getDataQualityResult",
      "condition": null
    },
    {
      "action": "glue:getDataQualityRuleRecommendationRun",
      "condition": null
    },
    {
      "action": "glue:getDataQualityRuleset",
      "condition": null
    },
    {
      "action": "glue:getDataQualityRulesetEvaluationRun",
      "condition": null
    },
    {
      "action": "glue:getDevEndpoint",
      "condition": null
    },
    {
      "action": "glue:getDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:getJob",
      "condition": null
    },
    {
      "action": "glue:getJobRun",
      "condition": null
    },
    {
      "action": "glue:getJobRuns",
      "condition": null
    },
    {
      "action": "glue:getJobs",
      "condition": null
    },
    {
      "action": "glue:getMapping",
      "condition": null
    },
    {
      "action": "glue:getMLTaskRun",
      "condition": null
    },
    {
      "action": "glue:getMLTaskRuns",
      "condition": null
    },
    {
      "action": "glue:getMLTransform",
      "condition": null
    },
    {
      "action": "glue:getMLTransforms",
      "condition": null
    },
    {
      "action": "glue:getPartition",
      "condition": null
    },
    {
      "action": "glue:getPartitionIndexes",
      "condition": null
    },
    {
      "action": "glue:getPartitions",
      "condition": null
    },
    {
      "action": "glue:getRegistry",
      "condition": null
    },
    {
      "action": "glue:getResourcePolicies",
      "condition": null
    },
    {
      "action": "glue:getResourcePolicy",
      "condition": null
    },
    {
      "action": "glue:getSchema",
      "condition": null
    },
    {
      "action": "glue:getSchemaByDefinition",
      "condition": null
    },
    {
      "action": "glue:getSchemaVersion",
      "condition": null
    },
    {
      "action": "glue:getSchemaVersionsDiff",
      "condition": null
    },
    {
      "action": "glue:getSession",
      "condition": null
    },
    {
      "action": "glue:getStatement",
      "condition": null
    },
    {
      "action": "glue:getTable",
      "condition": null
    },
    {
      "action": "glue:getTables",
      "condition": null
    },
    {
      "action": "glue:getTableVersions",
      "condition": null
    },
    {
      "action": "glue:getTrigger",
      "condition": null
    },
    {
      "action": "glue:getTriggers",
      "condition": null
    },
    {
      "action": "glue:getUserDefinedFunction",
      "condition": null
    },
    {
      "action": "glue:getUserDefinedFunctions",
      "condition": null
    },
    {
      "action": "glue:getWorkflow",
      "condition": null
    },
    {
      "action": "glue:getWorkflowRun",
      "condition": null
    },
    {
      "action": "glue:getWorkflowRuns",
      "condition": null
    },
    {
      "action": "glue:listCrawlers",
      "condition": null
    },
    {
      "action": "glue:listCrawls",
      "condition": null
    },
    {
      "action": "glue:listDataQualityResults",
      "condition": null
    },
    {
      "action": "glue:listDataQualityRuleRecommendationRuns",
      "condition": null
    },
    {
      "action": "glue:listDataQualityRulesetEvaluationRuns",
      "condition": null
    },
    {
      "action": "glue:listDataQualityRulesets",
      "condition": null
    },
    {
      "action": "glue:listDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:listMLTransforms",
      "condition": null
    },
    {
      "action": "glue:listRegistries",
      "condition": null
    },
    {
      "action": "glue:listSchemas",
      "condition": null
    },
    {
      "action": "glue:listSchemaVersions",
      "condition": null
    },
    {
      "action": "glue:listSessions",
      "condition": null
    },
    {
      "action": "glue:listStatements",
      "condition": null
    },
    {
      "action": "glue:querySchemaVersionMetadata",
      "condition": null
    },
    {
      "action": "grafana:describeWorkspace",
      "condition": null
    },
    {
      "action": "grafana:describeWorkspaceAuthentication",
      "condition": null
    },
    {
      "action": "grafana:listPermissions",
      "condition": null
    },
    {
      "action": "grafana:listVersions",
      "condition": null
    },
    {
      "action": "grafana:listWorkspaces",
      "condition": null
    },
    {
      "action": "greengrass:getConnectivityInfo",
      "condition": null
    },
    {
      "action": "greengrass:getCoreDefinition",
      "condition": null
    },
    {
      "action": "greengrass:getCoreDefinitionVersion",
      "condition": null
    },
    {
      "action": "greengrass:getDeploymentStatus",
      "condition": null
    },
    {
      "action": "greengrass:getDeviceDefinition",
      "condition": null
    },
    {
      "action": "greengrass:getDeviceDefinitionVersion",
      "condition": null
    },
    {
      "action": "greengrass:getFunctionDefinition",
      "condition": null
    },
    {
      "action": "greengrass:getFunctionDefinitionVersion",
      "condition": null
    },
    {
      "action": "greengrass:getGroup",
      "condition": null
    },
    {
      "action": "greengrass:getGroupCertificateAuthority",
      "condition": null
    },
    {
      "action": "greengrass:getGroupVersion",
      "condition": null
    },
    {
      "action": "greengrass:getLoggerDefinition",
      "condition": null
    },
    {
      "action": "greengrass:getLoggerDefinitionVersion",
      "condition": null
    },
    {
      "action": "greengrass:getResourceDefinitionVersion",
      "condition": null
    },
    {
      "action": "greengrass:getServiceRoleForAccount",
      "condition": null
    },
    {
      "action": "greengrass:getSubscriptionDefinition",
      "condition": null
    },
    {
      "action": "greengrass:getSubscriptionDefinitionVersion",
      "condition": null
    },
    {
      "action": "greengrass:listCoreDefinitions",
      "condition": null
    },
    {
      "action": "greengrass:listCoreDefinitionVersions",
      "condition": null
    },
    {
      "action": "greengrass:listDeployments",
      "condition": null
    },
    {
      "action": "greengrass:listDeviceDefinitions",
      "condition": null
    },
    {
      "action": "greengrass:listDeviceDefinitionVersions",
      "condition": null
    },
    {
      "action": "greengrass:listFunctionDefinitions",
      "condition": null
    },
    {
      "action": "greengrass:listFunctionDefinitionVersions",
      "condition": null
    },
    {
      "action": "greengrass:listGroups",
      "condition": null
    },
    {
      "action": "greengrass:listGroupVersions",
      "condition": null
    },
    {
      "action": "greengrass:listLoggerDefinitions",
      "condition": null
    },
    {
      "action": "greengrass:listLoggerDefinitionVersions",
      "condition": null
    },
    {
      "action": "greengrass:listResourceDefinitions",
      "condition": null
    },
    {
      "action": "greengrass:listResourceDefinitionVersions",
      "condition": null
    },
    {
      "action": "greengrass:listSubscriptionDefinitions",
      "condition": null
    },
    {
      "action": "greengrass:listSubscriptionDefinitionVersions",
      "condition": null
    },
    {
      "action": "guardduty:getDetector",
      "condition": null
    },
    {
      "action": "guardduty:getFindings",
      "condition": null
    },
    {
      "action": "guardduty:getFindingsStatistics",
      "condition": null
    },
    {
      "action": "guardduty:getInvitationsCount",
      "condition": null
    },
    {
      "action": "guardduty:getIPSet",
      "condition": null
    },
    {
      "action": "guardduty:getMasterAccount",
      "condition": null
    },
    {
      "action": "guardduty:getMembers",
      "condition": null
    },
    {
      "action": "guardduty:getThreatIntelSet",
      "condition": null
    },
    {
      "action": "guardduty:listDetectors",
      "condition": null
    },
    {
      "action": "guardduty:listFindings",
      "condition": null
    },
    {
      "action": "guardduty:listInvitations",
      "condition": null
    },
    {
      "action": "guardduty:listIPSets",
      "condition": null
    },
    {
      "action": "guardduty:listMembers",
      "condition": null
    },
    {
      "action": "guardduty:listThreatIntelSets",
      "condition": null
    },
    {
      "action": "health:describeAffectedAccountsForOrganization",
      "condition": null
    },
    {
      "action": "health:describeAffectedEntities",
      "condition": null
    },
    {
      "action": "health:describeAffectedEntitiesForOrganization",
      "condition": null
    },
    {
      "action": "health:describeEntityAggregates",
      "condition": null
    },
    {
      "action": "health:describeEntityAggregatesForOrganization",
      "condition": null
    },
    {
      "action": "health:describeEventAggregates",
      "condition": null
    },
    {
      "action": "health:describeEventDetails",
      "condition": null
    },
    {
      "action": "health:describeEventDetailsForOrganization",
      "condition": null
    },
    {
      "action": "health:describeEvents",
      "condition": null
    },
    {
      "action": "health:describeEventsForOrganization",
      "condition": null
    },
    {
      "action": "health:describeEventTypes",
      "condition": null
    },
    {
      "action": "health:describeHealthServiceStatusForOrganization",
      "condition": null
    },
    {
      "action": "iam:getAccessKeyLastUsed",
      "condition": null
    },
    {
      "action": "iam:getAccountAuthorizationDetails",
      "condition": null
    },
    {
      "action": "iam:getAccountPasswordPolicy",
      "condition": null
    },
    {
      "action": "iam:getAccountSummary",
      "condition": null
    },
    {
      "action": "iam:getContextKeysForCustomPolicy",
      "condition": null
    },
    {
      "action": "iam:getContextKeysForPrincipalPolicy",
      "condition": null
    },
    {
      "action": "iam:getCredentialReport",
      "condition": null
    },
    {
      "action": "iam:getGroup",
      "condition": null
    },
    {
      "action": "iam:getGroupPolicy",
      "condition": null
    },
    {
      "action": "iam:getInstanceProfile",
      "condition": null
    },
    {
      "action": "iam:getLoginProfile",
      "condition": null
    },
    {
      "action": "iam:getOpenIDConnectProvider",
      "condition": null
    },
    {
      "action": "iam:getPolicy",
      "condition": null
    },
    {
      "action": "iam:getPolicyVersion",
      "condition": null
    },
    {
      "action": "iam:getRole",
      "condition": null
    },
    {
      "action": "iam:getRolePolicy",
      "condition": null
    },
    {
      "action": "iam:getSAMLProvider",
      "condition": null
    },
    {
      "action": "iam:getServerCertificate",
      "condition": null
    },
    {
      "action": "iam:getServiceLinkedRoleDeletionStatus",
      "condition": null
    },
    {
      "action": "iam:getSSHPublicKey",
      "condition": null
    },
    {
      "action": "iam:getUser",
      "condition": null
    },
    {
      "action": "iam:getUserPolicy",
      "condition": null
    },
    {
      "action": "iam:listAccessKeys",
      "condition": null
    },
    {
      "action": "iam:listAccountAliases",
      "condition": null
    },
    {
      "action": "iam:listAttachedGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:listAttachedRolePolicies",
      "condition": null
    },
    {
      "action": "iam:listAttachedUserPolicies",
      "condition": null
    },
    {
      "action": "iam:listEntitiesForPolicy",
      "condition": null
    },
    {
      "action": "iam:listGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:listGroups",
      "condition": null
    },
    {
      "action": "iam:listGroupsForUser",
      "condition": null
    },
    {
      "action": "iam:listInstanceProfiles",
      "condition": null
    },
    {
      "action": "iam:listInstanceProfilesForRole",
      "condition": null
    },
    {
      "action": "iam:listMFADevices",
      "condition": null
    },
    {
      "action": "iam:listOpenIDConnectProviders",
      "condition": null
    },
    {
      "action": "iam:listPolicies",
      "condition": null
    },
    {
      "action": "iam:listPolicyVersions",
      "condition": null
    },
    {
      "action": "iam:listRolePolicies",
      "condition": null
    },
    {
      "action": "iam:listRoles",
      "condition": null
    },
    {
      "action": "iam:listSAMLProviders",
      "condition": null
    },
    {
      "action": "iam:listServerCertificates",
      "condition": null
    },
    {
      "action": "iam:listSigningCertificates",
      "condition": null
    },
    {
      "action": "iam:listSSHPublicKeys",
      "condition": null
    },
    {
      "action": "iam:listUserPolicies",
      "condition": null
    },
    {
      "action": "iam:listUsers",
      "condition": null
    },
    {
      "action": "iam:listVirtualMFADevices",
      "condition": null
    },
    {
      "action": "iam:simulateCustomPolicy",
      "condition": null
    },
    {
      "action": "iam:simulatePrincipalPolicy",
      "condition": null
    },
    {
      "action": "imagebuilder:getComponent",
      "condition": null
    },
    {
      "action": "imagebuilder:getComponentPolicy",
      "condition": null
    },
    {
      "action": "imagebuilder:getContainerRecipe",
      "condition": null
    },
    {
      "action": "imagebuilder:getDistributionConfiguration",
      "condition": null
    },
    {
      "action": "imagebuilder:getImage",
      "condition": null
    },
    {
      "action": "imagebuilder:getImagePipeline",
      "condition": null
    },
    {
      "action": "imagebuilder:getImagePolicy",
      "condition": null
    },
    {
      "action": "imagebuilder:getImageRecipe",
      "condition": null
    },
    {
      "action": "imagebuilder:getImageRecipePolicy",
      "condition": null
    },
    {
      "action": "imagebuilder:getInfrastructureConfiguration",
      "condition": null
    },
    {
      "action": "imagebuilder:getLifecycleExecution",
      "condition": null
    },
    {
      "action": "imagebuilder:getLifecyclePolicy",
      "condition": null
    },
    {
      "action": "imagebuilder:getWorkflow",
      "condition": null
    },
    {
      "action": "imagebuilder:getWorkflowExecution",
      "condition": null
    },
    {
      "action": "imagebuilder:getWorkflowStepExecution",
      "condition": null
    },
    {
      "action": "imagebuilder:listComponentBuildVersions",
      "condition": null
    },
    {
      "action": "imagebuilder:listComponents",
      "condition": null
    },
    {
      "action": "imagebuilder:listContainerRecipes",
      "condition": null
    },
    {
      "action": "imagebuilder:listDistributionConfigurations",
      "condition": null
    },
    {
      "action": "imagebuilder:listImageBuildVersions",
      "condition": null
    },
    {
      "action": "imagebuilder:listImagePipelineImages",
      "condition": null
    },
    {
      "action": "imagebuilder:listImagePipelines",
      "condition": null
    },
    {
      "action": "imagebuilder:listImageRecipes",
      "condition": null
    },
    {
      "action": "imagebuilder:listImages",
      "condition": null
    },
    {
      "action": "imagebuilder:listImageScanFindingAggregations",
      "condition": null
    },
    {
      "action": "imagebuilder:listInfrastructureConfigurations",
      "condition": null
    },
    {
      "action": "imagebuilder:listLifecycleExecutions",
      "condition": null
    },
    {
      "action": "imagebuilder:listLifecycleExecutionResources",
      "condition": null
    },
    {
      "action": "imagebuilder:listLifecyclePolicies",
      "condition": null
    },
    {
      "action": "imagebuilder:listWorkflowBuildVersions",
      "condition": null
    },
    {
      "action": "imagebuilder:listWorkflowExecutions",
      "condition": null
    },
    {
      "action": "imagebuilder:listWorkflows",
      "condition": null
    },
    {
      "action": "imagebuilder:listWorkflowStepExecutions",
      "condition": null
    },
    {
      "action": "imagebuilder:listTagsForResource",
      "condition": null
    },
    {
      "action": "inspector:describeAssessmentRuns",
      "condition": null
    },
    {
      "action": "inspector:describeAssessmentTargets",
      "condition": null
    },
    {
      "action": "inspector:describeAssessmentTemplates",
      "condition": null
    },
    {
      "action": "inspector:describeCrossAccountAccessRole",
      "condition": null
    },
    {
      "action": "inspector:describeResourceGroups",
      "condition": null
    },
    {
      "action": "inspector:describeRulesPackages",
      "condition": null
    },
    {
      "action": "inspector:getTelemetryMetadata",
      "condition": null
    },
    {
      "action": "inspector:listAssessmentRunAgents",
      "condition": null
    },
    {
      "action": "inspector:listAssessmentRuns",
      "condition": null
    },
    {
      "action": "inspector:listAssessmentTargets",
      "condition": null
    },
    {
      "action": "inspector:listAssessmentTemplates",
      "condition": null
    },
    {
      "action": "inspector:listEventSubscriptions",
      "condition": null
    },
    {
      "action": "inspector:listRulesPackages",
      "condition": null
    },
    {
      "action": "inspector:listTagsForResource",
      "condition": null
    },
    {
      "action": "inspector2:batchGetAccountStatus",
      "condition": null
    },
    {
      "action": "inspector2:batchGetFreeTrialInfo",
      "condition": null
    },
    {
      "action": "inspector2:describeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "inspector2:getDelegatedAdminAccount",
      "condition": null
    },
    {
      "action": "inspector2:getMember",
      "condition": null
    },
    {
      "action": "inspector2:getSbomExport",
      "condition": null
    },
    {
      "action": "inspector2:listCisScanConfigurations",
      "condition": null
    },
    {
      "action": "inspector2:listCisScanResultsAggregatedByChecks",
      "condition": null
    },
    {
      "action": "inspector2:listCisScanResultsAggregatedByTargetResource",
      "condition": null
    },
    {
      "action": "inspector2:listCisScans",
      "condition": null
    },
    {
      "action": "inspector2:listCoverage",
      "condition": null
    },
    {
      "action": "inspector2:listDelegatedAdminAccounts",
      "condition": null
    },
    {
      "action": "inspector2:listFilters",
      "condition": null
    },
    {
      "action": "inspector2:listFindings",
      "condition": null
    },
    {
      "action": "inspector2:listMembers",
      "condition": null
    },
    {
      "action": "inspector2:listUsageTotals",
      "condition": null
    },
    {
      "action": "inspector-scan:scanSbom",
      "condition": null
    },
    {
      "action": "internetmonitor:getMonitor",
      "condition": null
    },
    {
      "action": "internetmonitor:listMonitors",
      "condition": null
    },
    {
      "action": "internetmonitor:getHealthEvent",
      "condition": null
    },
    {
      "action": "internetmonitor:listHealthEvents",
      "condition": null
    },
    {
      "action": "iot:describeAuthorizer",
      "condition": null
    },
    {
      "action": "iot:describeCACertificate",
      "condition": null
    },
    {
      "action": "iot:describeCertificate",
      "condition": null
    },
    {
      "action": "iot:describeDefaultAuthorizer",
      "condition": null
    },
    {
      "action": "iot:describeDomainConfiguration",
      "condition": null
    },
    {
      "action": "iot:describeEndpoint",
      "condition": null
    },
    {
      "action": "iot:describeIndex",
      "condition": null
    },
    {
      "action": "iot:describeJobExecution",
      "condition": null
    },
    {
      "action": "iot:describeThing",
      "condition": null
    },
    {
      "action": "iot:describeThingGroup",
      "condition": null
    },
    {
      "action": "iot:describeTunnel",
      "condition": null
    },
    {
      "action": "iot:getEffectivePolicies",
      "condition": null
    },
    {
      "action": "iot:getIndexingConfiguration",
      "condition": null
    },
    {
      "action": "iot:getLoggingOptions",
      "condition": null
    },
    {
      "action": "iot:getPolicy",
      "condition": null
    },
    {
      "action": "iot:getPolicyVersion",
      "condition": null
    },
    {
      "action": "iot:getTopicRule",
      "condition": null
    },
    {
      "action": "iot:getV2LoggingOptions",
      "condition": null
    },
    {
      "action": "iot:listAttachedPolicies",
      "condition": null
    },
    {
      "action": "iot:listAuthorizers",
      "condition": null
    },
    {
      "action": "iot:listCACertificates",
      "condition": null
    },
    {
      "action": "iot:listCertificates",
      "condition": null
    },
    {
      "action": "iot:listCertificatesByCA",
      "condition": null
    },
    {
      "action": "iot:listDomainConfigurations",
      "condition": null
    },
    {
      "action": "iot:listJobExecutionsForJob",
      "condition": null
    },
    {
      "action": "iot:listJobExecutionsForThing",
      "condition": null
    },
    {
      "action": "iot:listJobs",
      "condition": null
    },
    {
      "action": "iot:listNamedShadowsForThing",
      "condition": null
    },
    {
      "action": "iot:listOutgoingCertificates",
      "condition": null
    },
    {
      "action": "iot:listPackages",
      "condition": null
    },
    {
      "action": "iot:listPackageVersions",
      "condition": null
    },
    {
      "action": "iot:listPolicies",
      "condition": null
    },
    {
      "action": "iot:listPolicyPrincipals",
      "condition": null
    },
    {
      "action": "iot:listPolicyVersions",
      "condition": null
    },
    {
      "action": "iot:listPrincipalPolicies",
      "condition": null
    },
    {
      "action": "iot:listPrincipalThings",
      "condition": null
    },
    {
      "action": "iot:listRoleAliases",
      "condition": null
    },
    {
      "action": "iot:listTargetsForPolicy",
      "condition": null
    },
    {
      "action": "iot:listThingGroups",
      "condition": null
    },
    {
      "action": "iot:listThingGroupsForThing",
      "condition": null
    },
    {
      "action": "iot:listThingPrincipals",
      "condition": null
    },
    {
      "action": "iot:listThingRegistrationTasks",
      "condition": null
    },
    {
      "action": "iot:listThings",
      "condition": null
    },
    {
      "action": "iot:listThingsInThingGroup",
      "condition": null
    },
    {
      "action": "iot:listThingTypes",
      "condition": null
    },
    {
      "action": "iot:listTopicRules",
      "condition": null
    },
    {
      "action": "iot:listTunnels",
      "condition": null
    },
    {
      "action": "iot:listV2LoggingLevels",
      "condition": null
    },
    {
      "action": "iotevents:describeDetector",
      "condition": null
    },
    {
      "action": "iotevents:describeDetectorModel",
      "condition": null
    },
    {
      "action": "iotevents:describeInput",
      "condition": null
    },
    {
      "action": "iotevents:describeLoggingOptions",
      "condition": null
    },
    {
      "action": "iotevents:listDetectorModels",
      "condition": null
    },
    {
      "action": "iotevents:listDetectorModelVersions",
      "condition": null
    },
    {
      "action": "iotevents:listDetectors",
      "condition": null
    },
    {
      "action": "iotevents:listInputs",
      "condition": null
    },
    {
      "action": "iotfleetwise:getCampaign",
      "condition": null
    },
    {
      "action": "iotfleetwise:getDecoderManifest",
      "condition": null
    },
    {
      "action": "iotfleetwise:getFleet",
      "condition": null
    },
    {
      "action": "iotfleetwise:getModelManifest",
      "condition": null
    },
    {
      "action": "iotfleetwise:getSignalCatalog",
      "condition": null
    },
    {
      "action": "iotfleetwise:getVehicle",
      "condition": null
    },
    {
      "action": "iotfleetwise:getVehicleStatus",
      "condition": null
    },
    {
      "action": "iotfleetwise:listCampaigns",
      "condition": null
    },
    {
      "action": "iotfleetwise:listDecoderManifests",
      "condition": null
    },
    {
      "action": "iotfleetwise:listDecoderManifestNetworkInterfaces",
      "condition": null
    },
    {
      "action": "iotfleetwise:listDecoderManifestSignals",
      "condition": null
    },
    {
      "action": "iotfleetwise:listFleets",
      "condition": null
    },
    {
      "action": "iotfleetwise:listFleetsForVehicle",
      "condition": null
    },
    {
      "action": "iotfleetwise:listModelManifests",
      "condition": null
    },
    {
      "action": "iotfleetwise:listModelManifestNodes",
      "condition": null
    },
    {
      "action": "iotfleetwise:listSignalCatalogs",
      "condition": null
    },
    {
      "action": "iotfleetwise:listSignalCatalogNodes",
      "condition": null
    },
    {
      "action": "iotfleetwise:listVehicles",
      "condition": null
    },
    {
      "action": "iotsitewise:describeAccessPolicy",
      "condition": null
    },
    {
      "action": "iotsitewise:describeAsset",
      "condition": null
    },
    {
      "action": "iotsitewise:describeAssetModel",
      "condition": null
    },
    {
      "action": "iotsitewise:describeAssetProperty",
      "condition": null
    },
    {
      "action": "iotsitewise:describeDashboard",
      "condition": null
    },
    {
      "action": "iotsitewise:describeGateway",
      "condition": null
    },
    {
      "action": "iotsitewise:describeGatewayCapabilityConfiguration",
      "condition": null
    },
    {
      "action": "iotsitewise:describeLoggingOptions",
      "condition": null
    },
    {
      "action": "iotsitewise:describePortal",
      "condition": null
    },
    {
      "action": "iotsitewise:describeProject",
      "condition": null
    },
    {
      "action": "iotsitewise:listAccessPolicies",
      "condition": null
    },
    {
      "action": "iotsitewise:listAssetModels",
      "condition": null
    },
    {
      "action": "iotsitewise:listAssets",
      "condition": null
    },
    {
      "action": "iotsitewise:listAssociatedAssets",
      "condition": null
    },
    {
      "action": "iotsitewise:listDashboards",
      "condition": null
    },
    {
      "action": "iotsitewise:listGateways",
      "condition": null
    },
    {
      "action": "iotsitewise:listPortals",
      "condition": null
    },
    {
      "action": "iotsitewise:listProjectAssets",
      "condition": null
    },
    {
      "action": "iotsitewise:listProjects",
      "condition": null
    },
    {
      "action": "iottwinmaker:getComponentType",
      "condition": null
    },
    {
      "action": "iottwinmaker:getEntity",
      "condition": null
    },
    {
      "action": "iottwinmaker:getPricingPlan",
      "condition": null
    },
    {
      "action": "iottwinmaker:getScene",
      "condition": null
    },
    {
      "action": "iottwinmaker:getWorkspace",
      "condition": null
    },
    {
      "action": "iottwinmaker:listComponentTypes",
      "condition": null
    },
    {
      "action": "iottwinmaker:listEntities",
      "condition": null
    },
    {
      "action": "iottwinmaker:listScenes",
      "condition": null
    },
    {
      "action": "iottwinmaker:getSyncJob",
      "condition": null
    },
    {
      "action": "iottwinmaker:listSyncJobs",
      "condition": null
    },
    {
      "action": "iottwinmaker:listSyncResources",
      "condition": null
    },
    {
      "action": "iottwinmaker:listWorkspaces",
      "condition": null
    },
    {
      "action": "iotwireless:getDestination",
      "condition": null
    },
    {
      "action": "iotwireless:getDeviceProfile",
      "condition": null
    },
    {
      "action": "iotwireless:getPartnerAccount",
      "condition": null
    },
    {
      "action": "iotwireless:getServiceEndpoint",
      "condition": null
    },
    {
      "action": "iotwireless:getServiceProfile",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessDevice",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessDeviceStatistics",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessGateway",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessGatewayCertificate",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessGatewayFirmwareInformation",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessGatewayStatistics",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessGatewayTask",
      "condition": null
    },
    {
      "action": "iotwireless:getWirelessGatewayTaskDefinition",
      "condition": null
    },
    {
      "action": "iotwireless:listDestinations",
      "condition": null
    },
    {
      "action": "iotwireless:listDeviceProfiles",
      "condition": null
    },
    {
      "action": "iotwireless:listPartnerAccounts",
      "condition": null
    },
    {
      "action": "iotwireless:listServiceProfiles",
      "condition": null
    },
    {
      "action": "iotwireless:listTagsForResource",
      "condition": null
    },
    {
      "action": "iotwireless:listWirelessDevices",
      "condition": null
    },
    {
      "action": "iotwireless:listWirelessGateways",
      "condition": null
    },
    {
      "action": "iotwireless:listWirelessGatewayTaskDefinitions",
      "condition": null
    },
    {
      "action": "ivs:getChannel",
      "condition": null
    },
    {
      "action": "ivs:getRecordingConfiguration",
      "condition": null
    },
    {
      "action": "ivs:getStream",
      "condition": null
    },
    {
      "action": "ivs:getStreamSession",
      "condition": null
    },
    {
      "action": "ivs:listChannels",
      "condition": null
    },
    {
      "action": "ivs:listPlaybackKeyPairs",
      "condition": null
    },
    {
      "action": "ivs:listRecordingConfigurations",
      "condition": null
    },
    {
      "action": "ivs:listStreamKeys",
      "condition": null
    },
    {
      "action": "ivs:listStreams",
      "condition": null
    },
    {
      "action": "ivs:listStreamSessions",
      "condition": null
    },
    {
      "action": "kafka:describeCluster",
      "condition": null
    },
    {
      "action": "kafka:describeClusterOperation",
      "condition": null
    },
    {
      "action": "kafka:describeClusterOperationV2",
      "condition": null
    },
    {
      "action": "kafka:describeClusterV2",
      "condition": null
    },
    {
      "action": "kafka:describeConfiguration",
      "condition": null
    },
    {
      "action": "kafka:describeConfigurationRevision",
      "condition": null
    },
    {
      "action": "kafka:describeReplicator",
      "condition": null
    },
    {
      "action": "kafka:describeVpcConnection",
      "condition": null
    },
    {
      "action": "kafka:getBootstrapBrokers",
      "condition": null
    },
    {
      "action": "kafka:getClusterPolicy",
      "condition": null
    },
    {
      "action": "kafka:listConfigurations",
      "condition": null
    },
    {
      "action": "kafka:listConfigurationRevisions",
      "condition": null
    },
    {
      "action": "kafka:listClientVpcConnections",
      "condition": null
    },
    {
      "action": "kafka:listClusterOperations",
      "condition": null
    },
    {
      "action": "kafka:listClusterOperationsV2",
      "condition": null
    },
    {
      "action": "kafka:listClusters",
      "condition": null
    },
    {
      "action": "kafka:listClustersV2",
      "condition": null
    },
    {
      "action": "kafka:listNodes",
      "condition": null
    },
    {
      "action": "kafka:listReplicators",
      "condition": null
    },
    {
      "action": "kafka:listScramSecrets",
      "condition": null
    },
    {
      "action": "kafka:listVpcConnections",
      "condition": null
    },
    {
      "action": "kafkaconnect:describeConnector",
      "condition": null
    },
    {
      "action": "kafkaconnect:describeCustomPlugin",
      "condition": null
    },
    {
      "action": "kafkaconnect:describeWorkerConfiguration",
      "condition": null
    },
    {
      "action": "kafkaconnect:listConnectors",
      "condition": null
    },
    {
      "action": "kafkaconnect:listCustomPlugins",
      "condition": null
    },
    {
      "action": "kafkaconnect:listWorkerConfigurations",
      "condition": null
    },
    {
      "action": "kendra:describeDataSource",
      "condition": null
    },
    {
      "action": "kendra:describeFaq",
      "condition": null
    },
    {
      "action": "kendra:describeIndex",
      "condition": null
    },
    {
      "action": "kendra:listDataSources",
      "condition": null
    },
    {
      "action": "kendra:listFaqs",
      "condition": null
    },
    {
      "action": "kendra:listIndices",
      "condition": null
    },
    {
      "action": "kinesis:describeStream",
      "condition": null
    },
    {
      "action": "kinesis:describeStreamConsumer",
      "condition": null
    },
    {
      "action": "kinesis:describeStreamSummary",
      "condition": null
    },
    {
      "action": "kinesis:listShards",
      "condition": null
    },
    {
      "action": "kinesis:listStreams",
      "condition": null
    },
    {
      "action": "kinesis:listStreamConsumers",
      "condition": null
    },
    {
      "action": "kinesis:listTagsForStream",
      "condition": null
    },
    {
      "action": "kinesisanalytics:describeApplication",
      "condition": null
    },
    {
      "action": "kinesisanalytics:describeApplicationSnapshot",
      "condition": null
    },
    {
      "action": "kinesisanalytics:listApplications",
      "condition": null
    },
    {
      "action": "kinesisanalytics:listApplicationSnapshots",
      "condition": null
    },
    {
      "action": "kinesisvideo:describeImageGenerationConfiguration",
      "condition": null
    },
    {
      "action": "kinesisvideo:describeNotificationConfiguration",
      "condition": null
    },
    {
      "action": "kinesisvideo:describeSignalingChannel",
      "condition": null
    },
    {
      "action": "kinesisvideo:describeStream",
      "condition": null
    },
    {
      "action": "kinesisvideo:getDataEndpoint",
      "condition": null
    },
    {
      "action": "kinesisvideo:getIceServerConfig",
      "condition": null
    },
    {
      "action": "kinesisvideo:getSignalingChannelEndpoint",
      "condition": null
    },
    {
      "action": "kinesisvideo:listSignalingChannels",
      "condition": null
    },
    {
      "action": "kinesisvideo:listStreams",
      "condition": null
    },
    {
      "action": "kms:describeKey",
      "condition": null
    },
    {
      "action": "kms:getKeyPolicy",
      "condition": null
    },
    {
      "action": "kms:getKeyRotationStatus",
      "condition": null
    },
    {
      "action": "kms:listAliases",
      "condition": null
    },
    {
      "action": "kms:listGrants",
      "condition": null
    },
    {
      "action": "kms:listKeyPolicies",
      "condition": null
    },
    {
      "action": "kms:listKeys",
      "condition": null
    },
    {
      "action": "kms:listResourceTags",
      "condition": null
    },
    {
      "action": "kms:listRetirableGrants",
      "condition": null
    },
    {
      "action": "lambda:getAccountSettings",
      "condition": null
    },
    {
      "action": "lambda:getAlias",
      "condition": null
    },
    {
      "action": "lambda:getCodeSigningConfig",
      "condition": null
    },
    {
      "action": "lambda:getEventSourceMapping",
      "condition": null
    },
    {
      "action": "lambda:getFunction",
      "condition": null
    },
    {
      "action": "lambda:getFunctionCodeSigningConfig",
      "condition": null
    },
    {
      "action": "lambda:getFunctionConcurrency",
      "condition": null
    },
    {
      "action": "lambda:getFunctionConfiguration",
      "condition": null
    },
    {
      "action": "lambda:getFunctionEventInvokeConfig",
      "condition": null
    },
    {
      "action": "lambda:getFunctionUrlConfig",
      "condition": null
    },
    {
      "action": "lambda:getLayerVersion",
      "condition": null
    },
    {
      "action": "lambda:getLayerVersionPolicy",
      "condition": null
    },
    {
      "action": "lambda:getPolicy",
      "condition": null
    },
    {
      "action": "lambda:getProvisionedConcurrencyConfig",
      "condition": null
    },
    {
      "action": "lambda:getRuntimeManagementConfig",
      "condition": null
    },
    {
      "action": "lambda:listAliases",
      "condition": null
    },
    {
      "action": "lambda:listCodeSigningConfigs",
      "condition": null
    },
    {
      "action": "lambda:listEventSourceMappings",
      "condition": null
    },
    {
      "action": "lambda:listFunctionEventInvokeConfigs",
      "condition": null
    },
    {
      "action": "lambda:listFunctions",
      "condition": null
    },
    {
      "action": "lambda:listFunctionsByCodeSigningConfig",
      "condition": null
    },
    {
      "action": "lambda:listFunctionUrlConfigs",
      "condition": null
    },
    {
      "action": "lambda:listLayers",
      "condition": null
    },
    {
      "action": "lambda:listLayerVersions",
      "condition": null
    },
    {
      "action": "lambda:listProvisionedConcurrencyConfigs",
      "condition": null
    },
    {
      "action": "lambda:listVersionsByFunction",
      "condition": null
    },
    {
      "action": "launchwizard:describeProvisionedApp",
      "condition": null
    },
    {
      "action": "launchwizard:describeProvisioningEvents",
      "condition": null
    },
    {
      "action": "launchwizard:listProvisionedApps",
      "condition": null
    },
    {
      "action": "lex:describeBot",
      "condition": null
    },
    {
      "action": "lex:describeBotAlias",
      "condition": null
    },
    {
      "action": "lex:describeBotLocale",
      "condition": null
    },
    {
      "action": "lex:describeBotRecommendation",
      "condition": null
    },
    {
      "action": "lex:describeBotVersion",
      "condition": null
    },
    {
      "action": "lex:describeCustomVocabularyMetadata",
      "condition": null
    },
    {
      "action": "lex:describeExport",
      "condition": null
    },
    {
      "action": "lex:describeImport",
      "condition": null
    },
    {
      "action": "lex:describeIntent",
      "condition": null
    },
    {
      "action": "lex:describeResourcePolicy",
      "condition": null
    },
    {
      "action": "lex:describeSlot",
      "condition": null
    },
    {
      "action": "lex:describeSlotType",
      "condition": null
    },
    {
      "action": "lex:getBot",
      "condition": null
    },
    {
      "action": "lex:getBotAlias",
      "condition": null
    },
    {
      "action": "lex:getBotAliases",
      "condition": null
    },
    {
      "action": "lex:getBotChannelAssociation",
      "condition": null
    },
    {
      "action": "lex:getBotChannelAssociations",
      "condition": null
    },
    {
      "action": "lex:getBots",
      "condition": null
    },
    {
      "action": "lex:getBotVersions",
      "condition": null
    },
    {
      "action": "lex:getBuiltinIntent",
      "condition": null
    },
    {
      "action": "lex:getBuiltinIntents",
      "condition": null
    },
    {
      "action": "lex:getBuiltinSlotTypes",
      "condition": null
    },
    {
      "action": "lex:getIntent",
      "condition": null
    },
    {
      "action": "lex:getIntents",
      "condition": null
    },
    {
      "action": "lex:getIntentVersions",
      "condition": null
    },
    {
      "action": "lex:getSlotType",
      "condition": null
    },
    {
      "action": "lex:getSlotTypes",
      "condition": null
    },
    {
      "action": "lex:getSlotTypeVersions",
      "condition": null
    },
    {
      "action": "lex:listBotAliases",
      "condition": null
    },
    {
      "action": "lex:listBotLocales",
      "condition": null
    },
    {
      "action": "lex:listBotRecommendations",
      "condition": null
    },
    {
      "action": "lex:listBots",
      "condition": null
    },
    {
      "action": "lex:listBotVersions",
      "condition": null
    },
    {
      "action": "lex:listExports",
      "condition": null
    },
    {
      "action": "lex:listImports",
      "condition": null
    },
    {
      "action": "lex:listIntents",
      "condition": null
    },
    {
      "action": "lex:listRecommendedIntents",
      "condition": null
    },
    {
      "action": "lex:listSlots",
      "condition": null
    },
    {
      "action": "lex:listSlotTypes",
      "condition": null
    },
    {
      "action": "license-manager:getLicenseConfiguration",
      "condition": null
    },
    {
      "action": "license-manager:getServiceSettings",
      "condition": null
    },
    {
      "action": "license-manager:listAssociationsForLicenseConfiguration",
      "condition": null
    },
    {
      "action": "license-manager:listFailuresForLicenseConfigurationOperations",
      "condition": null
    },
    {
      "action": "license-manager:listLicenseConfigurations",
      "condition": null
    },
    {
      "action": "license-manager:listLicenseSpecificationsForResource",
      "condition": null
    },
    {
      "action": "license-manager:listResourceInventory",
      "condition": null
    },
    {
      "action": "license-manager:listUsageForLicenseConfiguration",
      "condition": null
    },
    {
      "action": "lightsail:getActiveNames",
      "condition": null
    },
    {
      "action": "lightsail:getAlarms",
      "condition": null
    },
    {
      "action": "lightsail:getAutoSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:getBlueprints",
      "condition": null
    },
    {
      "action": "lightsail:getBucketBundles",
      "condition": null
    },
    {
      "action": "lightsail:getBucketMetricData",
      "condition": null
    },
    {
      "action": "lightsail:getBuckets",
      "condition": null
    },
    {
      "action": "lightsail:getBundles",
      "condition": null
    },
    {
      "action": "lightsail:getCertificates",
      "condition": null
    },
    {
      "action": "lightsail:getContainerImages",
      "condition": null
    },
    {
      "action": "lightsail:getContainerServiceDeployments",
      "condition": null
    },
    {
      "action": "lightsail:getContainerServiceMetricData",
      "condition": null
    },
    {
      "action": "lightsail:getContainerServicePowers",
      "condition": null
    },
    {
      "action": "lightsail:getContainerServices",
      "condition": null
    },
    {
      "action": "lightsail:getDisk",
      "condition": null
    },
    {
      "action": "lightsail:getDisks",
      "condition": null
    },
    {
      "action": "lightsail:getDiskSnapshot",
      "condition": null
    },
    {
      "action": "lightsail:getDiskSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:getDistributionBundles",
      "condition": null
    },
    {
      "action": "lightsail:getDistributionMetricData",
      "condition": null
    },
    {
      "action": "lightsail:getDistributions",
      "condition": null
    },
    {
      "action": "lightsail:getDomain",
      "condition": null
    },
    {
      "action": "lightsail:getDomains",
      "condition": null
    },
    {
      "action": "lightsail:getExportSnapshotRecords",
      "condition": null
    },
    {
      "action": "lightsail:getInstance",
      "condition": null
    },
    {
      "action": "lightsail:getInstanceMetricData",
      "condition": null
    },
    {
      "action": "lightsail:getInstancePortStates",
      "condition": null
    },
    {
      "action": "lightsail:getInstances",
      "condition": null
    },
    {
      "action": "lightsail:getInstanceSnapshot",
      "condition": null
    },
    {
      "action": "lightsail:getInstanceSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:getInstanceState",
      "condition": null
    },
    {
      "action": "lightsail:getKeyPair",
      "condition": null
    },
    {
      "action": "lightsail:getKeyPairs",
      "condition": null
    },
    {
      "action": "lightsail:getLoadBalancer",
      "condition": null
    },
    {
      "action": "lightsail:getLoadBalancerMetricData",
      "condition": null
    },
    {
      "action": "lightsail:getLoadBalancers",
      "condition": null
    },
    {
      "action": "lightsail:getLoadBalancerTlsCertificates",
      "condition": null
    },
    {
      "action": "lightsail:getOperation",
      "condition": null
    },
    {
      "action": "lightsail:getOperations",
      "condition": null
    },
    {
      "action": "lightsail:getOperationsForResource",
      "condition": null
    },
    {
      "action": "lightsail:getRegions",
      "condition": null
    },
    {
      "action": "lightsail:getRelationalDatabase",
      "condition": null
    },
    {
      "action": "lightsail:getRelationalDatabaseMetricData",
      "condition": null
    },
    {
      "action": "lightsail:getRelationalDatabases",
      "condition": null
    },
    {
      "action": "lightsail:getRelationalDatabaseSnapshot",
      "condition": null
    },
    {
      "action": "lightsail:getRelationalDatabaseSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:getStaticIp",
      "condition": null
    },
    {
      "action": "lightsail:getStaticIps",
      "condition": null
    },
    {
      "action": "lightsail:isVpcPeered",
      "condition": null
    },
    {
      "action": "logs:describeAccountPolicies",
      "condition": null
    },
    {
      "action": "logs:describeDeliveries",
      "condition": null
    },
    {
      "action": "logs:describeDeliveryDestinations",
      "condition": null
    },
    {
      "action": "logs:describeDeliverySources",
      "condition": null
    },
    {
      "action": "logs:describeDestinations",
      "condition": null
    },
    {
      "action": "logs:describeExportTasks",
      "condition": null
    },
    {
      "action": "logs:describeLogGroups",
      "condition": null
    },
    {
      "action": "logs:describeLogStreams",
      "condition": null
    },
    {
      "action": "logs:describeMetricFilters",
      "condition": null
    },
    {
      "action": "logs:describeQueries",
      "condition": null
    },
    {
      "action": "logs:describeQueryDefinitions",
      "condition": null
    },
    {
      "action": "logs:describeResourcePolicies",
      "condition": null
    },
    {
      "action": "logs:describeSubscriptionFilters",
      "condition": null
    },
    {
      "action": "logs:getDataProtectionPolicy",
      "condition": null
    },
    {
      "action": "logs:getDelivery",
      "condition": null
    },
    {
      "action": "logs:getDeliveryDestination",
      "condition": null
    },
    {
      "action": "logs:getDeliveryDestinationPolicy",
      "condition": null
    },
    {
      "action": "logs:getDeliverySource",
      "condition": null
    },
    {
      "action": "logs:getLogAnomalyDetector",
      "condition": null
    },
    {
      "action": "logs:getLogDelivery",
      "condition": null
    },
    {
      "action": "logs:getLogGroupFields",
      "condition": null
    },
    {
      "action": "logs:listAnomalies",
      "condition": null
    },
    {
      "action": "logs:listLogAnomalyDetectors",
      "condition": null
    },
    {
      "action": "logs:listLogDeliveries",
      "condition": null
    },
    {
      "action": "logs:testMetricFilter",
      "condition": null
    },
    {
      "action": "lookoutequipment:describeDataIngestionJob",
      "condition": null
    },
    {
      "action": "lookoutequipment:describeDataset",
      "condition": null
    },
    {
      "action": "lookoutequipment:describeInferenceScheduler",
      "condition": null
    },
    {
      "action": "lookoutequipment:describeModel",
      "condition": null
    },
    {
      "action": "lookoutequipment:listDataIngestionJobs",
      "condition": null
    },
    {
      "action": "lookoutequipment:listDatasets",
      "condition": null
    },
    {
      "action": "lookoutequipment:listInferenceExecutions",
      "condition": null
    },
    {
      "action": "lookoutequipment:listInferenceSchedulers",
      "condition": null
    },
    {
      "action": "lookoutequipment:listModels",
      "condition": null
    },
    {
      "action": "lookoutmetrics:describeAlert",
      "condition": null
    },
    {
      "action": "lookoutmetrics:describeAnomalyDetectionExecutions",
      "condition": null
    },
    {
      "action": "lookoutmetrics:describeAnomalyDetector",
      "condition": null
    },
    {
      "action": "lookoutmetrics:describeMetricSet",
      "condition": null
    },
    {
      "action": "lookoutmetrics:getAnomalyGroup",
      "condition": null
    },
    {
      "action": "lookoutmetrics:getDataQualityMetrics",
      "condition": null
    },
    {
      "action": "lookoutmetrics:getFeedback",
      "condition": null
    },
    {
      "action": "lookoutmetrics:getSampleData",
      "condition": null
    },
    {
      "action": "lookoutmetrics:listAlerts",
      "condition": null
    },
    {
      "action": "lookoutmetrics:listAnomalyDetectors",
      "condition": null
    },
    {
      "action": "lookoutmetrics:listAnomalyGroupSummaries",
      "condition": null
    },
    {
      "action": "lookoutmetrics:listAnomalyGroupTimeSeries",
      "condition": null
    },
    {
      "action": "lookoutmetrics:listMetricSets",
      "condition": null
    },
    {
      "action": "lookoutmetrics:listTagsForResource",
      "condition": null
    },
    {
      "action": "machinelearning:describeBatchPredictions",
      "condition": null
    },
    {
      "action": "machinelearning:describeDataSources",
      "condition": null
    },
    {
      "action": "machinelearning:describeEvaluations",
      "condition": null
    },
    {
      "action": "machinelearning:describeMLModels",
      "condition": null
    },
    {
      "action": "machinelearning:getBatchPrediction",
      "condition": null
    },
    {
      "action": "machinelearning:getDataSource",
      "condition": null
    },
    {
      "action": "machinelearning:getEvaluation",
      "condition": null
    },
    {
      "action": "machinelearning:getMLModel",
      "condition": null
    },
    {
      "action": "macie2:getClassificationExportConfiguration",
      "condition": null
    },
    {
      "action": "macie2:getCustomDataIdentifier",
      "condition": null
    },
    {
      "action": "macie2:getFindings",
      "condition": null
    },
    {
      "action": "macie2:getFindingStatistics",
      "condition": null
    },
    {
      "action": "macie2:listClassificationJobs",
      "condition": null
    },
    {
      "action": "macie2:listCustomDataIdentifiers",
      "condition": null
    },
    {
      "action": "macie2:listFindings",
      "condition": null
    },
    {
      "action": "managedblockchain:getMember",
      "condition": null
    },
    {
      "action": "managedblockchain:getNetwork",
      "condition": null
    },
    {
      "action": "managedblockchain:getNode",
      "condition": null
    },
    {
      "action": "managedblockchain:listMembers",
      "condition": null
    },
    {
      "action": "managedblockchain:listNetworks",
      "condition": null
    },
    {
      "action": "managedblockchain:listNodes",
      "condition": null
    },
    {
      "action": "mediaconnect:describeFlow",
      "condition": null
    },
    {
      "action": "mediaconnect:listEntitlements",
      "condition": null
    },
    {
      "action": "mediaconnect:listFlows",
      "condition": null
    },
    {
      "action": "mediaconvert:describeEndpoints",
      "condition": null
    },
    {
      "action": "mediaconvert:getJob",
      "condition": null
    },
    {
      "action": "mediaconvert:getJobTemplate",
      "condition": null
    },
    {
      "action": "mediaconvert:getPreset",
      "condition": null
    },
    {
      "action": "mediaconvert:getQueue",
      "condition": null
    },
    {
      "action": "mediaconvert:listJobs",
      "condition": null
    },
    {
      "action": "mediaconvert:listJobTemplates",
      "condition": null
    },
    {
      "action": "medialive:describeChannel",
      "condition": null
    },
    {
      "action": "medialive:describeInput",
      "condition": null
    },
    {
      "action": "medialive:describeInputDevice",
      "condition": null
    },
    {
      "action": "medialive:describeInputSecurityGroup",
      "condition": null
    },
    {
      "action": "medialive:describeMultiplex",
      "condition": null
    },
    {
      "action": "medialive:describeOffering",
      "condition": null
    },
    {
      "action": "medialive:describeReservation",
      "condition": null
    },
    {
      "action": "medialive:describeSchedule",
      "condition": null
    },
    {
      "action": "medialive:listChannels",
      "condition": null
    },
    {
      "action": "medialive:listInputDevices",
      "condition": null
    },
    {
      "action": "medialive:listInputs",
      "condition": null
    },
    {
      "action": "medialive:listInputSecurityGroups",
      "condition": null
    },
    {
      "action": "medialive:listMultiplexes",
      "condition": null
    },
    {
      "action": "medialive:listOfferings",
      "condition": null
    },
    {
      "action": "medialive:listReservations",
      "condition": null
    },
    {
      "action": "mediapackage:describeChannel",
      "condition": null
    },
    {
      "action": "mediapackage:describeOriginEndpoint",
      "condition": null
    },
    {
      "action": "mediapackage:listChannels",
      "condition": null
    },
    {
      "action": "mediapackage:listOriginEndpoints",
      "condition": null
    },
    {
      "action": "mediastore:describeContainer",
      "condition": null
    },
    {
      "action": "mediastore:getContainerPolicy",
      "condition": null
    },
    {
      "action": "mediastore:getCorsPolicy",
      "condition": null
    },
    {
      "action": "mediastore:listContainers",
      "condition": null
    },
    {
      "action": "mediatailor:getPlaybackConfiguration",
      "condition": null
    },
    {
      "action": "mediatailor:listPlaybackConfigurations",
      "condition": null
    },
    {
      "action": "medical-imaging:getDatastore",
      "condition": null
    },
    {
      "action": "medical-imaging:listDatastores",
      "condition": null
    },
    {
      "action": "mgn:describeJobLogItems",
      "condition": null
    },
    {
      "action": "mgn:describeJobs",
      "condition": null
    },
    {
      "action": "mgn:describeLaunchConfigurationTemplates",
      "condition": null
    },
    {
      "action": "mgn:describeReplicationConfigurationTemplates",
      "condition": null
    },
    {
      "action": "mgn:describeSourceServers",
      "condition": null
    },
    {
      "action": "mgn:describeVcenterClients",
      "condition": null
    },
    {
      "action": "mgn:getLaunchConfiguration",
      "condition": null
    },
    {
      "action": "mgn:getReplicationConfiguration",
      "condition": null
    },
    {
      "action": "mgn:listApplications",
      "condition": null
    },
    {
      "action": "mgn:listSourceServerActions",
      "condition": null
    },
    {
      "action": "mgn:listTemplateActions",
      "condition": null
    },
    {
      "action": "mgn:listWaves",
      "condition": null
    },
    {
      "action": "mobiletargeting:getAdmChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApnsChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApnsSandboxChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApnsVoipChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApnsVoipSandboxChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApp",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApplicationSettings",
      "condition": null
    },
    {
      "action": "mobiletargeting:getApps",
      "condition": null
    },
    {
      "action": "mobiletargeting:getBaiduChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getCampaign",
      "condition": null
    },
    {
      "action": "mobiletargeting:getCampaignActivities",
      "condition": null
    },
    {
      "action": "mobiletargeting:getCampaigns",
      "condition": null
    },
    {
      "action": "mobiletargeting:getCampaignVersion",
      "condition": null
    },
    {
      "action": "mobiletargeting:getCampaignVersions",
      "condition": null
    },
    {
      "action": "mobiletargeting:getEmailChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getEndpoint",
      "condition": null
    },
    {
      "action": "mobiletargeting:getEventStream",
      "condition": null
    },
    {
      "action": "mobiletargeting:getExportJob",
      "condition": null
    },
    {
      "action": "mobiletargeting:getExportJobs",
      "condition": null
    },
    {
      "action": "mobiletargeting:getGcmChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:getImportJob",
      "condition": null
    },
    {
      "action": "mobiletargeting:getImportJobs",
      "condition": null
    },
    {
      "action": "mobiletargeting:getJourney",
      "condition": null
    },
    {
      "action": "mobiletargeting:getJourneyExecutionMetrics",
      "condition": null
    },
    {
      "action": "mobiletargeting:getJourneyExecutionActivityMetrics",
      "condition": null
    },
    {
      "action": "mobiletargeting:getJourneyRunExecutionActivityMetrics",
      "condition": null
    },
    {
      "action": "mobiletargeting:getJourneyRunExecutionMetrics",
      "condition": null
    },
    {
      "action": "mobiletargeting:getJourneyRuns",
      "condition": null
    },
    {
      "action": "mobiletargeting:getSegment",
      "condition": null
    },
    {
      "action": "mobiletargeting:getSegmentImportJobs",
      "condition": null
    },
    {
      "action": "mobiletargeting:getSegments",
      "condition": null
    },
    {
      "action": "mobiletargeting:getSegmentVersion",
      "condition": null
    },
    {
      "action": "mobiletargeting:getSegmentVersions",
      "condition": null
    },
    {
      "action": "mobiletargeting:getSmsChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:listJourneys",
      "condition": null
    },
    {
      "action": "mq:describeBroker",
      "condition": null
    },
    {
      "action": "mq:describeConfiguration",
      "condition": null
    },
    {
      "action": "mq:describeConfigurationRevision",
      "condition": null
    },
    {
      "action": "mq:describeUser",
      "condition": null
    },
    {
      "action": "mq:listBrokers",
      "condition": null
    },
    {
      "action": "mq:listConfigurationRevisions",
      "condition": null
    },
    {
      "action": "mq:listConfigurations",
      "condition": null
    },
    {
      "action": "mq:listUsers",
      "condition": null
    },
    {
      "action": "m2:getApplication",
      "condition": null
    },
    {
      "action": "m2:getApplicationVersion",
      "condition": null
    },
    {
      "action": "m2:getBatchJobExecution",
      "condition": null
    },
    {
      "action": "m2:getDataSetDetails",
      "condition": null
    },
    {
      "action": "m2:getDataSetImportTask",
      "condition": null
    },
    {
      "action": "m2:getDeployment",
      "condition": null
    },
    {
      "action": "m2:getEnvironment",
      "condition": null
    },
    {
      "action": "m2:listApplications",
      "condition": null
    },
    {
      "action": "m2:listApplicationVersions",
      "condition": null
    },
    {
      "action": "m2:listBatchJobDefinitions",
      "condition": null
    },
    {
      "action": "m2:listBatchJobExecutions",
      "condition": null
    },
    {
      "action": "m2:listDataSetImportHistory",
      "condition": null
    },
    {
      "action": "m2:listDataSets",
      "condition": null
    },
    {
      "action": "m2:listDeployments",
      "condition": null
    },
    {
      "action": "m2:listEngineVersions",
      "condition": null
    },
    {
      "action": "m2:listEnvironments",
      "condition": null
    },
    {
      "action": "network-firewall:describeFirewall",
      "condition": null
    },
    {
      "action": "network-firewall:describeFirewallPolicy",
      "condition": null
    },
    {
      "action": "network-firewall:describeLoggingConfiguration",
      "condition": null
    },
    {
      "action": "network-firewall:describeRuleGroup",
      "condition": null
    },
    {
      "action": "network-firewall:describeTlsInspectionConfiguration",
      "condition": null
    },
    {
      "action": "network-firewall:listFirewallPolicies",
      "condition": null
    },
    {
      "action": "network-firewall:listFirewalls",
      "condition": null
    },
    {
      "action": "network-firewall:listRuleGroups",
      "condition": null
    },
    {
      "action": "network-firewall:listTlsInspectionConfigurations",
      "condition": null
    },
    {
      "action": "networkmanager:describeGlobalNetworks",
      "condition": null
    },
    {
      "action": "networkmanager:getConnectAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:getConnections",
      "condition": null
    },
    {
      "action": "networkmanager:getConnectPeer",
      "condition": null
    },
    {
      "action": "networkmanager:getConnectPeerAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:getCoreNetwork",
      "condition": null
    },
    {
      "action": "networkmanager:getCoreNetworkChangeEvents",
      "condition": null
    },
    {
      "action": "networkmanager:getCoreNetworkChangeSet",
      "condition": null
    },
    {
      "action": "networkmanager:getCoreNetworkPolicy",
      "condition": null
    },
    {
      "action": "networkmanager:getCustomerGatewayAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:getDevices",
      "condition": null
    },
    {
      "action": "networkmanager:getLinkAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:getLinks",
      "condition": null
    },
    {
      "action": "networkmanager:getNetworkResourceCounts",
      "condition": null
    },
    {
      "action": "networkmanager:getNetworkResourceRelationships",
      "condition": null
    },
    {
      "action": "networkmanager:getNetworkResources",
      "condition": null
    },
    {
      "action": "networkmanager:getNetworkRoutes",
      "condition": null
    },
    {
      "action": "networkmanager:getNetworkTelemetry",
      "condition": null
    },
    {
      "action": "networkmanager:getResourcePolicy",
      "condition": null
    },
    {
      "action": "networkmanager:getRouteAnalysis",
      "condition": null
    },
    {
      "action": "networkmanager:getSites",
      "condition": null
    },
    {
      "action": "networkmanager:getSiteToSiteVpnAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:getTransitGatewayConnectPeerAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:getTransitGatewayPeering",
      "condition": null
    },
    {
      "action": "networkmanager:getTransitGatewayRegistrations",
      "condition": null
    },
    {
      "action": "networkmanager:getTransitGatewayRouteTableAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:getVpcAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:listAttachments",
      "condition": null
    },
    {
      "action": "networkmanager:listConnectPeers",
      "condition": null
    },
    {
      "action": "networkmanager:listCoreNetworkPolicyVersions",
      "condition": null
    },
    {
      "action": "networkmanager:listCoreNetworks",
      "condition": null
    },
    {
      "action": "networkmanager:listOrganizationServiceAccessStatus",
      "condition": null
    },
    {
      "action": "networkmanager:listPeerings",
      "condition": null
    },
    {
      "action": "networkmanager:listTagsForResource",
      "condition": null
    },
    {
      "action": "networkmonitor:getMonitor",
      "condition": null
    },
    {
      "action": "networkmonitor:getProbe",
      "condition": null
    },
    {
      "action": "networkmonitor:listMonitors",
      "condition": null
    },
    {
      "action": "nimble:getEula",
      "condition": null
    },
    {
      "action": "nimble:getLaunchProfile",
      "condition": null
    },
    {
      "action": "nimble:getLaunchProfileDetails",
      "condition": null
    },
    {
      "action": "nimble:getLaunchProfileInitialization",
      "condition": null
    },
    {
      "action": "nimble:getLaunchProfileMember",
      "condition": null
    },
    {
      "action": "nimble:getStreamingImage",
      "condition": null
    },
    {
      "action": "nimble:getStreamingSession",
      "condition": null
    },
    {
      "action": "nimble:getStreamingSessionStream",
      "condition": null
    },
    {
      "action": "nimble:getStudio",
      "condition": null
    },
    {
      "action": "nimble:getStudioComponent",
      "condition": null
    },
    {
      "action": "nimble:listEulaAcceptances",
      "condition": null
    },
    {
      "action": "nimble:listEulas",
      "condition": null
    },
    {
      "action": "nimble:listLaunchProfiles",
      "condition": null
    },
    {
      "action": "nimble:listStreamingImages",
      "condition": null
    },
    {
      "action": "nimble:listStreamingSessions",
      "condition": null
    },
    {
      "action": "nimble:listStudioComponents",
      "condition": null
    },
    {
      "action": "nimble:listStudios",
      "condition": null
    },
    {
      "action": "notifications:getEventRule",
      "condition": null
    },
    {
      "action": "notifications:getNotificationConfiguration",
      "condition": null
    },
    {
      "action": "notifications:getNotificationEvent",
      "condition": null
    },
    {
      "action": "notifications:listChannels",
      "condition": null
    },
    {
      "action": "notifications:listEventRules",
      "condition": null
    },
    {
      "action": "notifications:listNotificationConfigurations",
      "condition": null
    },
    {
      "action": "notifications:listNotificationEvents",
      "condition": null
    },
    {
      "action": "notifications:listNotificationHubs",
      "condition": null
    },
    {
      "action": "notifications-contacts:getEmailContact",
      "condition": null
    },
    {
      "action": "notifications-contacts:listEmailContacts",
      "condition": null
    },
    {
      "action": "oam:getLink",
      "condition": null
    },
    {
      "action": "oam:getSink",
      "condition": null
    },
    {
      "action": "oam:getSinkPolicy",
      "condition": null
    },
    {
      "action": "oam:listAttachedLinks",
      "condition": null
    },
    {
      "action": "oam:listLinks",
      "condition": null
    },
    {
      "action": "oam:listSinks",
      "condition": null
    },
    {
      "action": "omics:getAnnotationImportJob",
      "condition": null
    },
    {
      "action": "omics:getAnnotationStore",
      "condition": null
    },
    {
      "action": "omics:getReadSetImportJob",
      "condition": null
    },
    {
      "action": "omics:getReadSetMetadata",
      "condition": null
    },
    {
      "action": "omics:getReference",
      "condition": null
    },
    {
      "action": "omics:getReferenceImportJob",
      "condition": null
    },
    {
      "action": "omics:getReferenceMetadata",
      "condition": null
    },
    {
      "action": "omics:getReferenceStore",
      "condition": null
    },
    {
      "action": "omics:getRun",
      "condition": null
    },
    {
      "action": "omics:getRunGroup",
      "condition": null
    },
    {
      "action": "omics:getSequenceStore",
      "condition": null
    },
    {
      "action": "omics:getVariantImportJob",
      "condition": null
    },
    {
      "action": "omics:getVariantStore",
      "condition": null
    },
    {
      "action": "omics:getWorkflow",
      "condition": null
    },
    {
      "action": "omics:listAnnotationImportJobs",
      "condition": null
    },
    {
      "action": "omics:listAnnotationStores",
      "condition": null
    },
    {
      "action": "omics:listMultipartReadSetUploads",
      "condition": null
    },
    {
      "action": "omics:listReadSetImportJobs",
      "condition": null
    },
    {
      "action": "omics:listReadSets",
      "condition": null
    },
    {
      "action": "omics:listReadSetUploadParts",
      "condition": null
    },
    {
      "action": "omics:listReferenceImportJobs",
      "condition": null
    },
    {
      "action": "omics:listReferenceStores",
      "condition": null
    },
    {
      "action": "omics:listReferences",
      "condition": null
    },
    {
      "action": "omics:listRunGroups",
      "condition": null
    },
    {
      "action": "omics:listRunTasks",
      "condition": null
    },
    {
      "action": "omics:listRuns",
      "condition": null
    },
    {
      "action": "omics:listSequenceStores",
      "condition": null
    },
    {
      "action": "omics:listVariantImportJobs",
      "condition": null
    },
    {
      "action": "omics:listVariantStores",
      "condition": null
    },
    {
      "action": "omics:listWorkflows",
      "condition": null
    },
    {
      "action": "opsworks-cm:describeAccountAttributes",
      "condition": null
    },
    {
      "action": "opsworks-cm:describeBackups",
      "condition": null
    },
    {
      "action": "opsworks-cm:describeEvents",
      "condition": null
    },
    {
      "action": "opsworks-cm:describeNodeAssociationStatus",
      "condition": null
    },
    {
      "action": "opsworks-cm:describeServers",
      "condition": null
    },
    {
      "action": "opsworks:describeAgentVersions",
      "condition": null
    },
    {
      "action": "opsworks:describeApps",
      "condition": null
    },
    {
      "action": "opsworks:describeCommands",
      "condition": null
    },
    {
      "action": "opsworks:describeDeployments",
      "condition": null
    },
    {
      "action": "opsworks:describeEcsClusters",
      "condition": null
    },
    {
      "action": "opsworks:describeElasticIps",
      "condition": null
    },
    {
      "action": "opsworks:describeElasticLoadBalancers",
      "condition": null
    },
    {
      "action": "opsworks:describeInstances",
      "condition": null
    },
    {
      "action": "opsworks:describeLayers",
      "condition": null
    },
    {
      "action": "opsworks:describeLoadBasedAutoScaling",
      "condition": null
    },
    {
      "action": "opsworks:describeMyUserProfile",
      "condition": null
    },
    {
      "action": "opsworks:describePermissions",
      "condition": null
    },
    {
      "action": "opsworks:describeRaidArrays",
      "condition": null
    },
    {
      "action": "opsworks:describeRdsDbInstances",
      "condition": null
    },
    {
      "action": "opsworks:describeServiceErrors",
      "condition": null
    },
    {
      "action": "opsworks:describeStackProvisioningParameters",
      "condition": null
    },
    {
      "action": "opsworks:describeStacks",
      "condition": null
    },
    {
      "action": "opsworks:describeStackSummary",
      "condition": null
    },
    {
      "action": "opsworks:describeTimeBasedAutoScaling",
      "condition": null
    },
    {
      "action": "opsworks:describeUserProfiles",
      "condition": null
    },
    {
      "action": "opsworks:describeVolumes",
      "condition": null
    },
    {
      "action": "opsworks:getHostnameSuggestion",
      "condition": null
    },
    {
      "action": "organizations:listAccounts",
      "condition": null
    },
    {
      "action": "organizations:listTagsForResource",
      "condition": null
    },
    {
      "action": "outposts:getCatalogItem",
      "condition": null
    },
    {
      "action": "outposts:getConnection",
      "condition": null
    },
    {
      "action": "outposts:getOrder",
      "condition": null
    },
    {
      "action": "outposts:getOutpost",
      "condition": null
    },
    {
      "action": "outposts:getOutpostInstanceTypes",
      "condition": null
    },
    {
      "action": "outposts:getSite",
      "condition": null
    },
    {
      "action": "outposts:listAssets",
      "condition": null
    },
    {
      "action": "outposts:listCatalogItems",
      "condition": null
    },
    {
      "action": "outposts:listOrders",
      "condition": null
    },
    {
      "action": "outposts:listOutposts",
      "condition": null
    },
    {
      "action": "outposts:listSites",
      "condition": null
    },
    {
      "action": "personalize:describeAlgorithm",
      "condition": null
    },
    {
      "action": "personalize:describeBatchInferenceJob",
      "condition": null
    },
    {
      "action": "personalize:describeBatchSegmentJob",
      "condition": null
    },
    {
      "action": "personalize:describeCampaign",
      "condition": null
    },
    {
      "action": "personalize:describeDataset",
      "condition": null
    },
    {
      "action": "personalize:describeDatasetExportJob",
      "condition": null
    },
    {
      "action": "personalize:describeDatasetGroup",
      "condition": null
    },
    {
      "action": "personalize:describeDatasetImportJob",
      "condition": null
    },
    {
      "action": "personalize:describeEventTracker",
      "condition": null
    },
    {
      "action": "personalize:describeFeatureTransformation",
      "condition": null
    },
    {
      "action": "personalize:describeFilter",
      "condition": null
    },
    {
      "action": "personalize:describeRecipe",
      "condition": null
    },
    {
      "action": "personalize:describeRecommender",
      "condition": null
    },
    {
      "action": "personalize:describeSchema",
      "condition": null
    },
    {
      "action": "personalize:describeSolution",
      "condition": null
    },
    {
      "action": "personalize:describeSolutionVersion",
      "condition": null
    },
    {
      "action": "personalize:getPersonalizedRanking",
      "condition": null
    },
    {
      "action": "personalize:getRecommendations",
      "condition": null
    },
    {
      "action": "personalize:getSolutionMetrics",
      "condition": null
    },
    {
      "action": "personalize:listBatchInferenceJobs",
      "condition": null
    },
    {
      "action": "personalize:listBatchSegmentJobs",
      "condition": null
    },
    {
      "action": "personalize:listCampaigns",
      "condition": null
    },
    {
      "action": "personalize:listDatasetExportJobs",
      "condition": null
    },
    {
      "action": "personalize:listDatasetGroups",
      "condition": null
    },
    {
      "action": "personalize:listDatasetImportJobs",
      "condition": null
    },
    {
      "action": "personalize:listDatasets",
      "condition": null
    },
    {
      "action": "personalize:listEventTrackers",
      "condition": null
    },
    {
      "action": "personalize:listRecipes",
      "condition": null
    },
    {
      "action": "personalize:listRecommenders",
      "condition": null
    },
    {
      "action": "personalize:listSchemas",
      "condition": null
    },
    {
      "action": "personalize:listSolutions",
      "condition": null
    },
    {
      "action": "personalize:listSolutionVersions",
      "condition": null
    },
    {
      "action": "pipes:describePipe",
      "condition": null
    },
    {
      "action": "pipes:listPipes",
      "condition": null
    },
    {
      "action": "pipes:listTagsForResource",
      "condition": null
    },
    {
      "action": "polly:describeVoices",
      "condition": null
    },
    {
      "action": "polly:getLexicon",
      "condition": null
    },
    {
      "action": "polly:listLexicons",
      "condition": null
    },
    {
      "action": "pricing:describeServices",
      "condition": null
    },
    {
      "action": "pricing:getAttributeValues",
      "condition": null
    },
    {
      "action": "pricing:getProducts",
      "condition": null
    },
    {
      "action": "private-networks:getDeviceIdentifier",
      "condition": null
    },
    {
      "action": "private-networks:getNetwork",
      "condition": null
    },
    {
      "action": "private-networks:getNetworkResource",
      "condition": null
    },
    {
      "action": "private-networks:listDeviceIdentifiers",
      "condition": null
    },
    {
      "action": "private-networks:listNetworks",
      "condition": null
    },
    {
      "action": "private-networks:listNetworkResources",
      "condition": null
    },
    {
      "action": "qbusiness:getApplication",
      "condition": null
    },
    {
      "action": "qbusiness:getDataSource",
      "condition": null
    },
    {
      "action": "qbusiness:getIndex",
      "condition": null
    },
    {
      "action": "qbusiness:getRetriever",
      "condition": null
    },
    {
      "action": "qbusiness:getWebExperience",
      "condition": null
    },
    {
      "action": "qbusiness:listApplications",
      "condition": null
    },
    {
      "action": "qbusiness:listDataSources",
      "condition": null
    },
    {
      "action": "qbusiness:listDataSourceSyncJobs",
      "condition": null
    },
    {
      "action": "qbusiness:listIndices",
      "condition": null
    },
    {
      "action": "qbusiness:listRetrievers",
      "condition": null
    },
    {
      "action": "qbusiness:listWebExperiences",
      "condition": null
    },
    {
      "action": "quicksight:describeAccountCustomization",
      "condition": null
    },
    {
      "action": "quicksight:describeAccountSettings",
      "condition": null
    },
    {
      "action": "quicksight:describeAccountSubscription",
      "condition": null
    },
    {
      "action": "quicksight:describeAnalysis",
      "condition": null
    },
    {
      "action": "quicksight:describeAnalysisPermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeDashboard",
      "condition": null
    },
    {
      "action": "quicksight:describeDashboardPermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeDataSet",
      "condition": null
    },
    {
      "action": "quicksight:describeDataSetPermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeDataSetRefreshProperties",
      "condition": null
    },
    {
      "action": "quicksight:describeDataSource",
      "condition": null
    },
    {
      "action": "quicksight:describeDataSourcePermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeFolder",
      "condition": null
    },
    {
      "action": "quicksight:describeFolderPermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeFolderResolvedPermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeGroup",
      "condition": null
    },
    {
      "action": "quicksight:describeGroupMembership",
      "condition": null
    },
    {
      "action": "quicksight:describeIAMPolicyAssignment",
      "condition": null
    },
    {
      "action": "quicksight:describeIngestion",
      "condition": null
    },
    {
      "action": "quicksight:describeIpRestriction",
      "condition": null
    },
    {
      "action": "quicksight:describeNamespace",
      "condition": null
    },
    {
      "action": "quicksight:describeRefreshSchedule",
      "condition": null
    },
    {
      "action": "quicksight:describeTemplate",
      "condition": null
    },
    {
      "action": "quicksight:describeTemplateAlias",
      "condition": null
    },
    {
      "action": "quicksight:describeTemplatePermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeTheme",
      "condition": null
    },
    {
      "action": "quicksight:describeThemeAlias",
      "condition": null
    },
    {
      "action": "quicksight:describeThemePermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeTopic",
      "condition": null
    },
    {
      "action": "quicksight:describeTopicPermissions",
      "condition": null
    },
    {
      "action": "quicksight:describeTopicRefresh",
      "condition": null
    },
    {
      "action": "quicksight:describeTopicRefreshSchedule",
      "condition": null
    },
    {
      "action": "quicksight:describeUser",
      "condition": null
    },
    {
      "action": "quicksight:describeVPCConnection",
      "condition": null
    },
    {
      "action": "quicksight:listAnalyses",
      "condition": null
    },
    {
      "action": "quicksight:listDashboards",
      "condition": null
    },
    {
      "action": "quicksight:listDashboardVersions",
      "condition": null
    },
    {
      "action": "quicksight:listDataSets",
      "condition": null
    },
    {
      "action": "quicksight:listDataSources",
      "condition": null
    },
    {
      "action": "quicksight:listFolderMembers",
      "condition": null
    },
    {
      "action": "quicksight:listFolders",
      "condition": null
    },
    {
      "action": "quicksight:listGroupMemberships",
      "condition": null
    },
    {
      "action": "quicksight:listGroups",
      "condition": null
    },
    {
      "action": "quicksight:listIAMPolicyAssignments",
      "condition": null
    },
    {
      "action": "quicksight:listIAMPolicyAssignmentsForUser",
      "condition": null
    },
    {
      "action": "quicksight:listIngestions",
      "condition": null
    },
    {
      "action": "quicksight:listNamespaces",
      "condition": null
    },
    {
      "action": "quicksight:listRefreshSchedules",
      "condition": null
    },
    {
      "action": "quicksight:listTemplateAliases",
      "condition": null
    },
    {
      "action": "quicksight:listTemplates",
      "condition": null
    },
    {
      "action": "quicksight:listTemplateVersions",
      "condition": null
    },
    {
      "action": "quicksight:listThemeAliases",
      "condition": null
    },
    {
      "action": "quicksight:listThemes",
      "condition": null
    },
    {
      "action": "quicksight:listThemeVersions",
      "condition": null
    },
    {
      "action": "quicksight:listTopicRefreshSchedules",
      "condition": null
    },
    {
      "action": "quicksight:listTopics",
      "condition": null
    },
    {
      "action": "quicksight:listUserGroups",
      "condition": null
    },
    {
      "action": "quicksight:listUsers",
      "condition": null
    },
    {
      "action": "quicksight:listVPCConnections",
      "condition": null
    },
    {
      "action": "quicksight:searchAnalyses",
      "condition": null
    },
    {
      "action": "quicksight:searchDashboards",
      "condition": null
    },
    {
      "action": "quicksight:searchDataSets",
      "condition": null
    },
    {
      "action": "quicksight:searchDataSources",
      "condition": null
    },
    {
      "action": "quicksight:searchFolders",
      "condition": null
    },
    {
      "action": "quicksight:searchGroups",
      "condition": null
    },
    {
      "action": "ram:getPermission",
      "condition": null
    },
    {
      "action": "ram:getResourceShareAssociations",
      "condition": null
    },
    {
      "action": "ram:getResourceShareInvitations",
      "condition": null
    },
    {
      "action": "ram:getResourceShares",
      "condition": null
    },
    {
      "action": "ram:listPendingInvitationResources",
      "condition": null
    },
    {
      "action": "ram:listPrincipals",
      "condition": null
    },
    {
      "action": "ram:listResources",
      "condition": null
    },
    {
      "action": "ram:listResourceSharePermissions",
      "condition": null
    },
    {
      "action": "rbin:getRule",
      "condition": null
    },
    {
      "action": "rbin:listRules",
      "condition": null
    },
    {
      "action": "rds:describeAccountAttributes",
      "condition": null
    },
    {
      "action": "rds:describeBlueGreenDeployments",
      "condition": null
    },
    {
      "action": "rds:describeCertificates",
      "condition": null
    },
    {
      "action": "rds:describeDBClusterEndpoints",
      "condition": null
    },
    {
      "action": "rds:describeDBClusterParameterGroups",
      "condition": null
    },
    {
      "action": "rds:describeDBClusterParameters",
      "condition": null
    },
    {
      "action": "rds:describeDBClusters",
      "condition": null
    },
    {
      "action": "rds:describeDBClusterSnapshots",
      "condition": null
    },
    {
      "action": "rds:describeDBEngineVersions",
      "condition": null
    },
    {
      "action": "rds:describeDBInstanceAutomatedBackups",
      "condition": null
    },
    {
      "action": "rds:describeDBInstances",
      "condition": null
    },
    {
      "action": "rds:describeDBLogFiles",
      "condition": null
    },
    {
      "action": "rds:describeDBParameterGroups",
      "condition": null
    },
    {
      "action": "rds:describeDBParameters",
      "condition": null
    },
    {
      "action": "rds:describeDBSecurityGroups",
      "condition": null
    },
    {
      "action": "rds:describeDBSnapshotAttributes",
      "condition": null
    },
    {
      "action": "rds:describeDBSnapshots",
      "condition": null
    },
    {
      "action": "rds:describeDBSubnetGroups",
      "condition": null
    },
    {
      "action": "rds:describeEngineDefaultClusterParameters",
      "condition": null
    },
    {
      "action": "rds:describeEngineDefaultParameters",
      "condition": null
    },
    {
      "action": "rds:describeEventCategories",
      "condition": null
    },
    {
      "action": "rds:describeEvents",
      "condition": null
    },
    {
      "action": "rds:describeEventSubscriptions",
      "condition": null
    },
    {
      "action": "rds:describeExportTasks",
      "condition": null
    },
    {
      "action": "rds:describeGlobalClusters",
      "condition": null
    },
    {
      "action": "rds:describeIntegrations",
      "condition": null
    },
    {
      "action": "rds:describeOptionGroupOptions",
      "condition": null
    },
    {
      "action": "rds:describeOptionGroups",
      "condition": null
    },
    {
      "action": "rds:describeOrderableDBInstanceOptions",
      "condition": null
    },
    {
      "action": "rds:describePendingMaintenanceActions",
      "condition": null
    },
    {
      "action": "rds:describeReservedDBInstances",
      "condition": null
    },
    {
      "action": "rds:describeReservedDBInstancesOfferings",
      "condition": null
    },
    {
      "action": "rds:describeSourceRegions",
      "condition": null
    },
    {
      "action": "rds:describeValidDBInstanceModifications",
      "condition": null
    },
    {
      "action": "rds:listTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-data:describeStatement",
      "condition": null
    },
    {
      "action": "redshift-data:listStatements",
      "condition": null
    },
    {
      "action": "redshift:describeClusterParameterGroups",
      "condition": null
    },
    {
      "action": "redshift:describeClusterParameters",
      "condition": null
    },
    {
      "action": "redshift:describeClusters",
      "condition": null
    },
    {
      "action": "redshift:describeClusterSecurityGroups",
      "condition": null
    },
    {
      "action": "redshift:describeClusterSnapshots",
      "condition": null
    },
    {
      "action": "redshift:describeClusterSubnetGroups",
      "condition": null
    },
    {
      "action": "redshift:describeClusterVersions",
      "condition": null
    },
    {
      "action": "redshift:describeDataShares",
      "condition": null
    },
    {
      "action": "redshift:describeDataSharesForConsumer",
      "condition": null
    },
    {
      "action": "redshift:describeDataSharesForProducer",
      "condition": null
    },
    {
      "action": "redshift:describeDefaultClusterParameters",
      "condition": null
    },
    {
      "action": "redshift:describeEventCategories",
      "condition": null
    },
    {
      "action": "redshift:describeEvents",
      "condition": null
    },
    {
      "action": "redshift:describeEventSubscriptions",
      "condition": null
    },
    {
      "action": "redshift:describeHsmClientCertificates",
      "condition": null
    },
    {
      "action": "redshift:describeHsmConfigurations",
      "condition": null
    },
    {
      "action": "redshift:describeLoggingStatus",
      "condition": null
    },
    {
      "action": "redshift:describeOrderableClusterOptions",
      "condition": null
    },
    {
      "action": "redshift:describeReservedNodeOfferings",
      "condition": null
    },
    {
      "action": "redshift:describeReservedNodes",
      "condition": null
    },
    {
      "action": "redshift:describeResize",
      "condition": null
    },
    {
      "action": "redshift:describeSnapshotCopyGrants",
      "condition": null
    },
    {
      "action": "redshift:describeStorage",
      "condition": null
    },
    {
      "action": "redshift:describeTableRestoreStatus",
      "condition": null
    },
    {
      "action": "redshift:describeTags",
      "condition": null
    },
    {
      "action": "redshift-serverless:getEndpointAccess",
      "condition": null
    },
    {
      "action": "redshift-serverless:getNamespace",
      "condition": null
    },
    {
      "action": "redshift-serverless:getRecoveryPoint",
      "condition": null
    },
    {
      "action": "redshift-serverless:getSnapshot",
      "condition": null
    },
    {
      "action": "redshift-serverless:getTableRestoreStatus",
      "condition": null
    },
    {
      "action": "redshift-serverless:getUsageLimit",
      "condition": null
    },
    {
      "action": "redshift-serverless:getWorkgroup",
      "condition": null
    },
    {
      "action": "redshift-serverless:listEndpointAccess",
      "condition": null
    },
    {
      "action": "redshift-serverless:listNamespaces",
      "condition": null
    },
    {
      "action": "redshift-serverless:listRecoveryPoints",
      "condition": null
    },
    {
      "action": "redshift-serverless:listSnapshots",
      "condition": null
    },
    {
      "action": "redshift-serverless:listTableRestoreStatus",
      "condition": null
    },
    {
      "action": "redshift-serverless:listUsageLimits",
      "condition": null
    },
    {
      "action": "redshift-serverless:listWorkgroups",
      "condition": null
    },
    {
      "action": "rekognition:listCollections",
      "condition": null
    },
    {
      "action": "rekognition:listFaces",
      "condition": null
    },
    {
      "action": "resource-explorer-2:getAccountLevelServiceConfiguration",
      "condition": null
    },
    {
      "action": "resource-explorer-2:getIndex",
      "condition": null
    },
    {
      "action": "resource-explorer-2:getView",
      "condition": null
    },
    {
      "action": "resource-explorer-2:listIndexes",
      "condition": null
    },
    {
      "action": "resource-explorer-2:listViews",
      "condition": null
    },
    {
      "action": "resource-explorer-2:search",
      "condition": null
    },
    {
      "action": "resource-groups:getGroup",
      "condition": null
    },
    {
      "action": "resource-groups:getGroupQuery",
      "condition": null
    },
    {
      "action": "resource-groups:getTags",
      "condition": null
    },
    {
      "action": "resource-groups:listGroupResources",
      "condition": null
    },
    {
      "action": "resource-groups:listGroups",
      "condition": null
    },
    {
      "action": "resource-groups:searchResources",
      "condition": null
    },
    {
      "action": "robomaker:batchDescribeSimulationJob",
      "condition": null
    },
    {
      "action": "robomaker:describeDeploymentJob",
      "condition": null
    },
    {
      "action": "robomaker:describeFleet",
      "condition": null
    },
    {
      "action": "robomaker:describeRobot",
      "condition": null
    },
    {
      "action": "robomaker:describeRobotApplication",
      "condition": null
    },
    {
      "action": "robomaker:describeSimulationApplication",
      "condition": null
    },
    {
      "action": "robomaker:describeSimulationJob",
      "condition": null
    },
    {
      "action": "robomaker:listDeploymentJobs",
      "condition": null
    },
    {
      "action": "robomaker:listFleets",
      "condition": null
    },
    {
      "action": "robomaker:listRobotApplications",
      "condition": null
    },
    {
      "action": "robomaker:listRobots",
      "condition": null
    },
    {
      "action": "robomaker:listSimulationApplications",
      "condition": null
    },
    {
      "action": "robomaker:listSimulationJobs",
      "condition": null
    },
    {
      "action": "route53-recovery-cluster:getRoutingControlState",
      "condition": null
    },
    {
      "action": "route53-recovery-cluster:listRoutingControls",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:describeControlPanel",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:describeRoutingControl",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:describeSafetyRule",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:listControlPanels",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:listRoutingControls",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:listSafetyRules",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getCell",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getCellReadinessSummary",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getReadinessCheck",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getReadinessCheckResourceStatus",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getReadinessCheckStatus",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getRecoveryGroup",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:getRecoveryGroupReadinessSummary",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:listCells",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:listReadinessChecks",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:listRecoveryGroups",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:listResourceSets",
      "condition": null
    },
    {
      "action": "route53:getAccountLimit",
      "condition": null
    },
    {
      "action": "route53:getChange",
      "condition": null
    },
    {
      "action": "route53:getCheckerIpRanges",
      "condition": null
    },
    {
      "action": "route53:getDNSSEC",
      "condition": null
    },
    {
      "action": "route53:getGeoLocation",
      "condition": null
    },
    {
      "action": "route53:getHealthCheck",
      "condition": null
    },
    {
      "action": "route53:getHealthCheckCount",
      "condition": null
    },
    {
      "action": "route53:getHealthCheckLastFailureReason",
      "condition": null
    },
    {
      "action": "route53:getHealthCheckStatus",
      "condition": null
    },
    {
      "action": "route53:getHostedZone",
      "condition": null
    },
    {
      "action": "route53:getHostedZoneCount",
      "condition": null
    },
    {
      "action": "route53:getHostedZoneLimit",
      "condition": null
    },
    {
      "action": "route53:getQueryLoggingConfig",
      "condition": null
    },
    {
      "action": "route53:getReusableDelegationSet",
      "condition": null
    },
    {
      "action": "route53:getTrafficPolicy",
      "condition": null
    },
    {
      "action": "route53:getTrafficPolicyInstance",
      "condition": null
    },
    {
      "action": "route53:getTrafficPolicyInstanceCount",
      "condition": null
    },
    {
      "action": "route53:listCidrBlocks",
      "condition": null
    },
    {
      "action": "route53:listCidrCollections",
      "condition": null
    },
    {
      "action": "route53:listCidrLocations",
      "condition": null
    },
    {
      "action": "route53:listGeoLocations",
      "condition": null
    },
    {
      "action": "route53:listHealthChecks",
      "condition": null
    },
    {
      "action": "route53:listHostedZones",
      "condition": null
    },
    {
      "action": "route53:listHostedZonesByName",
      "condition": null
    },
    {
      "action": "route53:listHostedZonesByVpc",
      "condition": null
    },
    {
      "action": "route53:listQueryLoggingConfigs",
      "condition": null
    },
    {
      "action": "route53:listResourceRecordSets",
      "condition": null
    },
    {
      "action": "route53:listReusableDelegationSets",
      "condition": null
    },
    {
      "action": "route53:listTrafficPolicies",
      "condition": null
    },
    {
      "action": "route53:listTrafficPolicyInstances",
      "condition": null
    },
    {
      "action": "route53:listTrafficPolicyInstancesByHostedZone",
      "condition": null
    },
    {
      "action": "route53:listTrafficPolicyInstancesByPolicy",
      "condition": null
    },
    {
      "action": "route53:listTrafficPolicyVersions",
      "condition": null
    },
    {
      "action": "route53:listVPCAssociationAuthorizations",
      "condition": null
    },
    {
      "action": "route53domains:checkDomainAvailability",
      "condition": null
    },
    {
      "action": "route53domains:getContactReachabilityStatus",
      "condition": null
    },
    {
      "action": "route53domains:getDomainDetail",
      "condition": null
    },
    {
      "action": "route53domains:getOperationDetail",
      "condition": null
    },
    {
      "action": "route53domains:listDomains",
      "condition": null
    },
    {
      "action": "route53domains:listOperations",
      "condition": null
    },
    {
      "action": "route53domains:listPrices",
      "condition": null
    },
    {
      "action": "route53domains:listTagsForDomain",
      "condition": null
    },
    {
      "action": "route53domains:viewBilling",
      "condition": null
    },
    {
      "action": "route53resolver:getFirewallConfig",
      "condition": null
    },
    {
      "action": "route53resolver:getFirewallDomainList",
      "condition": null
    },
    {
      "action": "route53resolver:getFirewallRuleGroup",
      "condition": null
    },
    {
      "action": "route53resolver:getFirewallRuleGroupAssociation",
      "condition": null
    },
    {
      "action": "route53resolver:getFirewallRuleGroupPolicy",
      "condition": null
    },
    {
      "action": "route53resolver:getOutpostResolver",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverDnssecConfig",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverQueryLogConfig",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverQueryLogConfigAssociation",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverQueryLogConfigPolicy",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverRule",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverRuleAssociation",
      "condition": null
    },
    {
      "action": "route53resolver:getResolverRulePolicy",
      "condition": null
    },
    {
      "action": "route53resolver:listFirewallConfigs",
      "condition": null
    },
    {
      "action": "route53resolver:listFirewallDomainLists",
      "condition": null
    },
    {
      "action": "route53resolver:listFirewallDomains",
      "condition": null
    },
    {
      "action": "route53resolver:listFirewallRuleGroupAssociations",
      "condition": null
    },
    {
      "action": "route53resolver:listFirewallRuleGroups",
      "condition": null
    },
    {
      "action": "route53resolver:listFirewallRules",
      "condition": null
    },
    {
      "action": "route53resolver:listOutpostResolvers",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverConfigs",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverDnssecConfigs",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverEndpointIpAddresses",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverEndpoints",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverQueryLogConfigAssociations",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverQueryLogConfigs",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverRuleAssociations",
      "condition": null
    },
    {
      "action": "route53resolver:listResolverRules",
      "condition": null
    },
    {
      "action": "route53resolver:listTagsForResource",
      "condition": null
    },
    {
      "action": "rum:batchGetRumMetricDefinitions",
      "condition": null
    },
    {
      "action": "rum:getAppMonitor",
      "condition": null
    },
    {
      "action": "rum:listAppMonitors",
      "condition": null
    },
    {
      "action": "rum:listRumMetricsDestinations",
      "condition": null
    },
    {
      "action": "s3:describeJob",
      "condition": null
    },
    {
      "action": "s3:describeMultiRegionAccessPointOperation",
      "condition": null
    },
    {
      "action": "s3:getAccelerateConfiguration",
      "condition": null
    },
    {
      "action": "s3:getAccessPoint",
      "condition": null
    },
    {
      "action": "s3:getAccessPointConfigurationForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:getAccessPointForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:getAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3:getAccessPointPolicyForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:getAccessPointPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:getAccessPointPolicyStatusForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:getAccountPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:getAnalyticsConfiguration",
      "condition": null
    },
    {
      "action": "s3:getBucketAcl",
      "condition": null
    },
    {
      "action": "s3:getBucketCORS",
      "condition": null
    },
    {
      "action": "s3:getBucketLocation",
      "condition": null
    },
    {
      "action": "s3:getBucketLogging",
      "condition": null
    },
    {
      "action": "s3:getBucketNotification",
      "condition": null
    },
    {
      "action": "s3:getBucketObjectLockConfiguration",
      "condition": null
    },
    {
      "action": "s3:getBucketOwnershipControls",
      "condition": null
    },
    {
      "action": "s3:getBucketPolicy",
      "condition": null
    },
    {
      "action": "s3:getBucketPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:getBucketPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:getBucketRequestPayment",
      "condition": null
    },
    {
      "action": "s3:getBucketVersioning",
      "condition": null
    },
    {
      "action": "s3:getBucketWebsite",
      "condition": null
    },
    {
      "action": "s3:getEncryptionConfiguration",
      "condition": null
    },
    {
      "action": "s3:getIntelligentTieringConfiguration",
      "condition": null
    },
    {
      "action": "s3:getInventoryConfiguration",
      "condition": null
    },
    {
      "action": "s3:getLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "s3:getMetricsConfiguration",
      "condition": null
    },
    {
      "action": "s3:getMultiRegionAccessPoint",
      "condition": null
    },
    {
      "action": "s3:getMultiRegionAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3:getMultiRegionAccessPointPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:getMultiRegionAccessPointRoutes",
      "condition": null
    },
    {
      "action": "s3:getObjectLegalHold",
      "condition": null
    },
    {
      "action": "s3:getObjectRetention",
      "condition": null
    },
    {
      "action": "s3:getReplicationConfiguration",
      "condition": null
    },
    {
      "action": "s3:getStorageLensConfiguration",
      "condition": null
    },
    {
      "action": "s3:listAccessPoints",
      "condition": null
    },
    {
      "action": "s3:listAccessPointsForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:listAllMyBuckets",
      "condition": null
    },
    {
      "action": "s3:listBucket",
      "condition": null
    },
    {
      "action": "s3:listBucketMultipartUploads",
      "condition": null
    },
    {
      "action": "s3:listBucketVersions",
      "condition": null
    },
    {
      "action": "s3:listJobs",
      "condition": null
    },
    {
      "action": "s3:listMultipartUploadParts",
      "condition": null
    },
    {
      "action": "s3:listMultiRegionAccessPoints",
      "condition": null
    },
    {
      "action": "s3:listStorageLensConfigurations",
      "condition": null
    },
    {
      "action": "s3express:getBucketPolicy",
      "condition": null
    },
    {
      "action": "s3express:listAllMyDirectoryBuckets",
      "condition": null
    },
    {
      "action": "sagemaker:describeAction",
      "condition": null
    },
    {
      "action": "sagemaker:describeAlgorithm",
      "condition": null
    },
    {
      "action": "sagemaker:describeApp",
      "condition": null
    },
    {
      "action": "sagemaker:describeAppImageConfig",
      "condition": null
    },
    {
      "action": "sagemaker:describeArtifact",
      "condition": null
    },
    {
      "action": "sagemaker:describeAutoMLJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeCluster",
      "condition": null
    },
    {
      "action": "sagemaker:describeClusterNode",
      "condition": null
    },
    {
      "action": "sagemaker:describeCodeRepository",
      "condition": null
    },
    {
      "action": "sagemaker:describeCompilationJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeContext",
      "condition": null
    },
    {
      "action": "sagemaker:describeDataQualityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:describeDevice",
      "condition": null
    },
    {
      "action": "sagemaker:describeDeviceFleet",
      "condition": null
    },
    {
      "action": "sagemaker:describeDomain",
      "condition": null
    },
    {
      "action": "sagemaker:describeEdgeDeploymentPlan",
      "condition": null
    },
    {
      "action": "sagemaker:describeEdgePackagingJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeEndpoint",
      "condition": null
    },
    {
      "action": "sagemaker:describeEndpointConfig",
      "condition": null
    },
    {
      "action": "sagemaker:describeExperiment",
      "condition": null
    },
    {
      "action": "sagemaker:describeFeatureGroup",
      "condition": null
    },
    {
      "action": "sagemaker:describeFeatureMetadata",
      "condition": null
    },
    {
      "action": "sagemaker:describeFlowDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:describeHub",
      "condition": null
    },
    {
      "action": "sagemaker:describeHubContent",
      "condition": null
    },
    {
      "action": "sagemaker:describeHumanTaskUi",
      "condition": null
    },
    {
      "action": "sagemaker:describeHyperParameterTuningJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeImage",
      "condition": null
    },
    {
      "action": "sagemaker:describeImageVersion",
      "condition": null
    },
    {
      "action": "sagemaker:describeInferenceComponent",
      "condition": null
    },
    {
      "action": "sagemaker:describeInferenceExperiment",
      "condition": null
    },
    {
      "action": "sagemaker:describeInferenceRecommendationsJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeLabelingJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeModel",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelBiasJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelCard",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelCardExportJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelExplainabilityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelPackage",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelPackageGroup",
      "condition": null
    },
    {
      "action": "sagemaker:describeModelQualityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:describeMonitoringSchedule",
      "condition": null
    },
    {
      "action": "sagemaker:describeNotebookInstance",
      "condition": null
    },
    {
      "action": "sagemaker:describeNotebookInstanceLifecycleConfig",
      "condition": null
    },
    {
      "action": "sagemaker:describePipeline",
      "condition": null
    },
    {
      "action": "sagemaker:describePipelineDefinitionForExecution",
      "condition": null
    },
    {
      "action": "sagemaker:describePipelineExecution",
      "condition": null
    },
    {
      "action": "sagemaker:describeProcessingJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeProject",
      "condition": null
    },
    {
      "action": "sagemaker:describeSpace",
      "condition": null
    },
    {
      "action": "sagemaker:describeStudioLifecycleConfig",
      "condition": null
    },
    {
      "action": "sagemaker:describeSubscribedWorkteam",
      "condition": null
    },
    {
      "action": "sagemaker:describeTrainingJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeTransformJob",
      "condition": null
    },
    {
      "action": "sagemaker:describeTrial",
      "condition": null
    },
    {
      "action": "sagemaker:describeTrialComponent",
      "condition": null
    },
    {
      "action": "sagemaker:describeUserProfile",
      "condition": null
    },
    {
      "action": "sagemaker:describeWorkforce",
      "condition": null
    },
    {
      "action": "sagemaker:describeWorkteam",
      "condition": null
    },
    {
      "action": "sagemaker:getDeviceFleetReport",
      "condition": null
    },
    {
      "action": "sagemaker:getModelPackageGroupPolicy",
      "condition": null
    },
    {
      "action": "sagemaker:getSagemakerServicecatalogPortfolioStatus",
      "condition": null
    },
    {
      "action": "sagemaker:listActions",
      "condition": null
    },
    {
      "action": "sagemaker:listAlgorithms",
      "condition": null
    },
    {
      "action": "sagemaker:listAliases",
      "condition": null
    },
    {
      "action": "sagemaker:listAppImageConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:listApps",
      "condition": null
    },
    {
      "action": "sagemaker:listArtifacts",
      "condition": null
    },
    {
      "action": "sagemaker:listAssociations",
      "condition": null
    },
    {
      "action": "sagemaker:listAutoMLJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listCandidatesForAutoMLJob",
      "condition": null
    },
    {
      "action": "sagemaker:listClusterNodes",
      "condition": null
    },
    {
      "action": "sagemaker:listClusters",
      "condition": null
    },
    {
      "action": "sagemaker:listCodeRepositories",
      "condition": null
    },
    {
      "action": "sagemaker:listCompilationJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listContexts",
      "condition": null
    },
    {
      "action": "sagemaker:listDataQualityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:listDeviceFleets",
      "condition": null
    },
    {
      "action": "sagemaker:listDevices",
      "condition": null
    },
    {
      "action": "sagemaker:listDomains",
      "condition": null
    },
    {
      "action": "sagemaker:listEdgeDeploymentPlans",
      "condition": null
    },
    {
      "action": "sagemaker:listEdgePackagingJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listEndpointConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:listEndpoints",
      "condition": null
    },
    {
      "action": "sagemaker:listExperiments",
      "condition": null
    },
    {
      "action": "sagemaker:listFeatureGroups",
      "condition": null
    },
    {
      "action": "sagemaker:listFlowDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:listHubContents",
      "condition": null
    },
    {
      "action": "sagemaker:listHubContentVersions",
      "condition": null
    },
    {
      "action": "sagemaker:listHubs",
      "condition": null
    },
    {
      "action": "sagemaker:listHumanTaskUis",
      "condition": null
    },
    {
      "action": "sagemaker:listHyperParameterTuningJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listImages",
      "condition": null
    },
    {
      "action": "sagemaker:listImageVersions",
      "condition": null
    },
    {
      "action": "sagemaker:listInferenceComponents",
      "condition": null
    },
    {
      "action": "sagemaker:listInferenceExperiments",
      "condition": null
    },
    {
      "action": "sagemaker:listInferenceRecommendationsJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listInferenceRecommendationsJobSteps",
      "condition": null
    },
    {
      "action": "sagemaker:listLabelingJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listLabelingJobsForWorkteam",
      "condition": null
    },
    {
      "action": "sagemaker:listLineageGroups",
      "condition": null
    },
    {
      "action": "sagemaker:listModelBiasJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:listModelCardExportJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listModelCards",
      "condition": null
    },
    {
      "action": "sagemaker:listModelCardVersions",
      "condition": null
    },
    {
      "action": "sagemaker:listModelExplainabilityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:listModelMetadata",
      "condition": null
    },
    {
      "action": "sagemaker:listModelPackageGroups",
      "condition": null
    },
    {
      "action": "sagemaker:listModelPackages",
      "condition": null
    },
    {
      "action": "sagemaker:listModelQualityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:listModels",
      "condition": null
    },
    {
      "action": "sagemaker:listMonitoringAlertHistory",
      "condition": null
    },
    {
      "action": "sagemaker:listMonitoringAlerts",
      "condition": null
    },
    {
      "action": "sagemaker:listMonitoringExecutions",
      "condition": null
    },
    {
      "action": "sagemaker:listMonitoringSchedules",
      "condition": null
    },
    {
      "action": "sagemaker:listNotebookInstanceLifecycleConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:listNotebookInstances",
      "condition": null
    },
    {
      "action": "sagemaker:listPipelineExecutions",
      "condition": null
    },
    {
      "action": "sagemaker:listPipelineExecutionSteps",
      "condition": null
    },
    {
      "action": "sagemaker:listPipelineParametersForExecution",
      "condition": null
    },
    {
      "action": "sagemaker:listPipelines",
      "condition": null
    },
    {
      "action": "sagemaker:listProcessingJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listProjects",
      "condition": null
    },
    {
      "action": "sagemaker:listSpaces",
      "condition": null
    },
    {
      "action": "sagemaker:listStageDevices",
      "condition": null
    },
    {
      "action": "sagemaker:listStudioLifecycleConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:listSubscribedWorkteams",
      "condition": null
    },
    {
      "action": "sagemaker:listTags",
      "condition": null
    },
    {
      "action": "sagemaker:listTrainingJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listTrainingJobsForHyperParameterTuningJob",
      "condition": null
    },
    {
      "action": "sagemaker:listTransformJobs",
      "condition": null
    },
    {
      "action": "sagemaker:listTrialComponents",
      "condition": null
    },
    {
      "action": "sagemaker:listTrials",
      "condition": null
    },
    {
      "action": "sagemaker:listUserProfiles",
      "condition": null
    },
    {
      "action": "sagemaker:listWorkforces",
      "condition": null
    },
    {
      "action": "sagemaker:listWorkteams",
      "condition": null
    },
    {
      "action": "savingsplans:describeSavingsPlans",
      "condition": null
    },
    {
      "action": "scheduler:getSchedule",
      "condition": null
    },
    {
      "action": "scheduler:getScheduleGroup",
      "condition": null
    },
    {
      "action": "scheduler:listScheduleGroups",
      "condition": null
    },
    {
      "action": "scheduler:listSchedules",
      "condition": null
    },
    {
      "action": "schemas:describeCodeBinding",
      "condition": null
    },
    {
      "action": "schemas:describeDiscoverer",
      "condition": null
    },
    {
      "action": "schemas:describeRegistry",
      "condition": null
    },
    {
      "action": "schemas:describeSchema",
      "condition": null
    },
    {
      "action": "schemas:getCodeBindingSource",
      "condition": null
    },
    {
      "action": "schemas:getDiscoveredSchema",
      "condition": null
    },
    {
      "action": "schemas:getResourcePolicy",
      "condition": null
    },
    {
      "action": "schemas:listDiscoverers",
      "condition": null
    },
    {
      "action": "schemas:listRegistries",
      "condition": null
    },
    {
      "action": "schemas:listSchemas",
      "condition": null
    },
    {
      "action": "schemas:listSchemaVersions",
      "condition": null
    },
    {
      "action": "sdb:domainMetadata",
      "condition": null
    },
    {
      "action": "sdb:listDomains",
      "condition": null
    },
    {
      "action": "secretsmanager:describeSecret",
      "condition": null
    },
    {
      "action": "secretsmanager:getResourcePolicy",
      "condition": null
    },
    {
      "action": "secretsmanager:listSecrets",
      "condition": null
    },
    {
      "action": "secretsmanager:listSecretVersionIds",
      "condition": null
    },
    {
      "action": "securityhub:getEnabledStandards",
      "condition": null
    },
    {
      "action": "securityhub:getFindings",
      "condition": null
    },
    {
      "action": "securityhub:getInsightResults",
      "condition": null
    },
    {
      "action": "securityhub:getInsights",
      "condition": null
    },
    {
      "action": "securityhub:getMasterAccount",
      "condition": null
    },
    {
      "action": "securityhub:getMembers",
      "condition": null
    },
    {
      "action": "securityhub:listEnabledProductsForImport",
      "condition": null
    },
    {
      "action": "securityhub:listInvitations",
      "condition": null
    },
    {
      "action": "securityhub:listMembers",
      "condition": null
    },
    {
      "action": "securitylake:getDataLakeExceptionSubscription",
      "condition": null
    },
    {
      "action": "securitylake:getDataLakeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "securitylake:getDataLakeSources",
      "condition": null
    },
    {
      "action": "securitylake:getSubscriber",
      "condition": null
    },
    {
      "action": "securitylake:listDataLakeExceptions",
      "condition": null
    },
    {
      "action": "securitylake:listDataLakes",
      "condition": null
    },
    {
      "action": "securitylake:listLogSources",
      "condition": null
    },
    {
      "action": "securitylake:listSubscribers",
      "condition": null
    },
    {
      "action": "serverlessrepo:getApplication",
      "condition": null
    },
    {
      "action": "serverlessrepo:getApplicationPolicy",
      "condition": null
    },
    {
      "action": "serverlessrepo:getCloudFormationTemplate",
      "condition": null
    },
    {
      "action": "serverlessrepo:listApplicationDependencies",
      "condition": null
    },
    {
      "action": "serverlessrepo:listApplications",
      "condition": null
    },
    {
      "action": "serverlessrepo:listApplicationVersions",
      "condition": null
    },
    {
      "action": "servicecatalog:describeConstraint",
      "condition": null
    },
    {
      "action": "servicecatalog:describePortfolio",
      "condition": null
    },
    {
      "action": "servicecatalog:describeProduct",
      "condition": null
    },
    {
      "action": "servicecatalog:describeProductAsAdmin",
      "condition": null
    },
    {
      "action": "servicecatalog:describeProductView",
      "condition": null
    },
    {
      "action": "servicecatalog:describeProvisioningArtifact",
      "condition": null
    },
    {
      "action": "servicecatalog:describeProvisioningParameters",
      "condition": null
    },
    {
      "action": "servicecatalog:describeRecord",
      "condition": null
    },
    {
      "action": "servicecatalog:listAcceptedPortfolioShares",
      "condition": null
    },
    {
      "action": "servicecatalog:listConstraintsForPortfolio",
      "condition": null
    },
    {
      "action": "servicecatalog:listLaunchPaths",
      "condition": null
    },
    {
      "action": "servicecatalog:listPortfolioAccess",
      "condition": null
    },
    {
      "action": "servicecatalog:listPortfolios",
      "condition": null
    },
    {
      "action": "servicecatalog:listPortfoliosForProduct",
      "condition": null
    },
    {
      "action": "servicecatalog:listPrincipalsForPortfolio",
      "condition": null
    },
    {
      "action": "servicecatalog:listProvisioningArtifacts",
      "condition": null
    },
    {
      "action": "servicecatalog:listRecordHistory",
      "condition": null
    },
    {
      "action": "servicecatalog:scanProvisionedProducts",
      "condition": null
    },
    {
      "action": "servicecatalog:searchProducts",
      "condition": null
    },
    {
      "action": "servicequotas:getAssociationForServiceQuotaTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:getAWSDefaultServiceQuota",
      "condition": null
    },
    {
      "action": "servicequotas:getRequestedServiceQuotaChange",
      "condition": null
    },
    {
      "action": "servicequotas:getServiceQuota",
      "condition": null
    },
    {
      "action": "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:listAWSDefaultServiceQuotas",
      "condition": null
    },
    {
      "action": "servicequotas:listRequestedServiceQuotaChangeHistory",
      "condition": null
    },
    {
      "action": "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
      "condition": null
    },
    {
      "action": "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:listServiceQuotas",
      "condition": null
    },
    {
      "action": "servicequotas:listServices",
      "condition": null
    },
    {
      "action": "ses:describeActiveReceiptRuleSet",
      "condition": null
    },
    {
      "action": "ses:describeConfigurationSet",
      "condition": null
    },
    {
      "action": "ses:describeReceiptRule",
      "condition": null
    },
    {
      "action": "ses:describeReceiptRuleSet",
      "condition": null
    },
    {
      "action": "ses:getAccount",
      "condition": null
    },
    {
      "action": "ses:getAccountSendingEnabled",
      "condition": null
    },
    {
      "action": "ses:getBlacklistReports",
      "condition": null
    },
    {
      "action": "ses:getConfigurationSet",
      "condition": null
    },
    {
      "action": "ses:getConfigurationSetEventDestinations",
      "condition": null
    },
    {
      "action": "ses:getContactList",
      "condition": null
    },
    {
      "action": "ses:getDedicatedIp",
      "condition": null
    },
    {
      "action": "ses:getDedicatedIpPool",
      "condition": null
    },
    {
      "action": "ses:getDedicatedIps",
      "condition": null
    },
    {
      "action": "ses:getDeliverabilityDashboardOptions",
      "condition": null
    },
    {
      "action": "ses:getDeliverabilityTestReport",
      "condition": null
    },
    {
      "action": "ses:getDomainDeliverabilityCampaign",
      "condition": null
    },
    {
      "action": "ses:getDomainStatisticsReport",
      "condition": null
    },
    {
      "action": "ses:getEmailIdentity",
      "condition": null
    },
    {
      "action": "ses:getIdentityDkimAttributes",
      "condition": null
    },
    {
      "action": "ses:getIdentityMailFromDomainAttributes",
      "condition": null
    },
    {
      "action": "ses:getIdentityNotificationAttributes",
      "condition": null
    },
    {
      "action": "ses:getIdentityPolicies",
      "condition": null
    },
    {
      "action": "ses:getIdentityVerificationAttributes",
      "condition": null
    },
    {
      "action": "ses:getImportJob",
      "condition": null
    },
    {
      "action": "ses:getSendQuota",
      "condition": null
    },
    {
      "action": "ses:getSendStatistics",
      "condition": null
    },
    {
      "action": "ses:listConfigurationSets",
      "condition": null
    },
    {
      "action": "ses:listContactLists",
      "condition": null
    },
    {
      "action": "ses:listContacts",
      "condition": null
    },
    {
      "action": "ses:listCustomVerificationEmailTemplates",
      "condition": null
    },
    {
      "action": "ses:listDedicatedIpPools",
      "condition": null
    },
    {
      "action": "ses:listDeliverabilityTestReports",
      "condition": null
    },
    {
      "action": "ses:listDomainDeliverabilityCampaigns",
      "condition": null
    },
    {
      "action": "ses:listEmailIdentities",
      "condition": null
    },
    {
      "action": "ses:listEmailTemplates",
      "condition": null
    },
    {
      "action": "ses:listIdentities",
      "condition": null
    },
    {
      "action": "ses:listIdentityPolicies",
      "condition": null
    },
    {
      "action": "ses:listImportJobs",
      "condition": null
    },
    {
      "action": "ses:listReceiptFilters",
      "condition": null
    },
    {
      "action": "ses:listReceiptRuleSets",
      "condition": null
    },
    {
      "action": "ses:listRecommendations",
      "condition": null
    },
    {
      "action": "ses:listTagsForResource",
      "condition": null
    },
    {
      "action": "ses:listTemplates",
      "condition": null
    },
    {
      "action": "ses:listVerifiedEmailAddresses",
      "condition": null
    },
    {
      "action": "shield:describeAttack",
      "condition": null
    },
    {
      "action": "shield:describeProtection",
      "condition": null
    },
    {
      "action": "shield:describeSubscription",
      "condition": null
    },
    {
      "action": "shield:listAttacks",
      "condition": null
    },
    {
      "action": "shield:listProtections",
      "condition": null
    },
    {
      "action": "sms-voice:getConfigurationSetEventDestinations",
      "condition": null
    },
    {
      "action": "sms:getConnectors",
      "condition": null
    },
    {
      "action": "sms:getReplicationJobs",
      "condition": null
    },
    {
      "action": "sms:getReplicationRuns",
      "condition": null
    },
    {
      "action": "sms:getServers",
      "condition": null
    },
    {
      "action": "snowball:describeAddress",
      "condition": null
    },
    {
      "action": "snowball:describeAddresses",
      "condition": null
    },
    {
      "action": "snowball:describeJob",
      "condition": null
    },
    {
      "action": "snowball:getSnowballUsage",
      "condition": null
    },
    {
      "action": "snowball:listJobs",
      "condition": null
    },
    {
      "action": "snowball:listServiceVersions",
      "condition": null
    },
    {
      "action": "sns:checkIfPhoneNumberIsOptedOut",
      "condition": null
    },
    {
      "action": "sns:getDataProtectionPolicy",
      "condition": null
    },
    {
      "action": "sns:getEndpointAttributes",
      "condition": null
    },
    {
      "action": "sns:getPlatformApplicationAttributes",
      "condition": null
    },
    {
      "action": "sns:getSMSAttributes",
      "condition": null
    },
    {
      "action": "sns:getSMSSandboxAccountStatus",
      "condition": null
    },
    {
      "action": "sns:getSubscriptionAttributes",
      "condition": null
    },
    {
      "action": "sns:getTopicAttributes",
      "condition": null
    },
    {
      "action": "sns:listEndpointsByPlatformApplication",
      "condition": null
    },
    {
      "action": "sns:listOriginationNumbers",
      "condition": null
    },
    {
      "action": "sns:listPhoneNumbersOptedOut",
      "condition": null
    },
    {
      "action": "sns:listPlatformApplications",
      "condition": null
    },
    {
      "action": "sns:listSMSSandboxPhoneNumbers",
      "condition": null
    },
    {
      "action": "sns:listSubscriptions",
      "condition": null
    },
    {
      "action": "sns:listSubscriptionsByTopic",
      "condition": null
    },
    {
      "action": "sns:listTopics",
      "condition": null
    },
    {
      "action": "sqs:getQueueAttributes",
      "condition": null
    },
    {
      "action": "sqs:getQueueUrl",
      "condition": null
    },
    {
      "action": "sqs:listDeadLetterSourceQueues",
      "condition": null
    },
    {
      "action": "sqs:listQueues",
      "condition": null
    },
    {
      "action": "ssm-contacts:describeEngagement",
      "condition": null
    },
    {
      "action": "ssm-contacts:describePage",
      "condition": null
    },
    {
      "action": "ssm-contacts:getContact",
      "condition": null
    },
    {
      "action": "ssm-contacts:getContactChannel",
      "condition": null
    },
    {
      "action": "ssm-contacts:getContactPolicy",
      "condition": null
    },
    {
      "action": "ssm-contacts:getRotation",
      "condition": null
    },
    {
      "action": "ssm-contacts:getRotationOverride",
      "condition": null
    },
    {
      "action": "ssm-contacts:listContactChannels",
      "condition": null
    },
    {
      "action": "ssm-contacts:listContacts",
      "condition": null
    },
    {
      "action": "ssm-contacts:listEngagements",
      "condition": null
    },
    {
      "action": "ssm-contacts:listPageReceipts",
      "condition": null
    },
    {
      "action": "ssm-contacts:listPageResolutions",
      "condition": null
    },
    {
      "action": "ssm-contacts:listPagesByContact",
      "condition": null
    },
    {
      "action": "ssm-contacts:listPagesByEngagement",
      "condition": null
    },
    {
      "action": "ssm-contacts:listPreviewRotationShifts",
      "condition": null
    },
    {
      "action": "ssm-contacts:listRotationOverrides",
      "condition": null
    },
    {
      "action": "ssm-contacts:listRotations",
      "condition": null
    },
    {
      "action": "ssm-contacts:listRotationShifts",
      "condition": null
    },
    {
      "action": "ssm-incidents:getIncidentRecord",
      "condition": null
    },
    {
      "action": "ssm-incidents:getReplicationSet",
      "condition": null
    },
    {
      "action": "ssm-incidents:getResourcePolicies",
      "condition": null
    },
    {
      "action": "ssm-incidents:getResponsePlan",
      "condition": null
    },
    {
      "action": "ssm-incidents:getTimelineEvent",
      "condition": null
    },
    {
      "action": "ssm-incidents:listIncidentRecords",
      "condition": null
    },
    {
      "action": "ssm-incidents:listRelatedItems",
      "condition": null
    },
    {
      "action": "ssm-incidents:listReplicationSets",
      "condition": null
    },
    {
      "action": "ssm-incidents:listResponsePlans",
      "condition": null
    },
    {
      "action": "ssm-incidents:listTimelineEvents",
      "condition": null
    },
    {
      "action": "ssm-sap:getApplication",
      "condition": null
    },
    {
      "action": "ssm-sap:getComponent",
      "condition": null
    },
    {
      "action": "ssm-sap:getDatabase",
      "condition": null
    },
    {
      "action": "ssm-sap:getOperation",
      "condition": null
    },
    {
      "action": "ssm-sap:getResourcePermission",
      "condition": null
    },
    {
      "action": "ssm-sap:listApplications",
      "condition": null
    },
    {
      "action": "ssm-sap:listComponents",
      "condition": null
    },
    {
      "action": "ssm-sap:listDatabases",
      "condition": null
    },
    {
      "action": "ssm-sap:listOperations",
      "condition": null
    },
    {
      "action": "ssm:describeActivations",
      "condition": null
    },
    {
      "action": "ssm:describeAssociation",
      "condition": null
    },
    {
      "action": "ssm:describeAssociationExecutions",
      "condition": null
    },
    {
      "action": "ssm:describeAssociationExecutionTargets",
      "condition": null
    },
    {
      "action": "ssm:describeAutomationExecutions",
      "condition": null
    },
    {
      "action": "ssm:describeAutomationStepExecutions",
      "condition": null
    },
    {
      "action": "ssm:describeAvailablePatches",
      "condition": null
    },
    {
      "action": "ssm:describeDocument",
      "condition": null
    },
    {
      "action": "ssm:describeDocumentPermission",
      "condition": null
    },
    {
      "action": "ssm:describeEffectiveInstanceAssociations",
      "condition": null
    },
    {
      "action": "ssm:describeEffectivePatchesForPatchBaseline",
      "condition": null
    },
    {
      "action": "ssm:describeInstanceAssociationsStatus",
      "condition": null
    },
    {
      "action": "ssm:describeInstanceInformation",
      "condition": null
    },
    {
      "action": "ssm:describeInstancePatches",
      "condition": null
    },
    {
      "action": "ssm:describeInstancePatchStates",
      "condition": null
    },
    {
      "action": "ssm:describeInstancePatchStatesForPatchGroup",
      "condition": null
    },
    {
      "action": "ssm:describeInventoryDeletions",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowExecutions",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowExecutionTaskInvocations",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowExecutionTasks",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindows",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowSchedule",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowsForTarget",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowTargets",
      "condition": null
    },
    {
      "action": "ssm:describeMaintenanceWindowTasks",
      "condition": null
    },
    {
      "action": "ssm:describeOpsItems",
      "condition": null
    },
    {
      "action": "ssm:describeParameters",
      "condition": null
    },
    {
      "action": "ssm:describePatchBaselines",
      "condition": null
    },
    {
      "action": "ssm:describePatchGroups",
      "condition": null
    },
    {
      "action": "ssm:describePatchGroupState",
      "condition": null
    },
    {
      "action": "ssm:describePatchProperties",
      "condition": null
    },
    {
      "action": "ssm:describeSessions",
      "condition": null
    },
    {
      "action": "ssm:getAutomationExecution",
      "condition": null
    },
    {
      "action": "ssm:getCalendarState",
      "condition": null
    },
    {
      "action": "ssm:getCommandInvocation",
      "condition": null
    },
    {
      "action": "ssm:getConnectionStatus",
      "condition": null
    },
    {
      "action": "ssm:getDefaultPatchBaseline",
      "condition": null
    },
    {
      "action": "ssm:getDeployablePatchSnapshotForInstance",
      "condition": null
    },
    {
      "action": "ssm:getInventorySchema",
      "condition": null
    },
    {
      "action": "ssm:getMaintenanceWindow",
      "condition": null
    },
    {
      "action": "ssm:getMaintenanceWindowExecution",
      "condition": null
    },
    {
      "action": "ssm:getMaintenanceWindowExecutionTask",
      "condition": null
    },
    {
      "action": "ssm:getMaintenanceWindowExecutionTaskInvocation",
      "condition": null
    },
    {
      "action": "ssm:getMaintenanceWindowTask",
      "condition": null
    },
    {
      "action": "ssm:getOpsItem",
      "condition": null
    },
    {
      "action": "ssm:getOpsMetadata",
      "condition": null
    },
    {
      "action": "ssm:getOpsSummary",
      "condition": null
    },
    {
      "action": "ssm:getPatchBaseline",
      "condition": null
    },
    {
      "action": "ssm:getPatchBaselineForPatchGroup",
      "condition": null
    },
    {
      "action": "ssm:getResourcePolicies",
      "condition": null
    },
    {
      "action": "ssm:getServiceSetting",
      "condition": null
    },
    {
      "action": "ssm:listAssociations",
      "condition": null
    },
    {
      "action": "ssm:listAssociationVersions",
      "condition": null
    },
    {
      "action": "ssm:listCommandInvocations",
      "condition": null
    },
    {
      "action": "ssm:listCommands",
      "condition": null
    },
    {
      "action": "ssm:listComplianceItems",
      "condition": null
    },
    {
      "action": "ssm:listComplianceSummaries",
      "condition": null
    },
    {
      "action": "ssm:listDocuments",
      "condition": null
    },
    {
      "action": "ssm:listDocumentMetadataHistory",
      "condition": null
    },
    {
      "action": "ssm:listDocumentVersions",
      "condition": null
    },
    {
      "action": "ssm:listOpsItemEvents",
      "condition": null
    },
    {
      "action": "ssm:listOpsItemRelatedItems",
      "condition": null
    },
    {
      "action": "ssm:listOpsMetadata",
      "condition": null
    },
    {
      "action": "ssm:listResourceComplianceSummaries",
      "condition": null
    },
    {
      "action": "ssm:listResourceDataSync",
      "condition": null
    },
    {
      "action": "ssm:listTagsForResource",
      "condition": null
    },
    {
      "action": "sso:describeApplicationAssignment",
      "condition": null
    },
    {
      "action": "sso:describeApplicationProvider",
      "condition": null
    },
    {
      "action": "sso:describeApplication",
      "condition": null
    },
    {
      "action": "sso:describeInstance",
      "condition": null
    },
    {
      "action": "sso:describeTrustedTokenIssuer",
      "condition": null
    },
    {
      "action": "sso:getApplicationAccessScope",
      "condition": null
    },
    {
      "action": "sso:getApplicationAssignmentConfiguration",
      "condition": null
    },
    {
      "action": "sso:getApplicationAuthenticationMethod",
      "condition": null
    },
    {
      "action": "sso:getApplicationGrant",
      "condition": null
    },
    {
      "action": "sso:getApplicationInstance",
      "condition": null
    },
    {
      "action": "sso:getApplicationTemplate",
      "condition": null
    },
    {
      "action": "sso:getManagedApplicationInstance",
      "condition": null
    },
    {
      "action": "sso:getSharedSsoConfiguration",
      "condition": null
    },
    {
      "action": "sso:listApplicationAccessScopes",
      "condition": null
    },
    {
      "action": "sso:listApplicationAssignments",
      "condition": null
    },
    {
      "action": "sso:listApplicationAuthenticationMethods",
      "condition": null
    },
    {
      "action": "sso:listApplicationGrants",
      "condition": null
    },
    {
      "action": "sso:listApplicationInstances",
      "condition": null
    },
    {
      "action": "sso:listApplicationProviders",
      "condition": null
    },
    {
      "action": "sso:listApplications",
      "condition": null
    },
    {
      "action": "sso:listApplicationTemplates",
      "condition": null
    },
    {
      "action": "sso:listDirectoryAssociations",
      "condition": null
    },
    {
      "action": "sso:listInstances",
      "condition": null
    },
    {
      "action": "sso:listProfileAssociations",
      "condition": null
    },
    {
      "action": "sso:listTrustedTokenIssuers",
      "condition": null
    },
    {
      "action": "states:describeActivity",
      "condition": null
    },
    {
      "action": "states:describeExecution",
      "condition": null
    },
    {
      "action": "states:describeMapRun",
      "condition": null
    },
    {
      "action": "states:describeStateMachine",
      "condition": null
    },
    {
      "action": "states:describeStateMachineAlias",
      "condition": null
    },
    {
      "action": "states:describeStateMachineForExecution",
      "condition": null
    },
    {
      "action": "states:getExecutionHistory",
      "condition": null
    },
    {
      "action": "states:listActivities",
      "condition": null
    },
    {
      "action": "states:listExecutions",
      "condition": null
    },
    {
      "action": "states:listMapRuns",
      "condition": null
    },
    {
      "action": "states:listStateMachineAliases",
      "condition": null
    },
    {
      "action": "states:listStateMachines",
      "condition": null
    },
    {
      "action": "states:listStateMachineVersions",
      "condition": null
    },
    {
      "action": "storagegateway:describeBandwidthRateLimit",
      "condition": null
    },
    {
      "action": "storagegateway:describeCache",
      "condition": null
    },
    {
      "action": "storagegateway:describeCachediSCSIVolumes",
      "condition": null
    },
    {
      "action": "storagegateway:describeFileSystemAssociations",
      "condition": null
    },
    {
      "action": "storagegateway:describeGatewayInformation",
      "condition": null
    },
    {
      "action": "storagegateway:describeMaintenanceStartTime",
      "condition": null
    },
    {
      "action": "storagegateway:describeNFSFileShares",
      "condition": null
    },
    {
      "action": "storagegateway:describeSMBFileShares",
      "condition": null
    },
    {
      "action": "storagegateway:describeSMBSettings",
      "condition": null
    },
    {
      "action": "storagegateway:describeSnapshotSchedule",
      "condition": null
    },
    {
      "action": "storagegateway:describeStorediSCSIVolumes",
      "condition": null
    },
    {
      "action": "storagegateway:describeTapeArchives",
      "condition": null
    },
    {
      "action": "storagegateway:describeTapeRecoveryPoints",
      "condition": null
    },
    {
      "action": "storagegateway:describeTapes",
      "condition": null
    },
    {
      "action": "storagegateway:describeUploadBuffer",
      "condition": null
    },
    {
      "action": "storagegateway:describeVTLDevices",
      "condition": null
    },
    {
      "action": "storagegateway:describeWorkingStorage",
      "condition": null
    },
    {
      "action": "storagegateway:listAutomaticTapeCreationPolicies",
      "condition": null
    },
    {
      "action": "storagegateway:listFileShares",
      "condition": null
    },
    {
      "action": "storagegateway:listFileSystemAssociations",
      "condition": null
    },
    {
      "action": "storagegateway:listGateways",
      "condition": null
    },
    {
      "action": "storagegateway:listLocalDisks",
      "condition": null
    },
    {
      "action": "storagegateway:listTagsForResource",
      "condition": null
    },
    {
      "action": "storagegateway:listTapes",
      "condition": null
    },
    {
      "action": "storagegateway:listVolumeInitiators",
      "condition": null
    },
    {
      "action": "storagegateway:listVolumeRecoveryPoints",
      "condition": null
    },
    {
      "action": "storagegateway:listVolumes",
      "condition": null
    },
    {
      "action": "swf:countClosedWorkflowExecutions",
      "condition": null
    },
    {
      "action": "swf:countOpenWorkflowExecutions",
      "condition": null
    },
    {
      "action": "swf:countPendingActivityTasks",
      "condition": null
    },
    {
      "action": "swf:countPendingDecisionTasks",
      "condition": null
    },
    {
      "action": "swf:describeActivityType",
      "condition": null
    },
    {
      "action": "swf:describeDomain",
      "condition": null
    },
    {
      "action": "swf:describeWorkflowExecution",
      "condition": null
    },
    {
      "action": "swf:describeWorkflowType",
      "condition": null
    },
    {
      "action": "swf:getWorkflowExecutionHistory",
      "condition": null
    },
    {
      "action": "swf:listActivityTypes",
      "condition": null
    },
    {
      "action": "swf:listClosedWorkflowExecutions",
      "condition": null
    },
    {
      "action": "swf:listDomains",
      "condition": null
    },
    {
      "action": "swf:listOpenWorkflowExecutions",
      "condition": null
    },
    {
      "action": "swf:listWorkflowTypes",
      "condition": null
    },
    {
      "action": "synthetics:describeCanaries",
      "condition": null
    },
    {
      "action": "synthetics:describeCanariesLastRun",
      "condition": null
    },
    {
      "action": "synthetics:describeRuntimeVersions",
      "condition": null
    },
    {
      "action": "synthetics:getCanary",
      "condition": null
    },
    {
      "action": "synthetics:getCanaryRuns",
      "condition": null
    },
    {
      "action": "synthetics:getGroup",
      "condition": null
    },
    {
      "action": "synthetics:listAssociatedGroups",
      "condition": null
    },
    {
      "action": "synthetics:listGroupResources",
      "condition": null
    },
    {
      "action": "synthetics:listGroups",
      "condition": null
    },
    {
      "action": "tiros:createQuery",
      "condition": null
    },
    {
      "action": "tiros:getQueryAnswer",
      "condition": null
    },
    {
      "action": "tiros:getQueryExplanation",
      "condition": null
    },
    {
      "action": "transcribe:describeLanguageModel",
      "condition": null
    },
    {
      "action": "transcribe:getCallAnalyticsCategory",
      "condition": null
    },
    {
      "action": "transcribe:getCallAnalyticsJob",
      "condition": null
    },
    {
      "action": "transcribe:getMedicalTranscriptionJob",
      "condition": null
    },
    {
      "action": "transcribe:getMedicalVocabulary",
      "condition": null
    },
    {
      "action": "transcribe:getTranscriptionJob",
      "condition": null
    },
    {
      "action": "transcribe:getVocabulary",
      "condition": null
    },
    {
      "action": "transcribe:getVocabularyFilter",
      "condition": null
    },
    {
      "action": "transcribe:listCallAnalyticsCategories",
      "condition": null
    },
    {
      "action": "transcribe:listCallAnalyticsJobs",
      "condition": null
    },
    {
      "action": "transcribe:listLanguageModels",
      "condition": null
    },
    {
      "action": "transcribe:listMedicalTranscriptionJobs",
      "condition": null
    },
    {
      "action": "transcribe:listMedicalVocabularies",
      "condition": null
    },
    {
      "action": "transcribe:listTranscriptionJobs",
      "condition": null
    },
    {
      "action": "transcribe:listVocabularies",
      "condition": null
    },
    {
      "action": "transcribe:listVocabularyFilters",
      "condition": null
    },
    {
      "action": "transfer:describeAccess",
      "condition": null
    },
    {
      "action": "transfer:describeAgreement",
      "condition": null
    },
    {
      "action": "transfer:describeConnector",
      "condition": null
    },
    {
      "action": "transfer:describeExecution",
      "condition": null
    },
    {
      "action": "transfer:describeProfile",
      "condition": null
    },
    {
      "action": "transfer:describeServer",
      "condition": null
    },
    {
      "action": "transfer:describeUser",
      "condition": null
    },
    {
      "action": "transfer:describeWorkflow",
      "condition": null
    },
    {
      "action": "transfer:listAccesses",
      "condition": null
    },
    {
      "action": "transfer:listAgreements",
      "condition": null
    },
    {
      "action": "transfer:listConnectors",
      "condition": null
    },
    {
      "action": "transfer:listExecutions",
      "condition": null
    },
    {
      "action": "transfer:listHostKeys",
      "condition": null
    },
    {
      "action": "transfer:listProfiles",
      "condition": null
    },
    {
      "action": "transfer:listServers",
      "condition": null
    },
    {
      "action": "transfer:listTagsForResource",
      "condition": null
    },
    {
      "action": "transfer:listUsers",
      "condition": null
    },
    {
      "action": "transfer:listWorkflows",
      "condition": null
    },
    {
      "action": "transfer:sendWorkflowStepState",
      "condition": null
    },
    {
      "action": "trustedadvisor:getOrganizationRecommendation",
      "condition": null
    },
    {
      "action": "trustedadvisor:getRecommendation",
      "condition": null
    },
    {
      "action": "trustedadvisor:listChecks",
      "condition": null
    },
    {
      "action": "trustedadvisor:listOrganizationRecommendationAccounts",
      "condition": null
    },
    {
      "action": "trustedadvisor:listOrganizationRecommendationResources",
      "condition": null
    },
    {
      "action": "trustedadvisor:listOrganizationRecommendations",
      "condition": null
    },
    {
      "action": "trustedadvisor:listRecommendationResources",
      "condition": null
    },
    {
      "action": "trustedadvisor:listRecommendations",
      "condition": null
    },
    {
      "action": "verifiedpermissions:getIdentitySource",
      "condition": null
    },
    {
      "action": "verifiedpermissions:getPolicy",
      "condition": null
    },
    {
      "action": "verifiedpermissions:getPolicyStore",
      "condition": null
    },
    {
      "action": "verifiedpermissions:getPolicyTemplate",
      "condition": null
    },
    {
      "action": "verifiedpermissions:getSchema",
      "condition": null
    },
    {
      "action": "verifiedpermissions:listIdentitySources",
      "condition": null
    },
    {
      "action": "verifiedpermissions:listPolicies",
      "condition": null
    },
    {
      "action": "verifiedpermissions:listPolicyStores",
      "condition": null
    },
    {
      "action": "verifiedpermissions:listPolicyTemplates",
      "condition": null
    },
    {
      "action": "vpc-lattice:getAccessLogSubscription",
      "condition": null
    },
    {
      "action": "vpc-lattice:getAuthPolicy",
      "condition": null
    },
    {
      "action": "vpc-lattice:getListener",
      "condition": null
    },
    {
      "action": "vpc-lattice:getResourcePolicy",
      "condition": null
    },
    {
      "action": "vpc-lattice:getRule",
      "condition": null
    },
    {
      "action": "vpc-lattice:getService",
      "condition": null
    },
    {
      "action": "vpc-lattice:getServiceNetwork",
      "condition": null
    },
    {
      "action": "vpc-lattice:getServiceNetworkServiceAssociation",
      "condition": null
    },
    {
      "action": "vpc-lattice:getServiceNetworkVpcAssociation",
      "condition": null
    },
    {
      "action": "vpc-lattice:getTargetGroup",
      "condition": null
    },
    {
      "action": "vpc-lattice:listAccessLogSubscriptions",
      "condition": null
    },
    {
      "action": "vpc-lattice:listListeners",
      "condition": null
    },
    {
      "action": "vpc-lattice:listRules",
      "condition": null
    },
    {
      "action": "vpc-lattice:listServiceNetworks",
      "condition": null
    },
    {
      "action": "vpc-lattice:listServiceNetworkServiceAssociations",
      "condition": null
    },
    {
      "action": "vpc-lattice:listServiceNetworkVpcAssociations",
      "condition": null
    },
    {
      "action": "vpc-lattice:listServices",
      "condition": null
    },
    {
      "action": "vpc-lattice:listTargetGroups",
      "condition": null
    },
    {
      "action": "vpc-lattice:listTargets",
      "condition": null
    },
    {
      "action": "waf-regional:getByteMatchSet",
      "condition": null
    },
    {
      "action": "waf-regional:getChangeTokenStatus",
      "condition": null
    },
    {
      "action": "waf-regional:getGeoMatchSet",
      "condition": null
    },
    {
      "action": "waf-regional:getIPSet",
      "condition": null
    },
    {
      "action": "waf-regional:getLoggingConfiguration",
      "condition": null
    },
    {
      "action": "waf-regional:getRateBasedRule",
      "condition": null
    },
    {
      "action": "waf-regional:getRegexMatchSet",
      "condition": null
    },
    {
      "action": "waf-regional:getRegexPatternSet",
      "condition": null
    },
    {
      "action": "waf-regional:getRule",
      "condition": null
    },
    {
      "action": "waf-regional:getRuleGroup",
      "condition": null
    },
    {
      "action": "waf-regional:getSqlInjectionMatchSet",
      "condition": null
    },
    {
      "action": "waf-regional:getWebACL",
      "condition": null
    },
    {
      "action": "waf-regional:getWebACLForResource",
      "condition": null
    },
    {
      "action": "waf-regional:listActivatedRulesInRuleGroup",
      "condition": null
    },
    {
      "action": "waf-regional:listByteMatchSets",
      "condition": null
    },
    {
      "action": "waf-regional:listGeoMatchSets",
      "condition": null
    },
    {
      "action": "waf-regional:listIPSets",
      "condition": null
    },
    {
      "action": "waf-regional:listLoggingConfigurations",
      "condition": null
    },
    {
      "action": "waf-regional:listRateBasedRules",
      "condition": null
    },
    {
      "action": "waf-regional:listRegexMatchSets",
      "condition": null
    },
    {
      "action": "waf-regional:listRegexPatternSets",
      "condition": null
    },
    {
      "action": "waf-regional:listResourcesForWebACL",
      "condition": null
    },
    {
      "action": "waf-regional:listRuleGroups",
      "condition": null
    },
    {
      "action": "waf-regional:listRules",
      "condition": null
    },
    {
      "action": "waf-regional:listSqlInjectionMatchSets",
      "condition": null
    },
    {
      "action": "waf-regional:listWebACLs",
      "condition": null
    },
    {
      "action": "waf:getByteMatchSet",
      "condition": null
    },
    {
      "action": "waf:getChangeTokenStatus",
      "condition": null
    },
    {
      "action": "waf:getGeoMatchSet",
      "condition": null
    },
    {
      "action": "waf:getIPSet",
      "condition": null
    },
    {
      "action": "waf:getLoggingConfiguration",
      "condition": null
    },
    {
      "action": "waf:getRateBasedRule",
      "condition": null
    },
    {
      "action": "waf:getRegexMatchSet",
      "condition": null
    },
    {
      "action": "waf:getRegexPatternSet",
      "condition": null
    },
    {
      "action": "waf:getRule",
      "condition": null
    },
    {
      "action": "waf:getRuleGroup",
      "condition": null
    },
    {
      "action": "waf:getSampledRequests",
      "condition": null
    },
    {
      "action": "waf:getSizeConstraintSet",
      "condition": null
    },
    {
      "action": "waf:getSqlInjectionMatchSet",
      "condition": null
    },
    {
      "action": "waf:getWebACL",
      "condition": null
    },
    {
      "action": "waf:getXssMatchSet",
      "condition": null
    },
    {
      "action": "waf:listActivatedRulesInRuleGroup",
      "condition": null
    },
    {
      "action": "waf:listByteMatchSets",
      "condition": null
    },
    {
      "action": "waf:listGeoMatchSets",
      "condition": null
    },
    {
      "action": "waf:listIPSets",
      "condition": null
    },
    {
      "action": "waf:listLoggingConfigurations",
      "condition": null
    },
    {
      "action": "waf:listRateBasedRules",
      "condition": null
    },
    {
      "action": "waf:listRegexMatchSets",
      "condition": null
    },
    {
      "action": "waf:listRegexPatternSets",
      "condition": null
    },
    {
      "action": "waf:listRuleGroups",
      "condition": null
    },
    {
      "action": "waf:listRules",
      "condition": null
    },
    {
      "action": "waf:listSizeConstraintSets",
      "condition": null
    },
    {
      "action": "waf:listSqlInjectionMatchSets",
      "condition": null
    },
    {
      "action": "waf:listWebACLs",
      "condition": null
    },
    {
      "action": "waf:listXssMatchSets",
      "condition": null
    },
    {
      "action": "wafv2:checkCapacity",
      "condition": null
    },
    {
      "action": "wafv2:describeManagedRuleGroup",
      "condition": null
    },
    {
      "action": "wafv2:getIPSet",
      "condition": null
    },
    {
      "action": "wafv2:getLoggingConfiguration",
      "condition": null
    },
    {
      "action": "wafv2:getPermissionPolicy",
      "condition": null
    },
    {
      "action": "wafv2:getRateBasedStatementManagedKeys",
      "condition": null
    },
    {
      "action": "wafv2:getRegexPatternSet",
      "condition": null
    },
    {
      "action": "wafv2:getRuleGroup",
      "condition": null
    },
    {
      "action": "wafv2:getSampledRequests",
      "condition": null
    },
    {
      "action": "wafv2:getWebACL",
      "condition": null
    },
    {
      "action": "wafv2:getWebACLForResource",
      "condition": null
    },
    {
      "action": "wafv2:listAvailableManagedRuleGroups",
      "condition": null
    },
    {
      "action": "wafv2:listIPSets",
      "condition": null
    },
    {
      "action": "wafv2:listLoggingConfigurations",
      "condition": null
    },
    {
      "action": "wafv2:listRegexPatternSets",
      "condition": null
    },
    {
      "action": "wafv2:listResourcesForWebACL",
      "condition": null
    },
    {
      "action": "wafv2:listRuleGroups",
      "condition": null
    },
    {
      "action": "wafv2:listTagsForResource",
      "condition": null
    },
    {
      "action": "wafv2:listWebACLs",
      "condition": null
    },
    {
      "action": "workdocs:checkAlias",
      "condition": null
    },
    {
      "action": "workdocs:describeAvailableDirectories",
      "condition": null
    },
    {
      "action": "workdocs:describeInstances",
      "condition": null
    },
    {
      "action": "workmail:describeGroup",
      "condition": null
    },
    {
      "action": "workmail:describeOrganization",
      "condition": null
    },
    {
      "action": "workmail:describeResource",
      "condition": null
    },
    {
      "action": "workmail:describeUser",
      "condition": null
    },
    {
      "action": "workmail:listAliases",
      "condition": null
    },
    {
      "action": "workmail:listGroupMembers",
      "condition": null
    },
    {
      "action": "workmail:listGroups",
      "condition": null
    },
    {
      "action": "workmail:listMailboxPermissions",
      "condition": null
    },
    {
      "action": "workmail:listOrganizations",
      "condition": null
    },
    {
      "action": "workmail:listResourceDelegates",
      "condition": null
    },
    {
      "action": "workmail:listResources",
      "condition": null
    },
    {
      "action": "workmail:listUsers",
      "condition": null
    },
    {
      "action": "workspaces-web:getBrowserSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:getIdentityProvider",
      "condition": null
    },
    {
      "action": "workspaces-web:getNetworkSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:getPortal",
      "condition": null
    },
    {
      "action": "workspaces-web:getPortalServiceProviderMetadata",
      "condition": null
    },
    {
      "action": "workspaces-web:getTrustStoreCertificate",
      "condition": null
    },
    {
      "action": "workspaces-web:getUserSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:listBrowserSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:listIdentityProviders",
      "condition": null
    },
    {
      "action": "workspaces-web:listNetworkSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:listPortals",
      "condition": null
    },
    {
      "action": "workspaces-web:listTagsForResource",
      "condition": null
    },
    {
      "action": "workspaces-web:listTrustStoreCertificates",
      "condition": null
    },
    {
      "action": "workspaces-web:listTrustStores",
      "condition": null
    },
    {
      "action": "workspaces-web:listUserSettings",
      "condition": null
    },
    {
      "action": "workspaces:describeAccount",
      "condition": null
    },
    {
      "action": "workspaces:describeAccountModifications",
      "condition": null
    },
    {
      "action": "workspaces:describeIpGroups",
      "condition": null
    },
    {
      "action": "workspaces:describeTags",
      "condition": null
    },
    {
      "action": "workspaces:describeWorkspaceBundles",
      "condition": null
    },
    {
      "action": "workspaces:describeWorkspaceDirectories",
      "condition": null
    },
    {
      "action": "workspaces:describeWorkspaceImages",
      "condition": null
    },
    {
      "action": "workspaces:describeWorkspaces",
      "condition": null
    },
    {
      "action": "workspaces:describeWorkspacesConnectionStatus",
      "condition": null
    },
    {
      "action": "xray:getEncryptionConfig",
      "condition": null
    },
    {
      "action": "xray:getGroup",
      "condition": null
    },
    {
      "action": "xray:getGroups",
      "condition": null
    },
    {
      "action": "xray:getSamplingRules",
      "condition": null
    },
    {
      "action": "xray:listResourcePolicies",
      "condition": null
    }
  ],
  "updatedate": "2024-05-02T02:47:48+00:00",
  "version": "v36"
}