{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy",
  "createdate": "2024-06-17T18:56:45+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "access-analyzer:GetAnalyzer",
          "access-analyzer:GetArchiveRule",
          "access-analyzer:ListAnalyzers",
          "access-analyzer:ListArchiveRules",
          "access-analyzer:ListTagsForResource",
          "account:GetAlternateContact",
          "acm-pca:DescribeCertificateAuthority",
          "acm-pca:GetCertificateAuthorityCertificate",
          "acm-pca:GetCertificateAuthorityCsr",
          "acm-pca:ListCertificateAuthorities",
          "acm-pca:ListTags",
          "acm:DescribeCertificate",
          "acm:ListCertificates",
          "acm:ListTagsForCertificate",
          "airflow:GetEnvironment",
          "airflow:ListEnvironments",
          "airflow:ListTagsForResource",
          "amplify:GetApp",
          "amplify:GetBranch",
          "amplify:ListApps",
          "amplify:ListBranches",
          "amplifyuibuilder:ExportThemes",
          "amplifyuibuilder:GetTheme",
          "amplifyuibuilder:ListThemes",
          "app-integrations:GetEventIntegration",
          "app-integrations:ListEventIntegrationAssociations",
          "app-integrations:ListEventIntegrations",
          "appconfig:GetApplication",
          "appconfig:GetConfigurationProfile",
          "appconfig:GetDeployment",
          "appconfig:GetDeploymentStrategy",
          "appconfig:GetEnvironment",
          "appconfig:GetExtensionAssociation",
          "appconfig:GetHostedConfigurationVersion",
          "appconfig:ListApplications",
          "appconfig:ListConfigurationProfiles",
          "appconfig:ListDeployments",
          "appconfig:ListDeploymentStrategies",
          "appconfig:ListEnvironments",
          "appconfig:ListExtensionAssociations",
          "appconfig:ListHostedConfigurationVersions",
          "appconfig:ListTagsForResource",
          "appflow:DescribeConnectorProfiles",
          "appflow:DescribeFlow",
          "appflow:ListFlows",
          "appflow:ListTagsForResource",
          "application-autoscaling:DescribeScalableTargets",
          "application-autoscaling:DescribeScalingPolicies",
          "appmesh:DescribeGatewayRoute",
          "appmesh:DescribeMesh",
          "appmesh:DescribeRoute",
          "appmesh:DescribeVirtualGateway",
          "appmesh:DescribeVirtualNode",
          "appmesh:DescribeVirtualRouter",
          "appmesh:DescribeVirtualService",
          "appmesh:ListGatewayRoutes",
          "appmesh:ListMeshes",
          "appmesh:ListRoutes",
          "appmesh:ListTagsForResource",
          "appmesh:ListVirtualGateways",
          "appmesh:ListVirtualNodes",
          "appmesh:ListVirtualRouters",
          "appmesh:ListVirtualServices",
          "apprunner:DescribeService",
          "apprunner:DescribeVpcConnector",
          "apprunner:ListServices",
          "apprunner:ListTagsForResource",
          "apprunner:ListVpcConnectors",
          "appstream:DescribeApplications",
          "appstream:DescribeDirectoryConfigs",
          "appstream:DescribeFleets",
          "appstream:DescribeStacks",
          "appstream:ListTagsForResource",
          "appsync:GetApiCache",
          "appsync:GetGraphqlApi",
          "appsync:ListGraphqlApis",
          "aps:DescribeAlertManagerDefinition",
          "aps:DescribeLoggingConfiguration",
          "APS:DescribeRuleGroupsNamespace",
          "APS:DescribeWorkspace",
          "aps:ListRuleGroupsNamespaces",
          "aps:ListTagsForResource",
          "APS:ListWorkspaces",
          "athena:GetDataCatalog",
          "athena:GetPreparedStatement",
          "athena:GetWorkGroup",
          "athena:ListDataCatalogs",
          "athena:ListPreparedStatements",
          "athena:ListTagsForResource",
          "athena:ListWorkGroups",
          "auditmanager:GetAccountStatus",
          "auditmanager:GetAssessment",
          "auditmanager:ListAssessments",
          "autoscaling-plans:DescribeScalingPlanResources",
          "autoscaling-plans:DescribeScalingPlans",
          "autoscaling-plans:GetScalingPlanResourceForecastData",
          "autoscaling:DescribeAutoScalingGroups",
          "autoscaling:DescribeLaunchConfigurations",
          "autoscaling:DescribeLifecycleHooks",
          "autoscaling:DescribePolicies",
          "autoscaling:DescribeScheduledActions",
          "autoscaling:DescribeTags",
          "autoscaling:DescribeWarmPool",
          "backup-gateway:ListTagsForResource",
          "backup-gateway:ListVirtualMachines",
          "backup:DescribeBackupVault",
          "backup:DescribeFramework",
          "backup:DescribeProtectedResource",
          "backup:DescribeRecoveryPoint",
          "backup:DescribeReportPlan",
          "backup:GetBackupPlan",
          "backup:GetBackupSelection",
          "backup:GetBackupVaultAccessPolicy",
          "backup:GetBackupVaultNotifications",
          "backup:ListBackupPlans",
          "backup:ListBackupSelections",
          "backup:ListBackupVaults",
          "backup:ListFrameworks",
          "backup:ListRecoveryPointsByBackupVault",
          "backup:ListReportPlans",
          "backup:ListTags",
          "batch:DescribeComputeEnvironments",
          "batch:DescribeJobQueues",
          "batch:DescribeSchedulingPolicies",
          "batch:ListSchedulingPolicies",
          "batch:ListTagsForResource",
          "billingconductor:ListAccountAssociations",
          "billingconductor:ListBillingGroups",
          "billingconductor:ListCustomLineItems",
          "billingconductor:ListPricingPlans",
          "billingconductor:ListPricingRules",
          "billingconductor:ListPricingRulesAssociatedToPricingPlan",
          "billingconductor:ListTagsForResource",
          "budgets:DescribeBudgetAction",
          "budgets:DescribeBudgetActionsForAccount",
          "budgets:DescribeBudgetActionsForBudget",
          "budgets:ViewBudget",
          "cassandra:Select",
          "ce:GetAnomalyMonitors",
          "ce:GetAnomalySubscriptions",
          "cloud9:DescribeEnvironmentMemberships",
          "cloud9:DescribeEnvironments",
          "cloud9:ListEnvironments",
          "cloud9:ListTagsForResource",
          "cloudformation:DescribeType",
          "cloudformation:GetResource",
          "cloudformation:ListResources",
          "cloudformation:ListStackResources",
          "cloudformation:ListStacks",
          "cloudformation:ListTypes",
          "cloudfront:GetFunction",
          "cloudfront:GetOriginAccessControl",
          "cloudfront:GetResponseHeadersPolicy",
          "cloudfront:ListDistributions",
          "cloudfront:ListFunctions",
          "cloudfront:ListOriginAccessControls",
          "cloudfront:ListResponseHeadersPolicies",
          "cloudfront:ListTagsForResource",
          "cloudtrail:DescribeTrails",
          "cloudtrail:GetEventDataStore",
          "cloudtrail:GetEventSelectors",
          "cloudtrail:GetTrailStatus",
          "cloudtrail:ListEventDataStores",
          "cloudtrail:ListTags",
          "cloudtrail:ListTrails",
          "cloudwatch:DescribeAlarms",
          "cloudwatch:DescribeAlarmsForMetric",
          "cloudwatch:DescribeAnomalyDetectors",
          "cloudwatch:GetDashboard",
          "cloudwatch:GetMetricStream",
          "cloudwatch:ListDashboards",
          "cloudwatch:ListMetricStreams",
          "cloudwatch:ListTagsForResource",
          "codeartifact:DescribeRepository",
          "codeartifact:GetRepositoryPermissionsPolicy",
          "codeartifact:ListDomains",
          "codeartifact:ListPackages",
          "codeartifact:ListPackageVersions",
          "codeartifact:ListRepositories",
          "codeartifact:ListTagsForResource",
          "codebuild:BatchGetReportGroups",
          "codebuild:ListReportGroups",
          "codecommit:GetRepository",
          "codecommit:GetRepositoryTriggers",
          "codecommit:ListRepositories",
          "codecommit:ListTagsForResource",
          "codedeploy:GetDeploymentConfig",
          "codeguru-profiler:DescribeProfilingGroup",
          "codeguru-profiler:GetNotificationConfiguration",
          "codeguru-profiler:GetPolicy",
          "codeguru-profiler:ListProfilingGroups",
          "codeguru-reviewer:DescribeRepositoryAssociation",
          "codeguru-reviewer:ListRepositoryAssociations",
          "codepipeline:GetPipeline",
          "codepipeline:GetPipelineState",
          "codepipeline:ListPipelines",
          "cognito-identity:DescribeIdentityPool",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:GetPrincipalTagAttributeMap",
          "cognito-identity:ListIdentityPools",
          "cognito-identity:ListTagsForResource",
          "cognito-idp:DescribeIdentityProvider",
          "cognito-idp:DescribeResourceServer",
          "cognito-idp:DescribeUserPool",
          "cognito-idp:DescribeUserPoolClient",
          "cognito-idp:DescribeUserPoolDomain",
          "cognito-idp:GetGroup",
          "cognito-idp:GetUserPoolMfaConfig",
          "cognito-idp:ListGroups",
          "cognito-idp:ListIdentityProviders",
          "cognito-idp:ListResourceServers",
          "cognito-idp:ListTagsForResource",
          "cognito-idp:ListUserPoolClients",
          "cognito-idp:ListUserPools",
          "config:BatchGet*",
          "config:Describe*",
          "config:Get*",
          "config:List*",
          "config:Put*",
          "config:Select*",
          "connect:DescribeEvaluationForm",
          "connect:DescribeInstance",
          "connect:DescribeInstanceStorageConfig",
          "connect:DescribePhoneNumber",
          "connect:DescribePrompt",
          "connect:DescribeQuickConnect",
          "connect:DescribeRule",
          "connect:DescribeUser",
          "connect:GetTaskTemplate",
          "connect:ListApprovedOrigins",
          "connect:ListEvaluationForms",
          "connect:ListInstanceAttributes",
          "connect:ListInstances",
          "connect:ListInstanceStorageConfigs",
          "connect:ListIntegrationAssociations",
          "connect:ListPhoneNumbers",
          "connect:ListPhoneNumbersV2",
          "connect:ListPrompts",
          "connect:ListQuickConnects",
          "connect:ListRules",
          "connect:ListSecurityKeys",
          "connect:ListTagsForResource",
          "connect:ListTaskTemplates",
          "connect:ListUsers",
          "connect:SearchAvailablePhoneNumbers",
          "databrew:DescribeDataset",
          "databrew:DescribeJob",
          "databrew:DescribeProject",
          "databrew:DescribeRecipe",
          "databrew:DescribeRuleset",
          "databrew:DescribeSchedule",
          "databrew:ListDatasets",
          "databrew:ListJobs",
          "databrew:ListProjects",
          "databrew:ListRecipes",
          "databrew:ListRecipeVersions",
          "databrew:ListRulesets",
          "databrew:ListSchedules",
          "datasync:DescribeAgent",
          "datasync:DescribeLocationEfs",
          "datasync:DescribeLocationFsxLustre",
          "datasync:DescribeLocationFsxWindows",
          "datasync:DescribeLocationHdfs",
          "datasync:DescribeLocationNfs",
          "datasync:DescribeLocationObjectStorage",
          "datasync:DescribeLocationS3",
          "datasync:DescribeLocationSmb",
          "datasync:DescribeTask",
          "datasync:ListAgents",
          "datasync:ListLocations",
          "datasync:ListTagsForResource",
          "datasync:ListTasks",
          "dax:DescribeClusters",
          "dax:DescribeParameterGroups",
          "dax:DescribeParameters",
          "dax:DescribeSubnetGroups",
          "dax:ListTags",
          "detective:ListGraphs",
          "detective:ListTagsForResource",
          "devicefarm:GetInstanceProfile",
          "devicefarm:GetNetworkProfile",
          "devicefarm:GetProject",
          "devicefarm:GetTestGridProject",
          "devicefarm:ListInstanceProfiles",
          "devicefarm:ListNetworkProfiles",
          "devicefarm:ListProjects",
          "devicefarm:ListTagsForResource",
          "devicefarm:ListTestGridProjects",
          "devops-guru:GetResourceCollection",
          "dms:DescribeCertificates",
          "dms:DescribeEndpoints",
          "dms:DescribeEventSubscriptions",
          "dms:DescribeReplicationInstances",
          "dms:DescribeReplicationSubnetGroups",
          "dms:DescribeReplicationTaskAssessmentRuns",
          "dms:DescribeReplicationTasks",
          "dms:ListTagsForResource",
          "ds:DescribeDirectories",
          "ds:DescribeDomainControllers",
          "ds:DescribeEventTopics",
          "ds:ListLogSubscriptions",
          "ds:ListTagsForResource",
          "dynamodb:DescribeContinuousBackups",
          "dynamodb:DescribeGlobalTable",
          "dynamodb:DescribeGlobalTableSettings",
          "dynamodb:DescribeLimits",
          "dynamodb:DescribeTable",
          "dynamodb:DescribeTableReplicaAutoScaling",
          "dynamodb:DescribeTimeToLive",
          "dynamodb:ListTables",
          "dynamodb:ListTagsOfResource",
          "ec2:Describe*",
          "ec2:DescribeClientVpnAuthorizationRules",
          "ec2:DescribeClientVpnEndpoints",
          "ec2:DescribeDhcpOptions",
          "ec2:DescribeFleets",
          "ec2:DescribeNetworkAcls",
          "ec2:DescribePlacementGroups",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSpotFleetRequests",
          "ec2:DescribeTags",
          "ec2:DescribeTrafficMirrorFilters",
          "ec2:DescribeTrafficMirrorSessions",
          "ec2:DescribeTrafficMirrorTargets",
          "ec2:DescribeVolumeAttribute",
          "ec2:DescribeVolumes",
          "ec2:GetEbsEncryptionByDefault",
          "ec2:GetInstanceTypesFromInstanceRequirements",
          "ec2:GetIpamPoolAllocations",
          "ec2:GetIpamPoolCidrs",
          "ec2:GetManagedPrefixListEntries",
          "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
          "ec2:GetNetworkInsightsAccessScopeContent",
          "ecr-public:DescribeRepositories",
          "ecr-public:GetRepositoryCatalogData",
          "ecr-public:GetRepositoryPolicy",
          "ecr-public:ListTagsForResource",
          "ecr:BatchGetRepositoryScanningConfiguration",
          "ecr:DescribePullThroughCacheRules",
          "ecr:DescribeRegistry",
          "ecr:DescribeRepositories",
          "ecr:GetLifecyclePolicy",
          "ecr:GetRegistryPolicy",
          "ecr:GetRepositoryPolicy",
          "ecr:ListTagsForResource",
          "ecs:DescribeCapacityProviders",
          "ecs:DescribeClusters",
          "ecs:DescribeServices",
          "ecs:DescribeTaskDefinition",
          "ecs:DescribeTaskSets",
          "ecs:ListClusters",
          "ecs:ListServices",
          "ecs:ListTagsForResource",
          "ecs:ListTaskDefinitionFamilies",
          "ecs:ListTaskDefinitions",
          "eks:DescribeAddon",
          "eks:DescribeCluster",
          "eks:DescribeFargateProfile",
          "eks:DescribeIdentityProviderConfig",
          "eks:DescribeNodegroup",
          "eks:ListAddons",
          "eks:ListClusters",
          "eks:ListFargateProfiles",
          "eks:ListIdentityProviderConfigs",
          "eks:ListNodegroups",
          "eks:ListTagsForResource",
          "elasticache:DescribeCacheClusters",
          "elasticache:DescribeCacheParameterGroups",
          "elasticache:DescribeCacheParameters",
          "elasticache:DescribeCacheSecurityGroups",
          "elasticache:DescribeCacheSubnetGroups",
          "elasticache:DescribeGlobalReplicationGroups",
          "elasticache:DescribeReplicationGroups",
          "elasticache:DescribeSnapshots",
          "elasticache:DescribeUserGroups",
          "elasticache:DescribeUsers",
          "elasticache:ListTagsForResource",
          "elasticbeanstalk:DescribeConfigurationSettings",
          "elasticbeanstalk:DescribeEnvironments",
          "elasticfilesystem:DescribeAccessPoints",
          "elasticfilesystem:DescribeBackupPolicy",
          "elasticfilesystem:DescribeFileSystemPolicy",
          "elasticfilesystem:DescribeFileSystems",
          "elasticfilesystem:DescribeLifecycleConfiguration",
          "elasticfilesystem:DescribeMountTargets",
          "elasticfilesystem:DescribeMountTargetSecurityGroups",
          "elasticfilesystem:DescribeTags",
          "elasticloadbalancing:DescribeListenerCertificates",
          "elasticloadbalancing:DescribeListeners",
          "elasticloadbalancing:DescribeLoadBalancerAttributes",
          "elasticloadbalancing:DescribeLoadBalancerPolicies",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeRules",
          "elasticloadbalancing:DescribeTags",
          "elasticloadbalancing:DescribeTargetGroupAttributes",
          "elasticloadbalancing:DescribeTargetGroups",
          "elasticloadbalancing:DescribeTargetHealth",
          "elasticmapreduce:DescribeCluster",
          "elasticmapreduce:DescribeSecurityConfiguration",
          "elasticmapreduce:DescribeStep",
          "elasticmapreduce:DescribeStudio",
          "elasticmapreduce:GetBlockPublicAccessConfiguration",
          "elasticmapreduce:GetManagedScalingPolicy",
          "elasticmapreduce:GetStudioSessionMapping",
          "elasticmapreduce:ListClusters",
          "elasticmapreduce:ListInstanceFleets",
          "elasticmapreduce:ListInstanceGroups",
          "elasticmapreduce:ListInstances",
          "elasticmapreduce:ListSecurityConfigurations",
          "elasticmapreduce:ListSteps",
          "elasticmapreduce:ListStudios",
          "elasticmapreduce:ListStudioSessionMappings",
          "emr-containers:DescribeVirtualCluster",
          "emr-containers:ListVirtualClusters",
          "emr-serverless:GetApplication",
          "emr-serverless:ListApplications",
          "es:DescribeDomain",
          "es:DescribeDomains",
          "es:DescribeElasticsearchDomain",
          "es:DescribeElasticsearchDomains",
          "es:GetCompatibleElasticsearchVersions",
          "es:GetCompatibleVersions",
          "es:ListDomainNames",
          "es:ListTags",
          "events:DescribeApiDestination",
          "events:DescribeArchive",
          "events:DescribeConnection",
          "events:DescribeEndpoint",
          "events:DescribeEventBus",
          "events:DescribeRule",
          "events:ListApiDestinations",
          "events:ListArchives",
          "events:ListConnections",
          "events:ListEndpoints",
          "events:ListEventBuses",
          "events:ListRules",
          "events:ListTagsForResource",
          "events:ListTargetsByRule",
          "evidently:GetLaunch",
          "evidently:GetProject",
          "evidently:GetSegment",
          "evidently:ListLaunches",
          "evidently:ListProjects",
          "evidently:ListSegments",
          "evidently:ListTagsForResource",
          "finspace:GetEnvironment",
          "finspace:ListEnvironments",
          "firehose:DescribeDeliveryStream",
          "firehose:ListDeliveryStreams",
          "firehose:ListTagsForDeliveryStream",
          "fis:GetExperimentTemplate",
          "fis:ListExperimentTemplates",
          "fms:GetNotificationChannel",
          "fms:GetPolicy",
          "fms:ListPolicies",
          "fms:ListTagsForResource",
          "forecast:DescribeDataset",
          "forecast:DescribeDatasetGroup",
          "forecast:ListDatasetGroups",
          "forecast:ListDatasets",
          "forecast:ListTagsForResource",
          "frauddetector:GetDetectors",
          "frauddetector:GetDetectorVersion",
          "frauddetector:GetEntityTypes",
          "frauddetector:GetEventTypes",
          "frauddetector:GetExternalModels",
          "frauddetector:GetLabels",
          "frauddetector:GetModels",
          "frauddetector:GetOutcomes",
          "frauddetector:GetRules",
          "frauddetector:GetVariables",
          "frauddetector:ListTagsForResource",
          "fsx:DescribeBackups",
          "fsx:DescribeDataRepositoryAssociations",
          "fsx:DescribeFileSystems",
          "fsx:DescribeSnapshots",
          "fsx:DescribeStorageVirtualMachines",
          "fsx:DescribeVolumes",
          "fsx:ListTagsForResource",
          "gamelift:DescribeAlias",
          "gamelift:DescribeBuild",
          "gamelift:DescribeFleetAttributes",
          "gamelift:DescribeFleetCapacity",
          "gamelift:DescribeFleetLocationAttributes",
          "gamelift:DescribeFleetLocationCapacity",
          "gamelift:DescribeFleetPortSettings",
          "gamelift:DescribeGameServerGroup",
          "gamelift:DescribeGameSessionQueues",
          "gamelift:DescribeMatchmakingConfigurations",
          "gamelift:DescribeMatchmakingRuleSets",
          "gamelift:DescribeRuntimeConfiguration",
          "gamelift:DescribeScript",
          "gamelift:DescribeVpcPeeringAuthorizations",
          "gamelift:DescribeVpcPeeringConnections",
          "gamelift:ListAliases",
          "gamelift:ListBuilds",
          "gamelift:ListFleets",
          "gamelift:ListGameServerGroups",
          "gamelift:ListScripts",
          "gamelift:ListTagsForResource",
          "geo:DescribeGeofenceCollection",
          "geo:DescribeMap",
          "geo:DescribePlaceIndex",
          "geo:DescribeRouteCalculator",
          "geo:DescribeTracker",
          "geo:ListGeofenceCollections",
          "geo:ListMaps",
          "geo:ListPlaceIndexes",
          "geo:ListRouteCalculators",
          "geo:ListTrackerConsumers",
          "geo:ListTrackers",
          "globalaccelerator:DescribeAccelerator",
          "globalaccelerator:DescribeEndpointGroup",
          "globalaccelerator:DescribeListener",
          "globalaccelerator:ListAccelerators",
          "globalaccelerator:ListEndpointGroups",
          "globalaccelerator:ListListeners",
          "globalaccelerator:ListTagsForResource",
          "glue:BatchGetDevEndpoints",
          "glue:BatchGetJobs",
          "glue:BatchGetWorkflows",
          "glue:GetClassifier",
          "glue:GetClassifiers",
          "glue:GetCrawler",
          "glue:GetCrawlers",
          "glue:GetDatabase",
          "glue:GetDatabases",
          "glue:GetDevEndpoint",
          "glue:GetDevEndpoints",
          "glue:GetJob",
          "glue:GetJobs",
          "glue:GetMLTransform",
          "glue:GetMLTransforms",
          "glue:GetPartition",
          "glue:GetPartitions",
          "glue:GetSecurityConfiguration",
          "glue:GetSecurityConfigurations",
          "glue:GetTable",
          "glue:GetTags",
          "glue:GetWorkflow",
          "glue:ListCrawlers",
          "glue:ListDevEndpoints",
          "glue:ListJobs",
          "glue:ListMLTransforms",
          "glue:ListWorkflows",
          "grafana:DescribeWorkspace",
          "grafana:DescribeWorkspaceAuthentication",
          "grafana:DescribeWorkspaceConfiguration",
          "grafana:ListWorkspaces",
          "greengrass:DescribeComponent",
          "greengrass:GetComponent",
          "greengrass:ListComponents",
          "greengrass:ListComponentVersions",
          "groundstation:GetConfig",
          "groundstation:GetDataflowEndpointGroup",
          "groundstation:GetMissionProfile",
          "groundstation:ListConfigs",
          "groundstation:ListDataflowEndpointGroups",
          "groundstation:ListMissionProfiles",
          "groundstation:ListTagsForResource",
          "guardduty:DescribePublishingDestination",
          "guardduty:GetAdministratorAccount",
          "guardduty:GetDetector",
          "guardduty:GetFilter",
          "guardduty:GetFindings",
          "guardduty:GetIPSet",
          "guardduty:GetMasterAccount",
          "guardduty:GetMemberDetectors",
          "guardduty:GetMembers",
          "guardduty:GetThreatIntelSet",
          "guardduty:ListDetectors",
          "guardduty:ListFilters",
          "guardduty:ListFindings",
          "guardduty:ListIPSets",
          "guardduty:ListMembers",
          "guardduty:ListOrganizationAdminAccounts",
          "guardduty:ListPublishingDestinations",
          "guardduty:ListTagsForResource",
          "guardduty:ListThreatIntelSets",
          "healthlake:DescribeFHIRDatastore",
          "healthlake:ListFHIRDatastores",
          "healthlake:ListTagsForResource",
          "iam:GenerateCredentialReport",
          "iam:GetAccountAuthorizationDetails",
          "iam:GetAccountPasswordPolicy",
          "iam:GetAccountSummary",
          "iam:GetCredentialReport",
          "iam:GetGroup",
          "iam:GetGroupPolicy",
          "iam:GetInstanceProfile",
          "iam:GetOpenIDConnectProvider",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:GetRole",
          "iam:GetRolePolicy",
          "iam:GetSAMLProvider",
          "iam:GetServerCertificate",
          "iam:GetUser",
          "iam:GetUserPolicy",
          "iam:ListAccessKeys",
          "iam:ListAttachedGroupPolicies",
          "iam:ListAttachedRolePolicies",
          "iam:ListAttachedUserPolicies",
          "iam:ListEntitiesForPolicy",
          "iam:ListGroupPolicies",
          "iam:ListGroups",
          "iam:ListGroupsForUser",
          "iam:ListInstanceProfiles",
          "iam:ListInstanceProfilesForRole",
          "iam:ListInstanceProfileTags",
          "iam:ListMFADevices",
          "iam:ListMFADeviceTags",
          "iam:ListOpenIDConnectProviders",
          "iam:ListPolicyVersions",
          "iam:ListRolePolicies",
          "iam:ListRoles",
          "iam:ListSAMLProviders",
          "iam:ListServerCertificates",
          "iam:ListUserPolicies",
          "iam:ListUsers",
          "iam:ListVirtualMFADevices",
          "imagebuilder:GetComponent",
          "imagebuilder:GetContainerRecipe",
          "imagebuilder:GetDistributionConfiguration",
          "imagebuilder:GetImage",
          "imagebuilder:GetImagePipeline",
          "imagebuilder:GetImageRecipe",
          "imagebuilder:GetInfrastructureConfiguration",
          "imagebuilder:ListComponentBuildVersions",
          "imagebuilder:ListComponents",
          "imagebuilder:ListContainerRecipes",
          "imagebuilder:ListDistributionConfigurations",
          "imagebuilder:ListImageBuildVersions",
          "imagebuilder:ListImagePipelines",
          "imagebuilder:ListImageRecipes",
          "imagebuilder:ListImages",
          "imagebuilder:ListInfrastructureConfigurations",
          "inspector2:BatchGetAccountStatus",
          "inspector2:GetDelegatedAdminAccount",
          "inspector2:ListFilters",
          "inspector2:ListMembers",
          "iot:DescribeAccountAuditConfiguration",
          "iot:DescribeAuthorizer",
          "iot:DescribeCACertificate",
          "iot:DescribeCertificate",
          "iot:DescribeCustomMetric",
          "iot:DescribeDimension",
          "iot:DescribeDomainConfiguration",
          "iot:DescribeFleetMetric",
          "iot:DescribeJobTemplate",
          "iot:DescribeMitigationAction",
          "iot:DescribeProvisioningTemplate",
          "iot:DescribeRoleAlias",
          "iot:DescribeScheduledAudit",
          "iot:DescribeSecurityProfile",
          "iot:GetPolicy",
          "iot:GetTopicRule",
          "iot:GetTopicRuleDestination",
          "iot:ListAuthorizers",
          "iot:ListCACertificates",
          "iot:ListCertificates",
          "iot:ListCustomMetrics",
          "iot:ListDimensions",
          "iot:ListDomainConfigurations",
          "iot:ListFleetMetrics",
          "iot:ListJobTemplates",
          "iot:ListMitigationActions",
          "iot:ListPolicies",
          "iot:ListProvisioningTemplates",
          "iot:ListRoleAliases",
          "iot:ListScheduledAudits",
          "iot:ListSecurityProfiles",
          "iot:ListSecurityProfilesForTarget",
          "iot:ListTagsForResource",
          "iot:ListTargetsForSecurityProfile",
          "iot:ListTopicRuleDestinations",
          "iot:ListTopicRules",
          "iot:ListV2LoggingLevels",
          "iot:ValidateSecurityProfileBehaviors",
          "iotanalytics:DescribeChannel",
          "iotanalytics:DescribeDataset",
          "iotanalytics:DescribeDatastore",
          "iotanalytics:DescribePipeline",
          "iotanalytics:ListChannels",
          "iotanalytics:ListDatasets",
          "iotanalytics:ListDatastores",
          "iotanalytics:ListPipelines",
          "iotanalytics:ListTagsForResource",
          "iotevents:DescribeAlarmModel",
          "iotevents:DescribeDetectorModel",
          "iotevents:DescribeInput",
          "iotevents:ListAlarmModels",
          "iotevents:ListDetectorModels",
          "iotevents:ListInputs",
          "iotevents:ListTagsForResource",
          "iotsitewise:DescribeAccessPolicy",
          "iotsitewise:DescribeAsset",
          "iotsitewise:DescribeAssetModel",
          "iotsitewise:DescribeDashboard",
          "iotsitewise:DescribeGateway",
          "iotsitewise:DescribePortal",
          "iotsitewise:DescribeProject",
          "iotsitewise:ListAccessPolicies",
          "iotsitewise:ListAssetModels",
          "iotsitewise:ListAssets",
          "iotsitewise:ListDashboards",
          "iotsitewise:ListGateways",
          "iotsitewise:ListPortals",
          "iotsitewise:ListProjectAssets",
          "iotsitewise:ListProjects",
          "iotsitewise:ListTagsForResource",
          "iottwinmaker:GetComponentType",
          "iottwinmaker:GetEntity",
          "iottwinmaker:GetScene",
          "iottwinmaker:GetSyncJob",
          "iottwinmaker:GetWorkspace",
          "iottwinmaker:ListComponentTypes",
          "iottwinmaker:ListEntities",
          "iottwinmaker:ListScenes",
          "iottwinmaker:ListSyncJobs",
          "iottwinmaker:ListTagsForResource",
          "iottwinmaker:ListWorkspaces",
          "iotwireless:GetFuotaTask",
          "iotwireless:GetMulticastGroup",
          "iotwireless:GetServiceProfile",
          "iotwireless:GetWirelessDevice",
          "iotwireless:GetWirelessGatewayTaskDefinition",
          "iotwireless:ListFuotaTasks",
          "iotwireless:ListMulticastGroups",
          "iotwireless:ListServiceProfiles",
          "iotwireless:ListTagsForResource",
          "iotwireless:ListWirelessDevices",
          "iotwireless:ListWirelessGatewayTaskDefinitions",
          "ivs:GetChannel",
          "ivs:GetPlaybackKeyPair",
          "ivs:GetRecordingConfiguration",
          "ivs:GetStreamKey",
          "ivs:ListChannels",
          "ivs:ListPlaybackKeyPairs",
          "ivs:ListRecordingConfigurations",
          "ivs:ListStreamKeys",
          "ivs:ListTagsForResource",
          "kafka:DescribeCluster",
          "kafka:DescribeClusterV2",
          "kafka:DescribeConfiguration",
          "kafka:DescribeConfigurationRevision",
          "kafka:DescribeVpcConnection",
          "kafka:GetClusterPolicy",
          "kafka:ListClusters",
          "kafka:ListClustersV2",
          "kafka:ListConfigurations",
          "kafka:ListScramSecrets",
          "kafka:ListTagsForResource",
          "kafka:ListVpcConnections",
          "kafkaconnect:DescribeConnector",
          "kafkaconnect:ListConnectors",
          "kendra:DescribeIndex",
          "kendra:ListIndices",
          "kendra:ListTagsForResource",
          "kinesis:DescribeStreamConsumer",
          "kinesis:DescribeStreamSummary",
          "kinesis:ListStreamConsumers",
          "kinesis:ListStreams",
          "kinesis:ListTagsForStream",
          "kinesisanalytics:DescribeApplication",
          "kinesisanalytics:ListApplications",
          "kinesisanalytics:ListTagsForResource",
          "kinesisvideo:DescribeSignalingChannel",
          "kinesisvideo:DescribeStream",
          "kinesisvideo:ListSignalingChannels",
          "kinesisvideo:ListStreams",
          "kinesisvideo:ListTagsForResource",
          "kinesisvideo:ListTagsForStream",
          "kms:DescribeKey",
          "kms:GetKeyPolicy",
          "kms:GetKeyRotationStatus",
          "kms:ListAliases",
          "kms:ListKeys",
          "kms:ListResourceTags",
          "lakeformation:DescribeResource",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:ListPermissions",
          "lakeformation:ListResources",
          "lambda:GetAlias",
          "lambda:GetCodeSigningConfig",
          "lambda:GetFunction",
          "lambda:GetFunctionCodeSigningConfig",
          "lambda:GetLayerVersion",
          "lambda:GetPolicy",
          "lambda:ListAliases",
          "lambda:ListCodeSigningConfigs",
          "lambda:ListFunctions",
          "lambda:ListLayers",
          "lambda:ListLayerVersions",
          "lambda:ListTags",
          "lambda:ListVersionsByFunction",
          "lex:DescribeBot",
          "lex:DescribeBotAlias",
          "lex:DescribeBotVersion",
          "lex:DescribeResourcePolicy",
          "lex:ListBotAliases",
          "lex:ListBotLocales",
          "lex:ListBots",
          "lex:ListBotVersions",
          "lex:ListTagsForResource",
          "license-manager:GetGrant",
          "license-manager:GetLicense",
          "license-manager:ListDistributedGrants",
          "license-manager:ListLicenses",
          "license-manager:ListReceivedGrants",
          "lightsail:GetAlarms",
          "lightsail:GetBuckets",
          "lightsail:GetCertificates",
          "lightsail:GetContainerServices",
          "lightsail:GetDisk",
          "lightsail:GetDisks",
          "lightsail:GetDistributions",
          "lightsail:GetInstance",
          "lightsail:GetInstances",
          "lightsail:GetKeyPair",
          "lightsail:GetLoadBalancer",
          "lightsail:GetLoadBalancers",
          "lightsail:GetLoadBalancerTlsCertificates",
          "lightsail:GetRelationalDatabase",
          "lightsail:GetRelationalDatabaseParameters",
          "lightsail:GetRelationalDatabases",
          "lightsail:GetStaticIp",
          "lightsail:GetStaticIps",
          "logs:DescribeDestinations",
          "logs:DescribeLogGroups",
          "logs:DescribeMetricFilters",
          "logs:GetDataProtectionPolicy",
          "logs:GetLogDelivery",
          "logs:ListLogDeliveries",
          "logs:ListTagsLogGroup",
          "lookoutequipment:DescribeInferenceScheduler",
          "lookoutequipment:ListTagsForResource",
          "lookoutmetrics:DescribeAlert",
          "lookoutmetrics:DescribeAnomalyDetector",
          "lookoutmetrics:ListAlerts",
          "lookoutmetrics:ListAnomalyDetectors",
          "lookoutmetrics:ListMetricSets",
          "lookoutmetrics:ListTagsForResource",
          "lookoutvision:DescribeProject",
          "lookoutvision:ListProjects",
          "m2:GetEnvironment",
          "m2:ListEnvironments",
          "m2:ListTagsForResource",
          "macie2:DescribeOrganizationConfiguration",
          "macie2:GetAutomatedDiscoveryConfiguration",
          "macie2:GetClassificationExportConfiguration",
          "macie2:GetCustomDataIdentifier",
          "macie2:GetFindingsPublicationConfiguration",
          "macie2:GetMacieSession",
          "macie2:ListCustomDataIdentifiers",
          "macie2:ListTagsForResource",
          "managedblockchain:GetMember",
          "managedblockchain:GetNetwork",
          "managedblockchain:GetNode",
          "managedblockchain:ListInvitations",
          "managedblockchain:ListMembers",
          "managedblockchain:ListNodes",
          "mediaconnect:DescribeFlow",
          "mediaconnect:ListFlows",
          "mediaconnect:ListTagsForResource",
          "mediapackage-vod:DescribePackagingConfiguration",
          "mediapackage-vod:DescribePackagingGroup",
          "mediapackage-vod:ListPackagingConfigurations",
          "mediapackage-vod:ListPackagingGroups",
          "mediapackage-vod:ListTagsForResource",
          "mediatailor:GetPlaybackConfiguration",
          "mediatailor:ListPlaybackConfigurations",
          "memorydb:DescribeAcls",
          "memorydb:DescribeClusters",
          "memorydb:DescribeParameterGroups",
          "memorydb:DescribeParameters",
          "memorydb:DescribeSubnetGroups",
          "memorydb:DescribeUsers",
          "memorydb:ListTags",
          "mobiletargeting:GetApp",
          "mobiletargeting:GetApplicationSettings",
          "mobiletargeting:GetApps",
          "mobiletargeting:GetCampaign",
          "mobiletargeting:GetCampaigns",
          "mobiletargeting:GetEmailChannel",
          "mobiletargeting:GetEmailTemplate",
          "mobiletargeting:GetEventStream",
          "mobiletargeting:GetInAppTemplate",
          "mobiletargeting:GetSegment",
          "mobiletargeting:GetSegments",
          "mobiletargeting:ListTagsForResource",
          "mobiletargeting:ListTemplates",
          "mq:DescribeBroker",
          "mq:ListBrokers",
          "network-firewall:DescribeLoggingConfiguration",
          "network-firewall:ListFirewalls",
          "networkmanager:DescribeGlobalNetworks",
          "networkmanager:GetConnectPeer",
          "networkmanager:GetCustomerGatewayAssociations",
          "networkmanager:GetDevices",
          "networkmanager:GetLinkAssociations",
          "networkmanager:GetLinks",
          "networkmanager:GetSites",
          "networkmanager:GetTransitGatewayRegistrations",
          "networkmanager:ListConnectPeers",
          "networkmanager:ListTagsForResource",
          "nimble:GetLaunchProfile",
          "nimble:GetLaunchProfileDetails",
          "nimble:GetStreamingImage",
          "nimble:GetStudio",
          "nimble:GetStudioComponent",
          "nimble:ListLaunchProfiles",
          "nimble:ListStreamingImages",
          "nimble:ListStudioComponents",
          "nimble:ListStudios",
          "opsworks:DescribeInstances",
          "opsworks:DescribeLayers",
          "opsworks:DescribeTimeBasedAutoScaling",
          "opsworks:DescribeVolumes",
          "opsworks:ListTags",
          "organizations:DescribeAccount",
          "organizations:DescribeEffectivePolicy",
          "organizations:DescribeOrganization",
          "organizations:DescribeOrganizationalUnit",
          "organizations:DescribePolicy",
          "organizations:DescribeResourcePolicy",
          "organizations:ListAccounts",
          "organizations:ListAccountsForParent",
          "organizations:ListDelegatedAdministrators",
          "organizations:ListOrganizationalUnitsForParent",
          "organizations:ListParents",
          "organizations:ListPolicies",
          "organizations:ListPoliciesForTarget",
          "organizations:ListRoots",
          "organizations:ListTagsForResource",
          "organizations:ListTargetsForPolicy",
          "panorama:DescribeApplicationInstance",
          "panorama:DescribeApplicationInstanceDetails",
          "panorama:DescribePackage",
          "panorama:DescribePackageVersion",
          "panorama:ListApplicationInstances",
          "panorama:ListNodes",
          "panorama:ListPackages",
          "personalize:DescribeDataset",
          "personalize:DescribeDatasetGroup",
          "personalize:DescribeSchema",
          "personalize:DescribeSolution",
          "personalize:ListDatasetGroups",
          "personalize:ListDatasetImportJobs",
          "personalize:ListDatasets",
          "personalize:ListSchemas",
          "personalize:ListSolutions",
          "personalize:ListTagsForResource",
          "profile:GetDomain",
          "profile:GetIntegration",
          "profile:GetProfileObjectType",
          "profile:ListDomains",
          "profile:ListIntegrations",
          "profile:ListProfileObjectTypes",
          "profile:ListTagsForResource",
          "quicksight:DescribeAccountSubscription",
          "quicksight:DescribeAnalysis",
          "quicksight:DescribeAnalysisPermissions",
          "quicksight:DescribeDashboard",
          "quicksight:DescribeDashboardPermissions",
          "quicksight:DescribeDataSet",
          "quicksight:DescribeDataSetPermissions",
          "quicksight:DescribeDataSetRefreshProperties",
          "quicksight:DescribeDataSource",
          "quicksight:DescribeDataSourcePermissions",
          "quicksight:DescribeTemplate",
          "quicksight:DescribeTemplatePermissions",
          "quicksight:DescribeTheme",
          "quicksight:DescribeThemePermissions",
          "quicksight:ListAnalyses",
          "quicksight:ListDashboards",
          "quicksight:ListDataSets",
          "quicksight:ListDataSources",
          "quicksight:ListTagsForResource",
          "quicksight:ListTemplates",
          "quicksight:ListThemes",
          "ram:GetPermission",
          "ram:GetResourceShareAssociations",
          "ram:GetResourceShares",
          "ram:ListPermissionAssociations",
          "ram:ListPermissions",
          "ram:ListPermissionVersions",
          "ram:ListResources",
          "ram:ListResourceSharePermissions",
          "rds:DescribeDBClusterParameterGroups",
          "rds:DescribeDBClusterParameters",
          "rds:DescribeDBClusters",
          "rds:DescribeDBClusterSnapshotAttributes",
          "rds:DescribeDBClusterSnapshots",
          "rds:DescribeDBEngineVersions",
          "rds:DescribeDBInstances",
          "rds:DescribeDBParameterGroups",
          "rds:DescribeDBParameters",
          "rds:DescribeDBProxies",
          "rds:DescribeDBProxyEndpoints",
          "rds:DescribeDBSecurityGroups",
          "rds:DescribeDBSnapshotAttributes",
          "rds:DescribeDBSnapshots",
          "rds:DescribeDBSubnetGroups",
          "rds:DescribeEngineDefaultClusterParameters",
          "rds:DescribeEventSubscriptions",
          "rds:DescribeGlobalClusters",
          "rds:DescribeOptionGroups",
          "rds:ListTagsForResource",
          "redshift-serverless:GetNamespace",
          "redshift-serverless:GetWorkgroup",
          "redshift-serverless:ListNamespaces",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:ListWorkgroups",
          "redshift:DescribeClusterParameterGroups",
          "redshift:DescribeClusterParameters",
          "redshift:DescribeClusters",
          "redshift:DescribeClusterSecurityGroups",
          "redshift:DescribeClusterSnapshots",
          "redshift:DescribeClusterSubnetGroups",
          "redshift:DescribeEndpointAccess",
          "redshift:DescribeEndpointAuthorization",
          "redshift:DescribeEventSubscriptions",
          "redshift:DescribeLoggingStatus",
          "redshift:DescribeScheduledActions",
          "redshift:DescribeTags",
          "refactor-spaces:GetEnvironment",
          "refactor-spaces:GetService",
          "refactor-spaces:ListApplications",
          "refactor-spaces:ListEnvironments",
          "refactor-spaces:ListServices",
          "rekognition:DescribeStreamProcessor",
          "rekognition:ListStreamProcessors",
          "rekognition:ListTagsForResource",
          "resiliencehub:DescribeApp",
          "resiliencehub:DescribeAppVersionTemplate",
          "resiliencehub:DescribeResiliencyPolicy",
          "resiliencehub:ListApps",
          "resiliencehub:ListAppVersionResourceMappings",
          "resiliencehub:ListResiliencyPolicies",
          "resiliencehub:ListTagsForResource",
          "resource-explorer-2:GetIndex",
          "resource-explorer-2:ListIndexes",
          "resource-explorer-2:ListTagsForResource",
          "resource-groups:GetGroup",
          "resource-groups:GetGroupConfiguration",
          "resource-groups:GetGroupQuery",
          "resource-groups:GetTags",
          "resource-groups:ListGroupResources",
          "resource-groups:ListGroups",
          "robomaker:DescribeRobotApplication",
          "robomaker:DescribeSimulationApplication",
          "robomaker:ListRobotApplications",
          "robomaker:ListSimulationApplications",
          "route53-recovery-control-config:DescribeCluster",
          "route53-recovery-control-config:DescribeControlPanel",
          "route53-recovery-control-config:DescribeRoutingControl",
          "route53-recovery-control-config:DescribeSafetyRule",
          "route53-recovery-control-config:ListClusters",
          "route53-recovery-control-config:ListControlPanels",
          "route53-recovery-control-config:ListRoutingControls",
          "route53-recovery-control-config:ListSafetyRules",
          "route53-recovery-control-config:ListTagsForResource",
          "route53-recovery-readiness:GetCell",
          "route53-recovery-readiness:GetReadinessCheck",
          "route53-recovery-readiness:GetRecoveryGroup",
          "route53-recovery-readiness:GetResourceSet",
          "route53-recovery-readiness:ListCells",
          "route53-recovery-readiness:ListReadinessChecks",
          "route53-recovery-readiness:ListRecoveryGroups",
          "route53-recovery-readiness:ListResourceSets",
          "route53:GetChange",
          "route53:GetDNSSEC",
          "route53:GetHealthCheck",
          "route53:GetHostedZone",
          "route53:ListCidrBlocks",
          "route53:ListCidrCollections",
          "route53:ListCidrLocations",
          "route53:ListHealthChecks",
          "route53:ListHostedZones",
          "route53:ListHostedZonesByName",
          "route53:ListQueryLoggingConfigs",
          "route53:ListResourceRecordSets",
          "route53:ListTagsForResource",
          "route53resolver:GetFirewallDomainList",
          "route53resolver:GetFirewallRuleGroup",
          "route53resolver:GetFirewallRuleGroupAssociation",
          "route53resolver:GetResolverDnssecConfig",
          "route53resolver:GetResolverEndpoint",
          "route53resolver:GetResolverQueryLogConfig",
          "route53resolver:GetResolverQueryLogConfigAssociation",
          "route53resolver:GetResolverRule",
          "route53resolver:GetResolverRuleAssociation",
          "route53resolver:ListFirewallDomainLists",
          "route53resolver:ListFirewallDomains",
          "route53resolver:ListFirewallRuleGroupAssociations",
          "route53resolver:ListFirewallRuleGroups",
          "route53resolver:ListFirewallRules",
          "route53resolver:ListResolverDnssecConfigs",
          "route53resolver:ListResolverEndpointIpAddresses",
          "route53resolver:ListResolverEndpoints",
          "route53resolver:ListResolverQueryLogConfigAssociations",
          "route53resolver:ListResolverQueryLogConfigs",
          "route53resolver:ListResolverRuleAssociations",
          "route53resolver:ListResolverRules",
          "route53resolver:ListTagsForResource",
          "rum:GetAppMonitor",
          "rum:GetAppMonitorData",
          "rum:ListAppMonitors",
          "rum:ListTagsForResource",
          "s3-outposts:GetAccessPoint",
          "s3-outposts:GetAccessPointPolicy",
          "s3-outposts:GetBucket",
          "s3-outposts:GetBucketPolicy",
          "s3-outposts:GetBucketTagging",
          "s3-outposts:GetLifecycleConfiguration",
          "s3-outposts:ListAccessPoints",
          "s3-outposts:ListEndpoints",
          "s3-outposts:ListRegionalBuckets",
          "s3:GetAccelerateConfiguration",
          "s3:GetAccessPoint",
          "s3:GetAccessPointForObjectLambda",
          "s3:GetAccessPointPolicy",
          "s3:GetAccessPointPolicyForObjectLambda",
          "s3:GetAccessPointPolicyStatus",
          "s3:GetAccessPointPolicyStatusForObjectLambda",
          "s3:GetAccountPublicAccessBlock",
          "s3:GetBucketAcl",
          "s3:GetBucketCORS",
          "s3:GetBucketLocation",
          "s3:GetBucketLogging",
          "s3:GetBucketNotification",
          "s3:GetBucketObjectLockConfiguration",
          "s3:GetBucketPolicy",
          "s3:GetBucketPolicyStatus",
          "s3:GetBucketPublicAccessBlock",
          "s3:GetBucketRequestPayment",
          "s3:GetBucketTagging",
          "s3:GetBucketVersioning",
          "s3:GetBucketWebsite",
          "s3:GetEncryptionConfiguration",
          "s3:GetLifecycleConfiguration",
          "s3:GetMultiRegionAccessPoint",
          "s3:GetMultiRegionAccessPointPolicy",
          "s3:GetMultiRegionAccessPointPolicyStatus",
          "s3:GetReplicationConfiguration",
          "s3:GetStorageLensConfiguration",
          "s3:GetStorageLensConfigurationTagging",
          "s3:ListAccessPoints",
          "s3:ListAccessPointsForObjectLambda",
          "s3:ListAllMyBuckets",
          "s3:ListBucket",
          "s3:ListMultiRegionAccessPoints",
          "s3:ListStorageLensConfigurations",
          "s3express:GetBucketPolicy",
          "s3express:ListAllMyDirectoryBuckets",
          "sagemaker:DescribeAppImageConfig",
          "sagemaker:DescribeCodeRepository",
          "sagemaker:DescribeDataQualityJobDefinition",
          "sagemaker:DescribeDeviceFleet",
          "sagemaker:DescribeDomain",
          "sagemaker:DescribeEndpoint",
          "sagemaker:DescribeEndpointConfig",
          "sagemaker:DescribeFeatureGroup",
          "sagemaker:DescribeImage",
          "sagemaker:DescribeImageVersion",
          "sagemaker:DescribeInferenceExperiment",
          "sagemaker:DescribeModel",
          "sagemaker:DescribeModelBiasJobDefinition",
          "sagemaker:DescribeModelExplainabilityJobDefinition",
          "sagemaker:DescribeModelQualityJobDefinition",
          "sagemaker:DescribeMonitoringSchedule",
          "sagemaker:DescribeNotebookInstance",
          "sagemaker:DescribeNotebookInstanceLifecycleConfig",
          "sagemaker:DescribePipeline",
          "sagemaker:DescribeProject",
          "sagemaker:DescribeWorkteam",
          "sagemaker:ListAppImageConfigs",
          "sagemaker:ListCodeRepositories",
          "sagemaker:ListDataQualityJobDefinitions",
          "sagemaker:ListDeviceFleets",
          "sagemaker:ListDomains",
          "sagemaker:ListEndpointConfigs",
          "sagemaker:ListEndpoints",
          "sagemaker:ListFeatureGroups",
          "sagemaker:ListImages",
          "sagemaker:ListImageVersions",
          "sagemaker:ListInferenceExperiments",
          "sagemaker:ListModelBiasJobDefinitions",
          "sagemaker:ListModelExplainabilityJobDefinitions",
          "sagemaker:ListModelQualityJobDefinitions",
          "sagemaker:ListModels",
          "sagemaker:ListMonitoringSchedules",
          "sagemaker:ListNotebookInstanceLifecycleConfigs",
          "sagemaker:ListNotebookInstances",
          "sagemaker:ListPipelines",
          "sagemaker:ListProjects",
          "sagemaker:ListTags",
          "sagemaker:ListWorkteams",
          "schemas:DescribeDiscoverer",
          "schemas:DescribeRegistry",
          "schemas:DescribeSchema",
          "schemas:GetResourcePolicy",
          "schemas:ListDiscoverers",
          "schemas:ListRegistries",
          "schemas:ListSchemas",
          "sdb:GetAttributes",
          "sdb:ListDomains",
          "secretsmanager:ListSecrets",
          "secretsmanager:ListSecretVersionIds",
          "securityhub:DescribeHub",
          "serviceCatalog:DescribePortfolioShares",
          "servicediscovery:GetInstance",
          "servicediscovery:GetNamespace",
          "servicediscovery:GetService",
          "servicediscovery:ListInstances",
          "servicediscovery:ListNamespaces",
          "servicediscovery:ListServices",
          "servicediscovery:ListTagsForResource",
          "ses:DescribeReceiptRule",
          "ses:DescribeReceiptRuleSet",
          "ses:GetConfigurationSet",
          "ses:GetConfigurationSetEventDestinations",
          "ses:GetContactList",
          "ses:GetEmailTemplate",
          "ses:GetTemplate",
          "ses:ListConfigurationSets",
          "ses:ListContactLists",
          "ses:ListEmailTemplates",
          "ses:ListReceiptFilters",
          "ses:ListReceiptRuleSets",
          "ses:ListTemplates",
          "shield:DescribeDRTAccess",
          "shield:DescribeProtection",
          "shield:DescribeSubscription",
          "signer:GetSigningProfile",
          "signer:ListProfilePermissions",
          "signer:ListSigningProfiles",
          "sns:GetDataProtectionPolicy",
          "sns:GetSMSSandboxAccountStatus",
          "sns:GetSubscriptionAttributes",
          "sns:GetTopicAttributes",
          "sns:ListSubscriptions",
          "sns:ListSubscriptionsByTopic",
          "sns:ListTagsForResource",
          "sns:ListTopics",
          "sqs:GetQueueAttributes",
          "sqs:ListQueues",
          "sqs:ListQueueTags",
          "ssm:DescribeAutomationExecutions",
          "ssm:DescribeDocument",
          "ssm:DescribeDocumentPermission",
          "ssm:DescribeParameters",
          "ssm:GetAutomationExecution",
          "ssm:GetDocument",
          "ssm:ListDocuments",
          "ssm:ListTagsForResource",
          "ssm-sap:ListTagsForResource",
          "sso:DescribeInstanceAccessControlAttributeConfiguration",
          "sso:DescribePermissionSet",
          "sso:GetInlinePolicyForPermissionSet",
          "sso:ListManagedPoliciesInPermissionSet",
          "sso:ListPermissionSets",
          "sso:ListTagsForResource",
          "states:DescribeActivity",
          "states:DescribeStateMachine",
          "states:ListActivities",
          "states:ListStateMachines",
          "states:ListTagsForResource",
          "storagegateway:ListGateways",
          "storagegateway:ListTagsForResource",
          "storagegateway:ListVolumes",
          "sts:GetCallerIdentity",
          "support:DescribeCases",
          "synthetics:DescribeCanaries",
          "synthetics:DescribeCanariesLastRun",
          "synthetics:DescribeRuntimeVersions",
          "synthetics:GetCanary",
          "synthetics:GetCanaryRuns",
          "synthetics:GetGroup",
          "synthetics:ListAssociatedGroups",
          "synthetics:ListGroupResources",
          "synthetics:ListGroups",
          "synthetics:ListTagsForResource",
          "tag:GetResources",
          "timestream:DescribeDatabase",
          "timestream:DescribeEndpoints",
          "timestream:DescribeTable",
          "timestream:ListDatabases",
          "timestream:ListTables",
          "timestream:ListTagsForResource",
          "transfer:DescribeAgreement",
          "transfer:DescribeCertificate",
          "transfer:DescribeConnector",
          "transfer:DescribeProfile",
          "transfer:DescribeServer",
          "transfer:DescribeUser",
          "transfer:DescribeWorkflow",
          "transfer:ListAgreements",
          "transfer:ListCertificates",
          "transfer:ListConnectors",
          "transfer:ListProfiles",
          "transfer:ListServers",
          "transfer:ListTagsForResource",
          "transfer:ListUsers",
          "transfer:ListWorkflows",
          "voiceid:DescribeDomain",
          "voiceid:ListTagsForResource",
          "waf-regional:GetLoggingConfiguration",
          "waf-regional:GetWebACL",
          "waf-regional:GetWebACLForResource",
          "waf-regional:ListLoggingConfigurations",
          "waf:GetLoggingConfiguration",
          "waf:GetWebACL",
          "wafv2:GetLoggingConfiguration",
          "wafv2:GetRuleGroup",
          "wafv2:ListRuleGroups",
          "wafv2:ListTagsForResource",
          "workspaces:DescribeConnectionAliases",
          "workspaces:DescribeTags",
          "workspaces:DescribeWorkspaces"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AWSConfigServiceRolePolicyStatementID"
      },
      {
        "Action": [
          "logs:CreateLogStream",
          "logs:CreateLogGroup"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws/config/*",
        "Sid": "AWSConfigSLRLogStatementID"
      },
      {
        "Action": [
          "logs:PutLogEvents"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws/config/*:log-stream:config-rule-evaluation/*",
        "Sid": "AWSConfigSLRLogEventStatementID"
      },
      {
        "Action": [
          "apigateway:GET"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:apigateway:*::/apis",
          "arn:aws:apigateway:*::/apis/*",
          "arn:aws:apigateway:*::/apis/*/integrations",
          "arn:aws:apigateway:*::/apis/*/integrations/*",
          "arn:aws:apigateway:*::/domainnames",
          "arn:aws:apigateway:*::/clientcertificates",
          "arn:aws:apigateway:*::/clientcertificates/*",
          "arn:aws:apigateway:*::/restapis",
          "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
          "arn:aws:apigateway:*::/restapis/*",
          "arn:aws:apigateway:*::/restapis/*/stages/*",
          "arn:aws:apigateway:*::/restapis/*/stages",
          "arn:aws:apigateway:*::/restapis/*/resources",
          "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
          "arn:aws:apigateway:*::/restapis/*/resources/*",
          "arn:aws:apigateway:*::/apis/*/routes/*",
          "arn:aws:apigateway:*::/apis/*/routes",
          "arn:aws:apigateway:*::/v2/apis/*/routes",
          "arn:aws:apigateway:*::/v2/apis/*/routes/*",
          "arn:aws:apigateway:*::/v2/apis",
          "arn:aws:apigateway:*::/v2/apis/*",
          "arn:aws:apigateway:*::/v2/apis/*/integrations",
          "arn:aws:apigateway:*::/v2/apis/*/integrations/*"
        ],
        "Sid": "AWSConfigSLRApiGatewayStatementID"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AWSConfigServiceRolePolicy",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "access-analyzer:GetAnalyzer",
      "condition": null
    },
    {
      "action": "access-analyzer:GetArchiveRule",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAnalyzers",
      "condition": null
    },
    {
      "action": "access-analyzer:ListArchiveRules",
      "condition": null
    },
    {
      "action": "access-analyzer:ListTagsForResource",
      "condition": null
    },
    {
      "action": "account:GetAlternateContact",
      "condition": null
    },
    {
      "action": "acm-pca:DescribeCertificateAuthority",
      "condition": null
    },
    {
      "action": "acm-pca:GetCertificateAuthorityCertificate",
      "condition": null
    },
    {
      "action": "acm-pca:GetCertificateAuthorityCsr",
      "condition": null
    },
    {
      "action": "acm-pca:ListCertificateAuthorities",
      "condition": null
    },
    {
      "action": "acm-pca:ListTags",
      "condition": null
    },
    {
      "action": "acm:DescribeCertificate",
      "condition": null
    },
    {
      "action": "acm:ListCertificates",
      "condition": null
    },
    {
      "action": "acm:ListTagsForCertificate",
      "condition": null
    },
    {
      "action": "airflow:GetEnvironment",
      "condition": null
    },
    {
      "action": "airflow:ListEnvironments",
      "condition": null
    },
    {
      "action": "airflow:ListTagsForResource",
      "condition": null
    },
    {
      "action": "amplify:GetApp",
      "condition": null
    },
    {
      "action": "amplify:GetBranch",
      "condition": null
    },
    {
      "action": "amplify:ListApps",
      "condition": null
    },
    {
      "action": "amplify:ListBranches",
      "condition": null
    },
    {
      "action": "amplifyuibuilder:ExportThemes",
      "condition": null
    },
    {
      "action": "amplifyuibuilder:GetTheme",
      "condition": null
    },
    {
      "action": "amplifyuibuilder:ListThemes",
      "condition": null
    },
    {
      "action": "app-integrations:GetEventIntegration",
      "condition": null
    },
    {
      "action": "app-integrations:ListEventIntegrationAssociations",
      "condition": null
    },
    {
      "action": "app-integrations:ListEventIntegrations",
      "condition": null
    },
    {
      "action": "appconfig:GetApplication",
      "condition": null
    },
    {
      "action": "appconfig:GetConfigurationProfile",
      "condition": null
    },
    {
      "action": "appconfig:GetDeployment",
      "condition": null
    },
    {
      "action": "appconfig:GetDeploymentStrategy",
      "condition": null
    },
    {
      "action": "appconfig:GetEnvironment",
      "condition": null
    },
    {
      "action": "appconfig:GetExtensionAssociation",
      "condition": null
    },
    {
      "action": "appconfig:GetHostedConfigurationVersion",
      "condition": null
    },
    {
      "action": "appconfig:ListApplications",
      "condition": null
    },
    {
      "action": "appconfig:ListConfigurationProfiles",
      "condition": null
    },
    {
      "action": "appconfig:ListDeployments",
      "condition": null
    },
    {
      "action": "appconfig:ListDeploymentStrategies",
      "condition": null
    },
    {
      "action": "appconfig:ListEnvironments",
      "condition": null
    },
    {
      "action": "appconfig:ListExtensionAssociations",
      "condition": null
    },
    {
      "action": "appconfig:ListHostedConfigurationVersions",
      "condition": null
    },
    {
      "action": "appconfig:ListTagsForResource",
      "condition": null
    },
    {
      "action": "appflow:DescribeConnectorProfiles",
      "condition": null
    },
    {
      "action": "appflow:DescribeFlow",
      "condition": null
    },
    {
      "action": "appflow:ListFlows",
      "condition": null
    },
    {
      "action": "appflow:ListTagsForResource",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalableTargets",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalingPolicies",
      "condition": null
    },
    {
      "action": "appmesh:DescribeGatewayRoute",
      "condition": null
    },
    {
      "action": "appmesh:DescribeMesh",
      "condition": null
    },
    {
      "action": "appmesh:DescribeRoute",
      "condition": null
    },
    {
      "action": "appmesh:DescribeVirtualGateway",
      "condition": null
    },
    {
      "action": "appmesh:DescribeVirtualNode",
      "condition": null
    },
    {
      "action": "appmesh:DescribeVirtualRouter",
      "condition": null
    },
    {
      "action": "appmesh:DescribeVirtualService",
      "condition": null
    },
    {
      "action": "appmesh:ListGatewayRoutes",
      "condition": null
    },
    {
      "action": "appmesh:ListMeshes",
      "condition": null
    },
    {
      "action": "appmesh:ListRoutes",
      "condition": null
    },
    {
      "action": "appmesh:ListTagsForResource",
      "condition": null
    },
    {
      "action": "appmesh:ListVirtualGateways",
      "condition": null
    },
    {
      "action": "appmesh:ListVirtualNodes",
      "condition": null
    },
    {
      "action": "appmesh:ListVirtualRouters",
      "condition": null
    },
    {
      "action": "appmesh:ListVirtualServices",
      "condition": null
    },
    {
      "action": "apprunner:DescribeService",
      "condition": null
    },
    {
      "action": "apprunner:DescribeVpcConnector",
      "condition": null
    },
    {
      "action": "apprunner:ListServices",
      "condition": null
    },
    {
      "action": "apprunner:ListTagsForResource",
      "condition": null
    },
    {
      "action": "apprunner:ListVpcConnectors",
      "condition": null
    },
    {
      "action": "appstream:DescribeApplications",
      "condition": null
    },
    {
      "action": "appstream:DescribeDirectoryConfigs",
      "condition": null
    },
    {
      "action": "appstream:DescribeFleets",
      "condition": null
    },
    {
      "action": "appstream:DescribeStacks",
      "condition": null
    },
    {
      "action": "appstream:ListTagsForResource",
      "condition": null
    },
    {
      "action": "appsync:GetApiCache",
      "condition": null
    },
    {
      "action": "appsync:GetGraphqlApi",
      "condition": null
    },
    {
      "action": "appsync:ListGraphqlApis",
      "condition": null
    },
    {
      "action": "aps:DescribeAlertManagerDefinition",
      "condition": null
    },
    {
      "action": "aps:DescribeLoggingConfiguration",
      "condition": null
    },
    {
      "action": "APS:DescribeRuleGroupsNamespace",
      "condition": null
    },
    {
      "action": "APS:DescribeWorkspace",
      "condition": null
    },
    {
      "action": "aps:ListRuleGroupsNamespaces",
      "condition": null
    },
    {
      "action": "aps:ListTagsForResource",
      "condition": null
    },
    {
      "action": "APS:ListWorkspaces",
      "condition": null
    },
    {
      "action": "athena:GetDataCatalog",
      "condition": null
    },
    {
      "action": "athena:GetPreparedStatement",
      "condition": null
    },
    {
      "action": "athena:GetWorkGroup",
      "condition": null
    },
    {
      "action": "athena:ListDataCatalogs",
      "condition": null
    },
    {
      "action": "athena:ListPreparedStatements",
      "condition": null
    },
    {
      "action": "athena:ListTagsForResource",
      "condition": null
    },
    {
      "action": "athena:ListWorkGroups",
      "condition": null
    },
    {
      "action": "auditmanager:GetAccountStatus",
      "condition": null
    },
    {
      "action": "auditmanager:GetAssessment",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessments",
      "condition": null
    },
    {
      "action": "autoscaling-plans:DescribeScalingPlanResources",
      "condition": null
    },
    {
      "action": "autoscaling-plans:DescribeScalingPlans",
      "condition": null
    },
    {
      "action": "autoscaling-plans:GetScalingPlanResourceForecastData",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeAutoScalingGroups",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeLaunchConfigurations",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeLifecycleHooks",
      "condition": null
    },
    {
      "action": "autoscaling:DescribePolicies",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeScheduledActions",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeTags",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeWarmPool",
      "condition": null
    },
    {
      "action": "backup-gateway:ListTagsForResource",
      "condition": null
    },
    {
      "action": "backup-gateway:ListVirtualMachines",
      "condition": null
    },
    {
      "action": "backup:DescribeBackupVault",
      "condition": null
    },
    {
      "action": "backup:DescribeFramework",
      "condition": null
    },
    {
      "action": "backup:DescribeProtectedResource",
      "condition": null
    },
    {
      "action": "backup:DescribeRecoveryPoint",
      "condition": null
    },
    {
      "action": "backup:DescribeReportPlan",
      "condition": null
    },
    {
      "action": "backup:GetBackupPlan",
      "condition": null
    },
    {
      "action": "backup:GetBackupSelection",
      "condition": null
    },
    {
      "action": "backup:GetBackupVaultAccessPolicy",
      "condition": null
    },
    {
      "action": "backup:GetBackupVaultNotifications",
      "condition": null
    },
    {
      "action": "backup:ListBackupPlans",
      "condition": null
    },
    {
      "action": "backup:ListBackupSelections",
      "condition": null
    },
    {
      "action": "backup:ListBackupVaults",
      "condition": null
    },
    {
      "action": "backup:ListFrameworks",
      "condition": null
    },
    {
      "action": "backup:ListRecoveryPointsByBackupVault",
      "condition": null
    },
    {
      "action": "backup:ListReportPlans",
      "condition": null
    },
    {
      "action": "backup:ListTags",
      "condition": null
    },
    {
      "action": "batch:DescribeComputeEnvironments",
      "condition": null
    },
    {
      "action": "batch:DescribeJobQueues",
      "condition": null
    },
    {
      "action": "batch:DescribeSchedulingPolicies",
      "condition": null
    },
    {
      "action": "batch:ListSchedulingPolicies",
      "condition": null
    },
    {
      "action": "batch:ListTagsForResource",
      "condition": null
    },
    {
      "action": "billingconductor:ListAccountAssociations",
      "condition": null
    },
    {
      "action": "billingconductor:ListBillingGroups",
      "condition": null
    },
    {
      "action": "billingconductor:ListCustomLineItems",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingPlans",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingRules",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingRulesAssociatedToPricingPlan",
      "condition": null
    },
    {
      "action": "billingconductor:ListTagsForResource",
      "condition": null
    },
    {
      "action": "budgets:DescribeBudgetAction",
      "condition": null
    },
    {
      "action": "budgets:DescribeBudgetActionsForAccount",
      "condition": null
    },
    {
      "action": "budgets:DescribeBudgetActionsForBudget",
      "condition": null
    },
    {
      "action": "budgets:ViewBudget",
      "condition": null
    },
    {
      "action": "cassandra:Select",
      "condition": null
    },
    {
      "action": "ce:GetAnomalyMonitors",
      "condition": null
    },
    {
      "action": "ce:GetAnomalySubscriptions",
      "condition": null
    },
    {
      "action": "cloud9:DescribeEnvironmentMemberships",
      "condition": null
    },
    {
      "action": "cloud9:DescribeEnvironments",
      "condition": null
    },
    {
      "action": "cloud9:ListEnvironments",
      "condition": null
    },
    {
      "action": "cloud9:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeType",
      "condition": null
    },
    {
      "action": "cloudformation:GetResource",
      "condition": null
    },
    {
      "action": "cloudformation:ListResources",
      "condition": null
    },
    {
      "action": "cloudformation:ListStackResources",
      "condition": null
    },
    {
      "action": "cloudformation:ListStacks",
      "condition": null
    },
    {
      "action": "cloudformation:ListTypes",
      "condition": null
    },
    {
      "action": "cloudfront:GetFunction",
      "condition": null
    },
    {
      "action": "cloudfront:GetOriginAccessControl",
      "condition": null
    },
    {
      "action": "cloudfront:GetResponseHeadersPolicy",
      "condition": null
    },
    {
      "action": "cloudfront:ListDistributions",
      "condition": null
    },
    {
      "action": "cloudfront:ListFunctions",
      "condition": null
    },
    {
      "action": "cloudfront:ListOriginAccessControls",
      "condition": null
    },
    {
      "action": "cloudfront:ListResponseHeadersPolicies",
      "condition": null
    },
    {
      "action": "cloudfront:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cloudtrail:DescribeTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:GetEventDataStore",
      "condition": null
    },
    {
      "action": "cloudtrail:GetEventSelectors",
      "condition": null
    },
    {
      "action": "cloudtrail:GetTrailStatus",
      "condition": null
    },
    {
      "action": "cloudtrail:ListEventDataStores",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTags",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTrails",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarmsForMetric",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAnomalyDetectors",
      "condition": null
    },
    {
      "action": "cloudwatch:GetDashboard",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricStream",
      "condition": null
    },
    {
      "action": "cloudwatch:ListDashboards",
      "condition": null
    },
    {
      "action": "cloudwatch:ListMetricStreams",
      "condition": null
    },
    {
      "action": "cloudwatch:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codeartifact:DescribeRepository",
      "condition": null
    },
    {
      "action": "codeartifact:GetRepositoryPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:ListDomains",
      "condition": null
    },
    {
      "action": "codeartifact:ListPackages",
      "condition": null
    },
    {
      "action": "codeartifact:ListPackageVersions",
      "condition": null
    },
    {
      "action": "codeartifact:ListRepositories",
      "condition": null
    },
    {
      "action": "codeartifact:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codebuild:BatchGetReportGroups",
      "condition": null
    },
    {
      "action": "codebuild:ListReportGroups",
      "condition": null
    },
    {
      "action": "codecommit:GetRepository",
      "condition": null
    },
    {
      "action": "codecommit:GetRepositoryTriggers",
      "condition": null
    },
    {
      "action": "codecommit:ListRepositories",
      "condition": null
    },
    {
      "action": "codecommit:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codedeploy:GetDeploymentConfig",
      "condition": null
    },
    {
      "action": "codeguru-profiler:DescribeProfilingGroup",
      "condition": null
    },
    {
      "action": "codeguru-profiler:GetNotificationConfiguration",
      "condition": null
    },
    {
      "action": "codeguru-profiler:GetPolicy",
      "condition": null
    },
    {
      "action": "codeguru-profiler:ListProfilingGroups",
      "condition": null
    },
    {
      "action": "codeguru-reviewer:DescribeRepositoryAssociation",
      "condition": null
    },
    {
      "action": "codeguru-reviewer:ListRepositoryAssociations",
      "condition": null
    },
    {
      "action": "codepipeline:GetPipeline",
      "condition": null
    },
    {
      "action": "codepipeline:GetPipelineState",
      "condition": null
    },
    {
      "action": "codepipeline:ListPipelines",
      "condition": null
    },
    {
      "action": "cognito-identity:DescribeIdentityPool",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityPoolRoles",
      "condition": null
    },
    {
      "action": "cognito-identity:GetPrincipalTagAttributeMap",
      "condition": null
    },
    {
      "action": "cognito-identity:ListIdentityPools",
      "condition": null
    },
    {
      "action": "cognito-identity:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeIdentityProvider",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeResourceServer",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPoolClient",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPoolDomain",
      "condition": null
    },
    {
      "action": "cognito-idp:GetGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:GetUserPoolMfaConfig",
      "condition": null
    },
    {
      "action": "cognito-idp:ListGroups",
      "condition": null
    },
    {
      "action": "cognito-idp:ListIdentityProviders",
      "condition": null
    },
    {
      "action": "cognito-idp:ListResourceServers",
      "condition": null
    },
    {
      "action": "cognito-idp:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserPoolClients",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserPools",
      "condition": null
    },
    {
      "action": "config:BatchGet*",
      "condition": null
    },
    {
      "action": "config:Describe*",
      "condition": null
    },
    {
      "action": "config:Get*",
      "condition": null
    },
    {
      "action": "config:List*",
      "condition": null
    },
    {
      "action": "config:Put*",
      "condition": null
    },
    {
      "action": "config:Select*",
      "condition": null
    },
    {
      "action": "connect:DescribeEvaluationForm",
      "condition": null
    },
    {
      "action": "connect:DescribeInstance",
      "condition": null
    },
    {
      "action": "connect:DescribeInstanceStorageConfig",
      "condition": null
    },
    {
      "action": "connect:DescribePhoneNumber",
      "condition": null
    },
    {
      "action": "connect:DescribePrompt",
      "condition": null
    },
    {
      "action": "connect:DescribeQuickConnect",
      "condition": null
    },
    {
      "action": "connect:DescribeRule",
      "condition": null
    },
    {
      "action": "connect:DescribeUser",
      "condition": null
    },
    {
      "action": "connect:GetTaskTemplate",
      "condition": null
    },
    {
      "action": "connect:ListApprovedOrigins",
      "condition": null
    },
    {
      "action": "connect:ListEvaluationForms",
      "condition": null
    },
    {
      "action": "connect:ListInstanceAttributes",
      "condition": null
    },
    {
      "action": "connect:ListInstances",
      "condition": null
    },
    {
      "action": "connect:ListInstanceStorageConfigs",
      "condition": null
    },
    {
      "action": "connect:ListIntegrationAssociations",
      "condition": null
    },
    {
      "action": "connect:ListPhoneNumbers",
      "condition": null
    },
    {
      "action": "connect:ListPhoneNumbersV2",
      "condition": null
    },
    {
      "action": "connect:ListPrompts",
      "condition": null
    },
    {
      "action": "connect:ListQuickConnects",
      "condition": null
    },
    {
      "action": "connect:ListRules",
      "condition": null
    },
    {
      "action": "connect:ListSecurityKeys",
      "condition": null
    },
    {
      "action": "connect:ListTagsForResource",
      "condition": null
    },
    {
      "action": "connect:ListTaskTemplates",
      "condition": null
    },
    {
      "action": "connect:ListUsers",
      "condition": null
    },
    {
      "action": "connect:SearchAvailablePhoneNumbers",
      "condition": null
    },
    {
      "action": "databrew:DescribeDataset",
      "condition": null
    },
    {
      "action": "databrew:DescribeJob",
      "condition": null
    },
    {
      "action": "databrew:DescribeProject",
      "condition": null
    },
    {
      "action": "databrew:DescribeRecipe",
      "condition": null
    },
    {
      "action": "databrew:DescribeRuleset",
      "condition": null
    },
    {
      "action": "databrew:DescribeSchedule",
      "condition": null
    },
    {
      "action": "databrew:ListDatasets",
      "condition": null
    },
    {
      "action": "databrew:ListJobs",
      "condition": null
    },
    {
      "action": "databrew:ListProjects",
      "condition": null
    },
    {
      "action": "databrew:ListRecipes",
      "condition": null
    },
    {
      "action": "databrew:ListRecipeVersions",
      "condition": null
    },
    {
      "action": "databrew:ListRulesets",
      "condition": null
    },
    {
      "action": "databrew:ListSchedules",
      "condition": null
    },
    {
      "action": "datasync:DescribeAgent",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationEfs",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationFsxLustre",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationFsxWindows",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationHdfs",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationNfs",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationObjectStorage",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationS3",
      "condition": null
    },
    {
      "action": "datasync:DescribeLocationSmb",
      "condition": null
    },
    {
      "action": "datasync:DescribeTask",
      "condition": null
    },
    {
      "action": "datasync:ListAgents",
      "condition": null
    },
    {
      "action": "datasync:ListLocations",
      "condition": null
    },
    {
      "action": "datasync:ListTagsForResource",
      "condition": null
    },
    {
      "action": "datasync:ListTasks",
      "condition": null
    },
    {
      "action": "dax:DescribeClusters",
      "condition": null
    },
    {
      "action": "dax:DescribeParameterGroups",
      "condition": null
    },
    {
      "action": "dax:DescribeParameters",
      "condition": null
    },
    {
      "action": "dax:DescribeSubnetGroups",
      "condition": null
    },
    {
      "action": "dax:ListTags",
      "condition": null
    },
    {
      "action": "detective:ListGraphs",
      "condition": null
    },
    {
      "action": "detective:ListTagsForResource",
      "condition": null
    },
    {
      "action": "devicefarm:GetInstanceProfile",
      "condition": null
    },
    {
      "action": "devicefarm:GetNetworkProfile",
      "condition": null
    },
    {
      "action": "devicefarm:GetProject",
      "condition": null
    },
    {
      "action": "devicefarm:GetTestGridProject",
      "condition": null
    },
    {
      "action": "devicefarm:ListInstanceProfiles",
      "condition": null
    },
    {
      "action": "devicefarm:ListNetworkProfiles",
      "condition": null
    },
    {
      "action": "devicefarm:ListProjects",
      "condition": null
    },
    {
      "action": "devicefarm:ListTagsForResource",
      "condition": null
    },
    {
      "action": "devicefarm:ListTestGridProjects",
      "condition": null
    },
    {
      "action": "devops-guru:GetResourceCollection",
      "condition": null
    },
    {
      "action": "dms:DescribeCertificates",
      "condition": null
    },
    {
      "action": "dms:DescribeEndpoints",
      "condition": null
    },
    {
      "action": "dms:DescribeEventSubscriptions",
      "condition": null
    },
    {
      "action": "dms:DescribeReplicationInstances",
      "condition": null
    },
    {
      "action": "dms:DescribeReplicationSubnetGroups",
      "condition": null
    },
    {
      "action": "dms:DescribeReplicationTaskAssessmentRuns",
      "condition": null
    },
    {
      "action": "dms:DescribeReplicationTasks",
      "condition": null
    },
    {
      "action": "dms:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ds:DescribeDirectories",
      "condition": null
    },
    {
      "action": "ds:DescribeDomainControllers",
      "condition": null
    },
    {
      "action": "ds:DescribeEventTopics",
      "condition": null
    },
    {
      "action": "ds:ListLogSubscriptions",
      "condition": null
    },
    {
      "action": "ds:ListTagsForResource",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeContinuousBackups",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeGlobalTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeGlobalTableSettings",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeLimits",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTableReplicaAutoScaling",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTimeToLive",
      "condition": null
    },
    {
      "action": "dynamodb:ListTables",
      "condition": null
    },
    {
      "action": "dynamodb:ListTagsOfResource",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:DescribeClientVpnAuthorizationRules",
      "condition": null
    },
    {
      "action": "ec2:DescribeClientVpnEndpoints",
      "condition": null
    },
    {
      "action": "ec2:DescribeDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:DescribeFleets",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetworkAcls",
      "condition": null
    },
    {
      "action": "ec2:DescribePlacementGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeSpotFleetRequests",
      "condition": null
    },
    {
      "action": "ec2:DescribeTags",
      "condition": null
    },
    {
      "action": "ec2:DescribeTrafficMirrorFilters",
      "condition": null
    },
    {
      "action": "ec2:DescribeTrafficMirrorSessions",
      "condition": null
    },
    {
      "action": "ec2:DescribeTrafficMirrorTargets",
      "condition": null
    },
    {
      "action": "ec2:DescribeVolumeAttribute",
      "condition": null
    },
    {
      "action": "ec2:DescribeVolumes",
      "condition": null
    },
    {
      "action": "ec2:GetEbsEncryptionByDefault",
      "condition": null
    },
    {
      "action": "ec2:GetInstanceTypesFromInstanceRequirements",
      "condition": null
    },
    {
      "action": "ec2:GetIpamPoolAllocations",
      "condition": null
    },
    {
      "action": "ec2:GetIpamPoolCidrs",
      "condition": null
    },
    {
      "action": "ec2:GetManagedPrefixListEntries",
      "condition": null
    },
    {
      "action": "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
      "condition": null
    },
    {
      "action": "ec2:GetNetworkInsightsAccessScopeContent",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr-public:GetRepositoryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:GetRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr-public:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ecr:BatchGetRepositoryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:DescribePullThroughCacheRules",
      "condition": null
    },
    {
      "action": "ecr:DescribeRegistry",
      "condition": null
    },
    {
      "action": "ecr:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr:GetLifecyclePolicy",
      "condition": null
    },
    {
      "action": "ecr:GetRegistryPolicy",
      "condition": null
    },
    {
      "action": "ecr:GetRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ecs:DescribeCapacityProviders",
      "condition": null
    },
    {
      "action": "ecs:DescribeClusters",
      "condition": null
    },
    {
      "action": "ecs:DescribeServices",
      "condition": null
    },
    {
      "action": "ecs:DescribeTaskDefinition",
      "condition": null
    },
    {
      "action": "ecs:DescribeTaskSets",
      "condition": null
    },
    {
      "action": "ecs:ListClusters",
      "condition": null
    },
    {
      "action": "ecs:ListServices",
      "condition": null
    },
    {
      "action": "ecs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ecs:ListTaskDefinitionFamilies",
      "condition": null
    },
    {
      "action": "ecs:ListTaskDefinitions",
      "condition": null
    },
    {
      "action": "eks:DescribeAddon",
      "condition": null
    },
    {
      "action": "eks:DescribeCluster",
      "condition": null
    },
    {
      "action": "eks:DescribeFargateProfile",
      "condition": null
    },
    {
      "action": "eks:DescribeIdentityProviderConfig",
      "condition": null
    },
    {
      "action": "eks:DescribeNodegroup",
      "condition": null
    },
    {
      "action": "eks:ListAddons",
      "condition": null
    },
    {
      "action": "eks:ListClusters",
      "condition": null
    },
    {
      "action": "eks:ListFargateProfiles",
      "condition": null
    },
    {
      "action": "eks:ListIdentityProviderConfigs",
      "condition": null
    },
    {
      "action": "eks:ListNodegroups",
      "condition": null
    },
    {
      "action": "eks:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticache:DescribeCacheClusters",
      "condition": null
    },
    {
      "action": "elasticache:DescribeCacheParameterGroups",
      "condition": null
    },
    {
      "action": "elasticache:DescribeCacheParameters",
      "condition": null
    },
    {
      "action": "elasticache:DescribeCacheSecurityGroups",
      "condition": null
    },
    {
      "action": "elasticache:DescribeCacheSubnetGroups",
      "condition": null
    },
    {
      "action": "elasticache:DescribeGlobalReplicationGroups",
      "condition": null
    },
    {
      "action": "elasticache:DescribeReplicationGroups",
      "condition": null
    },
    {
      "action": "elasticache:DescribeSnapshots",
      "condition": null
    },
    {
      "action": "elasticache:DescribeUserGroups",
      "condition": null
    },
    {
      "action": "elasticache:DescribeUsers",
      "condition": null
    },
    {
      "action": "elasticache:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:DescribeConfigurationSettings",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:DescribeEnvironments",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeAccessPoints",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeBackupPolicy",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystemPolicy",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeMountTargets",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeMountTargetSecurityGroups",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeTags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeListenerCertificates",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancerAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancerPolicies",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeRules",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroupAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroups",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetHealth",
      "condition": null
    },
    {
      "action": "elasticmapreduce:DescribeCluster",
      "condition": null
    },
    {
      "action": "elasticmapreduce:DescribeSecurityConfiguration",
      "condition": null
    },
    {
      "action": "elasticmapreduce:DescribeStep",
      "condition": null
    },
    {
      "action": "elasticmapreduce:DescribeStudio",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetBlockPublicAccessConfiguration",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetManagedScalingPolicy",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetStudioSessionMapping",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListClusters",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListInstanceFleets",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListInstanceGroups",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListInstances",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListSecurityConfigurations",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListSteps",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListStudios",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListStudioSessionMappings",
      "condition": null
    },
    {
      "action": "emr-containers:DescribeVirtualCluster",
      "condition": null
    },
    {
      "action": "emr-containers:ListVirtualClusters",
      "condition": null
    },
    {
      "action": "emr-serverless:GetApplication",
      "condition": null
    },
    {
      "action": "emr-serverless:ListApplications",
      "condition": null
    },
    {
      "action": "es:DescribeDomain",
      "condition": null
    },
    {
      "action": "es:DescribeDomains",
      "condition": null
    },
    {
      "action": "es:DescribeElasticsearchDomain",
      "condition": null
    },
    {
      "action": "es:DescribeElasticsearchDomains",
      "condition": null
    },
    {
      "action": "es:GetCompatibleElasticsearchVersions",
      "condition": null
    },
    {
      "action": "es:GetCompatibleVersions",
      "condition": null
    },
    {
      "action": "es:ListDomainNames",
      "condition": null
    },
    {
      "action": "es:ListTags",
      "condition": null
    },
    {
      "action": "events:DescribeApiDestination",
      "condition": null
    },
    {
      "action": "events:DescribeArchive",
      "condition": null
    },
    {
      "action": "events:DescribeConnection",
      "condition": null
    },
    {
      "action": "events:DescribeEndpoint",
      "condition": null
    },
    {
      "action": "events:DescribeEventBus",
      "condition": null
    },
    {
      "action": "events:DescribeRule",
      "condition": null
    },
    {
      "action": "events:ListApiDestinations",
      "condition": null
    },
    {
      "action": "events:ListArchives",
      "condition": null
    },
    {
      "action": "events:ListConnections",
      "condition": null
    },
    {
      "action": "events:ListEndpoints",
      "condition": null
    },
    {
      "action": "events:ListEventBuses",
      "condition": null
    },
    {
      "action": "events:ListRules",
      "condition": null
    },
    {
      "action": "events:ListTagsForResource",
      "condition": null
    },
    {
      "action": "events:ListTargetsByRule",
      "condition": null
    },
    {
      "action": "evidently:GetLaunch",
      "condition": null
    },
    {
      "action": "evidently:GetProject",
      "condition": null
    },
    {
      "action": "evidently:GetSegment",
      "condition": null
    },
    {
      "action": "evidently:ListLaunches",
      "condition": null
    },
    {
      "action": "evidently:ListProjects",
      "condition": null
    },
    {
      "action": "evidently:ListSegments",
      "condition": null
    },
    {
      "action": "evidently:ListTagsForResource",
      "condition": null
    },
    {
      "action": "finspace:GetEnvironment",
      "condition": null
    },
    {
      "action": "finspace:ListEnvironments",
      "condition": null
    },
    {
      "action": "firehose:DescribeDeliveryStream",
      "condition": null
    },
    {
      "action": "firehose:ListDeliveryStreams",
      "condition": null
    },
    {
      "action": "firehose:ListTagsForDeliveryStream",
      "condition": null
    },
    {
      "action": "fis:GetExperimentTemplate",
      "condition": null
    },
    {
      "action": "fis:ListExperimentTemplates",
      "condition": null
    },
    {
      "action": "fms:GetNotificationChannel",
      "condition": null
    },
    {
      "action": "fms:GetPolicy",
      "condition": null
    },
    {
      "action": "fms:ListPolicies",
      "condition": null
    },
    {
      "action": "fms:ListTagsForResource",
      "condition": null
    },
    {
      "action": "forecast:DescribeDataset",
      "condition": null
    },
    {
      "action": "forecast:DescribeDatasetGroup",
      "condition": null
    },
    {
      "action": "forecast:ListDatasetGroups",
      "condition": null
    },
    {
      "action": "forecast:ListDatasets",
      "condition": null
    },
    {
      "action": "forecast:ListTagsForResource",
      "condition": null
    },
    {
      "action": "frauddetector:GetDetectors",
      "condition": null
    },
    {
      "action": "frauddetector:GetDetectorVersion",
      "condition": null
    },
    {
      "action": "frauddetector:GetEntityTypes",
      "condition": null
    },
    {
      "action": "frauddetector:GetEventTypes",
      "condition": null
    },
    {
      "action": "frauddetector:GetExternalModels",
      "condition": null
    },
    {
      "action": "frauddetector:GetLabels",
      "condition": null
    },
    {
      "action": "frauddetector:GetModels",
      "condition": null
    },
    {
      "action": "frauddetector:GetOutcomes",
      "condition": null
    },
    {
      "action": "frauddetector:GetRules",
      "condition": null
    },
    {
      "action": "frauddetector:GetVariables",
      "condition": null
    },
    {
      "action": "frauddetector:ListTagsForResource",
      "condition": null
    },
    {
      "action": "fsx:DescribeBackups",
      "condition": null
    },
    {
      "action": "fsx:DescribeDataRepositoryAssociations",
      "condition": null
    },
    {
      "action": "fsx:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "fsx:DescribeSnapshots",
      "condition": null
    },
    {
      "action": "fsx:DescribeStorageVirtualMachines",
      "condition": null
    },
    {
      "action": "fsx:DescribeVolumes",
      "condition": null
    },
    {
      "action": "fsx:ListTagsForResource",
      "condition": null
    },
    {
      "action": "gamelift:DescribeAlias",
      "condition": null
    },
    {
      "action": "gamelift:DescribeBuild",
      "condition": null
    },
    {
      "action": "gamelift:DescribeFleetAttributes",
      "condition": null
    },
    {
      "action": "gamelift:DescribeFleetCapacity",
      "condition": null
    },
    {
      "action": "gamelift:DescribeFleetLocationAttributes",
      "condition": null
    },
    {
      "action": "gamelift:DescribeFleetLocationCapacity",
      "condition": null
    },
    {
      "action": "gamelift:DescribeFleetPortSettings",
      "condition": null
    },
    {
      "action": "gamelift:DescribeGameServerGroup",
      "condition": null
    },
    {
      "action": "gamelift:DescribeGameSessionQueues",
      "condition": null
    },
    {
      "action": "gamelift:DescribeMatchmakingConfigurations",
      "condition": null
    },
    {
      "action": "gamelift:DescribeMatchmakingRuleSets",
      "condition": null
    },
    {
      "action": "gamelift:DescribeRuntimeConfiguration",
      "condition": null
    },
    {
      "action": "gamelift:DescribeScript",
      "condition": null
    },
    {
      "action": "gamelift:DescribeVpcPeeringAuthorizations",
      "condition": null
    },
    {
      "action": "gamelift:DescribeVpcPeeringConnections",
      "condition": null
    },
    {
      "action": "gamelift:ListAliases",
      "condition": null
    },
    {
      "action": "gamelift:ListBuilds",
      "condition": null
    },
    {
      "action": "gamelift:ListFleets",
      "condition": null
    },
    {
      "action": "gamelift:ListGameServerGroups",
      "condition": null
    },
    {
      "action": "gamelift:ListScripts",
      "condition": null
    },
    {
      "action": "gamelift:ListTagsForResource",
      "condition": null
    },
    {
      "action": "geo:DescribeGeofenceCollection",
      "condition": null
    },
    {
      "action": "geo:DescribeMap",
      "condition": null
    },
    {
      "action": "geo:DescribePlaceIndex",
      "condition": null
    },
    {
      "action": "geo:DescribeRouteCalculator",
      "condition": null
    },
    {
      "action": "geo:DescribeTracker",
      "condition": null
    },
    {
      "action": "geo:ListGeofenceCollections",
      "condition": null
    },
    {
      "action": "geo:ListMaps",
      "condition": null
    },
    {
      "action": "geo:ListPlaceIndexes",
      "condition": null
    },
    {
      "action": "geo:ListRouteCalculators",
      "condition": null
    },
    {
      "action": "geo:ListTrackerConsumers",
      "condition": null
    },
    {
      "action": "geo:ListTrackers",
      "condition": null
    },
    {
      "action": "globalaccelerator:DescribeAccelerator",
      "condition": null
    },
    {
      "action": "globalaccelerator:DescribeEndpointGroup",
      "condition": null
    },
    {
      "action": "globalaccelerator:DescribeListener",
      "condition": null
    },
    {
      "action": "globalaccelerator:ListAccelerators",
      "condition": null
    },
    {
      "action": "globalaccelerator:ListEndpointGroups",
      "condition": null
    },
    {
      "action": "globalaccelerator:ListListeners",
      "condition": null
    },
    {
      "action": "globalaccelerator:ListTagsForResource",
      "condition": null
    },
    {
      "action": "glue:BatchGetDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:BatchGetJobs",
      "condition": null
    },
    {
      "action": "glue:BatchGetWorkflows",
      "condition": null
    },
    {
      "action": "glue:GetClassifier",
      "condition": null
    },
    {
      "action": "glue:GetClassifiers",
      "condition": null
    },
    {
      "action": "glue:GetCrawler",
      "condition": null
    },
    {
      "action": "glue:GetCrawlers",
      "condition": null
    },
    {
      "action": "glue:GetDatabase",
      "condition": null
    },
    {
      "action": "glue:GetDatabases",
      "condition": null
    },
    {
      "action": "glue:GetDevEndpoint",
      "condition": null
    },
    {
      "action": "glue:GetDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:GetJob",
      "condition": null
    },
    {
      "action": "glue:GetJobs",
      "condition": null
    },
    {
      "action": "glue:GetMLTransform",
      "condition": null
    },
    {
      "action": "glue:GetMLTransforms",
      "condition": null
    },
    {
      "action": "glue:GetPartition",
      "condition": null
    },
    {
      "action": "glue:GetPartitions",
      "condition": null
    },
    {
      "action": "glue:GetSecurityConfiguration",
      "condition": null
    },
    {
      "action": "glue:GetSecurityConfigurations",
      "condition": null
    },
    {
      "action": "glue:GetTable",
      "condition": null
    },
    {
      "action": "glue:GetTags",
      "condition": null
    },
    {
      "action": "glue:GetWorkflow",
      "condition": null
    },
    {
      "action": "glue:ListCrawlers",
      "condition": null
    },
    {
      "action": "glue:ListDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:ListJobs",
      "condition": null
    },
    {
      "action": "glue:ListMLTransforms",
      "condition": null
    },
    {
      "action": "glue:ListWorkflows",
      "condition": null
    },
    {
      "action": "grafana:DescribeWorkspace",
      "condition": null
    },
    {
      "action": "grafana:DescribeWorkspaceAuthentication",
      "condition": null
    },
    {
      "action": "grafana:DescribeWorkspaceConfiguration",
      "condition": null
    },
    {
      "action": "grafana:ListWorkspaces",
      "condition": null
    },
    {
      "action": "greengrass:DescribeComponent",
      "condition": null
    },
    {
      "action": "greengrass:GetComponent",
      "condition": null
    },
    {
      "action": "greengrass:ListComponents",
      "condition": null
    },
    {
      "action": "greengrass:ListComponentVersions",
      "condition": null
    },
    {
      "action": "groundstation:GetConfig",
      "condition": null
    },
    {
      "action": "groundstation:GetDataflowEndpointGroup",
      "condition": null
    },
    {
      "action": "groundstation:GetMissionProfile",
      "condition": null
    },
    {
      "action": "groundstation:ListConfigs",
      "condition": null
    },
    {
      "action": "groundstation:ListDataflowEndpointGroups",
      "condition": null
    },
    {
      "action": "groundstation:ListMissionProfiles",
      "condition": null
    },
    {
      "action": "groundstation:ListTagsForResource",
      "condition": null
    },
    {
      "action": "guardduty:DescribePublishingDestination",
      "condition": null
    },
    {
      "action": "guardduty:GetAdministratorAccount",
      "condition": null
    },
    {
      "action": "guardduty:GetDetector",
      "condition": null
    },
    {
      "action": "guardduty:GetFilter",
      "condition": null
    },
    {
      "action": "guardduty:GetFindings",
      "condition": null
    },
    {
      "action": "guardduty:GetIPSet",
      "condition": null
    },
    {
      "action": "guardduty:GetMasterAccount",
      "condition": null
    },
    {
      "action": "guardduty:GetMemberDetectors",
      "condition": null
    },
    {
      "action": "guardduty:GetMembers",
      "condition": null
    },
    {
      "action": "guardduty:GetThreatIntelSet",
      "condition": null
    },
    {
      "action": "guardduty:ListDetectors",
      "condition": null
    },
    {
      "action": "guardduty:ListFilters",
      "condition": null
    },
    {
      "action": "guardduty:ListFindings",
      "condition": null
    },
    {
      "action": "guardduty:ListIPSets",
      "condition": null
    },
    {
      "action": "guardduty:ListMembers",
      "condition": null
    },
    {
      "action": "guardduty:ListOrganizationAdminAccounts",
      "condition": null
    },
    {
      "action": "guardduty:ListPublishingDestinations",
      "condition": null
    },
    {
      "action": "guardduty:ListTagsForResource",
      "condition": null
    },
    {
      "action": "guardduty:ListThreatIntelSets",
      "condition": null
    },
    {
      "action": "healthlake:DescribeFHIRDatastore",
      "condition": null
    },
    {
      "action": "healthlake:ListFHIRDatastores",
      "condition": null
    },
    {
      "action": "healthlake:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iam:GenerateCredentialReport",
      "condition": null
    },
    {
      "action": "iam:GetAccountAuthorizationDetails",
      "condition": null
    },
    {
      "action": "iam:GetAccountPasswordPolicy",
      "condition": null
    },
    {
      "action": "iam:GetAccountSummary",
      "condition": null
    },
    {
      "action": "iam:GetCredentialReport",
      "condition": null
    },
    {
      "action": "iam:GetGroup",
      "condition": null
    },
    {
      "action": "iam:GetGroupPolicy",
      "condition": null
    },
    {
      "action": "iam:GetInstanceProfile",
      "condition": null
    },
    {
      "action": "iam:GetOpenIDConnectProvider",
      "condition": null
    },
    {
      "action": "iam:GetPolicy",
      "condition": null
    },
    {
      "action": "iam:GetPolicyVersion",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": null
    },
    {
      "action": "iam:GetSAMLProvider",
      "condition": null
    },
    {
      "action": "iam:GetServerCertificate",
      "condition": null
    },
    {
      "action": "iam:GetUser",
      "condition": null
    },
    {
      "action": "iam:GetUserPolicy",
      "condition": null
    },
    {
      "action": "iam:ListAccessKeys",
      "condition": null
    },
    {
      "action": "iam:ListAttachedGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListAttachedUserPolicies",
      "condition": null
    },
    {
      "action": "iam:ListEntitiesForPolicy",
      "condition": null
    },
    {
      "action": "iam:ListGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:ListGroups",
      "condition": null
    },
    {
      "action": "iam:ListGroupsForUser",
      "condition": null
    },
    {
      "action": "iam:ListInstanceProfiles",
      "condition": null
    },
    {
      "action": "iam:ListInstanceProfilesForRole",
      "condition": null
    },
    {
      "action": "iam:ListInstanceProfileTags",
      "condition": null
    },
    {
      "action": "iam:ListMFADevices",
      "condition": null
    },
    {
      "action": "iam:ListMFADeviceTags",
      "condition": null
    },
    {
      "action": "iam:ListOpenIDConnectProviders",
      "condition": null
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": null
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "iam:ListSAMLProviders",
      "condition": null
    },
    {
      "action": "iam:ListServerCertificates",
      "condition": null
    },
    {
      "action": "iam:ListUserPolicies",
      "condition": null
    },
    {
      "action": "iam:ListUsers",
      "condition": null
    },
    {
      "action": "iam:ListVirtualMFADevices",
      "condition": null
    },
    {
      "action": "imagebuilder:GetComponent",
      "condition": null
    },
    {
      "action": "imagebuilder:GetContainerRecipe",
      "condition": null
    },
    {
      "action": "imagebuilder:GetDistributionConfiguration",
      "condition": null
    },
    {
      "action": "imagebuilder:GetImage",
      "condition": null
    },
    {
      "action": "imagebuilder:GetImagePipeline",
      "condition": null
    },
    {
      "action": "imagebuilder:GetImageRecipe",
      "condition": null
    },
    {
      "action": "imagebuilder:GetInfrastructureConfiguration",
      "condition": null
    },
    {
      "action": "imagebuilder:ListComponentBuildVersions",
      "condition": null
    },
    {
      "action": "imagebuilder:ListComponents",
      "condition": null
    },
    {
      "action": "imagebuilder:ListContainerRecipes",
      "condition": null
    },
    {
      "action": "imagebuilder:ListDistributionConfigurations",
      "condition": null
    },
    {
      "action": "imagebuilder:ListImageBuildVersions",
      "condition": null
    },
    {
      "action": "imagebuilder:ListImagePipelines",
      "condition": null
    },
    {
      "action": "imagebuilder:ListImageRecipes",
      "condition": null
    },
    {
      "action": "imagebuilder:ListImages",
      "condition": null
    },
    {
      "action": "imagebuilder:ListInfrastructureConfigurations",
      "condition": null
    },
    {
      "action": "inspector2:BatchGetAccountStatus",
      "condition": null
    },
    {
      "action": "inspector2:GetDelegatedAdminAccount",
      "condition": null
    },
    {
      "action": "inspector2:ListFilters",
      "condition": null
    },
    {
      "action": "inspector2:ListMembers",
      "condition": null
    },
    {
      "action": "iot:DescribeAccountAuditConfiguration",
      "condition": null
    },
    {
      "action": "iot:DescribeAuthorizer",
      "condition": null
    },
    {
      "action": "iot:DescribeCACertificate",
      "condition": null
    },
    {
      "action": "iot:DescribeCertificate",
      "condition": null
    },
    {
      "action": "iot:DescribeCustomMetric",
      "condition": null
    },
    {
      "action": "iot:DescribeDimension",
      "condition": null
    },
    {
      "action": "iot:DescribeDomainConfiguration",
      "condition": null
    },
    {
      "action": "iot:DescribeFleetMetric",
      "condition": null
    },
    {
      "action": "iot:DescribeJobTemplate",
      "condition": null
    },
    {
      "action": "iot:DescribeMitigationAction",
      "condition": null
    },
    {
      "action": "iot:DescribeProvisioningTemplate",
      "condition": null
    },
    {
      "action": "iot:DescribeRoleAlias",
      "condition": null
    },
    {
      "action": "iot:DescribeScheduledAudit",
      "condition": null
    },
    {
      "action": "iot:DescribeSecurityProfile",
      "condition": null
    },
    {
      "action": "iot:GetPolicy",
      "condition": null
    },
    {
      "action": "iot:GetTopicRule",
      "condition": null
    },
    {
      "action": "iot:GetTopicRuleDestination",
      "condition": null
    },
    {
      "action": "iot:ListAuthorizers",
      "condition": null
    },
    {
      "action": "iot:ListCACertificates",
      "condition": null
    },
    {
      "action": "iot:ListCertificates",
      "condition": null
    },
    {
      "action": "iot:ListCustomMetrics",
      "condition": null
    },
    {
      "action": "iot:ListDimensions",
      "condition": null
    },
    {
      "action": "iot:ListDomainConfigurations",
      "condition": null
    },
    {
      "action": "iot:ListFleetMetrics",
      "condition": null
    },
    {
      "action": "iot:ListJobTemplates",
      "condition": null
    },
    {
      "action": "iot:ListMitigationActions",
      "condition": null
    },
    {
      "action": "iot:ListPolicies",
      "condition": null
    },
    {
      "action": "iot:ListProvisioningTemplates",
      "condition": null
    },
    {
      "action": "iot:ListRoleAliases",
      "condition": null
    },
    {
      "action": "iot:ListScheduledAudits",
      "condition": null
    },
    {
      "action": "iot:ListSecurityProfiles",
      "condition": null
    },
    {
      "action": "iot:ListSecurityProfilesForTarget",
      "condition": null
    },
    {
      "action": "iot:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iot:ListTargetsForSecurityProfile",
      "condition": null
    },
    {
      "action": "iot:ListTopicRuleDestinations",
      "condition": null
    },
    {
      "action": "iot:ListTopicRules",
      "condition": null
    },
    {
      "action": "iot:ListV2LoggingLevels",
      "condition": null
    },
    {
      "action": "iot:ValidateSecurityProfileBehaviors",
      "condition": null
    },
    {
      "action": "iotanalytics:DescribeChannel",
      "condition": null
    },
    {
      "action": "iotanalytics:DescribeDataset",
      "condition": null
    },
    {
      "action": "iotanalytics:DescribeDatastore",
      "condition": null
    },
    {
      "action": "iotanalytics:DescribePipeline",
      "condition": null
    },
    {
      "action": "iotanalytics:ListChannels",
      "condition": null
    },
    {
      "action": "iotanalytics:ListDatasets",
      "condition": null
    },
    {
      "action": "iotanalytics:ListDatastores",
      "condition": null
    },
    {
      "action": "iotanalytics:ListPipelines",
      "condition": null
    },
    {
      "action": "iotanalytics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotevents:DescribeAlarmModel",
      "condition": null
    },
    {
      "action": "iotevents:DescribeDetectorModel",
      "condition": null
    },
    {
      "action": "iotevents:DescribeInput",
      "condition": null
    },
    {
      "action": "iotevents:ListAlarmModels",
      "condition": null
    },
    {
      "action": "iotevents:ListDetectorModels",
      "condition": null
    },
    {
      "action": "iotevents:ListInputs",
      "condition": null
    },
    {
      "action": "iotevents:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeAccessPolicy",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeAsset",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeAssetModel",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeDashboard",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeGateway",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribePortal",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeProject",
      "condition": null
    },
    {
      "action": "iotsitewise:ListAccessPolicies",
      "condition": null
    },
    {
      "action": "iotsitewise:ListAssetModels",
      "condition": null
    },
    {
      "action": "iotsitewise:ListAssets",
      "condition": null
    },
    {
      "action": "iotsitewise:ListDashboards",
      "condition": null
    },
    {
      "action": "iotsitewise:ListGateways",
      "condition": null
    },
    {
      "action": "iotsitewise:ListPortals",
      "condition": null
    },
    {
      "action": "iotsitewise:ListProjectAssets",
      "condition": null
    },
    {
      "action": "iotsitewise:ListProjects",
      "condition": null
    },
    {
      "action": "iotsitewise:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iottwinmaker:GetComponentType",
      "condition": null
    },
    {
      "action": "iottwinmaker:GetEntity",
      "condition": null
    },
    {
      "action": "iottwinmaker:GetScene",
      "condition": null
    },
    {
      "action": "iottwinmaker:GetSyncJob",
      "condition": null
    },
    {
      "action": "iottwinmaker:GetWorkspace",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListComponentTypes",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListEntities",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListScenes",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListSyncJobs",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListWorkspaces",
      "condition": null
    },
    {
      "action": "iotwireless:GetFuotaTask",
      "condition": null
    },
    {
      "action": "iotwireless:GetMulticastGroup",
      "condition": null
    },
    {
      "action": "iotwireless:GetServiceProfile",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessDevice",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGatewayTaskDefinition",
      "condition": null
    },
    {
      "action": "iotwireless:ListFuotaTasks",
      "condition": null
    },
    {
      "action": "iotwireless:ListMulticastGroups",
      "condition": null
    },
    {
      "action": "iotwireless:ListServiceProfiles",
      "condition": null
    },
    {
      "action": "iotwireless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotwireless:ListWirelessDevices",
      "condition": null
    },
    {
      "action": "iotwireless:ListWirelessGatewayTaskDefinitions",
      "condition": null
    },
    {
      "action": "ivs:GetChannel",
      "condition": null
    },
    {
      "action": "ivs:GetPlaybackKeyPair",
      "condition": null
    },
    {
      "action": "ivs:GetRecordingConfiguration",
      "condition": null
    },
    {
      "action": "ivs:GetStreamKey",
      "condition": null
    },
    {
      "action": "ivs:ListChannels",
      "condition": null
    },
    {
      "action": "ivs:ListPlaybackKeyPairs",
      "condition": null
    },
    {
      "action": "ivs:ListRecordingConfigurations",
      "condition": null
    },
    {
      "action": "ivs:ListStreamKeys",
      "condition": null
    },
    {
      "action": "ivs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kafka:DescribeCluster",
      "condition": null
    },
    {
      "action": "kafka:DescribeClusterV2",
      "condition": null
    },
    {
      "action": "kafka:DescribeConfiguration",
      "condition": null
    },
    {
      "action": "kafka:DescribeConfigurationRevision",
      "condition": null
    },
    {
      "action": "kafka:DescribeVpcConnection",
      "condition": null
    },
    {
      "action": "kafka:GetClusterPolicy",
      "condition": null
    },
    {
      "action": "kafka:ListClusters",
      "condition": null
    },
    {
      "action": "kafka:ListClustersV2",
      "condition": null
    },
    {
      "action": "kafka:ListConfigurations",
      "condition": null
    },
    {
      "action": "kafka:ListScramSecrets",
      "condition": null
    },
    {
      "action": "kafka:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kafka:ListVpcConnections",
      "condition": null
    },
    {
      "action": "kafkaconnect:DescribeConnector",
      "condition": null
    },
    {
      "action": "kafkaconnect:ListConnectors",
      "condition": null
    },
    {
      "action": "kendra:DescribeIndex",
      "condition": null
    },
    {
      "action": "kendra:ListIndices",
      "condition": null
    },
    {
      "action": "kendra:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesis:DescribeStreamConsumer",
      "condition": null
    },
    {
      "action": "kinesis:DescribeStreamSummary",
      "condition": null
    },
    {
      "action": "kinesis:ListStreamConsumers",
      "condition": null
    },
    {
      "action": "kinesis:ListStreams",
      "condition": null
    },
    {
      "action": "kinesis:ListTagsForStream",
      "condition": null
    },
    {
      "action": "kinesisanalytics:DescribeApplication",
      "condition": null
    },
    {
      "action": "kinesisanalytics:ListApplications",
      "condition": null
    },
    {
      "action": "kinesisanalytics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeSignalingChannel",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeStream",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListSignalingChannels",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListStreams",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListTagsForStream",
      "condition": null
    },
    {
      "action": "kms:DescribeKey",
      "condition": null
    },
    {
      "action": "kms:GetKeyPolicy",
      "condition": null
    },
    {
      "action": "kms:GetKeyRotationStatus",
      "condition": null
    },
    {
      "action": "kms:ListAliases",
      "condition": null
    },
    {
      "action": "kms:ListKeys",
      "condition": null
    },
    {
      "action": "kms:ListResourceTags",
      "condition": null
    },
    {
      "action": "lakeformation:DescribeResource",
      "condition": null
    },
    {
      "action": "lakeformation:GetDataLakeSettings",
      "condition": null
    },
    {
      "action": "lakeformation:ListPermissions",
      "condition": null
    },
    {
      "action": "lakeformation:ListResources",
      "condition": null
    },
    {
      "action": "lambda:GetAlias",
      "condition": null
    },
    {
      "action": "lambda:GetCodeSigningConfig",
      "condition": null
    },
    {
      "action": "lambda:GetFunction",
      "condition": null
    },
    {
      "action": "lambda:GetFunctionCodeSigningConfig",
      "condition": null
    },
    {
      "action": "lambda:GetLayerVersion",
      "condition": null
    },
    {
      "action": "lambda:GetPolicy",
      "condition": null
    },
    {
      "action": "lambda:ListAliases",
      "condition": null
    },
    {
      "action": "lambda:ListCodeSigningConfigs",
      "condition": null
    },
    {
      "action": "lambda:ListFunctions",
      "condition": null
    },
    {
      "action": "lambda:ListLayers",
      "condition": null
    },
    {
      "action": "lambda:ListLayerVersions",
      "condition": null
    },
    {
      "action": "lambda:ListTags",
      "condition": null
    },
    {
      "action": "lambda:ListVersionsByFunction",
      "condition": null
    },
    {
      "action": "lex:DescribeBot",
      "condition": null
    },
    {
      "action": "lex:DescribeBotAlias",
      "condition": null
    },
    {
      "action": "lex:DescribeBotVersion",
      "condition": null
    },
    {
      "action": "lex:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "lex:ListBotAliases",
      "condition": null
    },
    {
      "action": "lex:ListBotLocales",
      "condition": null
    },
    {
      "action": "lex:ListBots",
      "condition": null
    },
    {
      "action": "lex:ListBotVersions",
      "condition": null
    },
    {
      "action": "lex:ListTagsForResource",
      "condition": null
    },
    {
      "action": "license-manager:GetGrant",
      "condition": null
    },
    {
      "action": "license-manager:GetLicense",
      "condition": null
    },
    {
      "action": "license-manager:ListDistributedGrants",
      "condition": null
    },
    {
      "action": "license-manager:ListLicenses",
      "condition": null
    },
    {
      "action": "license-manager:ListReceivedGrants",
      "condition": null
    },
    {
      "action": "lightsail:GetAlarms",
      "condition": null
    },
    {
      "action": "lightsail:GetBuckets",
      "condition": null
    },
    {
      "action": "lightsail:GetCertificates",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerServices",
      "condition": null
    },
    {
      "action": "lightsail:GetDisk",
      "condition": null
    },
    {
      "action": "lightsail:GetDisks",
      "condition": null
    },
    {
      "action": "lightsail:GetDistributions",
      "condition": null
    },
    {
      "action": "lightsail:GetInstance",
      "condition": null
    },
    {
      "action": "lightsail:GetInstances",
      "condition": null
    },
    {
      "action": "lightsail:GetKeyPair",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancer",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancers",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancerTlsCertificates",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabase",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseParameters",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabases",
      "condition": null
    },
    {
      "action": "lightsail:GetStaticIp",
      "condition": null
    },
    {
      "action": "lightsail:GetStaticIps",
      "condition": null
    },
    {
      "action": "logs:DescribeDestinations",
      "condition": null
    },
    {
      "action": "logs:DescribeLogGroups",
      "condition": null
    },
    {
      "action": "logs:DescribeMetricFilters",
      "condition": null
    },
    {
      "action": "logs:GetDataProtectionPolicy",
      "condition": null
    },
    {
      "action": "logs:GetLogDelivery",
      "condition": null
    },
    {
      "action": "logs:ListLogDeliveries",
      "condition": null
    },
    {
      "action": "logs:ListTagsLogGroup",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeInferenceScheduler",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListTagsForResource",
      "condition": null
    },
    {
      "action": "lookoutmetrics:DescribeAlert",
      "condition": null
    },
    {
      "action": "lookoutmetrics:DescribeAnomalyDetector",
      "condition": null
    },
    {
      "action": "lookoutmetrics:ListAlerts",
      "condition": null
    },
    {
      "action": "lookoutmetrics:ListAnomalyDetectors",
      "condition": null
    },
    {
      "action": "lookoutmetrics:ListMetricSets",
      "condition": null
    },
    {
      "action": "lookoutmetrics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "lookoutvision:DescribeProject",
      "condition": null
    },
    {
      "action": "lookoutvision:ListProjects",
      "condition": null
    },
    {
      "action": "m2:GetEnvironment",
      "condition": null
    },
    {
      "action": "m2:ListEnvironments",
      "condition": null
    },
    {
      "action": "m2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "macie2:DescribeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetAutomatedDiscoveryConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetClassificationExportConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetCustomDataIdentifier",
      "condition": null
    },
    {
      "action": "macie2:GetFindingsPublicationConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetMacieSession",
      "condition": null
    },
    {
      "action": "macie2:ListCustomDataIdentifiers",
      "condition": null
    },
    {
      "action": "macie2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "managedblockchain:GetMember",
      "condition": null
    },
    {
      "action": "managedblockchain:GetNetwork",
      "condition": null
    },
    {
      "action": "managedblockchain:GetNode",
      "condition": null
    },
    {
      "action": "managedblockchain:ListInvitations",
      "condition": null
    },
    {
      "action": "managedblockchain:ListMembers",
      "condition": null
    },
    {
      "action": "managedblockchain:ListNodes",
      "condition": null
    },
    {
      "action": "mediaconnect:DescribeFlow",
      "condition": null
    },
    {
      "action": "mediaconnect:ListFlows",
      "condition": null
    },
    {
      "action": "mediaconnect:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mediapackage-vod:DescribePackagingConfiguration",
      "condition": null
    },
    {
      "action": "mediapackage-vod:DescribePackagingGroup",
      "condition": null
    },
    {
      "action": "mediapackage-vod:ListPackagingConfigurations",
      "condition": null
    },
    {
      "action": "mediapackage-vod:ListPackagingGroups",
      "condition": null
    },
    {
      "action": "mediapackage-vod:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mediatailor:GetPlaybackConfiguration",
      "condition": null
    },
    {
      "action": "mediatailor:ListPlaybackConfigurations",
      "condition": null
    },
    {
      "action": "memorydb:DescribeAcls",
      "condition": null
    },
    {
      "action": "memorydb:DescribeClusters",
      "condition": null
    },
    {
      "action": "memorydb:DescribeParameterGroups",
      "condition": null
    },
    {
      "action": "memorydb:DescribeParameters",
      "condition": null
    },
    {
      "action": "memorydb:DescribeSubnetGroups",
      "condition": null
    },
    {
      "action": "memorydb:DescribeUsers",
      "condition": null
    },
    {
      "action": "memorydb:ListTags",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetApp",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetApplicationSettings",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetApps",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetCampaign",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetCampaigns",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetEmailChannel",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetEmailTemplate",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetEventStream",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetInAppTemplate",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetSegment",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetSegments",
      "condition": null
    },
    {
      "action": "mobiletargeting:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mobiletargeting:ListTemplates",
      "condition": null
    },
    {
      "action": "mq:DescribeBroker",
      "condition": null
    },
    {
      "action": "mq:ListBrokers",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeLoggingConfiguration",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewalls",
      "condition": null
    },
    {
      "action": "networkmanager:DescribeGlobalNetworks",
      "condition": null
    },
    {
      "action": "networkmanager:GetConnectPeer",
      "condition": null
    },
    {
      "action": "networkmanager:GetCustomerGatewayAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:GetDevices",
      "condition": null
    },
    {
      "action": "networkmanager:GetLinkAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:GetLinks",
      "condition": null
    },
    {
      "action": "networkmanager:GetSites",
      "condition": null
    },
    {
      "action": "networkmanager:GetTransitGatewayRegistrations",
      "condition": null
    },
    {
      "action": "networkmanager:ListConnectPeers",
      "condition": null
    },
    {
      "action": "networkmanager:ListTagsForResource",
      "condition": null
    },
    {
      "action": "nimble:GetLaunchProfile",
      "condition": null
    },
    {
      "action": "nimble:GetLaunchProfileDetails",
      "condition": null
    },
    {
      "action": "nimble:GetStreamingImage",
      "condition": null
    },
    {
      "action": "nimble:GetStudio",
      "condition": null
    },
    {
      "action": "nimble:GetStudioComponent",
      "condition": null
    },
    {
      "action": "nimble:ListLaunchProfiles",
      "condition": null
    },
    {
      "action": "nimble:ListStreamingImages",
      "condition": null
    },
    {
      "action": "nimble:ListStudioComponents",
      "condition": null
    },
    {
      "action": "nimble:ListStudios",
      "condition": null
    },
    {
      "action": "opsworks:DescribeInstances",
      "condition": null
    },
    {
      "action": "opsworks:DescribeLayers",
      "condition": null
    },
    {
      "action": "opsworks:DescribeTimeBasedAutoScaling",
      "condition": null
    },
    {
      "action": "opsworks:DescribeVolumes",
      "condition": null
    },
    {
      "action": "opsworks:ListTags",
      "condition": null
    },
    {
      "action": "organizations:DescribeAccount",
      "condition": null
    },
    {
      "action": "organizations:DescribeEffectivePolicy",
      "condition": null
    },
    {
      "action": "organizations:DescribeOrganization",
      "condition": null
    },
    {
      "action": "organizations:DescribeOrganizationalUnit",
      "condition": null
    },
    {
      "action": "organizations:DescribePolicy",
      "condition": null
    },
    {
      "action": "organizations:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "organizations:ListAccounts",
      "condition": null
    },
    {
      "action": "organizations:ListAccountsForParent",
      "condition": null
    },
    {
      "action": "organizations:ListDelegatedAdministrators",
      "condition": null
    },
    {
      "action": "organizations:ListOrganizationalUnitsForParent",
      "condition": null
    },
    {
      "action": "organizations:ListParents",
      "condition": null
    },
    {
      "action": "organizations:ListPolicies",
      "condition": null
    },
    {
      "action": "organizations:ListPoliciesForTarget",
      "condition": null
    },
    {
      "action": "organizations:ListRoots",
      "condition": null
    },
    {
      "action": "organizations:ListTagsForResource",
      "condition": null
    },
    {
      "action": "organizations:ListTargetsForPolicy",
      "condition": null
    },
    {
      "action": "panorama:DescribeApplicationInstance",
      "condition": null
    },
    {
      "action": "panorama:DescribeApplicationInstanceDetails",
      "condition": null
    },
    {
      "action": "panorama:DescribePackage",
      "condition": null
    },
    {
      "action": "panorama:DescribePackageVersion",
      "condition": null
    },
    {
      "action": "panorama:ListApplicationInstances",
      "condition": null
    },
    {
      "action": "panorama:ListNodes",
      "condition": null
    },
    {
      "action": "panorama:ListPackages",
      "condition": null
    },
    {
      "action": "personalize:DescribeDataset",
      "condition": null
    },
    {
      "action": "personalize:DescribeDatasetGroup",
      "condition": null
    },
    {
      "action": "personalize:DescribeSchema",
      "condition": null
    },
    {
      "action": "personalize:DescribeSolution",
      "condition": null
    },
    {
      "action": "personalize:ListDatasetGroups",
      "condition": null
    },
    {
      "action": "personalize:ListDatasetImportJobs",
      "condition": null
    },
    {
      "action": "personalize:ListDatasets",
      "condition": null
    },
    {
      "action": "personalize:ListSchemas",
      "condition": null
    },
    {
      "action": "personalize:ListSolutions",
      "condition": null
    },
    {
      "action": "personalize:ListTagsForResource",
      "condition": null
    },
    {
      "action": "profile:GetDomain",
      "condition": null
    },
    {
      "action": "profile:GetIntegration",
      "condition": null
    },
    {
      "action": "profile:GetProfileObjectType",
      "condition": null
    },
    {
      "action": "profile:ListDomains",
      "condition": null
    },
    {
      "action": "profile:ListIntegrations",
      "condition": null
    },
    {
      "action": "profile:ListProfileObjectTypes",
      "condition": null
    },
    {
      "action": "profile:ListTagsForResource",
      "condition": null
    },
    {
      "action": "quicksight:DescribeAccountSubscription",
      "condition": null
    },
    {
      "action": "quicksight:DescribeAnalysis",
      "condition": null
    },
    {
      "action": "quicksight:DescribeAnalysisPermissions",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDashboard",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDashboardPermissions",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDataSet",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDataSetPermissions",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDataSetRefreshProperties",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDataSource",
      "condition": null
    },
    {
      "action": "quicksight:DescribeDataSourcePermissions",
      "condition": null
    },
    {
      "action": "quicksight:DescribeTemplate",
      "condition": null
    },
    {
      "action": "quicksight:DescribeTemplatePermissions",
      "condition": null
    },
    {
      "action": "quicksight:DescribeTheme",
      "condition": null
    },
    {
      "action": "quicksight:DescribeThemePermissions",
      "condition": null
    },
    {
      "action": "quicksight:ListAnalyses",
      "condition": null
    },
    {
      "action": "quicksight:ListDashboards",
      "condition": null
    },
    {
      "action": "quicksight:ListDataSets",
      "condition": null
    },
    {
      "action": "quicksight:ListDataSources",
      "condition": null
    },
    {
      "action": "quicksight:ListTagsForResource",
      "condition": null
    },
    {
      "action": "quicksight:ListTemplates",
      "condition": null
    },
    {
      "action": "quicksight:ListThemes",
      "condition": null
    },
    {
      "action": "ram:GetPermission",
      "condition": null
    },
    {
      "action": "ram:GetResourceShareAssociations",
      "condition": null
    },
    {
      "action": "ram:GetResourceShares",
      "condition": null
    },
    {
      "action": "ram:ListPermissionAssociations",
      "condition": null
    },
    {
      "action": "ram:ListPermissions",
      "condition": null
    },
    {
      "action": "ram:ListPermissionVersions",
      "condition": null
    },
    {
      "action": "ram:ListResources",
      "condition": null
    },
    {
      "action": "ram:ListResourceSharePermissions",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusterParameterGroups",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusterParameters",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusters",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusterSnapshotAttributes",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusterSnapshots",
      "condition": null
    },
    {
      "action": "rds:DescribeDBEngineVersions",
      "condition": null
    },
    {
      "action": "rds:DescribeDBInstances",
      "condition": null
    },
    {
      "action": "rds:DescribeDBParameterGroups",
      "condition": null
    },
    {
      "action": "rds:DescribeDBParameters",
      "condition": null
    },
    {
      "action": "rds:DescribeDBProxies",
      "condition": null
    },
    {
      "action": "rds:DescribeDBProxyEndpoints",
      "condition": null
    },
    {
      "action": "rds:DescribeDBSecurityGroups",
      "condition": null
    },
    {
      "action": "rds:DescribeDBSnapshotAttributes",
      "condition": null
    },
    {
      "action": "rds:DescribeDBSnapshots",
      "condition": null
    },
    {
      "action": "rds:DescribeDBSubnetGroups",
      "condition": null
    },
    {
      "action": "rds:DescribeEngineDefaultClusterParameters",
      "condition": null
    },
    {
      "action": "rds:DescribeEventSubscriptions",
      "condition": null
    },
    {
      "action": "rds:DescribeGlobalClusters",
      "condition": null
    },
    {
      "action": "rds:DescribeOptionGroups",
      "condition": null
    },
    {
      "action": "rds:ListTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetNamespace",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetWorkgroup",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListNamespaces",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListWorkgroups",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusterParameterGroups",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusterParameters",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusters",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusterSecurityGroups",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusterSnapshots",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusterSubnetGroups",
      "condition": null
    },
    {
      "action": "redshift:DescribeEndpointAccess",
      "condition": null
    },
    {
      "action": "redshift:DescribeEndpointAuthorization",
      "condition": null
    },
    {
      "action": "redshift:DescribeEventSubscriptions",
      "condition": null
    },
    {
      "action": "redshift:DescribeLoggingStatus",
      "condition": null
    },
    {
      "action": "redshift:DescribeScheduledActions",
      "condition": null
    },
    {
      "action": "redshift:DescribeTags",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetEnvironment",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetService",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListApplications",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListEnvironments",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListServices",
      "condition": null
    },
    {
      "action": "rekognition:DescribeStreamProcessor",
      "condition": null
    },
    {
      "action": "rekognition:ListStreamProcessors",
      "condition": null
    },
    {
      "action": "rekognition:ListTagsForResource",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeApp",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppVersionTemplate",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeResiliencyPolicy",
      "condition": null
    },
    {
      "action": "resiliencehub:ListApps",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppVersionResourceMappings",
      "condition": null
    },
    {
      "action": "resiliencehub:ListResiliencyPolicies",
      "condition": null
    },
    {
      "action": "resiliencehub:ListTagsForResource",
      "condition": null
    },
    {
      "action": "resource-explorer-2:GetIndex",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListIndexes",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "resource-groups:GetGroup",
      "condition": null
    },
    {
      "action": "resource-groups:GetGroupConfiguration",
      "condition": null
    },
    {
      "action": "resource-groups:GetGroupQuery",
      "condition": null
    },
    {
      "action": "resource-groups:GetTags",
      "condition": null
    },
    {
      "action": "resource-groups:ListGroupResources",
      "condition": null
    },
    {
      "action": "resource-groups:ListGroups",
      "condition": null
    },
    {
      "action": "robomaker:DescribeRobotApplication",
      "condition": null
    },
    {
      "action": "robomaker:DescribeSimulationApplication",
      "condition": null
    },
    {
      "action": "robomaker:ListRobotApplications",
      "condition": null
    },
    {
      "action": "robomaker:ListSimulationApplications",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:DescribeCluster",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:DescribeControlPanel",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:DescribeRoutingControl",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:DescribeSafetyRule",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:ListClusters",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:ListControlPanels",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:ListRoutingControls",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:ListSafetyRules",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:ListTagsForResource",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:GetCell",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:GetReadinessCheck",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:GetRecoveryGroup",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:GetResourceSet",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:ListCells",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:ListReadinessChecks",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:ListRecoveryGroups",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:ListResourceSets",
      "condition": null
    },
    {
      "action": "route53:GetChange",
      "condition": null
    },
    {
      "action": "route53:GetDNSSEC",
      "condition": null
    },
    {
      "action": "route53:GetHealthCheck",
      "condition": null
    },
    {
      "action": "route53:GetHostedZone",
      "condition": null
    },
    {
      "action": "route53:ListCidrBlocks",
      "condition": null
    },
    {
      "action": "route53:ListCidrCollections",
      "condition": null
    },
    {
      "action": "route53:ListCidrLocations",
      "condition": null
    },
    {
      "action": "route53:ListHealthChecks",
      "condition": null
    },
    {
      "action": "route53:ListHostedZones",
      "condition": null
    },
    {
      "action": "route53:ListHostedZonesByName",
      "condition": null
    },
    {
      "action": "route53:ListQueryLoggingConfigs",
      "condition": null
    },
    {
      "action": "route53:ListResourceRecordSets",
      "condition": null
    },
    {
      "action": "route53:ListTagsForResource",
      "condition": null
    },
    {
      "action": "route53resolver:GetFirewallDomainList",
      "condition": null
    },
    {
      "action": "route53resolver:GetFirewallRuleGroup",
      "condition": null
    },
    {
      "action": "route53resolver:GetFirewallRuleGroupAssociation",
      "condition": null
    },
    {
      "action": "route53resolver:GetResolverDnssecConfig",
      "condition": null
    },
    {
      "action": "route53resolver:GetResolverEndpoint",
      "condition": null
    },
    {
      "action": "route53resolver:GetResolverQueryLogConfig",
      "condition": null
    },
    {
      "action": "route53resolver:GetResolverQueryLogConfigAssociation",
      "condition": null
    },
    {
      "action": "route53resolver:GetResolverRule",
      "condition": null
    },
    {
      "action": "route53resolver:GetResolverRuleAssociation",
      "condition": null
    },
    {
      "action": "route53resolver:ListFirewallDomainLists",
      "condition": null
    },
    {
      "action": "route53resolver:ListFirewallDomains",
      "condition": null
    },
    {
      "action": "route53resolver:ListFirewallRuleGroupAssociations",
      "condition": null
    },
    {
      "action": "route53resolver:ListFirewallRuleGroups",
      "condition": null
    },
    {
      "action": "route53resolver:ListFirewallRules",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverDnssecConfigs",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverEndpointIpAddresses",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverEndpoints",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverQueryLogConfigAssociations",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverQueryLogConfigs",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverRuleAssociations",
      "condition": null
    },
    {
      "action": "route53resolver:ListResolverRules",
      "condition": null
    },
    {
      "action": "route53resolver:ListTagsForResource",
      "condition": null
    },
    {
      "action": "rum:GetAppMonitor",
      "condition": null
    },
    {
      "action": "rum:GetAppMonitorData",
      "condition": null
    },
    {
      "action": "rum:ListAppMonitors",
      "condition": null
    },
    {
      "action": "rum:ListTagsForResource",
      "condition": null
    },
    {
      "action": "s3-outposts:GetAccessPoint",
      "condition": null
    },
    {
      "action": "s3-outposts:GetAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3-outposts:GetBucket",
      "condition": null
    },
    {
      "action": "s3-outposts:GetBucketPolicy",
      "condition": null
    },
    {
      "action": "s3-outposts:GetBucketTagging",
      "condition": null
    },
    {
      "action": "s3-outposts:GetLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "s3-outposts:ListAccessPoints",
      "condition": null
    },
    {
      "action": "s3-outposts:ListEndpoints",
      "condition": null
    },
    {
      "action": "s3-outposts:ListRegionalBuckets",
      "condition": null
    },
    {
      "action": "s3:GetAccelerateConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetAccessPoint",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointPolicyForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointPolicyStatusForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:GetAccountPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:GetBucketAcl",
      "condition": null
    },
    {
      "action": "s3:GetBucketCORS",
      "condition": null
    },
    {
      "action": "s3:GetBucketLocation",
      "condition": null
    },
    {
      "action": "s3:GetBucketLogging",
      "condition": null
    },
    {
      "action": "s3:GetBucketNotification",
      "condition": null
    },
    {
      "action": "s3:GetBucketObjectLockConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetBucketPolicy",
      "condition": null
    },
    {
      "action": "s3:GetBucketPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:GetBucketPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:GetBucketRequestPayment",
      "condition": null
    },
    {
      "action": "s3:GetBucketTagging",
      "condition": null
    },
    {
      "action": "s3:GetBucketVersioning",
      "condition": null
    },
    {
      "action": "s3:GetBucketWebsite",
      "condition": null
    },
    {
      "action": "s3:GetEncryptionConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetMultiRegionAccessPoint",
      "condition": null
    },
    {
      "action": "s3:GetMultiRegionAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3:GetMultiRegionAccessPointPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:GetReplicationConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetStorageLensConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetStorageLensConfigurationTagging",
      "condition": null
    },
    {
      "action": "s3:ListAccessPoints",
      "condition": null
    },
    {
      "action": "s3:ListAccessPointsForObjectLambda",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "s3:ListBucket",
      "condition": null
    },
    {
      "action": "s3:ListMultiRegionAccessPoints",
      "condition": null
    },
    {
      "action": "s3:ListStorageLensConfigurations",
      "condition": null
    },
    {
      "action": "s3express:GetBucketPolicy",
      "condition": null
    },
    {
      "action": "s3express:ListAllMyDirectoryBuckets",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeAppImageConfig",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeCodeRepository",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeDataQualityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeDeviceFleet",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeDomain",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeEndpoint",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeEndpointConfig",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeFeatureGroup",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeImage",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeImageVersion",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeInferenceExperiment",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModel",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModelBiasJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModelExplainabilityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModelQualityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeMonitoringSchedule",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeNotebookInstance",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeNotebookInstanceLifecycleConfig",
      "condition": null
    },
    {
      "action": "sagemaker:DescribePipeline",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeProject",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeWorkteam",
      "condition": null
    },
    {
      "action": "sagemaker:ListAppImageConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:ListCodeRepositories",
      "condition": null
    },
    {
      "action": "sagemaker:ListDataQualityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListDeviceFleets",
      "condition": null
    },
    {
      "action": "sagemaker:ListDomains",
      "condition": null
    },
    {
      "action": "sagemaker:ListEndpointConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:ListEndpoints",
      "condition": null
    },
    {
      "action": "sagemaker:ListFeatureGroups",
      "condition": null
    },
    {
      "action": "sagemaker:ListImages",
      "condition": null
    },
    {
      "action": "sagemaker:ListImageVersions",
      "condition": null
    },
    {
      "action": "sagemaker:ListInferenceExperiments",
      "condition": null
    },
    {
      "action": "sagemaker:ListModelBiasJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListModelExplainabilityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListModelQualityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListModels",
      "condition": null
    },
    {
      "action": "sagemaker:ListMonitoringSchedules",
      "condition": null
    },
    {
      "action": "sagemaker:ListNotebookInstanceLifecycleConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:ListNotebookInstances",
      "condition": null
    },
    {
      "action": "sagemaker:ListPipelines",
      "condition": null
    },
    {
      "action": "sagemaker:ListProjects",
      "condition": null
    },
    {
      "action": "sagemaker:ListTags",
      "condition": null
    },
    {
      "action": "sagemaker:ListWorkteams",
      "condition": null
    },
    {
      "action": "schemas:DescribeDiscoverer",
      "condition": null
    },
    {
      "action": "schemas:DescribeRegistry",
      "condition": null
    },
    {
      "action": "schemas:DescribeSchema",
      "condition": null
    },
    {
      "action": "schemas:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "schemas:ListDiscoverers",
      "condition": null
    },
    {
      "action": "schemas:ListRegistries",
      "condition": null
    },
    {
      "action": "schemas:ListSchemas",
      "condition": null
    },
    {
      "action": "sdb:GetAttributes",
      "condition": null
    },
    {
      "action": "sdb:ListDomains",
      "condition": null
    },
    {
      "action": "secretsmanager:ListSecrets",
      "condition": null
    },
    {
      "action": "secretsmanager:ListSecretVersionIds",
      "condition": null
    },
    {
      "action": "securityhub:DescribeHub",
      "condition": null
    },
    {
      "action": "serviceCatalog:DescribePortfolioShares",
      "condition": null
    },
    {
      "action": "servicediscovery:GetInstance",
      "condition": null
    },
    {
      "action": "servicediscovery:GetNamespace",
      "condition": null
    },
    {
      "action": "servicediscovery:GetService",
      "condition": null
    },
    {
      "action": "servicediscovery:ListInstances",
      "condition": null
    },
    {
      "action": "servicediscovery:ListNamespaces",
      "condition": null
    },
    {
      "action": "servicediscovery:ListServices",
      "condition": null
    },
    {
      "action": "servicediscovery:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ses:DescribeReceiptRule",
      "condition": null
    },
    {
      "action": "ses:DescribeReceiptRuleSet",
      "condition": null
    },
    {
      "action": "ses:GetConfigurationSet",
      "condition": null
    },
    {
      "action": "ses:GetConfigurationSetEventDestinations",
      "condition": null
    },
    {
      "action": "ses:GetContactList",
      "condition": null
    },
    {
      "action": "ses:GetEmailTemplate",
      "condition": null
    },
    {
      "action": "ses:GetTemplate",
      "condition": null
    },
    {
      "action": "ses:ListConfigurationSets",
      "condition": null
    },
    {
      "action": "ses:ListContactLists",
      "condition": null
    },
    {
      "action": "ses:ListEmailTemplates",
      "condition": null
    },
    {
      "action": "ses:ListReceiptFilters",
      "condition": null
    },
    {
      "action": "ses:ListReceiptRuleSets",
      "condition": null
    },
    {
      "action": "ses:ListTemplates",
      "condition": null
    },
    {
      "action": "shield:DescribeDRTAccess",
      "condition": null
    },
    {
      "action": "shield:DescribeProtection",
      "condition": null
    },
    {
      "action": "shield:DescribeSubscription",
      "condition": null
    },
    {
      "action": "signer:GetSigningProfile",
      "condition": null
    },
    {
      "action": "signer:ListProfilePermissions",
      "condition": null
    },
    {
      "action": "signer:ListSigningProfiles",
      "condition": null
    },
    {
      "action": "sns:GetDataProtectionPolicy",
      "condition": null
    },
    {
      "action": "sns:GetSMSSandboxAccountStatus",
      "condition": null
    },
    {
      "action": "sns:GetSubscriptionAttributes",
      "condition": null
    },
    {
      "action": "sns:GetTopicAttributes",
      "condition": null
    },
    {
      "action": "sns:ListSubscriptions",
      "condition": null
    },
    {
      "action": "sns:ListSubscriptionsByTopic",
      "condition": null
    },
    {
      "action": "sns:ListTagsForResource",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "sqs:GetQueueAttributes",
      "condition": null
    },
    {
      "action": "sqs:ListQueues",
      "condition": null
    },
    {
      "action": "sqs:ListQueueTags",
      "condition": null
    },
    {
      "action": "ssm:DescribeAutomationExecutions",
      "condition": null
    },
    {
      "action": "ssm:DescribeDocument",
      "condition": null
    },
    {
      "action": "ssm:DescribeDocumentPermission",
      "condition": null
    },
    {
      "action": "ssm:DescribeParameters",
      "condition": null
    },
    {
      "action": "ssm:GetAutomationExecution",
      "condition": null
    },
    {
      "action": "ssm:GetDocument",
      "condition": null
    },
    {
      "action": "ssm:ListDocuments",
      "condition": null
    },
    {
      "action": "ssm:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ssm-sap:ListTagsForResource",
      "condition": null
    },
    {
      "action": "sso:DescribeInstanceAccessControlAttributeConfiguration",
      "condition": null
    },
    {
      "action": "sso:DescribePermissionSet",
      "condition": null
    },
    {
      "action": "sso:GetInlinePolicyForPermissionSet",
      "condition": null
    },
    {
      "action": "sso:ListManagedPoliciesInPermissionSet",
      "condition": null
    },
    {
      "action": "sso:ListPermissionSets",
      "condition": null
    },
    {
      "action": "sso:ListTagsForResource",
      "condition": null
    },
    {
      "action": "states:DescribeActivity",
      "condition": null
    },
    {
      "action": "states:DescribeStateMachine",
      "condition": null
    },
    {
      "action": "states:ListActivities",
      "condition": null
    },
    {
      "action": "states:ListStateMachines",
      "condition": null
    },
    {
      "action": "states:ListTagsForResource",
      "condition": null
    },
    {
      "action": "storagegateway:ListGateways",
      "condition": null
    },
    {
      "action": "storagegateway:ListTagsForResource",
      "condition": null
    },
    {
      "action": "storagegateway:ListVolumes",
      "condition": null
    },
    {
      "action": "sts:GetCallerIdentity",
      "condition": null
    },
    {
      "action": "support:DescribeCases",
      "condition": null
    },
    {
      "action": "synthetics:DescribeCanaries",
      "condition": null
    },
    {
      "action": "synthetics:DescribeCanariesLastRun",
      "condition": null
    },
    {
      "action": "synthetics:DescribeRuntimeVersions",
      "condition": null
    },
    {
      "action": "synthetics:GetCanary",
      "condition": null
    },
    {
      "action": "synthetics:GetCanaryRuns",
      "condition": null
    },
    {
      "action": "synthetics:GetGroup",
      "condition": null
    },
    {
      "action": "synthetics:ListAssociatedGroups",
      "condition": null
    },
    {
      "action": "synthetics:ListGroupResources",
      "condition": null
    },
    {
      "action": "synthetics:ListGroups",
      "condition": null
    },
    {
      "action": "synthetics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "tag:GetResources",
      "condition": null
    },
    {
      "action": "timestream:DescribeDatabase",
      "condition": null
    },
    {
      "action": "timestream:DescribeEndpoints",
      "condition": null
    },
    {
      "action": "timestream:DescribeTable",
      "condition": null
    },
    {
      "action": "timestream:ListDatabases",
      "condition": null
    },
    {
      "action": "timestream:ListTables",
      "condition": null
    },
    {
      "action": "timestream:ListTagsForResource",
      "condition": null
    },
    {
      "action": "transfer:DescribeAgreement",
      "condition": null
    },
    {
      "action": "transfer:DescribeCertificate",
      "condition": null
    },
    {
      "action": "transfer:DescribeConnector",
      "condition": null
    },
    {
      "action": "transfer:DescribeProfile",
      "condition": null
    },
    {
      "action": "transfer:DescribeServer",
      "condition": null
    },
    {
      "action": "transfer:DescribeUser",
      "condition": null
    },
    {
      "action": "transfer:DescribeWorkflow",
      "condition": null
    },
    {
      "action": "transfer:ListAgreements",
      "condition": null
    },
    {
      "action": "transfer:ListCertificates",
      "condition": null
    },
    {
      "action": "transfer:ListConnectors",
      "condition": null
    },
    {
      "action": "transfer:ListProfiles",
      "condition": null
    },
    {
      "action": "transfer:ListServers",
      "condition": null
    },
    {
      "action": "transfer:ListTagsForResource",
      "condition": null
    },
    {
      "action": "transfer:ListUsers",
      "condition": null
    },
    {
      "action": "transfer:ListWorkflows",
      "condition": null
    },
    {
      "action": "voiceid:DescribeDomain",
      "condition": null
    },
    {
      "action": "voiceid:ListTagsForResource",
      "condition": null
    },
    {
      "action": "waf-regional:GetLoggingConfiguration",
      "condition": null
    },
    {
      "action": "waf-regional:GetWebACL",
      "condition": null
    },
    {
      "action": "waf-regional:GetWebACLForResource",
      "condition": null
    },
    {
      "action": "waf-regional:ListLoggingConfigurations",
      "condition": null
    },
    {
      "action": "waf:GetLoggingConfiguration",
      "condition": null
    },
    {
      "action": "waf:GetWebACL",
      "condition": null
    },
    {
      "action": "wafv2:GetLoggingConfiguration",
      "condition": null
    },
    {
      "action": "wafv2:GetRuleGroup",
      "condition": null
    },
    {
      "action": "wafv2:ListRuleGroups",
      "condition": null
    },
    {
      "action": "wafv2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "workspaces:DescribeConnectionAliases",
      "condition": null
    },
    {
      "action": "workspaces:DescribeTags",
      "condition": null
    },
    {
      "action": "workspaces:DescribeWorkspaces",
      "condition": null
    },
    {
      "action": "logs:CreateLogStream",
      "condition": null
    },
    {
      "action": "logs:CreateLogGroup",
      "condition": null
    },
    {
      "action": "logs:PutLogEvents",
      "condition": null
    },
    {
      "action": "apigateway:GET",
      "condition": null
    }
  ],
  "updatedate": "2024-06-17T18:56:45+00:00",
  "version": "v51"
}