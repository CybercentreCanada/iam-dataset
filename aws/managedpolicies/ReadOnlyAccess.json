{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/ReadOnlyAccess",
  "createdate": "2024-06-21T20:04:53+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "a4b:Get*",
          "a4b:List*",
          "a4b:Search*",
          "access-analyzer:GetAccessPreview",
          "access-analyzer:GetAnalyzedResource",
          "access-analyzer:GetAnalyzer",
          "access-analyzer:GetArchiveRule",
          "access-analyzer:GetFinding",
          "access-analyzer:GetGeneratedPolicy",
          "access-analyzer:ListAccessPreviewFindings",
          "access-analyzer:ListAccessPreviews",
          "access-analyzer:ListAnalyzedResources",
          "access-analyzer:ListAnalyzers",
          "access-analyzer:ListArchiveRules",
          "access-analyzer:ListFindings",
          "access-analyzer:ListPolicyGenerations",
          "access-analyzer:ListTagsForResource",
          "access-analyzer:ValidatePolicy",
          "account:GetAccountInformation",
          "account:GetAlternateContact",
          "account:GetChallengeQuestions",
          "account:GetContactInformation",
          "account:GetRegionOptStatus",
          "account:ListRegions",
          "acm-pca:Describe*",
          "acm-pca:Get*",
          "acm-pca:List*",
          "acm:Describe*",
          "acm:Get*",
          "acm:List*",
          "airflow:ListEnvironments",
          "airflow:ListTagsForResource",
          "amplify:GetApp",
          "amplify:GetBranch",
          "amplify:GetDomainAssociation",
          "amplify:GetJob",
          "amplify:ListApps",
          "amplify:ListBranches",
          "amplify:ListDomainAssociations",
          "amplify:ListJobs",
          "aoss:BatchGetCollection",
          "aoss:BatchGetLifecyclePolicy",
          "aoss:BatchGetVpcEndpoint",
          "aoss:GetAccessPolicy",
          "aoss:GetAccountSettings",
          "aoss:GetPoliciesStats",
          "aoss:GetSecurityConfig",
          "aoss:GetSecurityPolicy",
          "aoss:ListAccessPolicies",
          "aoss:ListCollections",
          "aoss:ListLifecyclePolicies",
          "aoss:ListSecurityConfigs",
          "aoss:ListSecurityPolicies",
          "aoss:ListTagsForResource",
          "aoss:ListVpcEndpoints",
          "apigateway:GET",
          "appconfig:GetApplication",
          "appconfig:GetConfiguration",
          "appconfig:GetConfigurationProfile",
          "appconfig:GetDeployment",
          "appconfig:GetDeploymentStrategy",
          "appconfig:GetEnvironment",
          "appconfig:GetHostedConfigurationVersion",
          "appconfig:ListApplications",
          "appconfig:ListConfigurationProfiles",
          "appconfig:ListDeployments",
          "appconfig:ListDeploymentStrategies",
          "appconfig:ListEnvironments",
          "appconfig:ListHostedConfigurationVersions",
          "appconfig:ListTagsForResource",
          "appfabric:GetAppAuthorization",
          "appfabric:GetAppBundle",
          "appfabric:GetIngestion",
          "appfabric:GetIngestionDestination",
          "appfabric:ListAppAuthorizations",
          "appfabric:ListAppBundles",
          "appfabric:ListIngestionDestinations",
          "appfabric:ListIngestions",
          "appfabric:ListTagsForResource",
          "appflow:DescribeConnector",
          "appflow:DescribeConnectorEntity",
          "appflow:DescribeConnectorFields",
          "appflow:DescribeConnectorProfiles",
          "appflow:DescribeConnectors",
          "appflow:DescribeFlow",
          "appflow:DescribeFlowExecution",
          "appflow:DescribeFlowExecutionRecords",
          "appflow:DescribeFlows",
          "appflow:ListConnectorEntities",
          "appflow:ListConnectorFields",
          "appflow:ListConnectors",
          "appflow:ListFlows",
          "appflow:ListTagsForResource",
          "application-autoscaling:Describe*",
          "application-autoscaling:ListTagsForResource",
          "applicationinsights:Describe*",
          "applicationinsights:List*",
          "appmesh:Describe*",
          "appmesh:List*",
          "apprunner:DescribeAutoScalingConfiguration",
          "apprunner:DescribeCustomDomains",
          "apprunner:DescribeObservabilityConfiguration",
          "apprunner:DescribeService",
          "apprunner:DescribeVpcConnector",
          "apprunner:DescribeVpcIngressConnection",
          "apprunner:DescribeWebAclForService",
          "apprunner:ListAssociatedServicesForWebAcl",
          "apprunner:ListAutoScalingConfigurations",
          "apprunner:ListConnections",
          "apprunner:ListObservabilityConfigurations",
          "apprunner:ListOperations",
          "apprunner:ListServices",
          "apprunner:ListServicesForAutoScalingConfiguration",
          "apprunner:ListTagsForResource",
          "apprunner:ListVpcConnectors",
          "apprunner:ListVpcIngressConnections",
          "appstream:Describe*",
          "appstream:List*",
          "appsync:Get*",
          "appsync:List*",
          "aps:DescribeAlertManagerDefinition",
          "aps:DescribeLoggingConfiguration",
          "aps:DescribeRuleGroupsNamespace",
          "aps:DescribeScraper",
          "aps:DescribeWorkspace",
          "aps:GetAlertManagerSilence",
          "aps:GetAlertManagerStatus",
          "aps:GetDefaultScraperConfiguration",
          "aps:GetLabels",
          "aps:GetMetricMetadata",
          "aps:GetSeries",
          "aps:ListAlertManagerAlertGroups",
          "aps:ListAlertManagerAlerts",
          "aps:ListAlertManagerReceivers",
          "aps:ListAlertManagerSilences",
          "aps:ListAlerts",
          "aps:ListRuleGroupsNamespaces",
          "aps:ListRules",
          "aps:ListScrapers",
          "aps:ListTagsForResource",
          "aps:ListWorkspaces",
          "aps:QueryMetrics",
          "arc-zonal-shift:GetManagedResource",
          "arc-zonal-shift:ListAutoshifts",
          "arc-zonal-shift:ListManagedResources",
          "arc-zonal-shift:ListZonalShifts",
          "artifact:GetReport",
          "artifact:GetReportMetadata",
          "artifact:GetTermForReport",
          "artifact:ListReports",
          "athena:Batch*",
          "athena:Get*",
          "athena:List*",
          "auditmanager:GetAccountStatus",
          "auditmanager:GetAssessment",
          "auditmanager:GetAssessmentFramework",
          "auditmanager:GetAssessmentReportUrl",
          "auditmanager:GetChangeLogs",
          "auditmanager:GetControl",
          "auditmanager:GetDelegations",
          "auditmanager:GetEvidence",
          "auditmanager:GetEvidenceByEvidenceFolder",
          "auditmanager:GetEvidenceFolder",
          "auditmanager:GetEvidenceFoldersByAssessment",
          "auditmanager:GetEvidenceFoldersByAssessmentControl",
          "auditmanager:GetOrganizationAdminAccount",
          "auditmanager:GetServicesInScope",
          "auditmanager:GetSettings",
          "auditmanager:ListAssessmentFrameworks",
          "auditmanager:ListAssessmentReports",
          "auditmanager:ListAssessments",
          "auditmanager:ListControls",
          "auditmanager:ListKeywordsForDataSource",
          "auditmanager:ListNotifications",
          "auditmanager:ListTagsForResource",
          "auditmanager:ValidateAssessmentReportIntegrity",
          "autoscaling-plans:Describe*",
          "autoscaling-plans:GetScalingPlanResourceForecastData",
          "autoscaling:Describe*",
          "autoscaling:GetPredictiveScalingForecast",
          "aws-portal:View*",
          "backup-gateway:GetBandwidthRateLimitSchedule",
          "backup-gateway:GetGateway",
          "backup-gateway:GetHypervisor",
          "backup-gateway:GetHypervisorPropertyMappings",
          "backup-gateway:GetVirtualMachine",
          "backup-gateway:ListGateways",
          "backup-gateway:ListHypervisors",
          "backup-gateway:ListTagsForResource",
          "backup-gateway:ListVirtualMachines",
          "backup:Describe*",
          "backup:Get*",
          "backup:List*",
          "batch:Describe*",
          "batch:List*",
          "bedrock:GetAgent",
          "bedrock:GetAgentActionGroup",
          "bedrock:GetAgentAlias",
          "bedrock:GetAgentKnowledgeBase",
          "bedrock:GetAgentVersion",
          "bedrock:GetCustomModel",
          "bedrock:GetDataSource",
          "bedrock:GetFoundationModel",
          "bedrock:GetFoundationModelAvailability",
          "bedrock:GetIngestionJob",
          "bedrock:GetKnowledgeBase",
          "bedrock:GetModelCustomizationJob",
          "bedrock:GetModelInvocationLoggingConfiguration",
          "bedrock:GetProvisionedModelThroughput",
          "bedrock:GetUseCaseForModelAccess",
          "bedrock:ListAgentActionGroups",
          "bedrock:ListAgentAliases",
          "bedrock:ListAgentKnowledgeBases",
          "bedrock:ListAgents",
          "bedrock:ListAgentVersions",
          "bedrock:ListCustomModels",
          "bedrock:ListDataSources",
          "bedrock:ListFoundationModelAgreementOffers",
          "bedrock:ListFoundationModels",
          "bedrock:ListIngestionJobs",
          "bedrock:ListKnowledgeBases",
          "bedrock:ListModelCustomizationJobs",
          "bedrock:ListProvisionedModelThroughputs",
          "billing:GetBillingData",
          "billing:GetBillingDetails",
          "billing:GetBillingNotifications",
          "billing:GetBillingPreferences",
          "billing:GetContractInformation",
          "billing:GetCredits",
          "billing:GetIAMAccessPreference",
          "billing:GetSellerOfRecord",
          "billing:ListBillingViews",
          "billingconductor:GetBillingGroupCostReport",
          "billingconductor:ListAccountAssociations",
          "billingconductor:ListBillingGroupCostReports",
          "billingconductor:ListBillingGroups",
          "billingconductor:ListCustomLineItems",
          "billingconductor:ListCustomLineItemVersions",
          "billingconductor:ListPricingPlans",
          "billingconductor:ListPricingPlansAssociatedWithPricingRule",
          "billingconductor:ListPricingRules",
          "billingconductor:ListPricingRulesAssociatedToPricingPlan",
          "billingconductor:ListResourcesAssociatedToCustomLineItem",
          "billingconductor:ListTagsForResource",
          "braket:GetDevice",
          "braket:GetJob",
          "braket:GetQuantumTask",
          "braket:SearchDevices",
          "braket:SearchJobs",
          "braket:SearchQuantumTasks",
          "budgets:Describe*",
          "budgets:View*",
          "cassandra:Select",
          "ce:DescribeCostCategoryDefinition",
          "ce:DescribeNotificationSubscription",
          "ce:DescribeReport",
          "ce:GetAnomalies",
          "ce:GetAnomalyMonitors",
          "ce:GetAnomalySubscriptions",
          "ce:GetApproximateUsageRecords",
          "ce:GetCostAndUsage",
          "ce:GetCostAndUsageWithResources",
          "ce:GetCostCategories",
          "ce:GetCostForecast",
          "ce:GetDimensionValues",
          "ce:GetPreferences",
          "ce:GetReservationCoverage",
          "ce:GetReservationPurchaseRecommendation",
          "ce:GetReservationUtilization",
          "ce:GetRightsizingRecommendation",
          "ce:GetSavingsPlanPurchaseRecommendationDetails",
          "ce:GetSavingsPlansCoverage",
          "ce:GetSavingsPlansPurchaseRecommendation",
          "ce:GetSavingsPlansUtilization",
          "ce:GetSavingsPlansUtilizationDetails",
          "ce:GetTags",
          "ce:GetUsageForecast",
          "ce:ListCostAllocationTags",
          "ce:ListCostAllocationTagBackfillHistory",
          "ce:ListCostCategoryDefinitions",
          "ce:ListSavingsPlansPurchaseRecommendationGeneration",
          "ce:ListTagsForResource",
          "chatbot:Describe*",
          "chatbot:Get*",
          "chatbot:ListMicrosoftTeamsChannelConfigurations",
          "chatbot:ListMicrosoftTeamsConfiguredTeams",
          "chatbot:ListMicrosoftTeamsUserIdentities",
          "chime:Get*",
          "chime:List*",
          "chime:Retrieve*",
          "chime:Search*",
          "chime:Validate*",
          "cleanrooms:BatchGetCollaborationAnalysisTemplate",
          "cleanrooms:BatchGetSchema",
          "cleanrooms:GetAnalysisTemplate",
          "cleanrooms:GetCollaboration",
          "cleanrooms:GetCollaborationAnalysisTemplate",
          "cleanrooms:GetConfiguredAudienceModelAssociation",
          "cleanrooms:GetConfiguredTable",
          "cleanrooms:GetConfiguredTableAnalysisRule",
          "cleanrooms:GetConfiguredTableAssociation",
          "cleanrooms:GetMembership",
          "cleanrooms:GetProtectedQuery",
          "cleanrooms:GetSchema",
          "cleanrooms:GetSchemaAnalysisRule",
          "cleanrooms:ListAnalysisTemplates",
          "cleanrooms:ListCollaborationAnalysisTemplates",
          "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations",
          "cleanrooms:ListCollaborations",
          "cleanrooms:ListConfiguredTableAssociations",
          "cleanrooms:ListConfiguredTables",
          "cleanrooms:ListMembers",
          "cleanrooms:ListMemberships",
          "cleanrooms:ListProtectedQueries",
          "cleanrooms:ListSchemas",
          "cleanrooms:ListTagsForResource",
          "cleanrooms-ml:GetTrainingDataset",
          "cleanrooms-ml:GetAudienceGenerationJob",
          "cleanrooms-ml:GetAudienceModel",
          "cleanrooms-ml:GetConfiguredAudienceModel",
          "cleanrooms-ml:GetConfiguredAudienceModelPolicy",
          "cleanrooms-ml:ListAudienceExportJobs",
          "cleanrooms-ml:ListAudienceGenerationJobs",
          "cleanrooms-ml:ListAudienceModels",
          "cleanrooms-ml:ListConfiguredAudienceModels",
          "cleanrooms-ml:ListTrainingDatasets",
          "cleanrooms-ml:ListTagsForResource",
          "cloud9:Describe*",
          "cloud9:List*",
          "clouddirectory:BatchRead",
          "clouddirectory:Get*",
          "clouddirectory:List*",
          "clouddirectory:LookupPolicy",
          "cloudformation:Describe*",
          "cloudformation:Detect*",
          "cloudformation:Estimate*",
          "cloudformation:Get*",
          "cloudformation:List*",
          "cloudformation:ValidateTemplate",
          "cloudfront-keyvaluestore:Describe*",
          "cloudfront-keyvaluestore:Get*",
          "cloudfront-keyvaluestore:List*",
          "cloudfront:Describe*",
          "cloudfront:Get*",
          "cloudfront:List*",
          "cloudhsm:Describe*",
          "cloudhsm:List*",
          "cloudsearch:Describe*",
          "cloudsearch:List*",
          "cloudtrail:Describe*",
          "cloudtrail:Get*",
          "cloudtrail:List*",
          "cloudtrail:LookupEvents",
          "cloudwatch:Describe*",
          "cloudwatch:GenerateQuery",
          "cloudwatch:Get*",
          "cloudwatch:List*",
          "codeartifact:DescribeDomain",
          "codeartifact:DescribePackage",
          "codeartifact:DescribePackageVersion",
          "codeartifact:DescribeRepository",
          "codeartifact:GetAuthorizationToken",
          "codeartifact:GetDomainPermissionsPolicy",
          "codeartifact:GetPackageVersionAsset",
          "codeartifact:GetPackageVersionReadme",
          "codeartifact:GetRepositoryEndpoint",
          "codeartifact:GetRepositoryPermissionsPolicy",
          "codeartifact:ListDomains",
          "codeartifact:ListPackages",
          "codeartifact:ListPackageVersionAssets",
          "codeartifact:ListPackageVersionDependencies",
          "codeartifact:ListPackageVersions",
          "codeartifact:ListRepositories",
          "codeartifact:ListRepositoriesInDomain",
          "codeartifact:ListTagsForResource",
          "codeartifact:ReadFromRepository",
          "codebuild:BatchGet*",
          "codebuild:DescribeCodeCoverages",
          "codebuild:DescribeTestCases",
          "codebuild:List*",
          "codecatalyst:GetBillingAuthorization",
          "codecatalyst:GetConnection",
          "codecatalyst:GetPendingConnection",
          "codecatalyst:ListConnections",
          "codecatalyst:ListIamRolesForConnection",
          "codecatalyst:ListTagsForResource",
          "codecommit:BatchGet*",
          "codecommit:Describe*",
          "codecommit:Get*",
          "codecommit:GitPull",
          "codecommit:List*",
          "codedeploy:BatchGet*",
          "codedeploy:Get*",
          "codedeploy:List*",
          "codeguru-profiler:Describe*",
          "codeguru-profiler:Get*",
          "codeguru-profiler:List*",
          "codeguru-reviewer:Describe*",
          "codeguru-reviewer:Get*",
          "codeguru-reviewer:List*",
          "codepipeline:Get*",
          "codepipeline:List*",
          "codestar-connections:GetConnection",
          "codestar-connections:GetHost",
          "codestar-connections:GetRepositoryLink",
          "codestar-connections:GetRepositorySyncStatus",
          "codestar-connections:GetResourceSyncStatus",
          "codestar-connections:GetSyncConfiguration",
          "codestar-connections:ListConnections",
          "codestar-connections:ListHosts",
          "codestar-connections:ListRepositoryLinks",
          "codestar-connections:ListRepositorySyncDefinitions",
          "codestar-connections:ListSyncConfigurations",
          "codestar-connections:ListTagsForResource",
          "codestar-notifications:describeNotificationRule",
          "codestar-notifications:listEventTypes",
          "codestar-notifications:listNotificationRules",
          "codestar-notifications:listTagsForResource",
          "codestar-notifications:ListTargets",
          "codestar:Describe*",
          "codestar:Get*",
          "codestar:List*",
          "codestar:Verify*",
          "cognito-identity:Describe*",
          "cognito-identity:GetCredentialsForIdentity",
          "cognito-identity:GetIdentityPoolAnalytics",
          "cognito-identity:GetIdentityPoolDailyAnalytics",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:GetIdentityProviderDailyAnalytics",
          "cognito-identity:GetOpenIdToken",
          "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
          "cognito-identity:List*",
          "cognito-identity:Lookup*",
          "cognito-idp:AdminGet*",
          "cognito-idp:AdminList*",
          "cognito-idp:Describe*",
          "cognito-idp:Get*",
          "cognito-idp:List*",
          "cognito-sync:Describe*",
          "cognito-sync:Get*",
          "cognito-sync:List*",
          "cognito-sync:QueryRecords",
          "comprehend:BatchDetect*",
          "comprehend:Classify*",
          "comprehend:Contains*",
          "comprehend:Describe*",
          "comprehend:Detect*",
          "comprehend:List*",
          "compute-optimizer:DescribeRecommendationExportJobs",
          "compute-optimizer:GetAutoScalingGroupRecommendations",
          "compute-optimizer:GetEBSVolumeRecommendations",
          "compute-optimizer:GetEC2InstanceRecommendations",
          "compute-optimizer:GetEC2RecommendationProjectedMetrics",
          "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
          "compute-optimizer:GetECSServiceRecommendations",
          "compute-optimizer:GetEffectiveRecommendationPreferences",
          "compute-optimizer:GetEnrollmentStatus",
          "compute-optimizer:GetEnrollmentStatusesForOrganization",
          "compute-optimizer:GetLambdaFunctionRecommendations",
          "compute-optimizer:GetLicenseRecommendations",
          "compute-optimizer:GetRecommendationPreferences",
          "compute-optimizer:GetRecommendationSummaries",
          "config:BatchGetAggregateResourceConfig",
          "config:BatchGetResourceConfig",
          "config:Deliver*",
          "config:Describe*",
          "config:Get*",
          "config:List*",
          "config:SelectAggregateResourceConfig",
          "config:SelectResourceConfig",
          "connect:Describe*",
          "connect:GetContactAttributes",
          "connect:GetCurrentMetricData",
          "connect:GetCurrentUserData",
          "connect:GetFederationToken",
          "connect:GetMetricData",
          "connect:GetMetricDataV2",
          "connect:GetTaskTemplate",
          "connect:GetTrafficDistribution",
          "connect:List*",
          "consoleapp:GetDeviceIdentity",
          "consoleapp:ListDeviceIdentities",
          "consolidatedbilling:GetAccountBillingRole",
          "consolidatedbilling:ListLinkedAccounts",
          "cost-optimization-hub:GetPreferences",
          "cost-optimization-hub:GetRecommendation",
          "cost-optimization-hub:ListEnrollmentStatuses",
          "cost-optimization-hub:ListRecommendations",
          "cost-optimization-hub:ListRecommendationSummaries",
          "cur:GetClassicReport",
          "cur:GetClassicReportPreferences",
          "cur:GetUsageReport",
          "customer-verification:GetCustomerVerificationDetails",
          "customer-verification:GetCustomerVerificationEligibility",
          "databrew:DescribeDataset",
          "databrew:DescribeJob",
          "databrew:DescribeJobRun",
          "databrew:DescribeProject",
          "databrew:DescribeRecipe",
          "databrew:DescribeRuleset",
          "databrew:DescribeSchedule",
          "databrew:ListDatasets",
          "databrew:ListJobRuns",
          "databrew:ListJobs",
          "databrew:ListProjects",
          "databrew:ListRecipes",
          "databrew:ListRecipeVersions",
          "databrew:ListRulesets",
          "databrew:ListSchedules",
          "databrew:ListTagsForResource",
          "dataexchange:Get*",
          "dataexchange:List*",
          "datapipeline:Describe*",
          "datapipeline:EvaluateExpression",
          "datapipeline:Get*",
          "datapipeline:List*",
          "datapipeline:QueryObjects",
          "datapipeline:Validate*",
          "datasync:Describe*",
          "datasync:List*",
          "dax:BatchGetItem",
          "dax:Describe*",
          "dax:GetItem",
          "dax:ListTags",
          "dax:Query",
          "dax:Scan",
          "deadline:BatchGetJobEntity",
          "deadline:GetApplicationVersion",
          "deadline:GetBudget",
          "deadline:GetFarm",
          "deadline:GetFleet",
          "deadline:GetJob",
          "deadline:GetLicenseEndpoint",
          "deadline:GetMonitor",
          "deadline:GetQueue",
          "deadline:GetQueueEnvironment",
          "deadline:GetQueueFleetAssociation",
          "deadline:GetSession",
          "deadline:GetSessionAction",
          "deadline:GetSessionsStatisticsAggregation",
          "deadline:GetStep",
          "deadline:GetStorageProfile",
          "deadline:GetStorageProfileForQueue",
          "deadline:GetTask",
          "deadline:GetWorker",
          "deadline:ListAvailableMeteredProducts",
          "deadline:ListBudgets",
          "deadline:ListFarmMembers",
          "deadline:ListFarms",
          "deadline:ListFleetMembers",
          "deadline:ListFleets",
          "deadline:ListJobMembers",
          "deadline:ListJobs",
          "deadline:ListLicenseEndpoints",
          "deadline:ListMeteredProducts",
          "deadline:ListMonitors",
          "deadline:ListQueueEnvironments",
          "deadline:ListQueueFleetAssociations",
          "deadline:ListQueueMembers",
          "deadline:ListQueues",
          "deadline:ListSessionActions",
          "deadline:ListSessions",
          "deadline:ListSessionsForWorker",
          "deadline:ListStepConsumers",
          "deadline:ListStepDependencies",
          "deadline:ListSteps",
          "deadline:ListStorageProfiles",
          "deadline:ListStorageProfilesForQueue",
          "deadline:ListTagsForResource",
          "deadline:ListTasks",
          "deadline:ListWorkers",
          "deadline:SearchJobs",
          "deadline:SearchSteps",
          "deadline:SearchTasks",
          "deadline:SearchWorkers",
          "deepcomposer:GetComposition",
          "deepcomposer:GetModel",
          "deepcomposer:GetSampleModel",
          "deepcomposer:ListCompositions",
          "deepcomposer:ListModels",
          "deepcomposer:ListSampleModels",
          "deepcomposer:ListTrainingTopics",
          "detective:BatchGetGraphMemberDatasources",
          "detective:BatchGetMembershipDatasources",
          "detective:Get*",
          "detective:List*",
          "detective:SearchGraph",
          "devicefarm:Get*",
          "devicefarm:List*",
          "devops-guru:DescribeAccountHealth",
          "devops-guru:DescribeAccountOverview",
          "devops-guru:DescribeAnomaly",
          "devops-guru:DescribeEventSourcesConfig",
          "devops-guru:DescribeFeedback",
          "devops-guru:DescribeInsight",
          "devops-guru:DescribeOrganizationHealth",
          "devops-guru:DescribeOrganizationOverview",
          "devops-guru:DescribeOrganizationResourceCollectionHealth",
          "devops-guru:DescribeResourceCollectionHealth",
          "devops-guru:DescribeServiceIntegration",
          "devops-guru:GetCostEstimation",
          "devops-guru:GetResourceCollection",
          "devops-guru:ListAnomaliesForInsight",
          "devops-guru:ListAnomalousLogGroups",
          "devops-guru:ListEvents",
          "devops-guru:ListInsights",
          "devops-guru:ListMonitoredResources",
          "devops-guru:ListNotificationChannels",
          "devops-guru:ListOrganizationInsights",
          "devops-guru:ListRecommendations",
          "devops-guru:SearchInsights",
          "devops-guru:StartCostEstimation",
          "directconnect:Describe*",
          "discovery:Describe*",
          "discovery:Get*",
          "discovery:List*",
          "dlm:Get*",
          "dms:Describe*",
          "dms:List*",
          "dms:Test*",
          "drs:DescribeJobLogItems",
          "drs:DescribeJobs",
          "drs:DescribeLaunchConfigurationTemplates",
          "drs:DescribeRecoveryInstances",
          "drs:DescribeRecoverySnapshots",
          "drs:DescribeReplicationConfigurationTemplates",
          "drs:DescribeSourceNetworks",
          "drs:DescribeSourceServers",
          "drs:GetFailbackReplicationConfiguration",
          "drs:GetLaunchConfiguration",
          "drs:GetReplicationConfiguration",
          "drs:ListExtensibleSourceServers",
          "drs:ListLaunchActions",
          "drs:ListStagingAccounts",
          "drs:ListTagsForResource",
          "ds:Check*",
          "ds:Describe*",
          "ds:Get*",
          "ds:List*",
          "ds:Verify*",
          "dynamodb:BatchGet*",
          "dynamodb:Describe*",
          "dynamodb:Get*",
          "dynamodb:List*",
          "dynamodb:PartiQLSelect",
          "dynamodb:Query",
          "dynamodb:Scan",
          "ec2:Describe*",
          "ec2:Get*",
          "ec2:ListImagesInRecycleBin",
          "ec2:ListSnapshotsInRecycleBin",
          "ec2:SearchLocalGatewayRoutes",
          "ec2:SearchTransitGatewayRoutes",
          "ec2messages:Get*",
          "ecr-public:BatchCheckLayerAvailability",
          "ecr-public:DescribeImages",
          "ecr-public:DescribeImageTags",
          "ecr-public:DescribeRegistries",
          "ecr-public:DescribeRepositories",
          "ecr-public:GetAuthorizationToken",
          "ecr-public:GetRegistryCatalogData",
          "ecr-public:GetRepositoryCatalogData",
          "ecr-public:GetRepositoryPolicy",
          "ecr-public:ListTagsForResource",
          "ecr:BatchCheck*",
          "ecr:BatchGet*",
          "ecr:Describe*",
          "ecr:Get*",
          "ecr:List*",
          "ecs:Describe*",
          "ecs:List*",
          "eks:Describe*",
          "eks:List*",
          "elastic-inference:DescribeAcceleratorOfferings",
          "elastic-inference:DescribeAccelerators",
          "elastic-inference:DescribeAcceleratorTypes",
          "elastic-inference:ListTagsForResource",
          "elasticache:Describe*",
          "elasticache:List*",
          "elasticbeanstalk:Check*",
          "elasticbeanstalk:Describe*",
          "elasticbeanstalk:List*",
          "elasticbeanstalk:Request*",
          "elasticbeanstalk:Retrieve*",
          "elasticbeanstalk:Validate*",
          "elasticfilesystem:Describe*",
          "elasticfilesystem:ListTagsForResource",
          "elasticloadbalancing:Describe*",
          "elasticmapreduce:Describe*",
          "elasticmapreduce:GetBlockPublicAccessConfiguration",
          "elasticmapreduce:List*",
          "elasticmapreduce:View*",
          "elastictranscoder:List*",
          "elastictranscoder:Read*",
          "elemental-appliances-software:Get*",
          "elemental-appliances-software:List*",
          "emr-containers:DescribeJobRun",
          "emr-containers:DescribeManagedEndpoint",
          "emr-containers:DescribeVirtualCluster",
          "emr-containers:ListJobRuns",
          "emr-containers:ListManagedEndpoints",
          "emr-containers:ListTagsForResource",
          "emr-containers:ListVirtualClusters",
          "emr-serverless:GetApplication",
          "emr-serverless:GetDashboardForJobRun",
          "emr-serverless:GetJobRun",
          "emr-serverless:ListApplications",
          "emr-serverless:ListJobRuns",
          "emr-serverless:ListTagsForResource",
          "es:Describe*",
          "es:ESHttpGet",
          "es:ESHttpHead",
          "es:Get*",
          "es:List*",
          "events:Describe*",
          "events:List*",
          "events:Test*",
          "evidently:GetExperiment",
          "evidently:GetExperimentResults",
          "evidently:GetFeature",
          "evidently:GetLaunch",
          "evidently:GetProject",
          "evidently:GetSegment",
          "evidently:ListExperiments",
          "evidently:ListFeatures",
          "evidently:ListLaunches",
          "evidently:ListProjects",
          "evidently:ListSegmentReferences",
          "evidently:ListSegments",
          "evidently:ListTagsForResource",
          "evidently:TestSegmentPattern",
          "firehose:Describe*",
          "firehose:List*",
          "fis:GetAction",
          "fis:GetExperiment",
          "fis:GetExperimentTargetAccountConfiguration",
          "fis:GetExperimentTemplate",
          "fis:GetTargetAccountConfiguration",
          "fis:GetTargetResourceType",
          "fis:ListActions",
          "fis:ListExperimentResolvedTargets",
          "fis:ListExperiments",
          "fis:ListExperimentTargetAccountConfigurations",
          "fis:ListExperimentTemplates",
          "fis:ListTagsForResource",
          "fis:ListTargetAccountConfigurations",
          "fis:ListTargetResourceTypes",
          "fms:GetAdminAccount",
          "fms:GetAppsList",
          "fms:GetComplianceDetail",
          "fms:GetNotificationChannel",
          "fms:GetPolicy",
          "fms:GetProtectionStatus",
          "fms:GetProtocolsList",
          "fms:GetViolationDetails",
          "fms:ListAppsLists",
          "fms:ListComplianceStatus",
          "fms:ListMemberAccounts",
          "fms:ListPolicies",
          "fms:ListProtocolsLists",
          "fms:ListTagsForResource",
          "forecast:DescribeAutoPredictor",
          "forecast:DescribeDataset",
          "forecast:DescribeDatasetGroup",
          "forecast:DescribeDatasetImportJob",
          "forecast:DescribeExplainability",
          "forecast:DescribeExplainabilityExport",
          "forecast:DescribeForecast",
          "forecast:DescribeForecastExportJob",
          "forecast:DescribeMonitor",
          "forecast:DescribePredictor",
          "forecast:DescribePredictorBacktestExportJob",
          "forecast:DescribeWhatIfAnalysis",
          "forecast:DescribeWhatIfForecast",
          "forecast:DescribeWhatIfForecastExport",
          "forecast:GetAccuracyMetrics",
          "forecast:ListDatasetGroups",
          "forecast:ListDatasetImportJobs",
          "forecast:ListDatasets",
          "forecast:ListExplainabilities",
          "forecast:ListExplainabilityExports",
          "forecast:ListForecastExportJobs",
          "forecast:ListForecasts",
          "forecast:ListMonitorEvaluations",
          "forecast:ListMonitors",
          "forecast:ListPredictorBacktestExportJobs",
          "forecast:ListPredictors",
          "forecast:ListWhatIfAnalyses",
          "forecast:ListWhatIfForecastExports",
          "forecast:ListWhatIfForecasts",
          "forecast:QueryForecast",
          "forecast:QueryWhatIfForecast",
          "frauddetector:BatchGetVariable",
          "frauddetector:DescribeDetector",
          "frauddetector:DescribeModelVersions",
          "frauddetector:GetBatchImportJobs",
          "frauddetector:GetBatchPredictionJobs",
          "frauddetector:GetDeleteEventsByEventTypeStatus",
          "frauddetector:GetDetectors",
          "frauddetector:GetDetectorVersion",
          "frauddetector:GetEntityTypes",
          "frauddetector:GetEvent",
          "frauddetector:GetEventPredictionMetadata",
          "frauddetector:GetEventTypes",
          "frauddetector:GetExternalModels",
          "frauddetector:GetKMSEncryptionKey",
          "frauddetector:GetLabels",
          "frauddetector:GetListElements",
          "frauddetector:GetListsMetadata",
          "frauddetector:GetModels",
          "frauddetector:GetModelVersion",
          "frauddetector:GetOutcomes",
          "frauddetector:GetRules",
          "frauddetector:GetVariables",
          "frauddetector:ListEventPredictions",
          "frauddetector:ListTagsForResource",
          "freertos:Describe*",
          "freertos:List*",
          "freetier:GetFreeTierAlertPreference",
          "freetier:GetFreeTierUsage",
          "fsx:Describe*",
          "fsx:List*",
          "gamelift:Describe*",
          "gamelift:Get*",
          "gamelift:List*",
          "gamelift:ResolveAlias",
          "gamelift:Search*",
          "glacier:Describe*",
          "glacier:Get*",
          "glacier:List*",
          "globalaccelerator:Describe*",
          "globalaccelerator:List*",
          "glue:BatchGetCrawlers",
          "glue:BatchGetDevEndpoints",
          "glue:BatchGetJobs",
          "glue:BatchGetPartition",
          "glue:BatchGetTriggers",
          "glue:BatchGetWorkflows",
          "glue:CheckSchemaVersionValidity",
          "glue:GetCatalogImportStatus",
          "glue:GetClassifier",
          "glue:GetClassifiers",
          "glue:GetCrawler",
          "glue:GetCrawlerMetrics",
          "glue:GetCrawlers",
          "glue:GetDatabase",
          "glue:GetDatabases",
          "glue:GetDataCatalogEncryptionSettings",
          "glue:GetDataflowGraph",
          "glue:GetDevEndpoint",
          "glue:GetDevEndpoints",
          "glue:GetJob",
          "glue:GetJobBookmark",
          "glue:GetJobRun",
          "glue:GetJobRuns",
          "glue:GetJobs",
          "glue:GetMapping",
          "glue:GetMLTaskRun",
          "glue:GetMLTaskRuns",
          "glue:GetMLTransform",
          "glue:GetMLTransforms",
          "glue:GetPartition",
          "glue:GetPartitions",
          "glue:GetPlan",
          "glue:GetRegistry",
          "glue:GetResourcePolicy",
          "glue:GetSchema",
          "glue:GetSchemaByDefinition",
          "glue:GetSchemaVersion",
          "glue:GetSchemaVersionsDiff",
          "glue:GetSecurityConfiguration",
          "glue:GetSecurityConfigurations",
          "glue:GetTable",
          "glue:GetTables",
          "glue:GetTableVersion",
          "glue:GetTableVersions",
          "glue:GetTags",
          "glue:GetTrigger",
          "glue:GetTriggers",
          "glue:GetUserDefinedFunction",
          "glue:GetUserDefinedFunctions",
          "glue:GetWorkflow",
          "glue:GetWorkflowRun",
          "glue:GetWorkflowRunProperties",
          "glue:GetWorkflowRuns",
          "glue:ListCrawlers",
          "glue:ListCrawls",
          "glue:ListDevEndpoints",
          "glue:ListJobs",
          "glue:ListMLTransforms",
          "glue:ListRegistries",
          "glue:ListSchemas",
          "glue:ListSchemaVersions",
          "glue:ListTriggers",
          "glue:ListWorkflows",
          "glue:QuerySchemaVersionMetadata",
          "glue:SearchTables",
          "grafana:DescribeWorkspace",
          "grafana:DescribeWorkspaceAuthentication",
          "grafana:DescribeWorkspaceConfiguration",
          "grafana:ListPermissions",
          "grafana:ListTagsForResource",
          "grafana:ListVersions",
          "grafana:ListWorkspaces",
          "greengrass:DescribeComponent",
          "greengrass:Get*",
          "greengrass:List*",
          "groundstation:DescribeContact",
          "groundstation:GetConfig",
          "groundstation:GetDataflowEndpointGroup",
          "groundstation:GetMinuteUsage",
          "groundstation:GetMissionProfile",
          "groundstation:GetSatellite",
          "groundstation:ListConfigs",
          "groundstation:ListContacts",
          "groundstation:ListDataflowEndpointGroups",
          "groundstation:ListGroundStations",
          "groundstation:ListMissionProfiles",
          "groundstation:ListSatellites",
          "groundstation:ListTagsForResource",
          "guardduty:Describe*",
          "guardduty:Get*",
          "guardduty:List*",
          "health:Describe*",
          "healthlake:DescribeFHIRDatastore",
          "healthlake:DescribeFHIRExportJob",
          "healthlake:DescribeFHIRImportJob",
          "healthlake:GetCapabilities",
          "healthlake:ListFHIRDatastores",
          "healthlake:ListFHIRExportJobs",
          "healthlake:ListFHIRImportJobs",
          "healthlake:ListTagsForResource",
          "healthlake:ReadResource",
          "healthlake:SearchWithGet",
          "healthlake:SearchWithPost",
          "iam:Generate*",
          "iam:Get*",
          "iam:List*",
          "iam:Simulate*",
          "identity-sync:GetSyncProfile",
          "identity-sync:GetSyncTarget",
          "identity-sync:ListSyncFilters",
          "identitystore-auth:BatchGetSession",
          "identitystore-auth:ListSessions",
          "identitystore:DescribeGroup",
          "identitystore:DescribeGroupMembership",
          "identitystore:DescribeUser",
          "identitystore:GetGroupId",
          "identitystore:GetGroupMembershipId",
          "identitystore:GetUserId",
          "identitystore:IsMemberInGroups",
          "identitystore:ListGroupMemberships",
          "identitystore:ListGroupMembershipsForMember",
          "identitystore:ListGroups",
          "identitystore:ListUsers",
          "imagebuilder:Get*",
          "imagebuilder:List*",
          "importexport:Get*",
          "importexport:List*",
          "inspector:Describe*",
          "inspector:Get*",
          "inspector:List*",
          "inspector:Preview*",
          "inspector2:BatchGetAccountStatus",
          "inspector2:BatchGetFreeTrialInfo",
          "inspector2:DescribeOrganizationConfiguration",
          "inspector2:GetDelegatedAdminAccount",
          "inspector2:GetFindingsReportStatus",
          "inspector2:GetMember",
          "inspector2:ListAccountPermissions",
          "inspector2:ListCisScans",
          "inspector2:ListCoverage",
          "inspector2:ListCoverageStatistics",
          "inspector2:ListDelegatedAdminAccounts",
          "inspector2:ListFilters",
          "inspector2:ListFindingAggregations",
          "inspector2:ListFindings",
          "inspector2:ListMembers",
          "inspector2:ListTagsForResource",
          "inspector2:ListUsageTotals",
          "internetmonitor:GetHealthEvent",
          "internetmonitor:GetInternetEvent",
          "internetmonitor:GetMonitor",
          "internetmonitor:ListHealthEvents",
          "internetmonitor:ListInternetEvents",
          "internetmonitor:ListMonitors",
          "internetmonitor:ListTagsForResource",
          "invoicing:GetInvoiceEmailDeliveryPreferences",
          "invoicing:GetInvoicePDF",
          "invoicing:ListInvoiceSummaries",
          "iot:Describe*",
          "iot:Get*",
          "iot:List*",
          "iot1click:DescribeDevice",
          "iot1click:DescribePlacement",
          "iot1click:DescribeProject",
          "iot1click:GetDeviceMethods",
          "iot1click:GetDevicesInPlacement",
          "iot1click:ListDeviceEvents",
          "iot1click:ListDevices",
          "iot1click:ListPlacements",
          "iot1click:ListProjects",
          "iot1click:ListTagsForResource",
          "iotanalytics:Describe*",
          "iotanalytics:Get*",
          "iotanalytics:List*",
          "iotanalytics:SampleChannelData",
          "iotevents:DescribeAlarm",
          "iotevents:DescribeAlarmModel",
          "iotevents:DescribeDetector",
          "iotevents:DescribeDetectorModel",
          "iotevents:DescribeInput",
          "iotevents:DescribeLoggingOptions",
          "iotevents:ListAlarmModels",
          "iotevents:ListAlarmModelVersions",
          "iotevents:ListAlarms",
          "iotevents:ListDetectorModels",
          "iotevents:ListDetectorModelVersions",
          "iotevents:ListDetectors",
          "iotevents:ListInputs",
          "iotevents:ListTagsForResource",
          "iotfleethub:DescribeApplication",
          "iotfleethub:ListApplications",
          "iotfleetwise:GetCampaign",
          "iotfleetwise:GetDecoderManifest",
          "iotfleetwise:GetFleet",
          "iotfleetwise:GetLoggingOptions",
          "iotfleetwise:GetModelManifest",
          "iotfleetwise:GetRegisterAccountStatus",
          "iotfleetwise:GetSignalCatalog",
          "iotfleetwise:GetVehicle",
          "iotfleetwise:GetVehicleStatus",
          "iotfleetwise:ListCampaigns",
          "iotfleetwise:ListDecoderManifestNetworkInterfaces",
          "iotfleetwise:ListDecoderManifests",
          "iotfleetwise:ListDecoderManifestSignals",
          "iotfleetwise:ListFleets",
          "iotfleetwise:ListFleetsForVehicle",
          "iotfleetwise:ListModelManifestNodes",
          "iotfleetwise:ListModelManifests",
          "iotfleetwise:ListSignalCatalogNodes",
          "iotfleetwise:ListSignalCatalogs",
          "iotfleetwise:ListTagsForResource",
          "iotfleetwise:ListVehicles",
          "iotfleetwise:ListVehiclesInFleet",
          "iotroborunner:GetDestination",
          "iotroborunner:GetSite",
          "iotroborunner:GetWorker",
          "iotroborunner:GetWorkerFleet",
          "iotroborunner:ListDestinations",
          "iotroborunner:ListSites",
          "iotroborunner:ListWorkerFleets",
          "iotroborunner:ListWorkers",
          "iotsitewise:Describe*",
          "iotsitewise:Get*",
          "iotsitewise:List*",
          "iotwireless:GetDestination",
          "iotwireless:GetDeviceProfile",
          "iotwireless:GetEventConfigurationByResourceTypes",
          "iotwireless:GetFuotaTask",
          "iotwireless:GetLogLevelsByResourceTypes",
          "iotwireless:GetMetrics",
          "iotwireless:GetMetricConfiguration",
          "iotwireless:GetMulticastGroup",
          "iotwireless:GetMulticastGroupSession",
          "iotwireless:GetNetworkAnalyzerConfiguration",
          "iotwireless:GetPartnerAccount",
          "iotwireless:GetPosition",
          "iotwireless:GetPositionConfiguration",
          "iotwireless:GetPositionEstimate",
          "iotwireless:GetResourceEventConfiguration",
          "iotwireless:GetResourceLogLevel",
          "iotwireless:GetResourcePosition",
          "iotwireless:GetServiceEndpoint",
          "iotwireless:GetServiceProfile",
          "iotwireless:GetWirelessDevice",
          "iotwireless:GetWirelessDeviceImportTask",
          "iotwireless:GetWirelessDeviceStatistics",
          "iotwireless:GetWirelessGateway",
          "iotwireless:GetWirelessGatewayCertificate",
          "iotwireless:GetWirelessGatewayFirmwareInformation",
          "iotwireless:GetWirelessGatewayStatistics",
          "iotwireless:GetWirelessGatewayTask",
          "iotwireless:GetWirelessGatewayTaskDefinition",
          "iotwireless:ListDestinations",
          "iotwireless:ListDeviceProfiles",
          "iotwireless:ListDevicesForWirelessDeviceImportTask",
          "iotwireless:ListEventConfigurations",
          "iotwireless:ListFuotaTasks",
          "iotwireless:ListMulticastGroups",
          "iotwireless:ListMulticastGroupsByFuotaTask",
          "iotwireless:ListNetworkAnalyzerConfigurations",
          "iotwireless:ListPartnerAccounts",
          "iotwireless:ListPositionConfigurations",
          "iotwireless:ListQueuedMessages",
          "iotwireless:ListServiceProfiles",
          "iotwireless:ListTagsForResource",
          "iotwireless:ListWirelessDeviceImportTasks",
          "iotwireless:ListWirelessDevices",
          "iotwireless:ListWirelessGateways",
          "iotwireless:ListWirelessGatewayTaskDefinitions",
          "ivs:BatchGetChannel",
          "ivs:GetChannel",
          "ivs:GetComposition",
          "ivs:GetEncoderConfiguration",
          "ivs:GetStage",
          "ivs:GetStageSession",
          "ivs:GetParticipant",
          "ivs:GetPlaybackKeyPair",
          "ivs:GetPlaybackRestrictionPolicy",
          "ivs:GetRecordingConfiguration",
          "ivs:GetStreamSession",
          "ivs:ListChannels",
          "ivs:ListCompositions",
          "ivs:ListEncoderConfigurations",
          "ivs:ListParticipants",
          "ivs:ListParticipantEvents",
          "ivs:ListPlaybackKeyPairs",
          "ivs:ListPlaybackRestrictionPolicies",
          "ivs:ListRecordingConfigurations",
          "ivs:ListStages",
          "ivs:ListStageSessions",
          "ivs:ListStreams",
          "ivs:ListStreamKeys",
          "ivs:ListStreamSessions",
          "ivs:ListTagsForResource",
          "ivschat:GetLoggingConfiguration",
          "ivschat:GetRoom",
          "ivschat:ListLoggingConfigurations",
          "ivschat:ListRooms",
          "ivschat:ListTagsForResource",
          "kafka:Describe*",
          "kafka:DescribeCluster",
          "kafka:DescribeClusterOperation",
          "kafka:DescribeClusterV2",
          "kafka:DescribeConfiguration",
          "kafka:DescribeConfigurationRevision",
          "kafka:Get*",
          "kafka:GetBootstrapBrokers",
          "kafka:GetCompatibleKafkaVersions",
          "kafka:List*",
          "kafka:ListClusterOperations",
          "kafka:ListClusters",
          "kafka:ListClustersV2",
          "kafka:ListConfigurationRevisions",
          "kafka:ListConfigurations",
          "kafka:ListKafkaVersions",
          "kafka:ListNodes",
          "kafka:ListTagsForResource",
          "kafkaconnect:DescribeConnector",
          "kafkaconnect:DescribeCustomPlugin",
          "kafkaconnect:DescribeWorkerConfiguration",
          "kafkaconnect:ListConnectors",
          "kafkaconnect:ListCustomPlugins",
          "kafkaconnect:ListWorkerConfigurations",
          "kendra:BatchGetDocumentStatus",
          "kendra:DescribeDataSource",
          "kendra:DescribeExperience",
          "kendra:DescribeFaq",
          "kendra:DescribeIndex",
          "kendra:DescribePrincipalMapping",
          "kendra:DescribeQuerySuggestionsBlockList",
          "kendra:DescribeQuerySuggestionsConfig",
          "kendra:DescribeThesaurus",
          "kendra:GetQuerySuggestions",
          "kendra:GetSnapshots",
          "kendra:ListDataSources",
          "kendra:ListDataSourceSyncJobs",
          "kendra:ListEntityPersonas",
          "kendra:ListExperienceEntities",
          "kendra:ListExperiences",
          "kendra:ListFaqs",
          "kendra:ListGroupsOlderThanOrderingId",
          "kendra:ListIndices",
          "kendra:ListQuerySuggestionsBlockLists",
          "kendra:ListTagsForResource",
          "kendra:ListThesauri",
          "kendra:Query",
          "kinesis:Describe*",
          "kinesis:Get*",
          "kinesis:List*",
          "kinesisanalytics:Describe*",
          "kinesisanalytics:Discover*",
          "kinesisanalytics:Get*",
          "kinesisanalytics:List*",
          "kinesisvideo:Describe*",
          "kinesisvideo:Get*",
          "kinesisvideo:List*",
          "kms:Describe*",
          "kms:Get*",
          "kms:List*",
          "lakeformation:DescribeResource",
          "lakeformation:GetDataCellsFilter",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:GetEffectivePermissionsForPath",
          "lakeformation:GetLfTag",
          "lakeformation:GetResourceLfTags",
          "lakeformation:ListDataCellsFilter",
          "lakeformation:ListLfTags",
          "lakeformation:ListPermissions",
          "lakeformation:ListResources",
          "lakeformation:ListTableStorageOptimizers",
          "lakeformation:SearchDatabasesByLfTags",
          "lakeformation:SearchTablesByLfTags",
          "lambda:Get*",
          "lambda:List*",
          "launchwizard:DescribeAdditionalNode",
          "launchwizard:DescribeProvisionedApp",
          "launchwizard:DescribeProvisioningEvents",
          "launchwizard:DescribeSettingsSet",
          "launchwizard:GetDeployment",
          "launchwizard:GetInfrastructureSuggestion",
          "launchwizard:GetIpAddress",
          "launchwizard:GetResourceCostEstimate",
          "launchwizard:GetResourceRecommendation",
          "launchwizard:GetSettingsSet",
          "launchwizard:GetWorkload",
          "launchwizard:GetWorkloadAsset",
          "launchwizard:GetWorkloadAssets",
          "launchwizard:ListAdditionalNodes",
          "launchwizard:ListAllowedResources",
          "launchwizard:ListDeploymentEvents",
          "launchwizard:ListDeployments",
          "launchwizard:ListProvisionedApps",
          "launchwizard:ListResourceCostEstimates",
          "launchwizard:ListSettingsSets",
          "launchwizard:ListWorkloadDeploymentOptions",
          "launchwizard:ListWorkloadDeploymentPatterns",
          "launchwizard:ListWorkloads",
          "lex:DescribeBot",
          "lex:DescribeBotAlias",
          "lex:DescribeBotChannel",
          "lex:DescribeBotLocale",
          "lex:DescribeBotReplica",
          "lex:DescribeBotVersion",
          "lex:DescribeExport",
          "lex:DescribeImport",
          "lex:DescribeIntent",
          "lex:DescribeResourcePolicy",
          "lex:DescribeSlot",
          "lex:DescribeSlotType",
          "lex:Get*",
          "lex:ListBotAliasReplicas",
          "lex:ListBotAliases",
          "lex:ListBotChannels",
          "lex:ListBotLocales",
          "lex:ListBotReplicas",
          "lex:ListBotVersionReplicas",
          "lex:ListBots",
          "lex:ListBotVersions",
          "lex:ListBuiltInIntents",
          "lex:ListBuiltInSlotTypes",
          "lex:ListExports",
          "lex:ListImports",
          "lex:ListIntents",
          "lex:ListSlots",
          "lex:ListSlotTypes",
          "lex:ListTagsForResource",
          "license-manager:Get*",
          "license-manager:List*",
          "lightsail:GetActiveNames",
          "lightsail:GetAlarms",
          "lightsail:GetAutoSnapshots",
          "lightsail:GetBlueprints",
          "lightsail:GetBucketAccessKeys",
          "lightsail:GetBucketBundles",
          "lightsail:GetBucketMetricData",
          "lightsail:GetBuckets",
          "lightsail:GetBundles",
          "lightsail:GetCertificates",
          "lightsail:GetCloudFormationStackRecords",
          "lightsail:GetContainerAPIMetadata",
          "lightsail:GetContainerImages",
          "lightsail:GetContainerServiceDeployments",
          "lightsail:GetContainerServiceMetricData",
          "lightsail:GetContainerServicePowers",
          "lightsail:GetContainerServices",
          "lightsail:GetDisk",
          "lightsail:GetDisks",
          "lightsail:GetDiskSnapshot",
          "lightsail:GetDiskSnapshots",
          "lightsail:GetDistributionBundles",
          "lightsail:GetDistributionLatestCacheReset",
          "lightsail:GetDistributionMetricData",
          "lightsail:GetDistributions",
          "lightsail:GetDomain",
          "lightsail:GetDomains",
          "lightsail:GetExportSnapshotRecords",
          "lightsail:GetInstance",
          "lightsail:GetInstanceMetricData",
          "lightsail:GetInstancePortStates",
          "lightsail:GetInstances",
          "lightsail:GetInstanceSnapshot",
          "lightsail:GetInstanceSnapshots",
          "lightsail:GetInstanceState",
          "lightsail:GetKeyPair",
          "lightsail:GetKeyPairs",
          "lightsail:GetLoadBalancer",
          "lightsail:GetLoadBalancerMetricData",
          "lightsail:GetLoadBalancers",
          "lightsail:GetLoadBalancerTlsCertificates",
          "lightsail:GetOperation",
          "lightsail:GetOperations",
          "lightsail:GetOperationsForResource",
          "lightsail:GetRegions",
          "lightsail:GetRelationalDatabase",
          "lightsail:GetRelationalDatabaseBlueprints",
          "lightsail:GetRelationalDatabaseBundles",
          "lightsail:GetRelationalDatabaseEvents",
          "lightsail:GetRelationalDatabaseLogEvents",
          "lightsail:GetRelationalDatabaseLogStreams",
          "lightsail:GetRelationalDatabaseMetricData",
          "lightsail:GetRelationalDatabaseParameters",
          "lightsail:GetRelationalDatabases",
          "lightsail:GetRelationalDatabaseSnapshot",
          "lightsail:GetRelationalDatabaseSnapshots",
          "lightsail:GetStaticIp",
          "lightsail:GetStaticIps",
          "lightsail:Is*",
          "logs:Describe*",
          "logs:FilterLogEvents",
          "logs:Get*",
          "logs:ListAnomalies",
          "logs:ListLogAnomalyDetectors",
          "logs:ListLogDeliveries",
          "logs:ListTagsForResource",
          "logs:ListTagsLogGroup",
          "logs:StartLiveTail",
          "logs:StartQuery",
          "logs:StopLiveTail",
          "logs:StopQuery",
          "logs:TestMetricFilter",
          "lookoutequipment:DescribeDataIngestionJob",
          "lookoutequipment:DescribeDataset",
          "lookoutequipment:DescribeInferenceScheduler",
          "lookoutequipment:DescribeLabel",
          "lookoutequipment:DescribeLabelGroup",
          "lookoutequipment:DescribeModel",
          "lookoutequipment:DescribeModelVersion",
          "lookoutequipment:DescribeResourcePolicy",
          "lookoutequipment:DescribeRetrainingScheduler",
          "lookoutequipment:ListDataIngestionJobs",
          "lookoutequipment:ListDatasets",
          "lookoutequipment:ListInferenceEvents",
          "lookoutequipment:ListInferenceExecutions",
          "lookoutequipment:ListInferenceSchedulers",
          "lookoutequipment:ListLabelGroups",
          "lookoutequipment:ListLabels",
          "lookoutequipment:ListModels",
          "lookoutequipment:ListModelVersions",
          "lookoutequipment:ListRetrainingSchedulers",
          "lookoutequipment:ListSensorStatistics",
          "lookoutequipment:ListTagsForResource",
          "lookoutmetrics:Describe*",
          "lookoutmetrics:Get*",
          "lookoutmetrics:List*",
          "lookoutvision:DescribeDataset",
          "lookoutvision:DescribeModel",
          "lookoutvision:DescribeModelPackagingJob",
          "lookoutvision:DescribeProject",
          "lookoutvision:ListDatasetEntries",
          "lookoutvision:ListModelPackagingJobs",
          "lookoutvision:ListModels",
          "lookoutvision:ListProjects",
          "lookoutvision:ListTagsForResource",
          "m2:GetApplication",
          "m2:GetApplicationVersion",
          "m2:GetBatchJobExecution",
          "m2:GetDataSetDetails",
          "m2:GetDataSetImportTask",
          "m2:GetDeployment",
          "m2:GetEnvironment",
          "m2:ListApplications",
          "m2:ListApplicationVersions",
          "m2:ListBatchJobDefinitions",
          "m2:ListBatchJobExecutions",
          "m2:ListDataSetImportHistory",
          "m2:ListDataSets",
          "m2:ListDeployments",
          "m2:ListEngineVersions",
          "m2:ListEnvironments",
          "m2:ListTagsForResource",
          "machinelearning:Describe*",
          "machinelearning:Get*",
          "macie2:BatchGetCustomDataIdentifiers",
          "macie2:DescribeBuckets",
          "macie2:DescribeClassificationJob",
          "macie2:DescribeOrganizationConfiguration",
          "macie2:GetAdministratorAccount",
          "macie2:GetAllowList",
          "macie2:GetAutomatedDiscoveryConfiguration",
          "macie2:GetBucketStatistics",
          "macie2:GetClassificationExportConfiguration",
          "macie2:GetClassificationScope",
          "macie2:GetCustomDataIdentifier",
          "macie2:GetFindings",
          "macie2:GetFindingsFilter",
          "macie2:GetFindingsPublicationConfiguration",
          "macie2:GetFindingStatistics",
          "macie2:GetInvitationsCount",
          "macie2:GetMacieSession",
          "macie2:GetMember",
          "macie2:GetResourceProfile",
          "macie2:GetRevealConfiguration",
          "macie2:GetSensitiveDataOccurrencesAvailability",
          "macie2:GetSensitivityInspectionTemplate",
          "macie2:GetUsageStatistics",
          "macie2:GetUsageTotals",
          "macie2:ListAllowLists",
          "macie2:ListClassificationJobs",
          "macie2:ListClassificationScopes",
          "macie2:ListCustomDataIdentifiers",
          "macie2:ListFindings",
          "macie2:ListFindingsFilters",
          "macie2:ListInvitations",
          "macie2:ListMembers",
          "macie2:ListOrganizationAdminAccounts",
          "macie2:ListResourceProfileArtifacts",
          "macie2:ListResourceProfileDetections",
          "macie2:ListSensitivityInspectionTemplates",
          "macie2:ListTagsForResource",
          "macie2:SearchResources",
          "managedblockchain:GetMember",
          "managedblockchain:GetNetwork",
          "managedblockchain:GetNode",
          "managedblockchain:GetProposal",
          "managedblockchain:ListInvitations",
          "managedblockchain:ListMembers",
          "managedblockchain:ListNetworks",
          "managedblockchain:ListNodes",
          "managedblockchain:ListProposals",
          "managedblockchain:ListProposalVotes",
          "managedblockchain:ListTagsForResource",
          "mediaconnect:DescribeFlow",
          "mediaconnect:DescribeOffering",
          "mediaconnect:DescribeReservation",
          "mediaconnect:ListEntitlements",
          "mediaconnect:ListFlows",
          "mediaconnect:ListOfferings",
          "mediaconnect:ListReservations",
          "mediaconnect:ListTagsForResource",
          "mediaconvert:DescribeEndpoints",
          "mediaconvert:Get*",
          "mediaconvert:List*",
          "medialive:DescribeChannel",
          "medialive:DescribeInput",
          "medialive:DescribeInputDevice",
          "medialive:DescribeInputDeviceThumbnail",
          "medialive:DescribeInputSecurityGroup",
          "medialive:DescribeMultiplex",
          "medialive:DescribeMultiplexProgram",
          "medialive:DescribeOffering",
          "medialive:DescribeReservation",
          "medialive:DescribeSchedule",
          "medialive:GetCloudWatchAlarmTemplate",
          "medialive:GetCloudWatchAlarmTemplateGroup",
          "medialive:GetEventBridgeRuleTemplate",
          "medialive:GetEventBridgeRuleTemplateGroup",
          "medialive:GetSignalMap",
          "medialive:ListChannels",
          "medialive:ListCloudWatchAlarmTemplateGroups",
          "medialive:ListCloudWatchAlarmTemplates",
          "medialive:ListEventBridgeRuleTemplateGroups",
          "medialive:ListEventBridgeRuleTemplates",
          "medialive:ListInputDevices",
          "medialive:ListInputDeviceTransfers",
          "medialive:ListInputs",
          "medialive:ListInputSecurityGroups",
          "medialive:ListMultiplexes",
          "medialive:ListMultiplexPrograms",
          "medialive:ListOfferings",
          "medialive:ListReservations",
          "medialive:ListSignalMaps",
          "medialive:ListTagsForResource",
          "mediapackage-vod:Describe*",
          "mediapackage-vod:List*",
          "mediapackage:Describe*",
          "mediapackage:List*",
          "mediapackagev2:GetChannel",
          "mediapackagev2:GetChannelGroup",
          "mediapackagev2:GetChannelPolicy",
          "mediapackagev2:GetHeadObject",
          "mediapackagev2:GetObject",
          "mediapackagev2:GetOriginEndpoint",
          "mediapackagev2:GetOriginEndpointPolicy",
          "mediapackagev2:ListChannelGroups",
          "mediapackagev2:ListChannels",
          "mediapackagev2:ListOriginEndpoints",
          "mediapackagev2:ListTagsForResource",
          "mediastore:DescribeContainer",
          "mediastore:DescribeObject",
          "mediastore:GetContainerPolicy",
          "mediastore:GetCorsPolicy",
          "mediastore:GetLifecyclePolicy",
          "mediastore:GetMetricPolicy",
          "mediastore:GetObject",
          "mediastore:ListContainers",
          "mediastore:ListItems",
          "mediastore:ListTagsForResource",
          "memorydb:DescribeClusters",
          "memorydb:DescribeParameterGroups",
          "memorydb:DescribeParameters",
          "memorydb:ListTags",
          "mgh:Describe*",
          "mgh:GetHomeRegion",
          "mgh:List*",
          "mgn:DescribeJobLogItems",
          "mgn:DescribeJobs",
          "mgn:DescribeLaunchConfigurationTemplates",
          "mgn:DescribeReplicationConfigurationTemplates",
          "mgn:DescribeSourceServers",
          "mgn:DescribeVcenterClients",
          "mgn:GetLaunchConfiguration",
          "mgn:GetReplicationConfiguration",
          "mgn:ListApplications",
          "mgn:ListSourceServerActions",
          "mgn:ListTemplateActions",
          "mgn:ListWaves",
          "mobileanalytics:Get*",
          "mobiletargeting:Get*",
          "mobiletargeting:List*",
          "monitron:GetProject",
          "monitron:GetProjectAdminUser",
          "monitron:ListProjects",
          "monitron:ListTagsForResource",
          "mq:Describe*",
          "mq:List*",
          "network-firewall:DescribeFirewall",
          "network-firewall:DescribeFirewallPolicy",
          "network-firewall:DescribeLoggingConfiguration",
          "network-firewall:DescribeResourcePolicy",
          "network-firewall:DescribeRuleGroup",
          "network-firewall:DescribeRuleGroupMetadata",
          "network-firewall:DescribeTLSInspectionConfiguration",
          "network-firewall:ListFirewallPolicies",
          "network-firewall:ListFirewalls",
          "network-firewall:ListRuleGroups",
          "network-firewall:ListTagsForResource",
          "network-firewall:ListTLSInspectionConfigurations",
          "networkmanager:DescribeGlobalNetworks",
          "networkmanager:GetConnectAttachment",
          "networkmanager:GetConnections",
          "networkmanager:GetConnectPeer",
          "networkmanager:GetConnectPeerAssociations",
          "networkmanager:GetCoreNetwork",
          "networkmanager:GetCoreNetworkChangeEvents",
          "networkmanager:GetCoreNetworkChangeSet",
          "networkmanager:GetCoreNetworkPolicy",
          "networkmanager:GetCustomerGatewayAssociations",
          "networkmanager:GetDevices",
          "networkmanager:GetLinkAssociations",
          "networkmanager:GetLinks",
          "networkmanager:GetNetworkResourceCounts",
          "networkmanager:GetNetworkResourceRelationships",
          "networkmanager:GetNetworkResources",
          "networkmanager:GetNetworkRoutes",
          "networkmanager:GetNetworkTelemetry",
          "networkmanager:GetResourcePolicy",
          "networkmanager:GetRouteAnalysis",
          "networkmanager:GetSites",
          "networkmanager:GetSiteToSiteVpnAttachment",
          "networkmanager:GetTransitGatewayConnectPeerAssociations",
          "networkmanager:GetTransitGatewayPeering",
          "networkmanager:GetTransitGatewayRegistrations",
          "networkmanager:GetTransitGatewayRouteTableAttachment",
          "networkmanager:GetVpcAttachment",
          "networkmanager:ListAttachments",
          "networkmanager:ListConnectPeers",
          "networkmanager:ListCoreNetworkPolicyVersions",
          "networkmanager:ListCoreNetworks",
          "networkmanager:ListPeerings",
          "networkmanager:ListTagsForResource",
          "nimble:GetEula",
          "nimble:GetFeatureMap",
          "nimble:GetLaunchProfile",
          "nimble:GetLaunchProfileDetails",
          "nimble:GetLaunchProfileInitialization",
          "nimble:GetLaunchProfileMember",
          "nimble:GetStreamingImage",
          "nimble:GetStreamingSession",
          "nimble:GetStudio",
          "nimble:GetStudioComponent",
          "nimble:GetStudioMember",
          "nimble:ListEulaAcceptances",
          "nimble:ListEulas",
          "nimble:ListLaunchProfileMembers",
          "nimble:ListLaunchProfiles",
          "nimble:ListStreamingImages",
          "nimble:ListStreamingSessions",
          "nimble:ListStudioComponents",
          "nimble:ListStudioMembers",
          "nimble:ListStudios",
          "nimble:ListTagsForResource",
          "notifications-contacts:GetEmailContact",
          "notifications-contacts:ListEmailContacts",
          "notifications-contacts:ListTagsForResource",
          "notifications:GetEventRule",
          "notifications:GetNotificationConfiguration",
          "notifications:GetNotificationEvent",
          "notifications:ListChannels",
          "notifications:ListEventRules",
          "notifications:ListNotificationConfigurations",
          "notifications:ListNotificationEvents",
          "notifications:ListNotificationHubs",
          "notifications:ListTagsForResource",
          "oam:GetLink",
          "oam:GetSink",
          "oam:GetSinkPolicy",
          "oam:ListAttachedLinks",
          "oam:ListLinks",
          "oam:ListSinks",
          "omics:Get*",
          "omics:List*",
          "one:GetDeviceConfigurationTemplate",
          "one:GetDeviceInstance",
          "one:GetDeviceInstanceConfiguration",
          "one:GetSite",
          "one:GetSiteAddress",
          "one:ListDeviceConfigurationTemplates",
          "one:ListDeviceInstances",
          "one:ListSites",
          "one:ListUsers",
          "opsworks-cm:Describe*",
          "opsworks-cm:List*",
          "opsworks:Describe*",
          "opsworks:Get*",
          "organizations:Describe*",
          "organizations:List*",
          "osis:GetPipeline",
          "osis:GetPipelineBlueprint",
          "osis:GetPipelineChangeProgress",
          "osis:ListPipelineBlueprints",
          "osis:ListPipelines",
          "osis:ListTagsForResource",
          "outposts:Get*",
          "outposts:List*",
          "payment-cryptography:GetAlias",
          "payment-cryptography:GetKey",
          "payment-cryptography:GetPublicKeyCertificate",
          "payment-cryptography:ListAliases",
          "payment-cryptography:ListKeys",
          "payment-cryptography:ListTagsForResource",
          "payments:GetPaymentInstrument",
          "payments:GetPaymentStatus",
          "payments:ListPaymentInstruments",
          "payments:ListPaymentPreferences",
          "payments:ListTagsForResource",
          "pca-connector-ad:GetConnector",
          "pca-connector-ad:GetDirectoryRegistration",
          "pca-connector-ad:GetServicePrincipalName",
          "pca-connector-ad:GetTemplate",
          "pca-connector-ad:GetTemplateGroupAccessControlEntry",
          "pca-connector-ad:ListConnectors",
          "pca-connector-ad:ListDirectoryRegistrations",
          "pca-connector-ad:ListServicePrincipalNames",
          "pca-connector-ad:ListTagsForResource",
          "pca-connector-ad:ListTemplateGroupAccessControlEntries",
          "pca-connector-ad:ListTemplates",
          "personalize:Describe*",
          "personalize:Get*",
          "personalize:List*",
          "pi:DescribeDimensionKeys",
          "pi:GetDimensionKeyDetails",
          "pi:GetResourceMetadata",
          "pi:GetResourceMetrics",
          "pi:ListAvailableResourceDimensions",
          "pi:ListAvailableResourceMetrics",
          "pipes:DescribePipe",
          "pipes:ListPipes",
          "pipes:ListTagsForResource",
          "polly:Describe*",
          "polly:Get*",
          "polly:List*",
          "polly:SynthesizeSpeech",
          "pricing:DescribeServices",
          "pricing:GetAttributeValues",
          "pricing:GetPriceListFileUrl",
          "pricing:GetProducts",
          "pricing:ListPriceLists",
          "proton:GetDeployment",
          "proton:GetEnvironment",
          "proton:GetEnvironmentTemplate",
          "proton:GetEnvironmentTemplateVersion",
          "proton:GetService",
          "proton:GetServiceInstance",
          "proton:GetServiceTemplate",
          "proton:GetServiceTemplateVersion",
          "proton:ListDeployments",
          "proton:ListEnvironmentAccountConnections",
          "proton:ListEnvironments",
          "proton:ListEnvironmentTemplates",
          "proton:ListServiceInstances",
          "proton:ListServices",
          "proton:ListServiceTemplates",
          "proton:ListTagsForResource",
          "purchase-orders:GetPurchaseOrder",
          "purchase-orders:ListPurchaseOrderInvoices",
          "purchase-orders:ListPurchaseOrders",
          "purchase-orders:ViewPurchaseOrders",
          "qldb:DescribeJournalKinesisStream",
          "qldb:DescribeJournalS3Export",
          "qldb:DescribeLedger",
          "qldb:GetBlock",
          "qldb:GetDigest",
          "qldb:GetRevision",
          "qldb:ListJournalKinesisStreamsForLedger",
          "qldb:ListJournalS3Exports",
          "qldb:ListJournalS3ExportsForLedger",
          "qldb:ListLedgers",
          "qldb:ListTagsForResource",
          "ram:Get*",
          "ram:List*",
          "rbin:GetRule",
          "rbin:ListRules",
          "rbin:ListTagsForResource",
          "rds:Describe*",
          "rds:Download*",
          "rds:List*",
          "redshift-serverless:GetCustomDomainAssociation",
          "redshift-serverless:GetEndpointAccess",
          "redshift-serverless:GetNamespace",
          "redshift-serverless:GetRecoveryPoint",
          "redshift-serverless:GetResourcePolicy",
          "redshift-serverless:GetScheduledAction",
          "redshift-serverless:GetSnapshot",
          "redshift-serverless:GetTableRestoreStatus",
          "redshift-serverless:GetUsageLimit",
          "redshift-serverless:GetWorkgroup",
          "redshift-serverless:ListCustomDomainAssociations",
          "redshift-serverless:ListEndpointAccess",
          "redshift-serverless:ListNamespaces",
          "redshift-serverless:ListRecoveryPoints",
          "redshift-serverless:ListScheduledActions",
          "redshift-serverless:ListSnapshotCopyConfigurations",
          "redshift-serverless:ListSnapshots",
          "redshift-serverless:ListTableRestoreStatus",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:ListUsageLimits",
          "redshift-serverless:ListWorkgroups",
          "redshift:Describe*",
          "redshift:GetReservedNodeExchangeOfferings",
          "redshift:ListRecommendations",
          "redshift:View*",
          "refactor-spaces:GetApplication",
          "refactor-spaces:GetEnvironment",
          "refactor-spaces:GetResourcePolicy",
          "refactor-spaces:GetRoute",
          "refactor-spaces:GetService",
          "refactor-spaces:ListApplications",
          "refactor-spaces:ListEnvironments",
          "refactor-spaces:ListEnvironmentVpcs",
          "refactor-spaces:ListRoutes",
          "refactor-spaces:ListServices",
          "refactor-spaces:ListTagsForResource",
          "rekognition:CompareFaces",
          "rekognition:DescribeDataset",
          "rekognition:DescribeProjects",
          "rekognition:DescribeProjectVersions",
          "rekognition:DescribeStreamProcessor",
          "rekognition:Detect*",
          "rekognition:GetCelebrityInfo",
          "rekognition:GetCelebrityRecognition",
          "rekognition:GetContentModeration",
          "rekognition:GetFaceDetection",
          "rekognition:GetFaceSearch",
          "rekognition:GetLabelDetection",
          "rekognition:GetPersonTracking",
          "rekognition:GetSegmentDetection",
          "rekognition:GetTextDetection",
          "rekognition:List*",
          "rekognition:RecognizeCelebrities",
          "rekognition:Search*",
          "resiliencehub:DescribeApp",
          "resiliencehub:DescribeAppAssessment",
          "resiliencehub:DescribeAppVersion",
          "resiliencehub:DescribeAppVersionAppComponent",
          "resiliencehub:DescribeAppVersionResource",
          "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
          "resiliencehub:DescribeAppVersionTemplate",
          "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
          "resiliencehub:DescribeResiliencyPolicy",
          "resiliencehub:ListAlarmRecommendations",
          "resiliencehub:ListAppAssessmentComplianceDrifts",
          "resiliencehub:ListAppAssessments",
          "resiliencehub:ListAppComponentCompliances",
          "resiliencehub:ListAppComponentRecommendations",
          "resiliencehub:ListAppInputSources",
          "resiliencehub:ListApps",
          "resiliencehub:ListAppVersionAppComponents",
          "resiliencehub:ListAppVersionResourceMappings",
          "resiliencehub:ListAppVersionResources",
          "resiliencehub:ListAppVersions",
          "resiliencehub:ListRecommendationTemplates",
          "resiliencehub:ListResiliencyPolicies",
          "resiliencehub:ListSopRecommendations",
          "resiliencehub:ListSuggestedResiliencyPolicies",
          "resiliencehub:ListTagsForResource",
          "resiliencehub:ListTestRecommendations",
          "resiliencehub:ListUnsupportedAppVersionResources",
          "resource-explorer-2:BatchGetView",
          "resource-explorer-2:GetDefaultView",
          "resource-explorer-2:GetIndex",
          "resource-explorer-2:GetView",
          "resource-explorer-2:ListIndexes",
          "resource-explorer-2:ListSupportedResourceTypes",
          "resource-explorer-2:ListTagsForResource",
          "resource-explorer-2:ListViews",
          "resource-explorer-2:Search",
          "resource-groups:Get*",
          "resource-groups:List*",
          "resource-groups:Search*",
          "robomaker:BatchDescribe*",
          "robomaker:Describe*",
          "robomaker:Get*",
          "robomaker:List*",
          "route53-recovery-cluster:Get*",
          "route53-recovery-cluster:ListRoutingControls",
          "route53-recovery-control-config:Describe*",
          "route53-recovery-control-config:GetResourcePolicy",
          "route53-recovery-control-config:List*",
          "route53-recovery-readiness:Get*",
          "route53-recovery-readiness:List*",
          "route53:Get*",
          "route53:List*",
          "route53:Test*",
          "route53domains:Check*",
          "route53domains:Get*",
          "route53domains:List*",
          "route53domains:View*",
          "route53profiles:GetProfile",
          "route53profiles:GetProfileAssociation",
          "route53profiles:GetProfileResourceAssociation",
          "route53profiles:ListProfileAssociations",
          "route53profiles:ListProfileResourceAssociations",
          "route53profiles:ListProfiles",
          "route53profiles:ListTagsForResource",
          "route53resolver:Get*",
          "route53resolver:List*",
          "rum:GetAppMonitor",
          "rum:GetAppMonitorData",
          "rum:ListAppMonitors",
          "s3-object-lambda:GetObject",
          "s3-object-lambda:GetObjectAcl",
          "s3-object-lambda:GetObjectLegalHold",
          "s3-object-lambda:GetObjectRetention",
          "s3-object-lambda:GetObjectTagging",
          "s3-object-lambda:GetObjectVersion",
          "s3-object-lambda:GetObjectVersionAcl",
          "s3-object-lambda:GetObjectVersionTagging",
          "s3-object-lambda:ListBucket",
          "s3-object-lambda:ListBucketMultipartUploads",
          "s3-object-lambda:ListBucketVersions",
          "s3-object-lambda:ListMultipartUploadParts",
          "s3:DescribeJob",
          "s3:Get*",
          "s3:List*",
          "sagemaker-groundtruth-synthetic:GetAccountDetails",
          "sagemaker-groundtruth-synthetic:GetBatch",
          "sagemaker-groundtruth-synthetic:GetProject",
          "sagemaker-groundtruth-synthetic:ListBatchDataTransfers",
          "sagemaker-groundtruth-synthetic:ListBatchSummaries",
          "sagemaker-groundtruth-synthetic:ListProjectDataTransfers",
          "sagemaker-groundtruth-synthetic:ListProjectSummaries",
          "sagemaker:Describe*",
          "sagemaker:GetSearchSuggestions",
          "sagemaker:List*",
          "sagemaker:Search",
          "savingsplans:DescribeSavingsPlanRates",
          "savingsplans:DescribeSavingsPlans",
          "savingsplans:DescribeSavingsPlansOfferingRates",
          "savingsplans:DescribeSavingsPlansOfferings",
          "savingsplans:ListTagsForResource",
          "scheduler:GetSchedule",
          "scheduler:GetScheduleGroup",
          "scheduler:ListScheduleGroups",
          "scheduler:ListSchedules",
          "scheduler:ListTagsForResource",
          "schemas:Describe*",
          "schemas:Get*",
          "schemas:List*",
          "schemas:Search*",
          "sdb:Get*",
          "sdb:List*",
          "sdb:Select*",
          "secretsmanager:Describe*",
          "secretsmanager:GetResourcePolicy",
          "secretsmanager:List*",
          "securityhub:BatchGetControlEvaluations",
          "securityhub:BatchGetSecurityControls",
          "securityhub:BatchGetStandardsControlAssociations",
          "securityhub:Describe*",
          "securityhub:Get*",
          "securityhub:List*",
          "securitylake:GetDataLakeExceptionSubscription",
          "securitylake:GetDataLakeOrganizationConfiguration",
          "securitylake:GetDataLakeSources",
          "securitylake:GetSubscriber",
          "securitylake:ListDataLakeExceptions",
          "securitylake:ListDataLakes",
          "securitylake:ListLogSources",
          "securitylake:ListSubscribers",
          "securitylake:ListTagsForResource",
          "serverlessrepo:Get*",
          "serverlessrepo:List*",
          "serverlessrepo:SearchApplications",
          "servicecatalog:Describe*",
          "servicecatalog:GetApplication",
          "servicecatalog:GetAttributeGroup",
          "servicecatalog:List*",
          "servicecatalog:Scan*",
          "servicecatalog:Search*",
          "servicediscovery:DiscoverInstances",
          "servicediscovery:DiscoverInstancesRevision",
          "servicediscovery:Get*",
          "servicediscovery:List*",
          "servicequotas:GetAssociationForServiceQuotaTemplate",
          "servicequotas:GetAWSDefaultServiceQuota",
          "servicequotas:GetRequestedServiceQuotaChange",
          "servicequotas:GetServiceQuota",
          "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
          "servicequotas:ListAWSDefaultServiceQuotas",
          "servicequotas:ListRequestedServiceQuotaChangeHistory",
          "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
          "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
          "servicequotas:ListServiceQuotas",
          "servicequotas:ListServices",
          "ses:BatchGetMetricData",
          "ses:Describe*",
          "ses:Get*",
          "ses:List*",
          "shield:Describe*",
          "shield:Get*",
          "shield:List*",
          "signer:DescribeSigningJob",
          "signer:GetSigningPlatform",
          "signer:GetSigningProfile",
          "signer:ListProfilePermissions",
          "signer:ListSigningJobs",
          "signer:ListSigningPlatforms",
          "signer:ListSigningProfiles",
          "signer:ListTagsForResource",
          "signin:ListTrustedIdentityPropagationApplicationsForConsole",
          "sms-voice:DescribeAccountAttributes",
          "sms-voice:DescribeAccountLimits",
          "sms-voice:DescribeConfigurationSets",
          "sms-voice:DescribeKeywords",
          "sms-voice:DescribeOptedOutNumbers",
          "sms-voice:DescribeOptOutLists",
          "sms-voice:DescribePhoneNumbers",
          "sms-voice:DescribePools",
          "sms-voice:DescribeSenderIds",
          "sms-voice:DescribeSpendLimits",
          "sms-voice:ListPoolOriginationIdentities",
          "sms-voice:ListTagsForResource",
          "snowball:Describe*",
          "snowball:Get*",
          "snowball:List*",
          "sns:Check*",
          "sns:Get*",
          "sns:List*",
          "sqs:Get*",
          "sqs:List*",
          "sqs:Receive*",
          "ssm-contacts:DescribeEngagement",
          "ssm-contacts:DescribePage",
          "ssm-contacts:GetContact",
          "ssm-contacts:GetContactChannel",
          "ssm-contacts:ListContactChannels",
          "ssm-contacts:ListContacts",
          "ssm-contacts:ListEngagements",
          "ssm-contacts:ListPageReceipts",
          "ssm-contacts:ListPagesByContact",
          "ssm-contacts:ListPagesByEngagement",
          "ssm-incidents:GetIncidentRecord",
          "ssm-incidents:GetReplicationSet",
          "ssm-incidents:GetResourcePolicies",
          "ssm-incidents:GetResponsePlan",
          "ssm-incidents:GetTimelineEvent",
          "ssm-incidents:ListIncidentRecords",
          "ssm-incidents:ListRelatedItems",
          "ssm-incidents:ListReplicationSets",
          "ssm-incidents:ListResponsePlans",
          "ssm-incidents:ListTagsForResource",
          "ssm-incidents:ListTimelineEvents",
          "ssm:Describe*",
          "ssm:Get*",
          "ssm:List*",
          "sso-directory:Describe*",
          "sso-directory:List*",
          "sso-directory:Search*",
          "sso:Describe*",
          "sso:Get*",
          "sso:List*",
          "sso:Search*",
          "states:Describe*",
          "states:GetExecutionHistory",
          "states:List*",
          "states:ValidateStateMachineDefinition",
          "storagegateway:Describe*",
          "storagegateway:List*",
          "sts:GetAccessKeyInfo",
          "sts:GetCallerIdentity",
          "sts:GetSessionToken",
          "support:DescribeAttachment",
          "support:DescribeCases",
          "support:DescribeCommunications",
          "support:DescribeServices",
          "support:DescribeSeverityLevels",
          "support:DescribeTrustedAdvisorCheckRefreshStatuses",
          "support:DescribeTrustedAdvisorCheckResult",
          "support:DescribeTrustedAdvisorChecks",
          "support:DescribeTrustedAdvisorCheckSummaries",
          "supportplans:GetSupportPlan",
          "supportplans:GetSupportPlanUpdateStatus",
          "sustainability:GetCarbonFootprintSummary",
          "swf:Count*",
          "swf:Describe*",
          "swf:Get*",
          "swf:List*",
          "synthetics:Describe*",
          "synthetics:Get*",
          "synthetics:List*",
          "tag:DescribeReportCreation",
          "tag:Get*",
          "tax:GetExemptions",
          "tax:GetTaxInheritance",
          "tax:GetTaxInterview",
          "tax:GetTaxRegistration",
          "tax:GetTaxRegistrationDocument",
          "tax:ListTaxRegistrations",
          "timestream:DescribeBatchLoadTask",
          "timestream:DescribeDatabase",
          "timestream:DescribeEndpoints",
          "timestream:DescribeTable",
          "timestream:ListBatchLoadTasks",
          "timestream:ListDatabases",
          "timestream:ListMeasures",
          "timestream:ListTables",
          "timestream:ListTagsForResource",
          "tnb:GetSolFunctionInstance",
          "tnb:GetSolFunctionPackage",
          "tnb:GetSolFunctionPackageContent",
          "tnb:GetSolFunctionPackageDescriptor",
          "tnb:GetSolNetworkInstance",
          "tnb:GetSolNetworkOperation",
          "tnb:GetSolNetworkPackage",
          "tnb:GetSolNetworkPackageContent",
          "tnb:GetSolNetworkPackageDescriptor",
          "tnb:ListSolFunctionInstances",
          "tnb:ListSolFunctionPackages",
          "tnb:ListSolNetworkInstances",
          "tnb:ListSolNetworkOperations",
          "tnb:ListSolNetworkPackages",
          "tnb:ListTagsForResource",
          "transcribe:Get*",
          "transcribe:List*",
          "transfer:Describe*",
          "transfer:List*",
          "transfer:TestIdentityProvider",
          "translate:DescribeTextTranslationJob",
          "translate:GetParallelData",
          "translate:GetTerminology",
          "translate:ListParallelData",
          "translate:ListTerminologies",
          "translate:ListTextTranslationJobs",
          "trustedadvisor:Describe*",
          "verifiedpermissions:GetIdentitySource",
          "verifiedpermissions:GetPolicy",
          "verifiedpermissions:GetPolicyStore",
          "verifiedpermissions:GetPolicyTemplate",
          "verifiedpermissions:GetSchema",
          "verifiedpermissions:IsAuthorized",
          "verifiedpermissions:IsAuthorizedWithToken",
          "verifiedpermissions:ListIdentitySources",
          "verifiedpermissions:ListPolicies",
          "verifiedpermissions:ListPolicyStores",
          "verifiedpermissions:ListPolicyTemplates",
          "vpc-lattice:GetAccessLogSubscription",
          "vpc-lattice:GetAuthPolicy",
          "vpc-lattice:GetListener",
          "vpc-lattice:GetResourcePolicy",
          "vpc-lattice:GetRule",
          "vpc-lattice:GetService",
          "vpc-lattice:GetServiceNetwork",
          "vpc-lattice:GetServiceNetworkServiceAssociation",
          "vpc-lattice:GetServiceNetworkVpcAssociation",
          "vpc-lattice:GetTargetGroup",
          "vpc-lattice:ListAccessLogSubscriptions",
          "vpc-lattice:ListListeners",
          "vpc-lattice:ListRules",
          "vpc-lattice:ListServiceNetworks",
          "vpc-lattice:ListServiceNetworkServiceAssociations",
          "vpc-lattice:ListServiceNetworkVpcAssociations",
          "vpc-lattice:ListServices",
          "vpc-lattice:ListTagsForResource",
          "vpc-lattice:ListTargetGroups",
          "vpc-lattice:ListTargets",
          "waf-regional:Get*",
          "waf-regional:List*",
          "waf:Get*",
          "waf:List*",
          "wafv2:CheckCapacity",
          "wafv2:Describe*",
          "wafv2:Get*",
          "wafv2:List*",
          "wellarchitected:ExportLens",
          "wellarchitected:GetAnswer",
          "wellarchitected:GetConsolidatedReport",
          "wellarchitected:GetLens",
          "wellarchitected:GetLensReview",
          "wellarchitected:GetLensReviewReport",
          "wellarchitected:GetLensVersionDifference",
          "wellarchitected:GetMilestone",
          "wellarchitected:GetProfile",
          "wellarchitected:GetProfileTemplate",
          "wellarchitected:GetReviewTemplate",
          "wellarchitected:GetReviewTemplateAnswer",
          "wellarchitected:GetReviewTemplateLensReview",
          "wellarchitected:GetWorkload",
          "wellarchitected:ListAnswers",
          "wellarchitected:ListCheckDetails",
          "wellarchitected:ListCheckSummaries",
          "wellarchitected:ListLenses",
          "wellarchitected:ListLensReviewImprovements",
          "wellarchitected:ListLensReviews",
          "wellarchitected:ListLensShares",
          "wellarchitected:ListMilestones",
          "wellarchitected:ListNotifications",
          "wellarchitected:ListProfileNotifications",
          "wellarchitected:ListProfiles",
          "wellarchitected:ListProfileShares",
          "wellarchitected:ListReviewTemplateAnswers",
          "wellarchitected:ListReviewTemplates",
          "wellarchitected:ListShareInvitations",
          "wellarchitected:ListTagsForResource",
          "wellarchitected:ListTemplateShares",
          "wellarchitected:ListWorkloads",
          "wellarchitected:ListWorkloadShares",
          "workdocs:CheckAlias",
          "workdocs:Describe*",
          "workdocs:Get*",
          "workmail:Describe*",
          "workmail:Get*",
          "workmail:List*",
          "workmail:Search*",
          "workspaces-web:GetBrowserSettings",
          "workspaces-web:GetIdentityProvider",
          "workspaces-web:GetNetworkSettings",
          "workspaces-web:GetPortal",
          "workspaces-web:GetPortalServiceProviderMetadata",
          "workspaces-web:GetTrustStore",
          "workspaces-web:GetUserAccessLoggingSettings",
          "workspaces-web:GetUserSettings",
          "workspaces-web:ListBrowserSettings",
          "workspaces-web:ListIdentityProviders",
          "workspaces-web:ListNetworkSettings",
          "workspaces-web:ListPortals",
          "workspaces-web:ListTagsForResource",
          "workspaces-web:ListTrustStores",
          "workspaces-web:ListUserAccessLoggingSettings",
          "workspaces-web:ListUserSettings",
          "workspaces:Describe*",
          "xray:BatchGet*",
          "xray:Get*"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "ReadOnlyActions"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "ReadOnlyAccess",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "a4b:Get*",
      "condition": null
    },
    {
      "action": "a4b:List*",
      "condition": null
    },
    {
      "action": "a4b:Search*",
      "condition": null
    },
    {
      "action": "access-analyzer:GetAccessPreview",
      "condition": null
    },
    {
      "action": "access-analyzer:GetAnalyzedResource",
      "condition": null
    },
    {
      "action": "access-analyzer:GetAnalyzer",
      "condition": null
    },
    {
      "action": "access-analyzer:GetArchiveRule",
      "condition": null
    },
    {
      "action": "access-analyzer:GetFinding",
      "condition": null
    },
    {
      "action": "access-analyzer:GetGeneratedPolicy",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAccessPreviewFindings",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAccessPreviews",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAnalyzedResources",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAnalyzers",
      "condition": null
    },
    {
      "action": "access-analyzer:ListArchiveRules",
      "condition": null
    },
    {
      "action": "access-analyzer:ListFindings",
      "condition": null
    },
    {
      "action": "access-analyzer:ListPolicyGenerations",
      "condition": null
    },
    {
      "action": "access-analyzer:ListTagsForResource",
      "condition": null
    },
    {
      "action": "access-analyzer:ValidatePolicy",
      "condition": null
    },
    {
      "action": "account:GetAccountInformation",
      "condition": null
    },
    {
      "action": "account:GetAlternateContact",
      "condition": null
    },
    {
      "action": "account:GetChallengeQuestions",
      "condition": null
    },
    {
      "action": "account:GetContactInformation",
      "condition": null
    },
    {
      "action": "account:GetRegionOptStatus",
      "condition": null
    },
    {
      "action": "account:ListRegions",
      "condition": null
    },
    {
      "action": "acm-pca:Describe*",
      "condition": null
    },
    {
      "action": "acm-pca:Get*",
      "condition": null
    },
    {
      "action": "acm-pca:List*",
      "condition": null
    },
    {
      "action": "acm:Describe*",
      "condition": null
    },
    {
      "action": "acm:Get*",
      "condition": null
    },
    {
      "action": "acm:List*",
      "condition": null
    },
    {
      "action": "airflow:ListEnvironments",
      "condition": null
    },
    {
      "action": "airflow:ListTagsForResource",
      "condition": null
    },
    {
      "action": "amplify:GetApp",
      "condition": null
    },
    {
      "action": "amplify:GetBranch",
      "condition": null
    },
    {
      "action": "amplify:GetDomainAssociation",
      "condition": null
    },
    {
      "action": "amplify:GetJob",
      "condition": null
    },
    {
      "action": "amplify:ListApps",
      "condition": null
    },
    {
      "action": "amplify:ListBranches",
      "condition": null
    },
    {
      "action": "amplify:ListDomainAssociations",
      "condition": null
    },
    {
      "action": "amplify:ListJobs",
      "condition": null
    },
    {
      "action": "aoss:BatchGetCollection",
      "condition": null
    },
    {
      "action": "aoss:BatchGetLifecyclePolicy",
      "condition": null
    },
    {
      "action": "aoss:BatchGetVpcEndpoint",
      "condition": null
    },
    {
      "action": "aoss:GetAccessPolicy",
      "condition": null
    },
    {
      "action": "aoss:GetAccountSettings",
      "condition": null
    },
    {
      "action": "aoss:GetPoliciesStats",
      "condition": null
    },
    {
      "action": "aoss:GetSecurityConfig",
      "condition": null
    },
    {
      "action": "aoss:GetSecurityPolicy",
      "condition": null
    },
    {
      "action": "aoss:ListAccessPolicies",
      "condition": null
    },
    {
      "action": "aoss:ListCollections",
      "condition": null
    },
    {
      "action": "aoss:ListLifecyclePolicies",
      "condition": null
    },
    {
      "action": "aoss:ListSecurityConfigs",
      "condition": null
    },
    {
      "action": "aoss:ListSecurityPolicies",
      "condition": null
    },
    {
      "action": "aoss:ListTagsForResource",
      "condition": null
    },
    {
      "action": "aoss:ListVpcEndpoints",
      "condition": null
    },
    {
      "action": "apigateway:GET",
      "condition": null
    },
    {
      "action": "appconfig:GetApplication",
      "condition": null
    },
    {
      "action": "appconfig:GetConfiguration",
      "condition": null
    },
    {
      "action": "appconfig:GetConfigurationProfile",
      "condition": null
    },
    {
      "action": "appconfig:GetDeployment",
      "condition": null
    },
    {
      "action": "appconfig:GetDeploymentStrategy",
      "condition": null
    },
    {
      "action": "appconfig:GetEnvironment",
      "condition": null
    },
    {
      "action": "appconfig:GetHostedConfigurationVersion",
      "condition": null
    },
    {
      "action": "appconfig:ListApplications",
      "condition": null
    },
    {
      "action": "appconfig:ListConfigurationProfiles",
      "condition": null
    },
    {
      "action": "appconfig:ListDeployments",
      "condition": null
    },
    {
      "action": "appconfig:ListDeploymentStrategies",
      "condition": null
    },
    {
      "action": "appconfig:ListEnvironments",
      "condition": null
    },
    {
      "action": "appconfig:ListHostedConfigurationVersions",
      "condition": null
    },
    {
      "action": "appconfig:ListTagsForResource",
      "condition": null
    },
    {
      "action": "appfabric:GetAppAuthorization",
      "condition": null
    },
    {
      "action": "appfabric:GetAppBundle",
      "condition": null
    },
    {
      "action": "appfabric:GetIngestion",
      "condition": null
    },
    {
      "action": "appfabric:GetIngestionDestination",
      "condition": null
    },
    {
      "action": "appfabric:ListAppAuthorizations",
      "condition": null
    },
    {
      "action": "appfabric:ListAppBundles",
      "condition": null
    },
    {
      "action": "appfabric:ListIngestionDestinations",
      "condition": null
    },
    {
      "action": "appfabric:ListIngestions",
      "condition": null
    },
    {
      "action": "appfabric:ListTagsForResource",
      "condition": null
    },
    {
      "action": "appflow:DescribeConnector",
      "condition": null
    },
    {
      "action": "appflow:DescribeConnectorEntity",
      "condition": null
    },
    {
      "action": "appflow:DescribeConnectorFields",
      "condition": null
    },
    {
      "action": "appflow:DescribeConnectorProfiles",
      "condition": null
    },
    {
      "action": "appflow:DescribeConnectors",
      "condition": null
    },
    {
      "action": "appflow:DescribeFlow",
      "condition": null
    },
    {
      "action": "appflow:DescribeFlowExecution",
      "condition": null
    },
    {
      "action": "appflow:DescribeFlowExecutionRecords",
      "condition": null
    },
    {
      "action": "appflow:DescribeFlows",
      "condition": null
    },
    {
      "action": "appflow:ListConnectorEntities",
      "condition": null
    },
    {
      "action": "appflow:ListConnectorFields",
      "condition": null
    },
    {
      "action": "appflow:ListConnectors",
      "condition": null
    },
    {
      "action": "appflow:ListFlows",
      "condition": null
    },
    {
      "action": "appflow:ListTagsForResource",
      "condition": null
    },
    {
      "action": "application-autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "application-autoscaling:ListTagsForResource",
      "condition": null
    },
    {
      "action": "applicationinsights:Describe*",
      "condition": null
    },
    {
      "action": "applicationinsights:List*",
      "condition": null
    },
    {
      "action": "appmesh:Describe*",
      "condition": null
    },
    {
      "action": "appmesh:List*",
      "condition": null
    },
    {
      "action": "apprunner:DescribeAutoScalingConfiguration",
      "condition": null
    },
    {
      "action": "apprunner:DescribeCustomDomains",
      "condition": null
    },
    {
      "action": "apprunner:DescribeObservabilityConfiguration",
      "condition": null
    },
    {
      "action": "apprunner:DescribeService",
      "condition": null
    },
    {
      "action": "apprunner:DescribeVpcConnector",
      "condition": null
    },
    {
      "action": "apprunner:DescribeVpcIngressConnection",
      "condition": null
    },
    {
      "action": "apprunner:DescribeWebAclForService",
      "condition": null
    },
    {
      "action": "apprunner:ListAssociatedServicesForWebAcl",
      "condition": null
    },
    {
      "action": "apprunner:ListAutoScalingConfigurations",
      "condition": null
    },
    {
      "action": "apprunner:ListConnections",
      "condition": null
    },
    {
      "action": "apprunner:ListObservabilityConfigurations",
      "condition": null
    },
    {
      "action": "apprunner:ListOperations",
      "condition": null
    },
    {
      "action": "apprunner:ListServices",
      "condition": null
    },
    {
      "action": "apprunner:ListServicesForAutoScalingConfiguration",
      "condition": null
    },
    {
      "action": "apprunner:ListTagsForResource",
      "condition": null
    },
    {
      "action": "apprunner:ListVpcConnectors",
      "condition": null
    },
    {
      "action": "apprunner:ListVpcIngressConnections",
      "condition": null
    },
    {
      "action": "appstream:Describe*",
      "condition": null
    },
    {
      "action": "appstream:List*",
      "condition": null
    },
    {
      "action": "appsync:Get*",
      "condition": null
    },
    {
      "action": "appsync:List*",
      "condition": null
    },
    {
      "action": "aps:DescribeAlertManagerDefinition",
      "condition": null
    },
    {
      "action": "aps:DescribeLoggingConfiguration",
      "condition": null
    },
    {
      "action": "aps:DescribeRuleGroupsNamespace",
      "condition": null
    },
    {
      "action": "aps:DescribeScraper",
      "condition": null
    },
    {
      "action": "aps:DescribeWorkspace",
      "condition": null
    },
    {
      "action": "aps:GetAlertManagerSilence",
      "condition": null
    },
    {
      "action": "aps:GetAlertManagerStatus",
      "condition": null
    },
    {
      "action": "aps:GetDefaultScraperConfiguration",
      "condition": null
    },
    {
      "action": "aps:GetLabels",
      "condition": null
    },
    {
      "action": "aps:GetMetricMetadata",
      "condition": null
    },
    {
      "action": "aps:GetSeries",
      "condition": null
    },
    {
      "action": "aps:ListAlertManagerAlertGroups",
      "condition": null
    },
    {
      "action": "aps:ListAlertManagerAlerts",
      "condition": null
    },
    {
      "action": "aps:ListAlertManagerReceivers",
      "condition": null
    },
    {
      "action": "aps:ListAlertManagerSilences",
      "condition": null
    },
    {
      "action": "aps:ListAlerts",
      "condition": null
    },
    {
      "action": "aps:ListRuleGroupsNamespaces",
      "condition": null
    },
    {
      "action": "aps:ListRules",
      "condition": null
    },
    {
      "action": "aps:ListScrapers",
      "condition": null
    },
    {
      "action": "aps:ListTagsForResource",
      "condition": null
    },
    {
      "action": "aps:ListWorkspaces",
      "condition": null
    },
    {
      "action": "aps:QueryMetrics",
      "condition": null
    },
    {
      "action": "arc-zonal-shift:GetManagedResource",
      "condition": null
    },
    {
      "action": "arc-zonal-shift:ListAutoshifts",
      "condition": null
    },
    {
      "action": "arc-zonal-shift:ListManagedResources",
      "condition": null
    },
    {
      "action": "arc-zonal-shift:ListZonalShifts",
      "condition": null
    },
    {
      "action": "artifact:GetReport",
      "condition": null
    },
    {
      "action": "artifact:GetReportMetadata",
      "condition": null
    },
    {
      "action": "artifact:GetTermForReport",
      "condition": null
    },
    {
      "action": "artifact:ListReports",
      "condition": null
    },
    {
      "action": "athena:Batch*",
      "condition": null
    },
    {
      "action": "athena:Get*",
      "condition": null
    },
    {
      "action": "athena:List*",
      "condition": null
    },
    {
      "action": "auditmanager:GetAccountStatus",
      "condition": null
    },
    {
      "action": "auditmanager:GetAssessment",
      "condition": null
    },
    {
      "action": "auditmanager:GetAssessmentFramework",
      "condition": null
    },
    {
      "action": "auditmanager:GetAssessmentReportUrl",
      "condition": null
    },
    {
      "action": "auditmanager:GetChangeLogs",
      "condition": null
    },
    {
      "action": "auditmanager:GetControl",
      "condition": null
    },
    {
      "action": "auditmanager:GetDelegations",
      "condition": null
    },
    {
      "action": "auditmanager:GetEvidence",
      "condition": null
    },
    {
      "action": "auditmanager:GetEvidenceByEvidenceFolder",
      "condition": null
    },
    {
      "action": "auditmanager:GetEvidenceFolder",
      "condition": null
    },
    {
      "action": "auditmanager:GetEvidenceFoldersByAssessment",
      "condition": null
    },
    {
      "action": "auditmanager:GetEvidenceFoldersByAssessmentControl",
      "condition": null
    },
    {
      "action": "auditmanager:GetOrganizationAdminAccount",
      "condition": null
    },
    {
      "action": "auditmanager:GetServicesInScope",
      "condition": null
    },
    {
      "action": "auditmanager:GetSettings",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessmentFrameworks",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessmentReports",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessments",
      "condition": null
    },
    {
      "action": "auditmanager:ListControls",
      "condition": null
    },
    {
      "action": "auditmanager:ListKeywordsForDataSource",
      "condition": null
    },
    {
      "action": "auditmanager:ListNotifications",
      "condition": null
    },
    {
      "action": "auditmanager:ListTagsForResource",
      "condition": null
    },
    {
      "action": "auditmanager:ValidateAssessmentReportIntegrity",
      "condition": null
    },
    {
      "action": "autoscaling-plans:Describe*",
      "condition": null
    },
    {
      "action": "autoscaling-plans:GetScalingPlanResourceForecastData",
      "condition": null
    },
    {
      "action": "autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "autoscaling:GetPredictiveScalingForecast",
      "condition": null
    },
    {
      "action": "aws-portal:View*",
      "condition": null
    },
    {
      "action": "backup-gateway:GetBandwidthRateLimitSchedule",
      "condition": null
    },
    {
      "action": "backup-gateway:GetGateway",
      "condition": null
    },
    {
      "action": "backup-gateway:GetHypervisor",
      "condition": null
    },
    {
      "action": "backup-gateway:GetHypervisorPropertyMappings",
      "condition": null
    },
    {
      "action": "backup-gateway:GetVirtualMachine",
      "condition": null
    },
    {
      "action": "backup-gateway:ListGateways",
      "condition": null
    },
    {
      "action": "backup-gateway:ListHypervisors",
      "condition": null
    },
    {
      "action": "backup-gateway:ListTagsForResource",
      "condition": null
    },
    {
      "action": "backup-gateway:ListVirtualMachines",
      "condition": null
    },
    {
      "action": "backup:Describe*",
      "condition": null
    },
    {
      "action": "backup:Get*",
      "condition": null
    },
    {
      "action": "backup:List*",
      "condition": null
    },
    {
      "action": "batch:Describe*",
      "condition": null
    },
    {
      "action": "batch:List*",
      "condition": null
    },
    {
      "action": "bedrock:GetAgent",
      "condition": null
    },
    {
      "action": "bedrock:GetAgentActionGroup",
      "condition": null
    },
    {
      "action": "bedrock:GetAgentAlias",
      "condition": null
    },
    {
      "action": "bedrock:GetAgentKnowledgeBase",
      "condition": null
    },
    {
      "action": "bedrock:GetAgentVersion",
      "condition": null
    },
    {
      "action": "bedrock:GetCustomModel",
      "condition": null
    },
    {
      "action": "bedrock:GetDataSource",
      "condition": null
    },
    {
      "action": "bedrock:GetFoundationModel",
      "condition": null
    },
    {
      "action": "bedrock:GetFoundationModelAvailability",
      "condition": null
    },
    {
      "action": "bedrock:GetIngestionJob",
      "condition": null
    },
    {
      "action": "bedrock:GetKnowledgeBase",
      "condition": null
    },
    {
      "action": "bedrock:GetModelCustomizationJob",
      "condition": null
    },
    {
      "action": "bedrock:GetModelInvocationLoggingConfiguration",
      "condition": null
    },
    {
      "action": "bedrock:GetProvisionedModelThroughput",
      "condition": null
    },
    {
      "action": "bedrock:GetUseCaseForModelAccess",
      "condition": null
    },
    {
      "action": "bedrock:ListAgentActionGroups",
      "condition": null
    },
    {
      "action": "bedrock:ListAgentAliases",
      "condition": null
    },
    {
      "action": "bedrock:ListAgentKnowledgeBases",
      "condition": null
    },
    {
      "action": "bedrock:ListAgents",
      "condition": null
    },
    {
      "action": "bedrock:ListAgentVersions",
      "condition": null
    },
    {
      "action": "bedrock:ListCustomModels",
      "condition": null
    },
    {
      "action": "bedrock:ListDataSources",
      "condition": null
    },
    {
      "action": "bedrock:ListFoundationModelAgreementOffers",
      "condition": null
    },
    {
      "action": "bedrock:ListFoundationModels",
      "condition": null
    },
    {
      "action": "bedrock:ListIngestionJobs",
      "condition": null
    },
    {
      "action": "bedrock:ListKnowledgeBases",
      "condition": null
    },
    {
      "action": "bedrock:ListModelCustomizationJobs",
      "condition": null
    },
    {
      "action": "bedrock:ListProvisionedModelThroughputs",
      "condition": null
    },
    {
      "action": "billing:GetBillingData",
      "condition": null
    },
    {
      "action": "billing:GetBillingDetails",
      "condition": null
    },
    {
      "action": "billing:GetBillingNotifications",
      "condition": null
    },
    {
      "action": "billing:GetBillingPreferences",
      "condition": null
    },
    {
      "action": "billing:GetContractInformation",
      "condition": null
    },
    {
      "action": "billing:GetCredits",
      "condition": null
    },
    {
      "action": "billing:GetIAMAccessPreference",
      "condition": null
    },
    {
      "action": "billing:GetSellerOfRecord",
      "condition": null
    },
    {
      "action": "billing:ListBillingViews",
      "condition": null
    },
    {
      "action": "billingconductor:GetBillingGroupCostReport",
      "condition": null
    },
    {
      "action": "billingconductor:ListAccountAssociations",
      "condition": null
    },
    {
      "action": "billingconductor:ListBillingGroupCostReports",
      "condition": null
    },
    {
      "action": "billingconductor:ListBillingGroups",
      "condition": null
    },
    {
      "action": "billingconductor:ListCustomLineItems",
      "condition": null
    },
    {
      "action": "billingconductor:ListCustomLineItemVersions",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingPlans",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingPlansAssociatedWithPricingRule",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingRules",
      "condition": null
    },
    {
      "action": "billingconductor:ListPricingRulesAssociatedToPricingPlan",
      "condition": null
    },
    {
      "action": "billingconductor:ListResourcesAssociatedToCustomLineItem",
      "condition": null
    },
    {
      "action": "billingconductor:ListTagsForResource",
      "condition": null
    },
    {
      "action": "braket:GetDevice",
      "condition": null
    },
    {
      "action": "braket:GetJob",
      "condition": null
    },
    {
      "action": "braket:GetQuantumTask",
      "condition": null
    },
    {
      "action": "braket:SearchDevices",
      "condition": null
    },
    {
      "action": "braket:SearchJobs",
      "condition": null
    },
    {
      "action": "braket:SearchQuantumTasks",
      "condition": null
    },
    {
      "action": "budgets:Describe*",
      "condition": null
    },
    {
      "action": "budgets:View*",
      "condition": null
    },
    {
      "action": "cassandra:Select",
      "condition": null
    },
    {
      "action": "ce:DescribeCostCategoryDefinition",
      "condition": null
    },
    {
      "action": "ce:DescribeNotificationSubscription",
      "condition": null
    },
    {
      "action": "ce:DescribeReport",
      "condition": null
    },
    {
      "action": "ce:GetAnomalies",
      "condition": null
    },
    {
      "action": "ce:GetAnomalyMonitors",
      "condition": null
    },
    {
      "action": "ce:GetAnomalySubscriptions",
      "condition": null
    },
    {
      "action": "ce:GetApproximateUsageRecords",
      "condition": null
    },
    {
      "action": "ce:GetCostAndUsage",
      "condition": null
    },
    {
      "action": "ce:GetCostAndUsageWithResources",
      "condition": null
    },
    {
      "action": "ce:GetCostCategories",
      "condition": null
    },
    {
      "action": "ce:GetCostForecast",
      "condition": null
    },
    {
      "action": "ce:GetDimensionValues",
      "condition": null
    },
    {
      "action": "ce:GetPreferences",
      "condition": null
    },
    {
      "action": "ce:GetReservationCoverage",
      "condition": null
    },
    {
      "action": "ce:GetReservationPurchaseRecommendation",
      "condition": null
    },
    {
      "action": "ce:GetReservationUtilization",
      "condition": null
    },
    {
      "action": "ce:GetRightsizingRecommendation",
      "condition": null
    },
    {
      "action": "ce:GetSavingsPlanPurchaseRecommendationDetails",
      "condition": null
    },
    {
      "action": "ce:GetSavingsPlansCoverage",
      "condition": null
    },
    {
      "action": "ce:GetSavingsPlansPurchaseRecommendation",
      "condition": null
    },
    {
      "action": "ce:GetSavingsPlansUtilization",
      "condition": null
    },
    {
      "action": "ce:GetSavingsPlansUtilizationDetails",
      "condition": null
    },
    {
      "action": "ce:GetTags",
      "condition": null
    },
    {
      "action": "ce:GetUsageForecast",
      "condition": null
    },
    {
      "action": "ce:ListCostAllocationTags",
      "condition": null
    },
    {
      "action": "ce:ListCostAllocationTagBackfillHistory",
      "condition": null
    },
    {
      "action": "ce:ListCostCategoryDefinitions",
      "condition": null
    },
    {
      "action": "ce:ListSavingsPlansPurchaseRecommendationGeneration",
      "condition": null
    },
    {
      "action": "ce:ListTagsForResource",
      "condition": null
    },
    {
      "action": "chatbot:Describe*",
      "condition": null
    },
    {
      "action": "chatbot:Get*",
      "condition": null
    },
    {
      "action": "chatbot:ListMicrosoftTeamsChannelConfigurations",
      "condition": null
    },
    {
      "action": "chatbot:ListMicrosoftTeamsConfiguredTeams",
      "condition": null
    },
    {
      "action": "chatbot:ListMicrosoftTeamsUserIdentities",
      "condition": null
    },
    {
      "action": "chime:Get*",
      "condition": null
    },
    {
      "action": "chime:List*",
      "condition": null
    },
    {
      "action": "chime:Retrieve*",
      "condition": null
    },
    {
      "action": "chime:Search*",
      "condition": null
    },
    {
      "action": "chime:Validate*",
      "condition": null
    },
    {
      "action": "cleanrooms:BatchGetCollaborationAnalysisTemplate",
      "condition": null
    },
    {
      "action": "cleanrooms:BatchGetSchema",
      "condition": null
    },
    {
      "action": "cleanrooms:GetAnalysisTemplate",
      "condition": null
    },
    {
      "action": "cleanrooms:GetCollaboration",
      "condition": null
    },
    {
      "action": "cleanrooms:GetCollaborationAnalysisTemplate",
      "condition": null
    },
    {
      "action": "cleanrooms:GetConfiguredAudienceModelAssociation",
      "condition": null
    },
    {
      "action": "cleanrooms:GetConfiguredTable",
      "condition": null
    },
    {
      "action": "cleanrooms:GetConfiguredTableAnalysisRule",
      "condition": null
    },
    {
      "action": "cleanrooms:GetConfiguredTableAssociation",
      "condition": null
    },
    {
      "action": "cleanrooms:GetMembership",
      "condition": null
    },
    {
      "action": "cleanrooms:GetProtectedQuery",
      "condition": null
    },
    {
      "action": "cleanrooms:GetSchema",
      "condition": null
    },
    {
      "action": "cleanrooms:GetSchemaAnalysisRule",
      "condition": null
    },
    {
      "action": "cleanrooms:ListAnalysisTemplates",
      "condition": null
    },
    {
      "action": "cleanrooms:ListCollaborationAnalysisTemplates",
      "condition": null
    },
    {
      "action": "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations",
      "condition": null
    },
    {
      "action": "cleanrooms:ListCollaborations",
      "condition": null
    },
    {
      "action": "cleanrooms:ListConfiguredTableAssociations",
      "condition": null
    },
    {
      "action": "cleanrooms:ListConfiguredTables",
      "condition": null
    },
    {
      "action": "cleanrooms:ListMembers",
      "condition": null
    },
    {
      "action": "cleanrooms:ListMemberships",
      "condition": null
    },
    {
      "action": "cleanrooms:ListProtectedQueries",
      "condition": null
    },
    {
      "action": "cleanrooms:ListSchemas",
      "condition": null
    },
    {
      "action": "cleanrooms:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:GetTrainingDataset",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:GetAudienceGenerationJob",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:GetAudienceModel",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:GetConfiguredAudienceModel",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:GetConfiguredAudienceModelPolicy",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:ListAudienceExportJobs",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:ListAudienceGenerationJobs",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:ListAudienceModels",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:ListConfiguredAudienceModels",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:ListTrainingDatasets",
      "condition": null
    },
    {
      "action": "cleanrooms-ml:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cloud9:Describe*",
      "condition": null
    },
    {
      "action": "cloud9:List*",
      "condition": null
    },
    {
      "action": "clouddirectory:BatchRead",
      "condition": null
    },
    {
      "action": "clouddirectory:Get*",
      "condition": null
    },
    {
      "action": "clouddirectory:List*",
      "condition": null
    },
    {
      "action": "clouddirectory:LookupPolicy",
      "condition": null
    },
    {
      "action": "cloudformation:Describe*",
      "condition": null
    },
    {
      "action": "cloudformation:Detect*",
      "condition": null
    },
    {
      "action": "cloudformation:Estimate*",
      "condition": null
    },
    {
      "action": "cloudformation:Get*",
      "condition": null
    },
    {
      "action": "cloudformation:List*",
      "condition": null
    },
    {
      "action": "cloudformation:ValidateTemplate",
      "condition": null
    },
    {
      "action": "cloudfront-keyvaluestore:Describe*",
      "condition": null
    },
    {
      "action": "cloudfront-keyvaluestore:Get*",
      "condition": null
    },
    {
      "action": "cloudfront-keyvaluestore:List*",
      "condition": null
    },
    {
      "action": "cloudfront:Describe*",
      "condition": null
    },
    {
      "action": "cloudfront:Get*",
      "condition": null
    },
    {
      "action": "cloudfront:List*",
      "condition": null
    },
    {
      "action": "cloudhsm:Describe*",
      "condition": null
    },
    {
      "action": "cloudhsm:List*",
      "condition": null
    },
    {
      "action": "cloudsearch:Describe*",
      "condition": null
    },
    {
      "action": "cloudsearch:List*",
      "condition": null
    },
    {
      "action": "cloudtrail:Describe*",
      "condition": null
    },
    {
      "action": "cloudtrail:Get*",
      "condition": null
    },
    {
      "action": "cloudtrail:List*",
      "condition": null
    },
    {
      "action": "cloudtrail:LookupEvents",
      "condition": null
    },
    {
      "action": "cloudwatch:Describe*",
      "condition": null
    },
    {
      "action": "cloudwatch:GenerateQuery",
      "condition": null
    },
    {
      "action": "cloudwatch:Get*",
      "condition": null
    },
    {
      "action": "cloudwatch:List*",
      "condition": null
    },
    {
      "action": "codeartifact:DescribeDomain",
      "condition": null
    },
    {
      "action": "codeartifact:DescribePackage",
      "condition": null
    },
    {
      "action": "codeartifact:DescribePackageVersion",
      "condition": null
    },
    {
      "action": "codeartifact:DescribeRepository",
      "condition": null
    },
    {
      "action": "codeartifact:GetAuthorizationToken",
      "condition": null
    },
    {
      "action": "codeartifact:GetDomainPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:GetPackageVersionAsset",
      "condition": null
    },
    {
      "action": "codeartifact:GetPackageVersionReadme",
      "condition": null
    },
    {
      "action": "codeartifact:GetRepositoryEndpoint",
      "condition": null
    },
    {
      "action": "codeartifact:GetRepositoryPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:ListDomains",
      "condition": null
    },
    {
      "action": "codeartifact:ListPackages",
      "condition": null
    },
    {
      "action": "codeartifact:ListPackageVersionAssets",
      "condition": null
    },
    {
      "action": "codeartifact:ListPackageVersionDependencies",
      "condition": null
    },
    {
      "action": "codeartifact:ListPackageVersions",
      "condition": null
    },
    {
      "action": "codeartifact:ListRepositories",
      "condition": null
    },
    {
      "action": "codeartifact:ListRepositoriesInDomain",
      "condition": null
    },
    {
      "action": "codeartifact:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codeartifact:ReadFromRepository",
      "condition": null
    },
    {
      "action": "codebuild:BatchGet*",
      "condition": null
    },
    {
      "action": "codebuild:DescribeCodeCoverages",
      "condition": null
    },
    {
      "action": "codebuild:DescribeTestCases",
      "condition": null
    },
    {
      "action": "codebuild:List*",
      "condition": null
    },
    {
      "action": "codecatalyst:GetBillingAuthorization",
      "condition": null
    },
    {
      "action": "codecatalyst:GetConnection",
      "condition": null
    },
    {
      "action": "codecatalyst:GetPendingConnection",
      "condition": null
    },
    {
      "action": "codecatalyst:ListConnections",
      "condition": null
    },
    {
      "action": "codecatalyst:ListIamRolesForConnection",
      "condition": null
    },
    {
      "action": "codecatalyst:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codecommit:BatchGet*",
      "condition": null
    },
    {
      "action": "codecommit:Describe*",
      "condition": null
    },
    {
      "action": "codecommit:Get*",
      "condition": null
    },
    {
      "action": "codecommit:GitPull",
      "condition": null
    },
    {
      "action": "codecommit:List*",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGet*",
      "condition": null
    },
    {
      "action": "codedeploy:Get*",
      "condition": null
    },
    {
      "action": "codedeploy:List*",
      "condition": null
    },
    {
      "action": "codeguru-profiler:Describe*",
      "condition": null
    },
    {
      "action": "codeguru-profiler:Get*",
      "condition": null
    },
    {
      "action": "codeguru-profiler:List*",
      "condition": null
    },
    {
      "action": "codeguru-reviewer:Describe*",
      "condition": null
    },
    {
      "action": "codeguru-reviewer:Get*",
      "condition": null
    },
    {
      "action": "codeguru-reviewer:List*",
      "condition": null
    },
    {
      "action": "codepipeline:Get*",
      "condition": null
    },
    {
      "action": "codepipeline:List*",
      "condition": null
    },
    {
      "action": "codestar-connections:GetConnection",
      "condition": null
    },
    {
      "action": "codestar-connections:GetHost",
      "condition": null
    },
    {
      "action": "codestar-connections:GetRepositoryLink",
      "condition": null
    },
    {
      "action": "codestar-connections:GetRepositorySyncStatus",
      "condition": null
    },
    {
      "action": "codestar-connections:GetResourceSyncStatus",
      "condition": null
    },
    {
      "action": "codestar-connections:GetSyncConfiguration",
      "condition": null
    },
    {
      "action": "codestar-connections:ListConnections",
      "condition": null
    },
    {
      "action": "codestar-connections:ListHosts",
      "condition": null
    },
    {
      "action": "codestar-connections:ListRepositoryLinks",
      "condition": null
    },
    {
      "action": "codestar-connections:ListRepositorySyncDefinitions",
      "condition": null
    },
    {
      "action": "codestar-connections:ListSyncConfigurations",
      "condition": null
    },
    {
      "action": "codestar-connections:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codestar-notifications:describeNotificationRule",
      "condition": null
    },
    {
      "action": "codestar-notifications:listEventTypes",
      "condition": null
    },
    {
      "action": "codestar-notifications:listNotificationRules",
      "condition": null
    },
    {
      "action": "codestar-notifications:listTagsForResource",
      "condition": null
    },
    {
      "action": "codestar-notifications:ListTargets",
      "condition": null
    },
    {
      "action": "codestar:Describe*",
      "condition": null
    },
    {
      "action": "codestar:Get*",
      "condition": null
    },
    {
      "action": "codestar:List*",
      "condition": null
    },
    {
      "action": "codestar:Verify*",
      "condition": null
    },
    {
      "action": "cognito-identity:Describe*",
      "condition": null
    },
    {
      "action": "cognito-identity:GetCredentialsForIdentity",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityPoolAnalytics",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityPoolDailyAnalytics",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityPoolRoles",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityProviderDailyAnalytics",
      "condition": null
    },
    {
      "action": "cognito-identity:GetOpenIdToken",
      "condition": null
    },
    {
      "action": "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
      "condition": null
    },
    {
      "action": "cognito-identity:List*",
      "condition": null
    },
    {
      "action": "cognito-identity:Lookup*",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminGet*",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminList*",
      "condition": null
    },
    {
      "action": "cognito-idp:Describe*",
      "condition": null
    },
    {
      "action": "cognito-idp:Get*",
      "condition": null
    },
    {
      "action": "cognito-idp:List*",
      "condition": null
    },
    {
      "action": "cognito-sync:Describe*",
      "condition": null
    },
    {
      "action": "cognito-sync:Get*",
      "condition": null
    },
    {
      "action": "cognito-sync:List*",
      "condition": null
    },
    {
      "action": "cognito-sync:QueryRecords",
      "condition": null
    },
    {
      "action": "comprehend:BatchDetect*",
      "condition": null
    },
    {
      "action": "comprehend:Classify*",
      "condition": null
    },
    {
      "action": "comprehend:Contains*",
      "condition": null
    },
    {
      "action": "comprehend:Describe*",
      "condition": null
    },
    {
      "action": "comprehend:Detect*",
      "condition": null
    },
    {
      "action": "comprehend:List*",
      "condition": null
    },
    {
      "action": "compute-optimizer:DescribeRecommendationExportJobs",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetAutoScalingGroupRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetEBSVolumeRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetEC2InstanceRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetEC2RecommendationProjectedMetrics",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetECSServiceRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetEffectiveRecommendationPreferences",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetEnrollmentStatus",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetEnrollmentStatusesForOrganization",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetLambdaFunctionRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetLicenseRecommendations",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetRecommendationPreferences",
      "condition": null
    },
    {
      "action": "compute-optimizer:GetRecommendationSummaries",
      "condition": null
    },
    {
      "action": "config:BatchGetAggregateResourceConfig",
      "condition": null
    },
    {
      "action": "config:BatchGetResourceConfig",
      "condition": null
    },
    {
      "action": "config:Deliver*",
      "condition": null
    },
    {
      "action": "config:Describe*",
      "condition": null
    },
    {
      "action": "config:Get*",
      "condition": null
    },
    {
      "action": "config:List*",
      "condition": null
    },
    {
      "action": "config:SelectAggregateResourceConfig",
      "condition": null
    },
    {
      "action": "config:SelectResourceConfig",
      "condition": null
    },
    {
      "action": "connect:Describe*",
      "condition": null
    },
    {
      "action": "connect:GetContactAttributes",
      "condition": null
    },
    {
      "action": "connect:GetCurrentMetricData",
      "condition": null
    },
    {
      "action": "connect:GetCurrentUserData",
      "condition": null
    },
    {
      "action": "connect:GetFederationToken",
      "condition": null
    },
    {
      "action": "connect:GetMetricData",
      "condition": null
    },
    {
      "action": "connect:GetMetricDataV2",
      "condition": null
    },
    {
      "action": "connect:GetTaskTemplate",
      "condition": null
    },
    {
      "action": "connect:GetTrafficDistribution",
      "condition": null
    },
    {
      "action": "connect:List*",
      "condition": null
    },
    {
      "action": "consoleapp:GetDeviceIdentity",
      "condition": null
    },
    {
      "action": "consoleapp:ListDeviceIdentities",
      "condition": null
    },
    {
      "action": "consolidatedbilling:GetAccountBillingRole",
      "condition": null
    },
    {
      "action": "consolidatedbilling:ListLinkedAccounts",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:GetPreferences",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:GetRecommendation",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:ListEnrollmentStatuses",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:ListRecommendations",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:ListRecommendationSummaries",
      "condition": null
    },
    {
      "action": "cur:GetClassicReport",
      "condition": null
    },
    {
      "action": "cur:GetClassicReportPreferences",
      "condition": null
    },
    {
      "action": "cur:GetUsageReport",
      "condition": null
    },
    {
      "action": "customer-verification:GetCustomerVerificationDetails",
      "condition": null
    },
    {
      "action": "customer-verification:GetCustomerVerificationEligibility",
      "condition": null
    },
    {
      "action": "databrew:DescribeDataset",
      "condition": null
    },
    {
      "action": "databrew:DescribeJob",
      "condition": null
    },
    {
      "action": "databrew:DescribeJobRun",
      "condition": null
    },
    {
      "action": "databrew:DescribeProject",
      "condition": null
    },
    {
      "action": "databrew:DescribeRecipe",
      "condition": null
    },
    {
      "action": "databrew:DescribeRuleset",
      "condition": null
    },
    {
      "action": "databrew:DescribeSchedule",
      "condition": null
    },
    {
      "action": "databrew:ListDatasets",
      "condition": null
    },
    {
      "action": "databrew:ListJobRuns",
      "condition": null
    },
    {
      "action": "databrew:ListJobs",
      "condition": null
    },
    {
      "action": "databrew:ListProjects",
      "condition": null
    },
    {
      "action": "databrew:ListRecipes",
      "condition": null
    },
    {
      "action": "databrew:ListRecipeVersions",
      "condition": null
    },
    {
      "action": "databrew:ListRulesets",
      "condition": null
    },
    {
      "action": "databrew:ListSchedules",
      "condition": null
    },
    {
      "action": "databrew:ListTagsForResource",
      "condition": null
    },
    {
      "action": "dataexchange:Get*",
      "condition": null
    },
    {
      "action": "dataexchange:List*",
      "condition": null
    },
    {
      "action": "datapipeline:Describe*",
      "condition": null
    },
    {
      "action": "datapipeline:EvaluateExpression",
      "condition": null
    },
    {
      "action": "datapipeline:Get*",
      "condition": null
    },
    {
      "action": "datapipeline:List*",
      "condition": null
    },
    {
      "action": "datapipeline:QueryObjects",
      "condition": null
    },
    {
      "action": "datapipeline:Validate*",
      "condition": null
    },
    {
      "action": "datasync:Describe*",
      "condition": null
    },
    {
      "action": "datasync:List*",
      "condition": null
    },
    {
      "action": "dax:BatchGetItem",
      "condition": null
    },
    {
      "action": "dax:Describe*",
      "condition": null
    },
    {
      "action": "dax:GetItem",
      "condition": null
    },
    {
      "action": "dax:ListTags",
      "condition": null
    },
    {
      "action": "dax:Query",
      "condition": null
    },
    {
      "action": "dax:Scan",
      "condition": null
    },
    {
      "action": "deadline:BatchGetJobEntity",
      "condition": null
    },
    {
      "action": "deadline:GetApplicationVersion",
      "condition": null
    },
    {
      "action": "deadline:GetBudget",
      "condition": null
    },
    {
      "action": "deadline:GetFarm",
      "condition": null
    },
    {
      "action": "deadline:GetFleet",
      "condition": null
    },
    {
      "action": "deadline:GetJob",
      "condition": null
    },
    {
      "action": "deadline:GetLicenseEndpoint",
      "condition": null
    },
    {
      "action": "deadline:GetMonitor",
      "condition": null
    },
    {
      "action": "deadline:GetQueue",
      "condition": null
    },
    {
      "action": "deadline:GetQueueEnvironment",
      "condition": null
    },
    {
      "action": "deadline:GetQueueFleetAssociation",
      "condition": null
    },
    {
      "action": "deadline:GetSession",
      "condition": null
    },
    {
      "action": "deadline:GetSessionAction",
      "condition": null
    },
    {
      "action": "deadline:GetSessionsStatisticsAggregation",
      "condition": null
    },
    {
      "action": "deadline:GetStep",
      "condition": null
    },
    {
      "action": "deadline:GetStorageProfile",
      "condition": null
    },
    {
      "action": "deadline:GetStorageProfileForQueue",
      "condition": null
    },
    {
      "action": "deadline:GetTask",
      "condition": null
    },
    {
      "action": "deadline:GetWorker",
      "condition": null
    },
    {
      "action": "deadline:ListAvailableMeteredProducts",
      "condition": null
    },
    {
      "action": "deadline:ListBudgets",
      "condition": null
    },
    {
      "action": "deadline:ListFarmMembers",
      "condition": null
    },
    {
      "action": "deadline:ListFarms",
      "condition": null
    },
    {
      "action": "deadline:ListFleetMembers",
      "condition": null
    },
    {
      "action": "deadline:ListFleets",
      "condition": null
    },
    {
      "action": "deadline:ListJobMembers",
      "condition": null
    },
    {
      "action": "deadline:ListJobs",
      "condition": null
    },
    {
      "action": "deadline:ListLicenseEndpoints",
      "condition": null
    },
    {
      "action": "deadline:ListMeteredProducts",
      "condition": null
    },
    {
      "action": "deadline:ListMonitors",
      "condition": null
    },
    {
      "action": "deadline:ListQueueEnvironments",
      "condition": null
    },
    {
      "action": "deadline:ListQueueFleetAssociations",
      "condition": null
    },
    {
      "action": "deadline:ListQueueMembers",
      "condition": null
    },
    {
      "action": "deadline:ListQueues",
      "condition": null
    },
    {
      "action": "deadline:ListSessionActions",
      "condition": null
    },
    {
      "action": "deadline:ListSessions",
      "condition": null
    },
    {
      "action": "deadline:ListSessionsForWorker",
      "condition": null
    },
    {
      "action": "deadline:ListStepConsumers",
      "condition": null
    },
    {
      "action": "deadline:ListStepDependencies",
      "condition": null
    },
    {
      "action": "deadline:ListSteps",
      "condition": null
    },
    {
      "action": "deadline:ListStorageProfiles",
      "condition": null
    },
    {
      "action": "deadline:ListStorageProfilesForQueue",
      "condition": null
    },
    {
      "action": "deadline:ListTagsForResource",
      "condition": null
    },
    {
      "action": "deadline:ListTasks",
      "condition": null
    },
    {
      "action": "deadline:ListWorkers",
      "condition": null
    },
    {
      "action": "deadline:SearchJobs",
      "condition": null
    },
    {
      "action": "deadline:SearchSteps",
      "condition": null
    },
    {
      "action": "deadline:SearchTasks",
      "condition": null
    },
    {
      "action": "deadline:SearchWorkers",
      "condition": null
    },
    {
      "action": "deepcomposer:GetComposition",
      "condition": null
    },
    {
      "action": "deepcomposer:GetModel",
      "condition": null
    },
    {
      "action": "deepcomposer:GetSampleModel",
      "condition": null
    },
    {
      "action": "deepcomposer:ListCompositions",
      "condition": null
    },
    {
      "action": "deepcomposer:ListModels",
      "condition": null
    },
    {
      "action": "deepcomposer:ListSampleModels",
      "condition": null
    },
    {
      "action": "deepcomposer:ListTrainingTopics",
      "condition": null
    },
    {
      "action": "detective:BatchGetGraphMemberDatasources",
      "condition": null
    },
    {
      "action": "detective:BatchGetMembershipDatasources",
      "condition": null
    },
    {
      "action": "detective:Get*",
      "condition": null
    },
    {
      "action": "detective:List*",
      "condition": null
    },
    {
      "action": "detective:SearchGraph",
      "condition": null
    },
    {
      "action": "devicefarm:Get*",
      "condition": null
    },
    {
      "action": "devicefarm:List*",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeAccountHealth",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeAccountOverview",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeAnomaly",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeEventSourcesConfig",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeFeedback",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeInsight",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeOrganizationHealth",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeOrganizationOverview",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeOrganizationResourceCollectionHealth",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeResourceCollectionHealth",
      "condition": null
    },
    {
      "action": "devops-guru:DescribeServiceIntegration",
      "condition": null
    },
    {
      "action": "devops-guru:GetCostEstimation",
      "condition": null
    },
    {
      "action": "devops-guru:GetResourceCollection",
      "condition": null
    },
    {
      "action": "devops-guru:ListAnomaliesForInsight",
      "condition": null
    },
    {
      "action": "devops-guru:ListAnomalousLogGroups",
      "condition": null
    },
    {
      "action": "devops-guru:ListEvents",
      "condition": null
    },
    {
      "action": "devops-guru:ListInsights",
      "condition": null
    },
    {
      "action": "devops-guru:ListMonitoredResources",
      "condition": null
    },
    {
      "action": "devops-guru:ListNotificationChannels",
      "condition": null
    },
    {
      "action": "devops-guru:ListOrganizationInsights",
      "condition": null
    },
    {
      "action": "devops-guru:ListRecommendations",
      "condition": null
    },
    {
      "action": "devops-guru:SearchInsights",
      "condition": null
    },
    {
      "action": "devops-guru:StartCostEstimation",
      "condition": null
    },
    {
      "action": "directconnect:Describe*",
      "condition": null
    },
    {
      "action": "discovery:Describe*",
      "condition": null
    },
    {
      "action": "discovery:Get*",
      "condition": null
    },
    {
      "action": "discovery:List*",
      "condition": null
    },
    {
      "action": "dlm:Get*",
      "condition": null
    },
    {
      "action": "dms:Describe*",
      "condition": null
    },
    {
      "action": "dms:List*",
      "condition": null
    },
    {
      "action": "dms:Test*",
      "condition": null
    },
    {
      "action": "drs:DescribeJobLogItems",
      "condition": null
    },
    {
      "action": "drs:DescribeJobs",
      "condition": null
    },
    {
      "action": "drs:DescribeLaunchConfigurationTemplates",
      "condition": null
    },
    {
      "action": "drs:DescribeRecoveryInstances",
      "condition": null
    },
    {
      "action": "drs:DescribeRecoverySnapshots",
      "condition": null
    },
    {
      "action": "drs:DescribeReplicationConfigurationTemplates",
      "condition": null
    },
    {
      "action": "drs:DescribeSourceNetworks",
      "condition": null
    },
    {
      "action": "drs:DescribeSourceServers",
      "condition": null
    },
    {
      "action": "drs:GetFailbackReplicationConfiguration",
      "condition": null
    },
    {
      "action": "drs:GetLaunchConfiguration",
      "condition": null
    },
    {
      "action": "drs:GetReplicationConfiguration",
      "condition": null
    },
    {
      "action": "drs:ListExtensibleSourceServers",
      "condition": null
    },
    {
      "action": "drs:ListLaunchActions",
      "condition": null
    },
    {
      "action": "drs:ListStagingAccounts",
      "condition": null
    },
    {
      "action": "drs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ds:Check*",
      "condition": null
    },
    {
      "action": "ds:Describe*",
      "condition": null
    },
    {
      "action": "ds:Get*",
      "condition": null
    },
    {
      "action": "ds:List*",
      "condition": null
    },
    {
      "action": "ds:Verify*",
      "condition": null
    },
    {
      "action": "dynamodb:BatchGet*",
      "condition": null
    },
    {
      "action": "dynamodb:Describe*",
      "condition": null
    },
    {
      "action": "dynamodb:Get*",
      "condition": null
    },
    {
      "action": "dynamodb:List*",
      "condition": null
    },
    {
      "action": "dynamodb:PartiQLSelect",
      "condition": null
    },
    {
      "action": "dynamodb:Query",
      "condition": null
    },
    {
      "action": "dynamodb:Scan",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:Get*",
      "condition": null
    },
    {
      "action": "ec2:ListImagesInRecycleBin",
      "condition": null
    },
    {
      "action": "ec2:ListSnapshotsInRecycleBin",
      "condition": null
    },
    {
      "action": "ec2:SearchLocalGatewayRoutes",
      "condition": null
    },
    {
      "action": "ec2:SearchTransitGatewayRoutes",
      "condition": null
    },
    {
      "action": "ec2messages:Get*",
      "condition": null
    },
    {
      "action": "ecr-public:BatchCheckLayerAvailability",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeImages",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeImageTags",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeRegistries",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr-public:GetAuthorizationToken",
      "condition": null
    },
    {
      "action": "ecr-public:GetRegistryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:GetRepositoryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:GetRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr-public:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ecr:BatchCheck*",
      "condition": null
    },
    {
      "action": "ecr:BatchGet*",
      "condition": null
    },
    {
      "action": "ecr:Describe*",
      "condition": null
    },
    {
      "action": "ecr:Get*",
      "condition": null
    },
    {
      "action": "ecr:List*",
      "condition": null
    },
    {
      "action": "ecs:Describe*",
      "condition": null
    },
    {
      "action": "ecs:List*",
      "condition": null
    },
    {
      "action": "eks:Describe*",
      "condition": null
    },
    {
      "action": "eks:List*",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAcceleratorOfferings",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAccelerators",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAcceleratorTypes",
      "condition": null
    },
    {
      "action": "elastic-inference:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticache:Describe*",
      "condition": null
    },
    {
      "action": "elasticache:List*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:Check*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:Describe*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:List*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:Request*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:Retrieve*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:Validate*",
      "condition": null
    },
    {
      "action": "elasticfilesystem:Describe*",
      "condition": null
    },
    {
      "action": "elasticfilesystem:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:Describe*",
      "condition": null
    },
    {
      "action": "elasticmapreduce:Describe*",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetBlockPublicAccessConfiguration",
      "condition": null
    },
    {
      "action": "elasticmapreduce:List*",
      "condition": null
    },
    {
      "action": "elasticmapreduce:View*",
      "condition": null
    },
    {
      "action": "elastictranscoder:List*",
      "condition": null
    },
    {
      "action": "elastictranscoder:Read*",
      "condition": null
    },
    {
      "action": "elemental-appliances-software:Get*",
      "condition": null
    },
    {
      "action": "elemental-appliances-software:List*",
      "condition": null
    },
    {
      "action": "emr-containers:DescribeJobRun",
      "condition": null
    },
    {
      "action": "emr-containers:DescribeManagedEndpoint",
      "condition": null
    },
    {
      "action": "emr-containers:DescribeVirtualCluster",
      "condition": null
    },
    {
      "action": "emr-containers:ListJobRuns",
      "condition": null
    },
    {
      "action": "emr-containers:ListManagedEndpoints",
      "condition": null
    },
    {
      "action": "emr-containers:ListTagsForResource",
      "condition": null
    },
    {
      "action": "emr-containers:ListVirtualClusters",
      "condition": null
    },
    {
      "action": "emr-serverless:GetApplication",
      "condition": null
    },
    {
      "action": "emr-serverless:GetDashboardForJobRun",
      "condition": null
    },
    {
      "action": "emr-serverless:GetJobRun",
      "condition": null
    },
    {
      "action": "emr-serverless:ListApplications",
      "condition": null
    },
    {
      "action": "emr-serverless:ListJobRuns",
      "condition": null
    },
    {
      "action": "emr-serverless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "es:Describe*",
      "condition": null
    },
    {
      "action": "es:ESHttpGet",
      "condition": null
    },
    {
      "action": "es:ESHttpHead",
      "condition": null
    },
    {
      "action": "es:Get*",
      "condition": null
    },
    {
      "action": "es:List*",
      "condition": null
    },
    {
      "action": "events:Describe*",
      "condition": null
    },
    {
      "action": "events:List*",
      "condition": null
    },
    {
      "action": "events:Test*",
      "condition": null
    },
    {
      "action": "evidently:GetExperiment",
      "condition": null
    },
    {
      "action": "evidently:GetExperimentResults",
      "condition": null
    },
    {
      "action": "evidently:GetFeature",
      "condition": null
    },
    {
      "action": "evidently:GetLaunch",
      "condition": null
    },
    {
      "action": "evidently:GetProject",
      "condition": null
    },
    {
      "action": "evidently:GetSegment",
      "condition": null
    },
    {
      "action": "evidently:ListExperiments",
      "condition": null
    },
    {
      "action": "evidently:ListFeatures",
      "condition": null
    },
    {
      "action": "evidently:ListLaunches",
      "condition": null
    },
    {
      "action": "evidently:ListProjects",
      "condition": null
    },
    {
      "action": "evidently:ListSegmentReferences",
      "condition": null
    },
    {
      "action": "evidently:ListSegments",
      "condition": null
    },
    {
      "action": "evidently:ListTagsForResource",
      "condition": null
    },
    {
      "action": "evidently:TestSegmentPattern",
      "condition": null
    },
    {
      "action": "firehose:Describe*",
      "condition": null
    },
    {
      "action": "firehose:List*",
      "condition": null
    },
    {
      "action": "fis:GetAction",
      "condition": null
    },
    {
      "action": "fis:GetExperiment",
      "condition": null
    },
    {
      "action": "fis:GetExperimentTargetAccountConfiguration",
      "condition": null
    },
    {
      "action": "fis:GetExperimentTemplate",
      "condition": null
    },
    {
      "action": "fis:GetTargetAccountConfiguration",
      "condition": null
    },
    {
      "action": "fis:GetTargetResourceType",
      "condition": null
    },
    {
      "action": "fis:ListActions",
      "condition": null
    },
    {
      "action": "fis:ListExperimentResolvedTargets",
      "condition": null
    },
    {
      "action": "fis:ListExperiments",
      "condition": null
    },
    {
      "action": "fis:ListExperimentTargetAccountConfigurations",
      "condition": null
    },
    {
      "action": "fis:ListExperimentTemplates",
      "condition": null
    },
    {
      "action": "fis:ListTagsForResource",
      "condition": null
    },
    {
      "action": "fis:ListTargetAccountConfigurations",
      "condition": null
    },
    {
      "action": "fis:ListTargetResourceTypes",
      "condition": null
    },
    {
      "action": "fms:GetAdminAccount",
      "condition": null
    },
    {
      "action": "fms:GetAppsList",
      "condition": null
    },
    {
      "action": "fms:GetComplianceDetail",
      "condition": null
    },
    {
      "action": "fms:GetNotificationChannel",
      "condition": null
    },
    {
      "action": "fms:GetPolicy",
      "condition": null
    },
    {
      "action": "fms:GetProtectionStatus",
      "condition": null
    },
    {
      "action": "fms:GetProtocolsList",
      "condition": null
    },
    {
      "action": "fms:GetViolationDetails",
      "condition": null
    },
    {
      "action": "fms:ListAppsLists",
      "condition": null
    },
    {
      "action": "fms:ListComplianceStatus",
      "condition": null
    },
    {
      "action": "fms:ListMemberAccounts",
      "condition": null
    },
    {
      "action": "fms:ListPolicies",
      "condition": null
    },
    {
      "action": "fms:ListProtocolsLists",
      "condition": null
    },
    {
      "action": "fms:ListTagsForResource",
      "condition": null
    },
    {
      "action": "forecast:DescribeAutoPredictor",
      "condition": null
    },
    {
      "action": "forecast:DescribeDataset",
      "condition": null
    },
    {
      "action": "forecast:DescribeDatasetGroup",
      "condition": null
    },
    {
      "action": "forecast:DescribeDatasetImportJob",
      "condition": null
    },
    {
      "action": "forecast:DescribeExplainability",
      "condition": null
    },
    {
      "action": "forecast:DescribeExplainabilityExport",
      "condition": null
    },
    {
      "action": "forecast:DescribeForecast",
      "condition": null
    },
    {
      "action": "forecast:DescribeForecastExportJob",
      "condition": null
    },
    {
      "action": "forecast:DescribeMonitor",
      "condition": null
    },
    {
      "action": "forecast:DescribePredictor",
      "condition": null
    },
    {
      "action": "forecast:DescribePredictorBacktestExportJob",
      "condition": null
    },
    {
      "action": "forecast:DescribeWhatIfAnalysis",
      "condition": null
    },
    {
      "action": "forecast:DescribeWhatIfForecast",
      "condition": null
    },
    {
      "action": "forecast:DescribeWhatIfForecastExport",
      "condition": null
    },
    {
      "action": "forecast:GetAccuracyMetrics",
      "condition": null
    },
    {
      "action": "forecast:ListDatasetGroups",
      "condition": null
    },
    {
      "action": "forecast:ListDatasetImportJobs",
      "condition": null
    },
    {
      "action": "forecast:ListDatasets",
      "condition": null
    },
    {
      "action": "forecast:ListExplainabilities",
      "condition": null
    },
    {
      "action": "forecast:ListExplainabilityExports",
      "condition": null
    },
    {
      "action": "forecast:ListForecastExportJobs",
      "condition": null
    },
    {
      "action": "forecast:ListForecasts",
      "condition": null
    },
    {
      "action": "forecast:ListMonitorEvaluations",
      "condition": null
    },
    {
      "action": "forecast:ListMonitors",
      "condition": null
    },
    {
      "action": "forecast:ListPredictorBacktestExportJobs",
      "condition": null
    },
    {
      "action": "forecast:ListPredictors",
      "condition": null
    },
    {
      "action": "forecast:ListWhatIfAnalyses",
      "condition": null
    },
    {
      "action": "forecast:ListWhatIfForecastExports",
      "condition": null
    },
    {
      "action": "forecast:ListWhatIfForecasts",
      "condition": null
    },
    {
      "action": "forecast:QueryForecast",
      "condition": null
    },
    {
      "action": "forecast:QueryWhatIfForecast",
      "condition": null
    },
    {
      "action": "frauddetector:BatchGetVariable",
      "condition": null
    },
    {
      "action": "frauddetector:DescribeDetector",
      "condition": null
    },
    {
      "action": "frauddetector:DescribeModelVersions",
      "condition": null
    },
    {
      "action": "frauddetector:GetBatchImportJobs",
      "condition": null
    },
    {
      "action": "frauddetector:GetBatchPredictionJobs",
      "condition": null
    },
    {
      "action": "frauddetector:GetDeleteEventsByEventTypeStatus",
      "condition": null
    },
    {
      "action": "frauddetector:GetDetectors",
      "condition": null
    },
    {
      "action": "frauddetector:GetDetectorVersion",
      "condition": null
    },
    {
      "action": "frauddetector:GetEntityTypes",
      "condition": null
    },
    {
      "action": "frauddetector:GetEvent",
      "condition": null
    },
    {
      "action": "frauddetector:GetEventPredictionMetadata",
      "condition": null
    },
    {
      "action": "frauddetector:GetEventTypes",
      "condition": null
    },
    {
      "action": "frauddetector:GetExternalModels",
      "condition": null
    },
    {
      "action": "frauddetector:GetKMSEncryptionKey",
      "condition": null
    },
    {
      "action": "frauddetector:GetLabels",
      "condition": null
    },
    {
      "action": "frauddetector:GetListElements",
      "condition": null
    },
    {
      "action": "frauddetector:GetListsMetadata",
      "condition": null
    },
    {
      "action": "frauddetector:GetModels",
      "condition": null
    },
    {
      "action": "frauddetector:GetModelVersion",
      "condition": null
    },
    {
      "action": "frauddetector:GetOutcomes",
      "condition": null
    },
    {
      "action": "frauddetector:GetRules",
      "condition": null
    },
    {
      "action": "frauddetector:GetVariables",
      "condition": null
    },
    {
      "action": "frauddetector:ListEventPredictions",
      "condition": null
    },
    {
      "action": "frauddetector:ListTagsForResource",
      "condition": null
    },
    {
      "action": "freertos:Describe*",
      "condition": null
    },
    {
      "action": "freertos:List*",
      "condition": null
    },
    {
      "action": "freetier:GetFreeTierAlertPreference",
      "condition": null
    },
    {
      "action": "freetier:GetFreeTierUsage",
      "condition": null
    },
    {
      "action": "fsx:Describe*",
      "condition": null
    },
    {
      "action": "fsx:List*",
      "condition": null
    },
    {
      "action": "gamelift:Describe*",
      "condition": null
    },
    {
      "action": "gamelift:Get*",
      "condition": null
    },
    {
      "action": "gamelift:List*",
      "condition": null
    },
    {
      "action": "gamelift:ResolveAlias",
      "condition": null
    },
    {
      "action": "gamelift:Search*",
      "condition": null
    },
    {
      "action": "glacier:Describe*",
      "condition": null
    },
    {
      "action": "glacier:Get*",
      "condition": null
    },
    {
      "action": "glacier:List*",
      "condition": null
    },
    {
      "action": "globalaccelerator:Describe*",
      "condition": null
    },
    {
      "action": "globalaccelerator:List*",
      "condition": null
    },
    {
      "action": "glue:BatchGetCrawlers",
      "condition": null
    },
    {
      "action": "glue:BatchGetDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:BatchGetJobs",
      "condition": null
    },
    {
      "action": "glue:BatchGetPartition",
      "condition": null
    },
    {
      "action": "glue:BatchGetTriggers",
      "condition": null
    },
    {
      "action": "glue:BatchGetWorkflows",
      "condition": null
    },
    {
      "action": "glue:CheckSchemaVersionValidity",
      "condition": null
    },
    {
      "action": "glue:GetCatalogImportStatus",
      "condition": null
    },
    {
      "action": "glue:GetClassifier",
      "condition": null
    },
    {
      "action": "glue:GetClassifiers",
      "condition": null
    },
    {
      "action": "glue:GetCrawler",
      "condition": null
    },
    {
      "action": "glue:GetCrawlerMetrics",
      "condition": null
    },
    {
      "action": "glue:GetCrawlers",
      "condition": null
    },
    {
      "action": "glue:GetDatabase",
      "condition": null
    },
    {
      "action": "glue:GetDatabases",
      "condition": null
    },
    {
      "action": "glue:GetDataCatalogEncryptionSettings",
      "condition": null
    },
    {
      "action": "glue:GetDataflowGraph",
      "condition": null
    },
    {
      "action": "glue:GetDevEndpoint",
      "condition": null
    },
    {
      "action": "glue:GetDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:GetJob",
      "condition": null
    },
    {
      "action": "glue:GetJobBookmark",
      "condition": null
    },
    {
      "action": "glue:GetJobRun",
      "condition": null
    },
    {
      "action": "glue:GetJobRuns",
      "condition": null
    },
    {
      "action": "glue:GetJobs",
      "condition": null
    },
    {
      "action": "glue:GetMapping",
      "condition": null
    },
    {
      "action": "glue:GetMLTaskRun",
      "condition": null
    },
    {
      "action": "glue:GetMLTaskRuns",
      "condition": null
    },
    {
      "action": "glue:GetMLTransform",
      "condition": null
    },
    {
      "action": "glue:GetMLTransforms",
      "condition": null
    },
    {
      "action": "glue:GetPartition",
      "condition": null
    },
    {
      "action": "glue:GetPartitions",
      "condition": null
    },
    {
      "action": "glue:GetPlan",
      "condition": null
    },
    {
      "action": "glue:GetRegistry",
      "condition": null
    },
    {
      "action": "glue:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "glue:GetSchema",
      "condition": null
    },
    {
      "action": "glue:GetSchemaByDefinition",
      "condition": null
    },
    {
      "action": "glue:GetSchemaVersion",
      "condition": null
    },
    {
      "action": "glue:GetSchemaVersionsDiff",
      "condition": null
    },
    {
      "action": "glue:GetSecurityConfiguration",
      "condition": null
    },
    {
      "action": "glue:GetSecurityConfigurations",
      "condition": null
    },
    {
      "action": "glue:GetTable",
      "condition": null
    },
    {
      "action": "glue:GetTables",
      "condition": null
    },
    {
      "action": "glue:GetTableVersion",
      "condition": null
    },
    {
      "action": "glue:GetTableVersions",
      "condition": null
    },
    {
      "action": "glue:GetTags",
      "condition": null
    },
    {
      "action": "glue:GetTrigger",
      "condition": null
    },
    {
      "action": "glue:GetTriggers",
      "condition": null
    },
    {
      "action": "glue:GetUserDefinedFunction",
      "condition": null
    },
    {
      "action": "glue:GetUserDefinedFunctions",
      "condition": null
    },
    {
      "action": "glue:GetWorkflow",
      "condition": null
    },
    {
      "action": "glue:GetWorkflowRun",
      "condition": null
    },
    {
      "action": "glue:GetWorkflowRunProperties",
      "condition": null
    },
    {
      "action": "glue:GetWorkflowRuns",
      "condition": null
    },
    {
      "action": "glue:ListCrawlers",
      "condition": null
    },
    {
      "action": "glue:ListCrawls",
      "condition": null
    },
    {
      "action": "glue:ListDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:ListJobs",
      "condition": null
    },
    {
      "action": "glue:ListMLTransforms",
      "condition": null
    },
    {
      "action": "glue:ListRegistries",
      "condition": null
    },
    {
      "action": "glue:ListSchemas",
      "condition": null
    },
    {
      "action": "glue:ListSchemaVersions",
      "condition": null
    },
    {
      "action": "glue:ListTriggers",
      "condition": null
    },
    {
      "action": "glue:ListWorkflows",
      "condition": null
    },
    {
      "action": "glue:QuerySchemaVersionMetadata",
      "condition": null
    },
    {
      "action": "glue:SearchTables",
      "condition": null
    },
    {
      "action": "grafana:DescribeWorkspace",
      "condition": null
    },
    {
      "action": "grafana:DescribeWorkspaceAuthentication",
      "condition": null
    },
    {
      "action": "grafana:DescribeWorkspaceConfiguration",
      "condition": null
    },
    {
      "action": "grafana:ListPermissions",
      "condition": null
    },
    {
      "action": "grafana:ListTagsForResource",
      "condition": null
    },
    {
      "action": "grafana:ListVersions",
      "condition": null
    },
    {
      "action": "grafana:ListWorkspaces",
      "condition": null
    },
    {
      "action": "greengrass:DescribeComponent",
      "condition": null
    },
    {
      "action": "greengrass:Get*",
      "condition": null
    },
    {
      "action": "greengrass:List*",
      "condition": null
    },
    {
      "action": "groundstation:DescribeContact",
      "condition": null
    },
    {
      "action": "groundstation:GetConfig",
      "condition": null
    },
    {
      "action": "groundstation:GetDataflowEndpointGroup",
      "condition": null
    },
    {
      "action": "groundstation:GetMinuteUsage",
      "condition": null
    },
    {
      "action": "groundstation:GetMissionProfile",
      "condition": null
    },
    {
      "action": "groundstation:GetSatellite",
      "condition": null
    },
    {
      "action": "groundstation:ListConfigs",
      "condition": null
    },
    {
      "action": "groundstation:ListContacts",
      "condition": null
    },
    {
      "action": "groundstation:ListDataflowEndpointGroups",
      "condition": null
    },
    {
      "action": "groundstation:ListGroundStations",
      "condition": null
    },
    {
      "action": "groundstation:ListMissionProfiles",
      "condition": null
    },
    {
      "action": "groundstation:ListSatellites",
      "condition": null
    },
    {
      "action": "groundstation:ListTagsForResource",
      "condition": null
    },
    {
      "action": "guardduty:Describe*",
      "condition": null
    },
    {
      "action": "guardduty:Get*",
      "condition": null
    },
    {
      "action": "guardduty:List*",
      "condition": null
    },
    {
      "action": "health:Describe*",
      "condition": null
    },
    {
      "action": "healthlake:DescribeFHIRDatastore",
      "condition": null
    },
    {
      "action": "healthlake:DescribeFHIRExportJob",
      "condition": null
    },
    {
      "action": "healthlake:DescribeFHIRImportJob",
      "condition": null
    },
    {
      "action": "healthlake:GetCapabilities",
      "condition": null
    },
    {
      "action": "healthlake:ListFHIRDatastores",
      "condition": null
    },
    {
      "action": "healthlake:ListFHIRExportJobs",
      "condition": null
    },
    {
      "action": "healthlake:ListFHIRImportJobs",
      "condition": null
    },
    {
      "action": "healthlake:ListTagsForResource",
      "condition": null
    },
    {
      "action": "healthlake:ReadResource",
      "condition": null
    },
    {
      "action": "healthlake:SearchWithGet",
      "condition": null
    },
    {
      "action": "healthlake:SearchWithPost",
      "condition": null
    },
    {
      "action": "iam:Generate*",
      "condition": null
    },
    {
      "action": "iam:Get*",
      "condition": null
    },
    {
      "action": "iam:List*",
      "condition": null
    },
    {
      "action": "iam:Simulate*",
      "condition": null
    },
    {
      "action": "identity-sync:GetSyncProfile",
      "condition": null
    },
    {
      "action": "identity-sync:GetSyncTarget",
      "condition": null
    },
    {
      "action": "identity-sync:ListSyncFilters",
      "condition": null
    },
    {
      "action": "identitystore-auth:BatchGetSession",
      "condition": null
    },
    {
      "action": "identitystore-auth:ListSessions",
      "condition": null
    },
    {
      "action": "identitystore:DescribeGroup",
      "condition": null
    },
    {
      "action": "identitystore:DescribeGroupMembership",
      "condition": null
    },
    {
      "action": "identitystore:DescribeUser",
      "condition": null
    },
    {
      "action": "identitystore:GetGroupId",
      "condition": null
    },
    {
      "action": "identitystore:GetGroupMembershipId",
      "condition": null
    },
    {
      "action": "identitystore:GetUserId",
      "condition": null
    },
    {
      "action": "identitystore:IsMemberInGroups",
      "condition": null
    },
    {
      "action": "identitystore:ListGroupMemberships",
      "condition": null
    },
    {
      "action": "identitystore:ListGroupMembershipsForMember",
      "condition": null
    },
    {
      "action": "identitystore:ListGroups",
      "condition": null
    },
    {
      "action": "identitystore:ListUsers",
      "condition": null
    },
    {
      "action": "imagebuilder:Get*",
      "condition": null
    },
    {
      "action": "imagebuilder:List*",
      "condition": null
    },
    {
      "action": "importexport:Get*",
      "condition": null
    },
    {
      "action": "importexport:List*",
      "condition": null
    },
    {
      "action": "inspector:Describe*",
      "condition": null
    },
    {
      "action": "inspector:Get*",
      "condition": null
    },
    {
      "action": "inspector:List*",
      "condition": null
    },
    {
      "action": "inspector:Preview*",
      "condition": null
    },
    {
      "action": "inspector2:BatchGetAccountStatus",
      "condition": null
    },
    {
      "action": "inspector2:BatchGetFreeTrialInfo",
      "condition": null
    },
    {
      "action": "inspector2:DescribeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "inspector2:GetDelegatedAdminAccount",
      "condition": null
    },
    {
      "action": "inspector2:GetFindingsReportStatus",
      "condition": null
    },
    {
      "action": "inspector2:GetMember",
      "condition": null
    },
    {
      "action": "inspector2:ListAccountPermissions",
      "condition": null
    },
    {
      "action": "inspector2:ListCisScans",
      "condition": null
    },
    {
      "action": "inspector2:ListCoverage",
      "condition": null
    },
    {
      "action": "inspector2:ListCoverageStatistics",
      "condition": null
    },
    {
      "action": "inspector2:ListDelegatedAdminAccounts",
      "condition": null
    },
    {
      "action": "inspector2:ListFilters",
      "condition": null
    },
    {
      "action": "inspector2:ListFindingAggregations",
      "condition": null
    },
    {
      "action": "inspector2:ListFindings",
      "condition": null
    },
    {
      "action": "inspector2:ListMembers",
      "condition": null
    },
    {
      "action": "inspector2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "inspector2:ListUsageTotals",
      "condition": null
    },
    {
      "action": "internetmonitor:GetHealthEvent",
      "condition": null
    },
    {
      "action": "internetmonitor:GetInternetEvent",
      "condition": null
    },
    {
      "action": "internetmonitor:GetMonitor",
      "condition": null
    },
    {
      "action": "internetmonitor:ListHealthEvents",
      "condition": null
    },
    {
      "action": "internetmonitor:ListInternetEvents",
      "condition": null
    },
    {
      "action": "internetmonitor:ListMonitors",
      "condition": null
    },
    {
      "action": "internetmonitor:ListTagsForResource",
      "condition": null
    },
    {
      "action": "invoicing:GetInvoiceEmailDeliveryPreferences",
      "condition": null
    },
    {
      "action": "invoicing:GetInvoicePDF",
      "condition": null
    },
    {
      "action": "invoicing:ListInvoiceSummaries",
      "condition": null
    },
    {
      "action": "iot:Describe*",
      "condition": null
    },
    {
      "action": "iot:Get*",
      "condition": null
    },
    {
      "action": "iot:List*",
      "condition": null
    },
    {
      "action": "iot1click:DescribeDevice",
      "condition": null
    },
    {
      "action": "iot1click:DescribePlacement",
      "condition": null
    },
    {
      "action": "iot1click:DescribeProject",
      "condition": null
    },
    {
      "action": "iot1click:GetDeviceMethods",
      "condition": null
    },
    {
      "action": "iot1click:GetDevicesInPlacement",
      "condition": null
    },
    {
      "action": "iot1click:ListDeviceEvents",
      "condition": null
    },
    {
      "action": "iot1click:ListDevices",
      "condition": null
    },
    {
      "action": "iot1click:ListPlacements",
      "condition": null
    },
    {
      "action": "iot1click:ListProjects",
      "condition": null
    },
    {
      "action": "iot1click:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotanalytics:Describe*",
      "condition": null
    },
    {
      "action": "iotanalytics:Get*",
      "condition": null
    },
    {
      "action": "iotanalytics:List*",
      "condition": null
    },
    {
      "action": "iotanalytics:SampleChannelData",
      "condition": null
    },
    {
      "action": "iotevents:DescribeAlarm",
      "condition": null
    },
    {
      "action": "iotevents:DescribeAlarmModel",
      "condition": null
    },
    {
      "action": "iotevents:DescribeDetector",
      "condition": null
    },
    {
      "action": "iotevents:DescribeDetectorModel",
      "condition": null
    },
    {
      "action": "iotevents:DescribeInput",
      "condition": null
    },
    {
      "action": "iotevents:DescribeLoggingOptions",
      "condition": null
    },
    {
      "action": "iotevents:ListAlarmModels",
      "condition": null
    },
    {
      "action": "iotevents:ListAlarmModelVersions",
      "condition": null
    },
    {
      "action": "iotevents:ListAlarms",
      "condition": null
    },
    {
      "action": "iotevents:ListDetectorModels",
      "condition": null
    },
    {
      "action": "iotevents:ListDetectorModelVersions",
      "condition": null
    },
    {
      "action": "iotevents:ListDetectors",
      "condition": null
    },
    {
      "action": "iotevents:ListInputs",
      "condition": null
    },
    {
      "action": "iotevents:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotfleethub:DescribeApplication",
      "condition": null
    },
    {
      "action": "iotfleethub:ListApplications",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetCampaign",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetDecoderManifest",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetFleet",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetLoggingOptions",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetModelManifest",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetRegisterAccountStatus",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetSignalCatalog",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetVehicle",
      "condition": null
    },
    {
      "action": "iotfleetwise:GetVehicleStatus",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListCampaigns",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListDecoderManifestNetworkInterfaces",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListDecoderManifests",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListDecoderManifestSignals",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListFleets",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListFleetsForVehicle",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListModelManifestNodes",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListModelManifests",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListSignalCatalogNodes",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListSignalCatalogs",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListVehicles",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListVehiclesInFleet",
      "condition": null
    },
    {
      "action": "iotroborunner:GetDestination",
      "condition": null
    },
    {
      "action": "iotroborunner:GetSite",
      "condition": null
    },
    {
      "action": "iotroborunner:GetWorker",
      "condition": null
    },
    {
      "action": "iotroborunner:GetWorkerFleet",
      "condition": null
    },
    {
      "action": "iotroborunner:ListDestinations",
      "condition": null
    },
    {
      "action": "iotroborunner:ListSites",
      "condition": null
    },
    {
      "action": "iotroborunner:ListWorkerFleets",
      "condition": null
    },
    {
      "action": "iotroborunner:ListWorkers",
      "condition": null
    },
    {
      "action": "iotsitewise:Describe*",
      "condition": null
    },
    {
      "action": "iotsitewise:Get*",
      "condition": null
    },
    {
      "action": "iotsitewise:List*",
      "condition": null
    },
    {
      "action": "iotwireless:GetDestination",
      "condition": null
    },
    {
      "action": "iotwireless:GetDeviceProfile",
      "condition": null
    },
    {
      "action": "iotwireless:GetEventConfigurationByResourceTypes",
      "condition": null
    },
    {
      "action": "iotwireless:GetFuotaTask",
      "condition": null
    },
    {
      "action": "iotwireless:GetLogLevelsByResourceTypes",
      "condition": null
    },
    {
      "action": "iotwireless:GetMetrics",
      "condition": null
    },
    {
      "action": "iotwireless:GetMetricConfiguration",
      "condition": null
    },
    {
      "action": "iotwireless:GetMulticastGroup",
      "condition": null
    },
    {
      "action": "iotwireless:GetMulticastGroupSession",
      "condition": null
    },
    {
      "action": "iotwireless:GetNetworkAnalyzerConfiguration",
      "condition": null
    },
    {
      "action": "iotwireless:GetPartnerAccount",
      "condition": null
    },
    {
      "action": "iotwireless:GetPosition",
      "condition": null
    },
    {
      "action": "iotwireless:GetPositionConfiguration",
      "condition": null
    },
    {
      "action": "iotwireless:GetPositionEstimate",
      "condition": null
    },
    {
      "action": "iotwireless:GetResourceEventConfiguration",
      "condition": null
    },
    {
      "action": "iotwireless:GetResourceLogLevel",
      "condition": null
    },
    {
      "action": "iotwireless:GetResourcePosition",
      "condition": null
    },
    {
      "action": "iotwireless:GetServiceEndpoint",
      "condition": null
    },
    {
      "action": "iotwireless:GetServiceProfile",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessDevice",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessDeviceImportTask",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessDeviceStatistics",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGateway",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGatewayCertificate",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGatewayFirmwareInformation",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGatewayStatistics",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGatewayTask",
      "condition": null
    },
    {
      "action": "iotwireless:GetWirelessGatewayTaskDefinition",
      "condition": null
    },
    {
      "action": "iotwireless:ListDestinations",
      "condition": null
    },
    {
      "action": "iotwireless:ListDeviceProfiles",
      "condition": null
    },
    {
      "action": "iotwireless:ListDevicesForWirelessDeviceImportTask",
      "condition": null
    },
    {
      "action": "iotwireless:ListEventConfigurations",
      "condition": null
    },
    {
      "action": "iotwireless:ListFuotaTasks",
      "condition": null
    },
    {
      "action": "iotwireless:ListMulticastGroups",
      "condition": null
    },
    {
      "action": "iotwireless:ListMulticastGroupsByFuotaTask",
      "condition": null
    },
    {
      "action": "iotwireless:ListNetworkAnalyzerConfigurations",
      "condition": null
    },
    {
      "action": "iotwireless:ListPartnerAccounts",
      "condition": null
    },
    {
      "action": "iotwireless:ListPositionConfigurations",
      "condition": null
    },
    {
      "action": "iotwireless:ListQueuedMessages",
      "condition": null
    },
    {
      "action": "iotwireless:ListServiceProfiles",
      "condition": null
    },
    {
      "action": "iotwireless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "iotwireless:ListWirelessDeviceImportTasks",
      "condition": null
    },
    {
      "action": "iotwireless:ListWirelessDevices",
      "condition": null
    },
    {
      "action": "iotwireless:ListWirelessGateways",
      "condition": null
    },
    {
      "action": "iotwireless:ListWirelessGatewayTaskDefinitions",
      "condition": null
    },
    {
      "action": "ivs:BatchGetChannel",
      "condition": null
    },
    {
      "action": "ivs:GetChannel",
      "condition": null
    },
    {
      "action": "ivs:GetComposition",
      "condition": null
    },
    {
      "action": "ivs:GetEncoderConfiguration",
      "condition": null
    },
    {
      "action": "ivs:GetStage",
      "condition": null
    },
    {
      "action": "ivs:GetStageSession",
      "condition": null
    },
    {
      "action": "ivs:GetParticipant",
      "condition": null
    },
    {
      "action": "ivs:GetPlaybackKeyPair",
      "condition": null
    },
    {
      "action": "ivs:GetPlaybackRestrictionPolicy",
      "condition": null
    },
    {
      "action": "ivs:GetRecordingConfiguration",
      "condition": null
    },
    {
      "action": "ivs:GetStreamSession",
      "condition": null
    },
    {
      "action": "ivs:ListChannels",
      "condition": null
    },
    {
      "action": "ivs:ListCompositions",
      "condition": null
    },
    {
      "action": "ivs:ListEncoderConfigurations",
      "condition": null
    },
    {
      "action": "ivs:ListParticipants",
      "condition": null
    },
    {
      "action": "ivs:ListParticipantEvents",
      "condition": null
    },
    {
      "action": "ivs:ListPlaybackKeyPairs",
      "condition": null
    },
    {
      "action": "ivs:ListPlaybackRestrictionPolicies",
      "condition": null
    },
    {
      "action": "ivs:ListRecordingConfigurations",
      "condition": null
    },
    {
      "action": "ivs:ListStages",
      "condition": null
    },
    {
      "action": "ivs:ListStageSessions",
      "condition": null
    },
    {
      "action": "ivs:ListStreams",
      "condition": null
    },
    {
      "action": "ivs:ListStreamKeys",
      "condition": null
    },
    {
      "action": "ivs:ListStreamSessions",
      "condition": null
    },
    {
      "action": "ivs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ivschat:GetLoggingConfiguration",
      "condition": null
    },
    {
      "action": "ivschat:GetRoom",
      "condition": null
    },
    {
      "action": "ivschat:ListLoggingConfigurations",
      "condition": null
    },
    {
      "action": "ivschat:ListRooms",
      "condition": null
    },
    {
      "action": "ivschat:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kafka:Describe*",
      "condition": null
    },
    {
      "action": "kafka:DescribeCluster",
      "condition": null
    },
    {
      "action": "kafka:DescribeClusterOperation",
      "condition": null
    },
    {
      "action": "kafka:DescribeClusterV2",
      "condition": null
    },
    {
      "action": "kafka:DescribeConfiguration",
      "condition": null
    },
    {
      "action": "kafka:DescribeConfigurationRevision",
      "condition": null
    },
    {
      "action": "kafka:Get*",
      "condition": null
    },
    {
      "action": "kafka:GetBootstrapBrokers",
      "condition": null
    },
    {
      "action": "kafka:GetCompatibleKafkaVersions",
      "condition": null
    },
    {
      "action": "kafka:List*",
      "condition": null
    },
    {
      "action": "kafka:ListClusterOperations",
      "condition": null
    },
    {
      "action": "kafka:ListClusters",
      "condition": null
    },
    {
      "action": "kafka:ListClustersV2",
      "condition": null
    },
    {
      "action": "kafka:ListConfigurationRevisions",
      "condition": null
    },
    {
      "action": "kafka:ListConfigurations",
      "condition": null
    },
    {
      "action": "kafka:ListKafkaVersions",
      "condition": null
    },
    {
      "action": "kafka:ListNodes",
      "condition": null
    },
    {
      "action": "kafka:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kafkaconnect:DescribeConnector",
      "condition": null
    },
    {
      "action": "kafkaconnect:DescribeCustomPlugin",
      "condition": null
    },
    {
      "action": "kafkaconnect:DescribeWorkerConfiguration",
      "condition": null
    },
    {
      "action": "kafkaconnect:ListConnectors",
      "condition": null
    },
    {
      "action": "kafkaconnect:ListCustomPlugins",
      "condition": null
    },
    {
      "action": "kafkaconnect:ListWorkerConfigurations",
      "condition": null
    },
    {
      "action": "kendra:BatchGetDocumentStatus",
      "condition": null
    },
    {
      "action": "kendra:DescribeDataSource",
      "condition": null
    },
    {
      "action": "kendra:DescribeExperience",
      "condition": null
    },
    {
      "action": "kendra:DescribeFaq",
      "condition": null
    },
    {
      "action": "kendra:DescribeIndex",
      "condition": null
    },
    {
      "action": "kendra:DescribePrincipalMapping",
      "condition": null
    },
    {
      "action": "kendra:DescribeQuerySuggestionsBlockList",
      "condition": null
    },
    {
      "action": "kendra:DescribeQuerySuggestionsConfig",
      "condition": null
    },
    {
      "action": "kendra:DescribeThesaurus",
      "condition": null
    },
    {
      "action": "kendra:GetQuerySuggestions",
      "condition": null
    },
    {
      "action": "kendra:GetSnapshots",
      "condition": null
    },
    {
      "action": "kendra:ListDataSources",
      "condition": null
    },
    {
      "action": "kendra:ListDataSourceSyncJobs",
      "condition": null
    },
    {
      "action": "kendra:ListEntityPersonas",
      "condition": null
    },
    {
      "action": "kendra:ListExperienceEntities",
      "condition": null
    },
    {
      "action": "kendra:ListExperiences",
      "condition": null
    },
    {
      "action": "kendra:ListFaqs",
      "condition": null
    },
    {
      "action": "kendra:ListGroupsOlderThanOrderingId",
      "condition": null
    },
    {
      "action": "kendra:ListIndices",
      "condition": null
    },
    {
      "action": "kendra:ListQuerySuggestionsBlockLists",
      "condition": null
    },
    {
      "action": "kendra:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kendra:ListThesauri",
      "condition": null
    },
    {
      "action": "kendra:Query",
      "condition": null
    },
    {
      "action": "kinesis:Describe*",
      "condition": null
    },
    {
      "action": "kinesis:Get*",
      "condition": null
    },
    {
      "action": "kinesis:List*",
      "condition": null
    },
    {
      "action": "kinesisanalytics:Describe*",
      "condition": null
    },
    {
      "action": "kinesisanalytics:Discover*",
      "condition": null
    },
    {
      "action": "kinesisanalytics:Get*",
      "condition": null
    },
    {
      "action": "kinesisanalytics:List*",
      "condition": null
    },
    {
      "action": "kinesisvideo:Describe*",
      "condition": null
    },
    {
      "action": "kinesisvideo:Get*",
      "condition": null
    },
    {
      "action": "kinesisvideo:List*",
      "condition": null
    },
    {
      "action": "kms:Describe*",
      "condition": null
    },
    {
      "action": "kms:Get*",
      "condition": null
    },
    {
      "action": "kms:List*",
      "condition": null
    },
    {
      "action": "lakeformation:DescribeResource",
      "condition": null
    },
    {
      "action": "lakeformation:GetDataCellsFilter",
      "condition": null
    },
    {
      "action": "lakeformation:GetDataLakeSettings",
      "condition": null
    },
    {
      "action": "lakeformation:GetEffectivePermissionsForPath",
      "condition": null
    },
    {
      "action": "lakeformation:GetLfTag",
      "condition": null
    },
    {
      "action": "lakeformation:GetResourceLfTags",
      "condition": null
    },
    {
      "action": "lakeformation:ListDataCellsFilter",
      "condition": null
    },
    {
      "action": "lakeformation:ListLfTags",
      "condition": null
    },
    {
      "action": "lakeformation:ListPermissions",
      "condition": null
    },
    {
      "action": "lakeformation:ListResources",
      "condition": null
    },
    {
      "action": "lakeformation:ListTableStorageOptimizers",
      "condition": null
    },
    {
      "action": "lakeformation:SearchDatabasesByLfTags",
      "condition": null
    },
    {
      "action": "lakeformation:SearchTablesByLfTags",
      "condition": null
    },
    {
      "action": "lambda:Get*",
      "condition": null
    },
    {
      "action": "lambda:List*",
      "condition": null
    },
    {
      "action": "launchwizard:DescribeAdditionalNode",
      "condition": null
    },
    {
      "action": "launchwizard:DescribeProvisionedApp",
      "condition": null
    },
    {
      "action": "launchwizard:DescribeProvisioningEvents",
      "condition": null
    },
    {
      "action": "launchwizard:DescribeSettingsSet",
      "condition": null
    },
    {
      "action": "launchwizard:GetDeployment",
      "condition": null
    },
    {
      "action": "launchwizard:GetInfrastructureSuggestion",
      "condition": null
    },
    {
      "action": "launchwizard:GetIpAddress",
      "condition": null
    },
    {
      "action": "launchwizard:GetResourceCostEstimate",
      "condition": null
    },
    {
      "action": "launchwizard:GetResourceRecommendation",
      "condition": null
    },
    {
      "action": "launchwizard:GetSettingsSet",
      "condition": null
    },
    {
      "action": "launchwizard:GetWorkload",
      "condition": null
    },
    {
      "action": "launchwizard:GetWorkloadAsset",
      "condition": null
    },
    {
      "action": "launchwizard:GetWorkloadAssets",
      "condition": null
    },
    {
      "action": "launchwizard:ListAdditionalNodes",
      "condition": null
    },
    {
      "action": "launchwizard:ListAllowedResources",
      "condition": null
    },
    {
      "action": "launchwizard:ListDeploymentEvents",
      "condition": null
    },
    {
      "action": "launchwizard:ListDeployments",
      "condition": null
    },
    {
      "action": "launchwizard:ListProvisionedApps",
      "condition": null
    },
    {
      "action": "launchwizard:ListResourceCostEstimates",
      "condition": null
    },
    {
      "action": "launchwizard:ListSettingsSets",
      "condition": null
    },
    {
      "action": "launchwizard:ListWorkloadDeploymentOptions",
      "condition": null
    },
    {
      "action": "launchwizard:ListWorkloadDeploymentPatterns",
      "condition": null
    },
    {
      "action": "launchwizard:ListWorkloads",
      "condition": null
    },
    {
      "action": "lex:DescribeBot",
      "condition": null
    },
    {
      "action": "lex:DescribeBotAlias",
      "condition": null
    },
    {
      "action": "lex:DescribeBotChannel",
      "condition": null
    },
    {
      "action": "lex:DescribeBotLocale",
      "condition": null
    },
    {
      "action": "lex:DescribeBotReplica",
      "condition": null
    },
    {
      "action": "lex:DescribeBotVersion",
      "condition": null
    },
    {
      "action": "lex:DescribeExport",
      "condition": null
    },
    {
      "action": "lex:DescribeImport",
      "condition": null
    },
    {
      "action": "lex:DescribeIntent",
      "condition": null
    },
    {
      "action": "lex:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "lex:DescribeSlot",
      "condition": null
    },
    {
      "action": "lex:DescribeSlotType",
      "condition": null
    },
    {
      "action": "lex:Get*",
      "condition": null
    },
    {
      "action": "lex:ListBotAliasReplicas",
      "condition": null
    },
    {
      "action": "lex:ListBotAliases",
      "condition": null
    },
    {
      "action": "lex:ListBotChannels",
      "condition": null
    },
    {
      "action": "lex:ListBotLocales",
      "condition": null
    },
    {
      "action": "lex:ListBotReplicas",
      "condition": null
    },
    {
      "action": "lex:ListBotVersionReplicas",
      "condition": null
    },
    {
      "action": "lex:ListBots",
      "condition": null
    },
    {
      "action": "lex:ListBotVersions",
      "condition": null
    },
    {
      "action": "lex:ListBuiltInIntents",
      "condition": null
    },
    {
      "action": "lex:ListBuiltInSlotTypes",
      "condition": null
    },
    {
      "action": "lex:ListExports",
      "condition": null
    },
    {
      "action": "lex:ListImports",
      "condition": null
    },
    {
      "action": "lex:ListIntents",
      "condition": null
    },
    {
      "action": "lex:ListSlots",
      "condition": null
    },
    {
      "action": "lex:ListSlotTypes",
      "condition": null
    },
    {
      "action": "lex:ListTagsForResource",
      "condition": null
    },
    {
      "action": "license-manager:Get*",
      "condition": null
    },
    {
      "action": "license-manager:List*",
      "condition": null
    },
    {
      "action": "lightsail:GetActiveNames",
      "condition": null
    },
    {
      "action": "lightsail:GetAlarms",
      "condition": null
    },
    {
      "action": "lightsail:GetAutoSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:GetBlueprints",
      "condition": null
    },
    {
      "action": "lightsail:GetBucketAccessKeys",
      "condition": null
    },
    {
      "action": "lightsail:GetBucketBundles",
      "condition": null
    },
    {
      "action": "lightsail:GetBucketMetricData",
      "condition": null
    },
    {
      "action": "lightsail:GetBuckets",
      "condition": null
    },
    {
      "action": "lightsail:GetBundles",
      "condition": null
    },
    {
      "action": "lightsail:GetCertificates",
      "condition": null
    },
    {
      "action": "lightsail:GetCloudFormationStackRecords",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerAPIMetadata",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerImages",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerServiceDeployments",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerServiceMetricData",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerServicePowers",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerServices",
      "condition": null
    },
    {
      "action": "lightsail:GetDisk",
      "condition": null
    },
    {
      "action": "lightsail:GetDisks",
      "condition": null
    },
    {
      "action": "lightsail:GetDiskSnapshot",
      "condition": null
    },
    {
      "action": "lightsail:GetDiskSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:GetDistributionBundles",
      "condition": null
    },
    {
      "action": "lightsail:GetDistributionLatestCacheReset",
      "condition": null
    },
    {
      "action": "lightsail:GetDistributionMetricData",
      "condition": null
    },
    {
      "action": "lightsail:GetDistributions",
      "condition": null
    },
    {
      "action": "lightsail:GetDomain",
      "condition": null
    },
    {
      "action": "lightsail:GetDomains",
      "condition": null
    },
    {
      "action": "lightsail:GetExportSnapshotRecords",
      "condition": null
    },
    {
      "action": "lightsail:GetInstance",
      "condition": null
    },
    {
      "action": "lightsail:GetInstanceMetricData",
      "condition": null
    },
    {
      "action": "lightsail:GetInstancePortStates",
      "condition": null
    },
    {
      "action": "lightsail:GetInstances",
      "condition": null
    },
    {
      "action": "lightsail:GetInstanceSnapshot",
      "condition": null
    },
    {
      "action": "lightsail:GetInstanceSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:GetInstanceState",
      "condition": null
    },
    {
      "action": "lightsail:GetKeyPair",
      "condition": null
    },
    {
      "action": "lightsail:GetKeyPairs",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancer",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancerMetricData",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancers",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancerTlsCertificates",
      "condition": null
    },
    {
      "action": "lightsail:GetOperation",
      "condition": null
    },
    {
      "action": "lightsail:GetOperations",
      "condition": null
    },
    {
      "action": "lightsail:GetOperationsForResource",
      "condition": null
    },
    {
      "action": "lightsail:GetRegions",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabase",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseBlueprints",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseBundles",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseEvents",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseLogEvents",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseLogStreams",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseMetricData",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseParameters",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabases",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseSnapshot",
      "condition": null
    },
    {
      "action": "lightsail:GetRelationalDatabaseSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:GetStaticIp",
      "condition": null
    },
    {
      "action": "lightsail:GetStaticIps",
      "condition": null
    },
    {
      "action": "lightsail:Is*",
      "condition": null
    },
    {
      "action": "logs:Describe*",
      "condition": null
    },
    {
      "action": "logs:FilterLogEvents",
      "condition": null
    },
    {
      "action": "logs:Get*",
      "condition": null
    },
    {
      "action": "logs:ListAnomalies",
      "condition": null
    },
    {
      "action": "logs:ListLogAnomalyDetectors",
      "condition": null
    },
    {
      "action": "logs:ListLogDeliveries",
      "condition": null
    },
    {
      "action": "logs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "logs:ListTagsLogGroup",
      "condition": null
    },
    {
      "action": "logs:StartLiveTail",
      "condition": null
    },
    {
      "action": "logs:StartQuery",
      "condition": null
    },
    {
      "action": "logs:StopLiveTail",
      "condition": null
    },
    {
      "action": "logs:StopQuery",
      "condition": null
    },
    {
      "action": "logs:TestMetricFilter",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeDataIngestionJob",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeDataset",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeInferenceScheduler",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeLabel",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeLabelGroup",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeModel",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeModelVersion",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "lookoutequipment:DescribeRetrainingScheduler",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListDataIngestionJobs",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListDatasets",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListInferenceEvents",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListInferenceExecutions",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListInferenceSchedulers",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListLabelGroups",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListLabels",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListModels",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListModelVersions",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListRetrainingSchedulers",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListSensorStatistics",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListTagsForResource",
      "condition": null
    },
    {
      "action": "lookoutmetrics:Describe*",
      "condition": null
    },
    {
      "action": "lookoutmetrics:Get*",
      "condition": null
    },
    {
      "action": "lookoutmetrics:List*",
      "condition": null
    },
    {
      "action": "lookoutvision:DescribeDataset",
      "condition": null
    },
    {
      "action": "lookoutvision:DescribeModel",
      "condition": null
    },
    {
      "action": "lookoutvision:DescribeModelPackagingJob",
      "condition": null
    },
    {
      "action": "lookoutvision:DescribeProject",
      "condition": null
    },
    {
      "action": "lookoutvision:ListDatasetEntries",
      "condition": null
    },
    {
      "action": "lookoutvision:ListModelPackagingJobs",
      "condition": null
    },
    {
      "action": "lookoutvision:ListModels",
      "condition": null
    },
    {
      "action": "lookoutvision:ListProjects",
      "condition": null
    },
    {
      "action": "lookoutvision:ListTagsForResource",
      "condition": null
    },
    {
      "action": "m2:GetApplication",
      "condition": null
    },
    {
      "action": "m2:GetApplicationVersion",
      "condition": null
    },
    {
      "action": "m2:GetBatchJobExecution",
      "condition": null
    },
    {
      "action": "m2:GetDataSetDetails",
      "condition": null
    },
    {
      "action": "m2:GetDataSetImportTask",
      "condition": null
    },
    {
      "action": "m2:GetDeployment",
      "condition": null
    },
    {
      "action": "m2:GetEnvironment",
      "condition": null
    },
    {
      "action": "m2:ListApplications",
      "condition": null
    },
    {
      "action": "m2:ListApplicationVersions",
      "condition": null
    },
    {
      "action": "m2:ListBatchJobDefinitions",
      "condition": null
    },
    {
      "action": "m2:ListBatchJobExecutions",
      "condition": null
    },
    {
      "action": "m2:ListDataSetImportHistory",
      "condition": null
    },
    {
      "action": "m2:ListDataSets",
      "condition": null
    },
    {
      "action": "m2:ListDeployments",
      "condition": null
    },
    {
      "action": "m2:ListEngineVersions",
      "condition": null
    },
    {
      "action": "m2:ListEnvironments",
      "condition": null
    },
    {
      "action": "m2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "machinelearning:Describe*",
      "condition": null
    },
    {
      "action": "machinelearning:Get*",
      "condition": null
    },
    {
      "action": "macie2:BatchGetCustomDataIdentifiers",
      "condition": null
    },
    {
      "action": "macie2:DescribeBuckets",
      "condition": null
    },
    {
      "action": "macie2:DescribeClassificationJob",
      "condition": null
    },
    {
      "action": "macie2:DescribeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetAdministratorAccount",
      "condition": null
    },
    {
      "action": "macie2:GetAllowList",
      "condition": null
    },
    {
      "action": "macie2:GetAutomatedDiscoveryConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetBucketStatistics",
      "condition": null
    },
    {
      "action": "macie2:GetClassificationExportConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetClassificationScope",
      "condition": null
    },
    {
      "action": "macie2:GetCustomDataIdentifier",
      "condition": null
    },
    {
      "action": "macie2:GetFindings",
      "condition": null
    },
    {
      "action": "macie2:GetFindingsFilter",
      "condition": null
    },
    {
      "action": "macie2:GetFindingsPublicationConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetFindingStatistics",
      "condition": null
    },
    {
      "action": "macie2:GetInvitationsCount",
      "condition": null
    },
    {
      "action": "macie2:GetMacieSession",
      "condition": null
    },
    {
      "action": "macie2:GetMember",
      "condition": null
    },
    {
      "action": "macie2:GetResourceProfile",
      "condition": null
    },
    {
      "action": "macie2:GetRevealConfiguration",
      "condition": null
    },
    {
      "action": "macie2:GetSensitiveDataOccurrencesAvailability",
      "condition": null
    },
    {
      "action": "macie2:GetSensitivityInspectionTemplate",
      "condition": null
    },
    {
      "action": "macie2:GetUsageStatistics",
      "condition": null
    },
    {
      "action": "macie2:GetUsageTotals",
      "condition": null
    },
    {
      "action": "macie2:ListAllowLists",
      "condition": null
    },
    {
      "action": "macie2:ListClassificationJobs",
      "condition": null
    },
    {
      "action": "macie2:ListClassificationScopes",
      "condition": null
    },
    {
      "action": "macie2:ListCustomDataIdentifiers",
      "condition": null
    },
    {
      "action": "macie2:ListFindings",
      "condition": null
    },
    {
      "action": "macie2:ListFindingsFilters",
      "condition": null
    },
    {
      "action": "macie2:ListInvitations",
      "condition": null
    },
    {
      "action": "macie2:ListMembers",
      "condition": null
    },
    {
      "action": "macie2:ListOrganizationAdminAccounts",
      "condition": null
    },
    {
      "action": "macie2:ListResourceProfileArtifacts",
      "condition": null
    },
    {
      "action": "macie2:ListResourceProfileDetections",
      "condition": null
    },
    {
      "action": "macie2:ListSensitivityInspectionTemplates",
      "condition": null
    },
    {
      "action": "macie2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "macie2:SearchResources",
      "condition": null
    },
    {
      "action": "managedblockchain:GetMember",
      "condition": null
    },
    {
      "action": "managedblockchain:GetNetwork",
      "condition": null
    },
    {
      "action": "managedblockchain:GetNode",
      "condition": null
    },
    {
      "action": "managedblockchain:GetProposal",
      "condition": null
    },
    {
      "action": "managedblockchain:ListInvitations",
      "condition": null
    },
    {
      "action": "managedblockchain:ListMembers",
      "condition": null
    },
    {
      "action": "managedblockchain:ListNetworks",
      "condition": null
    },
    {
      "action": "managedblockchain:ListNodes",
      "condition": null
    },
    {
      "action": "managedblockchain:ListProposals",
      "condition": null
    },
    {
      "action": "managedblockchain:ListProposalVotes",
      "condition": null
    },
    {
      "action": "managedblockchain:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mediaconnect:DescribeFlow",
      "condition": null
    },
    {
      "action": "mediaconnect:DescribeOffering",
      "condition": null
    },
    {
      "action": "mediaconnect:DescribeReservation",
      "condition": null
    },
    {
      "action": "mediaconnect:ListEntitlements",
      "condition": null
    },
    {
      "action": "mediaconnect:ListFlows",
      "condition": null
    },
    {
      "action": "mediaconnect:ListOfferings",
      "condition": null
    },
    {
      "action": "mediaconnect:ListReservations",
      "condition": null
    },
    {
      "action": "mediaconnect:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mediaconvert:DescribeEndpoints",
      "condition": null
    },
    {
      "action": "mediaconvert:Get*",
      "condition": null
    },
    {
      "action": "mediaconvert:List*",
      "condition": null
    },
    {
      "action": "medialive:DescribeChannel",
      "condition": null
    },
    {
      "action": "medialive:DescribeInput",
      "condition": null
    },
    {
      "action": "medialive:DescribeInputDevice",
      "condition": null
    },
    {
      "action": "medialive:DescribeInputDeviceThumbnail",
      "condition": null
    },
    {
      "action": "medialive:DescribeInputSecurityGroup",
      "condition": null
    },
    {
      "action": "medialive:DescribeMultiplex",
      "condition": null
    },
    {
      "action": "medialive:DescribeMultiplexProgram",
      "condition": null
    },
    {
      "action": "medialive:DescribeOffering",
      "condition": null
    },
    {
      "action": "medialive:DescribeReservation",
      "condition": null
    },
    {
      "action": "medialive:DescribeSchedule",
      "condition": null
    },
    {
      "action": "medialive:GetCloudWatchAlarmTemplate",
      "condition": null
    },
    {
      "action": "medialive:GetCloudWatchAlarmTemplateGroup",
      "condition": null
    },
    {
      "action": "medialive:GetEventBridgeRuleTemplate",
      "condition": null
    },
    {
      "action": "medialive:GetEventBridgeRuleTemplateGroup",
      "condition": null
    },
    {
      "action": "medialive:GetSignalMap",
      "condition": null
    },
    {
      "action": "medialive:ListChannels",
      "condition": null
    },
    {
      "action": "medialive:ListCloudWatchAlarmTemplateGroups",
      "condition": null
    },
    {
      "action": "medialive:ListCloudWatchAlarmTemplates",
      "condition": null
    },
    {
      "action": "medialive:ListEventBridgeRuleTemplateGroups",
      "condition": null
    },
    {
      "action": "medialive:ListEventBridgeRuleTemplates",
      "condition": null
    },
    {
      "action": "medialive:ListInputDevices",
      "condition": null
    },
    {
      "action": "medialive:ListInputDeviceTransfers",
      "condition": null
    },
    {
      "action": "medialive:ListInputs",
      "condition": null
    },
    {
      "action": "medialive:ListInputSecurityGroups",
      "condition": null
    },
    {
      "action": "medialive:ListMultiplexes",
      "condition": null
    },
    {
      "action": "medialive:ListMultiplexPrograms",
      "condition": null
    },
    {
      "action": "medialive:ListOfferings",
      "condition": null
    },
    {
      "action": "medialive:ListReservations",
      "condition": null
    },
    {
      "action": "medialive:ListSignalMaps",
      "condition": null
    },
    {
      "action": "medialive:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mediapackage-vod:Describe*",
      "condition": null
    },
    {
      "action": "mediapackage-vod:List*",
      "condition": null
    },
    {
      "action": "mediapackage:Describe*",
      "condition": null
    },
    {
      "action": "mediapackage:List*",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetChannel",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetChannelGroup",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetChannelPolicy",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetHeadObject",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetObject",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetOriginEndpoint",
      "condition": null
    },
    {
      "action": "mediapackagev2:GetOriginEndpointPolicy",
      "condition": null
    },
    {
      "action": "mediapackagev2:ListChannelGroups",
      "condition": null
    },
    {
      "action": "mediapackagev2:ListChannels",
      "condition": null
    },
    {
      "action": "mediapackagev2:ListOriginEndpoints",
      "condition": null
    },
    {
      "action": "mediapackagev2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mediastore:DescribeContainer",
      "condition": null
    },
    {
      "action": "mediastore:DescribeObject",
      "condition": null
    },
    {
      "action": "mediastore:GetContainerPolicy",
      "condition": null
    },
    {
      "action": "mediastore:GetCorsPolicy",
      "condition": null
    },
    {
      "action": "mediastore:GetLifecyclePolicy",
      "condition": null
    },
    {
      "action": "mediastore:GetMetricPolicy",
      "condition": null
    },
    {
      "action": "mediastore:GetObject",
      "condition": null
    },
    {
      "action": "mediastore:ListContainers",
      "condition": null
    },
    {
      "action": "mediastore:ListItems",
      "condition": null
    },
    {
      "action": "mediastore:ListTagsForResource",
      "condition": null
    },
    {
      "action": "memorydb:DescribeClusters",
      "condition": null
    },
    {
      "action": "memorydb:DescribeParameterGroups",
      "condition": null
    },
    {
      "action": "memorydb:DescribeParameters",
      "condition": null
    },
    {
      "action": "memorydb:ListTags",
      "condition": null
    },
    {
      "action": "mgh:Describe*",
      "condition": null
    },
    {
      "action": "mgh:GetHomeRegion",
      "condition": null
    },
    {
      "action": "mgh:List*",
      "condition": null
    },
    {
      "action": "mgn:DescribeJobLogItems",
      "condition": null
    },
    {
      "action": "mgn:DescribeJobs",
      "condition": null
    },
    {
      "action": "mgn:DescribeLaunchConfigurationTemplates",
      "condition": null
    },
    {
      "action": "mgn:DescribeReplicationConfigurationTemplates",
      "condition": null
    },
    {
      "action": "mgn:DescribeSourceServers",
      "condition": null
    },
    {
      "action": "mgn:DescribeVcenterClients",
      "condition": null
    },
    {
      "action": "mgn:GetLaunchConfiguration",
      "condition": null
    },
    {
      "action": "mgn:GetReplicationConfiguration",
      "condition": null
    },
    {
      "action": "mgn:ListApplications",
      "condition": null
    },
    {
      "action": "mgn:ListSourceServerActions",
      "condition": null
    },
    {
      "action": "mgn:ListTemplateActions",
      "condition": null
    },
    {
      "action": "mgn:ListWaves",
      "condition": null
    },
    {
      "action": "mobileanalytics:Get*",
      "condition": null
    },
    {
      "action": "mobiletargeting:Get*",
      "condition": null
    },
    {
      "action": "mobiletargeting:List*",
      "condition": null
    },
    {
      "action": "monitron:GetProject",
      "condition": null
    },
    {
      "action": "monitron:GetProjectAdminUser",
      "condition": null
    },
    {
      "action": "monitron:ListProjects",
      "condition": null
    },
    {
      "action": "monitron:ListTagsForResource",
      "condition": null
    },
    {
      "action": "mq:Describe*",
      "condition": null
    },
    {
      "action": "mq:List*",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeFirewall",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeFirewallPolicy",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeLoggingConfiguration",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeRuleGroup",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeRuleGroupMetadata",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeTLSInspectionConfiguration",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewallPolicies",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewalls",
      "condition": null
    },
    {
      "action": "network-firewall:ListRuleGroups",
      "condition": null
    },
    {
      "action": "network-firewall:ListTagsForResource",
      "condition": null
    },
    {
      "action": "network-firewall:ListTLSInspectionConfigurations",
      "condition": null
    },
    {
      "action": "networkmanager:DescribeGlobalNetworks",
      "condition": null
    },
    {
      "action": "networkmanager:GetConnectAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:GetConnections",
      "condition": null
    },
    {
      "action": "networkmanager:GetConnectPeer",
      "condition": null
    },
    {
      "action": "networkmanager:GetConnectPeerAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:GetCoreNetwork",
      "condition": null
    },
    {
      "action": "networkmanager:GetCoreNetworkChangeEvents",
      "condition": null
    },
    {
      "action": "networkmanager:GetCoreNetworkChangeSet",
      "condition": null
    },
    {
      "action": "networkmanager:GetCoreNetworkPolicy",
      "condition": null
    },
    {
      "action": "networkmanager:GetCustomerGatewayAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:GetDevices",
      "condition": null
    },
    {
      "action": "networkmanager:GetLinkAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:GetLinks",
      "condition": null
    },
    {
      "action": "networkmanager:GetNetworkResourceCounts",
      "condition": null
    },
    {
      "action": "networkmanager:GetNetworkResourceRelationships",
      "condition": null
    },
    {
      "action": "networkmanager:GetNetworkResources",
      "condition": null
    },
    {
      "action": "networkmanager:GetNetworkRoutes",
      "condition": null
    },
    {
      "action": "networkmanager:GetNetworkTelemetry",
      "condition": null
    },
    {
      "action": "networkmanager:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "networkmanager:GetRouteAnalysis",
      "condition": null
    },
    {
      "action": "networkmanager:GetSites",
      "condition": null
    },
    {
      "action": "networkmanager:GetSiteToSiteVpnAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:GetTransitGatewayConnectPeerAssociations",
      "condition": null
    },
    {
      "action": "networkmanager:GetTransitGatewayPeering",
      "condition": null
    },
    {
      "action": "networkmanager:GetTransitGatewayRegistrations",
      "condition": null
    },
    {
      "action": "networkmanager:GetTransitGatewayRouteTableAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:GetVpcAttachment",
      "condition": null
    },
    {
      "action": "networkmanager:ListAttachments",
      "condition": null
    },
    {
      "action": "networkmanager:ListConnectPeers",
      "condition": null
    },
    {
      "action": "networkmanager:ListCoreNetworkPolicyVersions",
      "condition": null
    },
    {
      "action": "networkmanager:ListCoreNetworks",
      "condition": null
    },
    {
      "action": "networkmanager:ListPeerings",
      "condition": null
    },
    {
      "action": "networkmanager:ListTagsForResource",
      "condition": null
    },
    {
      "action": "nimble:GetEula",
      "condition": null
    },
    {
      "action": "nimble:GetFeatureMap",
      "condition": null
    },
    {
      "action": "nimble:GetLaunchProfile",
      "condition": null
    },
    {
      "action": "nimble:GetLaunchProfileDetails",
      "condition": null
    },
    {
      "action": "nimble:GetLaunchProfileInitialization",
      "condition": null
    },
    {
      "action": "nimble:GetLaunchProfileMember",
      "condition": null
    },
    {
      "action": "nimble:GetStreamingImage",
      "condition": null
    },
    {
      "action": "nimble:GetStreamingSession",
      "condition": null
    },
    {
      "action": "nimble:GetStudio",
      "condition": null
    },
    {
      "action": "nimble:GetStudioComponent",
      "condition": null
    },
    {
      "action": "nimble:GetStudioMember",
      "condition": null
    },
    {
      "action": "nimble:ListEulaAcceptances",
      "condition": null
    },
    {
      "action": "nimble:ListEulas",
      "condition": null
    },
    {
      "action": "nimble:ListLaunchProfileMembers",
      "condition": null
    },
    {
      "action": "nimble:ListLaunchProfiles",
      "condition": null
    },
    {
      "action": "nimble:ListStreamingImages",
      "condition": null
    },
    {
      "action": "nimble:ListStreamingSessions",
      "condition": null
    },
    {
      "action": "nimble:ListStudioComponents",
      "condition": null
    },
    {
      "action": "nimble:ListStudioMembers",
      "condition": null
    },
    {
      "action": "nimble:ListStudios",
      "condition": null
    },
    {
      "action": "nimble:ListTagsForResource",
      "condition": null
    },
    {
      "action": "notifications-contacts:GetEmailContact",
      "condition": null
    },
    {
      "action": "notifications-contacts:ListEmailContacts",
      "condition": null
    },
    {
      "action": "notifications-contacts:ListTagsForResource",
      "condition": null
    },
    {
      "action": "notifications:GetEventRule",
      "condition": null
    },
    {
      "action": "notifications:GetNotificationConfiguration",
      "condition": null
    },
    {
      "action": "notifications:GetNotificationEvent",
      "condition": null
    },
    {
      "action": "notifications:ListChannels",
      "condition": null
    },
    {
      "action": "notifications:ListEventRules",
      "condition": null
    },
    {
      "action": "notifications:ListNotificationConfigurations",
      "condition": null
    },
    {
      "action": "notifications:ListNotificationEvents",
      "condition": null
    },
    {
      "action": "notifications:ListNotificationHubs",
      "condition": null
    },
    {
      "action": "notifications:ListTagsForResource",
      "condition": null
    },
    {
      "action": "oam:GetLink",
      "condition": null
    },
    {
      "action": "oam:GetSink",
      "condition": null
    },
    {
      "action": "oam:GetSinkPolicy",
      "condition": null
    },
    {
      "action": "oam:ListAttachedLinks",
      "condition": null
    },
    {
      "action": "oam:ListLinks",
      "condition": null
    },
    {
      "action": "oam:ListSinks",
      "condition": null
    },
    {
      "action": "omics:Get*",
      "condition": null
    },
    {
      "action": "omics:List*",
      "condition": null
    },
    {
      "action": "one:GetDeviceConfigurationTemplate",
      "condition": null
    },
    {
      "action": "one:GetDeviceInstance",
      "condition": null
    },
    {
      "action": "one:GetDeviceInstanceConfiguration",
      "condition": null
    },
    {
      "action": "one:GetSite",
      "condition": null
    },
    {
      "action": "one:GetSiteAddress",
      "condition": null
    },
    {
      "action": "one:ListDeviceConfigurationTemplates",
      "condition": null
    },
    {
      "action": "one:ListDeviceInstances",
      "condition": null
    },
    {
      "action": "one:ListSites",
      "condition": null
    },
    {
      "action": "one:ListUsers",
      "condition": null
    },
    {
      "action": "opsworks-cm:Describe*",
      "condition": null
    },
    {
      "action": "opsworks-cm:List*",
      "condition": null
    },
    {
      "action": "opsworks:Describe*",
      "condition": null
    },
    {
      "action": "opsworks:Get*",
      "condition": null
    },
    {
      "action": "organizations:Describe*",
      "condition": null
    },
    {
      "action": "organizations:List*",
      "condition": null
    },
    {
      "action": "osis:GetPipeline",
      "condition": null
    },
    {
      "action": "osis:GetPipelineBlueprint",
      "condition": null
    },
    {
      "action": "osis:GetPipelineChangeProgress",
      "condition": null
    },
    {
      "action": "osis:ListPipelineBlueprints",
      "condition": null
    },
    {
      "action": "osis:ListPipelines",
      "condition": null
    },
    {
      "action": "osis:ListTagsForResource",
      "condition": null
    },
    {
      "action": "outposts:Get*",
      "condition": null
    },
    {
      "action": "outposts:List*",
      "condition": null
    },
    {
      "action": "payment-cryptography:GetAlias",
      "condition": null
    },
    {
      "action": "payment-cryptography:GetKey",
      "condition": null
    },
    {
      "action": "payment-cryptography:GetPublicKeyCertificate",
      "condition": null
    },
    {
      "action": "payment-cryptography:ListAliases",
      "condition": null
    },
    {
      "action": "payment-cryptography:ListKeys",
      "condition": null
    },
    {
      "action": "payment-cryptography:ListTagsForResource",
      "condition": null
    },
    {
      "action": "payments:GetPaymentInstrument",
      "condition": null
    },
    {
      "action": "payments:GetPaymentStatus",
      "condition": null
    },
    {
      "action": "payments:ListPaymentInstruments",
      "condition": null
    },
    {
      "action": "payments:ListPaymentPreferences",
      "condition": null
    },
    {
      "action": "payments:ListTagsForResource",
      "condition": null
    },
    {
      "action": "pca-connector-ad:GetConnector",
      "condition": null
    },
    {
      "action": "pca-connector-ad:GetDirectoryRegistration",
      "condition": null
    },
    {
      "action": "pca-connector-ad:GetServicePrincipalName",
      "condition": null
    },
    {
      "action": "pca-connector-ad:GetTemplate",
      "condition": null
    },
    {
      "action": "pca-connector-ad:GetTemplateGroupAccessControlEntry",
      "condition": null
    },
    {
      "action": "pca-connector-ad:ListConnectors",
      "condition": null
    },
    {
      "action": "pca-connector-ad:ListDirectoryRegistrations",
      "condition": null
    },
    {
      "action": "pca-connector-ad:ListServicePrincipalNames",
      "condition": null
    },
    {
      "action": "pca-connector-ad:ListTagsForResource",
      "condition": null
    },
    {
      "action": "pca-connector-ad:ListTemplateGroupAccessControlEntries",
      "condition": null
    },
    {
      "action": "pca-connector-ad:ListTemplates",
      "condition": null
    },
    {
      "action": "personalize:Describe*",
      "condition": null
    },
    {
      "action": "personalize:Get*",
      "condition": null
    },
    {
      "action": "personalize:List*",
      "condition": null
    },
    {
      "action": "pi:DescribeDimensionKeys",
      "condition": null
    },
    {
      "action": "pi:GetDimensionKeyDetails",
      "condition": null
    },
    {
      "action": "pi:GetResourceMetadata",
      "condition": null
    },
    {
      "action": "pi:GetResourceMetrics",
      "condition": null
    },
    {
      "action": "pi:ListAvailableResourceDimensions",
      "condition": null
    },
    {
      "action": "pi:ListAvailableResourceMetrics",
      "condition": null
    },
    {
      "action": "pipes:DescribePipe",
      "condition": null
    },
    {
      "action": "pipes:ListPipes",
      "condition": null
    },
    {
      "action": "pipes:ListTagsForResource",
      "condition": null
    },
    {
      "action": "polly:Describe*",
      "condition": null
    },
    {
      "action": "polly:Get*",
      "condition": null
    },
    {
      "action": "polly:List*",
      "condition": null
    },
    {
      "action": "polly:SynthesizeSpeech",
      "condition": null
    },
    {
      "action": "pricing:DescribeServices",
      "condition": null
    },
    {
      "action": "pricing:GetAttributeValues",
      "condition": null
    },
    {
      "action": "pricing:GetPriceListFileUrl",
      "condition": null
    },
    {
      "action": "pricing:GetProducts",
      "condition": null
    },
    {
      "action": "pricing:ListPriceLists",
      "condition": null
    },
    {
      "action": "proton:GetDeployment",
      "condition": null
    },
    {
      "action": "proton:GetEnvironment",
      "condition": null
    },
    {
      "action": "proton:GetEnvironmentTemplate",
      "condition": null
    },
    {
      "action": "proton:GetEnvironmentTemplateVersion",
      "condition": null
    },
    {
      "action": "proton:GetService",
      "condition": null
    },
    {
      "action": "proton:GetServiceInstance",
      "condition": null
    },
    {
      "action": "proton:GetServiceTemplate",
      "condition": null
    },
    {
      "action": "proton:GetServiceTemplateVersion",
      "condition": null
    },
    {
      "action": "proton:ListDeployments",
      "condition": null
    },
    {
      "action": "proton:ListEnvironmentAccountConnections",
      "condition": null
    },
    {
      "action": "proton:ListEnvironments",
      "condition": null
    },
    {
      "action": "proton:ListEnvironmentTemplates",
      "condition": null
    },
    {
      "action": "proton:ListServiceInstances",
      "condition": null
    },
    {
      "action": "proton:ListServices",
      "condition": null
    },
    {
      "action": "proton:ListServiceTemplates",
      "condition": null
    },
    {
      "action": "proton:ListTagsForResource",
      "condition": null
    },
    {
      "action": "purchase-orders:GetPurchaseOrder",
      "condition": null
    },
    {
      "action": "purchase-orders:ListPurchaseOrderInvoices",
      "condition": null
    },
    {
      "action": "purchase-orders:ListPurchaseOrders",
      "condition": null
    },
    {
      "action": "purchase-orders:ViewPurchaseOrders",
      "condition": null
    },
    {
      "action": "qldb:DescribeJournalKinesisStream",
      "condition": null
    },
    {
      "action": "qldb:DescribeJournalS3Export",
      "condition": null
    },
    {
      "action": "qldb:DescribeLedger",
      "condition": null
    },
    {
      "action": "qldb:GetBlock",
      "condition": null
    },
    {
      "action": "qldb:GetDigest",
      "condition": null
    },
    {
      "action": "qldb:GetRevision",
      "condition": null
    },
    {
      "action": "qldb:ListJournalKinesisStreamsForLedger",
      "condition": null
    },
    {
      "action": "qldb:ListJournalS3Exports",
      "condition": null
    },
    {
      "action": "qldb:ListJournalS3ExportsForLedger",
      "condition": null
    },
    {
      "action": "qldb:ListLedgers",
      "condition": null
    },
    {
      "action": "qldb:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ram:Get*",
      "condition": null
    },
    {
      "action": "ram:List*",
      "condition": null
    },
    {
      "action": "rbin:GetRule",
      "condition": null
    },
    {
      "action": "rbin:ListRules",
      "condition": null
    },
    {
      "action": "rbin:ListTagsForResource",
      "condition": null
    },
    {
      "action": "rds:Describe*",
      "condition": null
    },
    {
      "action": "rds:Download*",
      "condition": null
    },
    {
      "action": "rds:List*",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetCustomDomainAssociation",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetEndpointAccess",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetNamespace",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetRecoveryPoint",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetScheduledAction",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetSnapshot",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetTableRestoreStatus",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetUsageLimit",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetWorkgroup",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListCustomDomainAssociations",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListEndpointAccess",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListNamespaces",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListRecoveryPoints",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListScheduledActions",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListSnapshotCopyConfigurations",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListSnapshots",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListTableRestoreStatus",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListUsageLimits",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListWorkgroups",
      "condition": null
    },
    {
      "action": "redshift:Describe*",
      "condition": null
    },
    {
      "action": "redshift:GetReservedNodeExchangeOfferings",
      "condition": null
    },
    {
      "action": "redshift:ListRecommendations",
      "condition": null
    },
    {
      "action": "redshift:View*",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetApplication",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetEnvironment",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetRoute",
      "condition": null
    },
    {
      "action": "refactor-spaces:GetService",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListApplications",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListEnvironments",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListEnvironmentVpcs",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListRoutes",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListServices",
      "condition": null
    },
    {
      "action": "refactor-spaces:ListTagsForResource",
      "condition": null
    },
    {
      "action": "rekognition:CompareFaces",
      "condition": null
    },
    {
      "action": "rekognition:DescribeDataset",
      "condition": null
    },
    {
      "action": "rekognition:DescribeProjects",
      "condition": null
    },
    {
      "action": "rekognition:DescribeProjectVersions",
      "condition": null
    },
    {
      "action": "rekognition:DescribeStreamProcessor",
      "condition": null
    },
    {
      "action": "rekognition:Detect*",
      "condition": null
    },
    {
      "action": "rekognition:GetCelebrityInfo",
      "condition": null
    },
    {
      "action": "rekognition:GetCelebrityRecognition",
      "condition": null
    },
    {
      "action": "rekognition:GetContentModeration",
      "condition": null
    },
    {
      "action": "rekognition:GetFaceDetection",
      "condition": null
    },
    {
      "action": "rekognition:GetFaceSearch",
      "condition": null
    },
    {
      "action": "rekognition:GetLabelDetection",
      "condition": null
    },
    {
      "action": "rekognition:GetPersonTracking",
      "condition": null
    },
    {
      "action": "rekognition:GetSegmentDetection",
      "condition": null
    },
    {
      "action": "rekognition:GetTextDetection",
      "condition": null
    },
    {
      "action": "rekognition:List*",
      "condition": null
    },
    {
      "action": "rekognition:RecognizeCelebrities",
      "condition": null
    },
    {
      "action": "rekognition:Search*",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeApp",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppAssessment",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppVersion",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppVersionAppComponent",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppVersionResource",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeAppVersionTemplate",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
      "condition": null
    },
    {
      "action": "resiliencehub:DescribeResiliencyPolicy",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAlarmRecommendations",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppAssessmentComplianceDrifts",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppAssessments",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppComponentCompliances",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppComponentRecommendations",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppInputSources",
      "condition": null
    },
    {
      "action": "resiliencehub:ListApps",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppVersionAppComponents",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppVersionResourceMappings",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppVersionResources",
      "condition": null
    },
    {
      "action": "resiliencehub:ListAppVersions",
      "condition": null
    },
    {
      "action": "resiliencehub:ListRecommendationTemplates",
      "condition": null
    },
    {
      "action": "resiliencehub:ListResiliencyPolicies",
      "condition": null
    },
    {
      "action": "resiliencehub:ListSopRecommendations",
      "condition": null
    },
    {
      "action": "resiliencehub:ListSuggestedResiliencyPolicies",
      "condition": null
    },
    {
      "action": "resiliencehub:ListTagsForResource",
      "condition": null
    },
    {
      "action": "resiliencehub:ListTestRecommendations",
      "condition": null
    },
    {
      "action": "resiliencehub:ListUnsupportedAppVersionResources",
      "condition": null
    },
    {
      "action": "resource-explorer-2:BatchGetView",
      "condition": null
    },
    {
      "action": "resource-explorer-2:GetDefaultView",
      "condition": null
    },
    {
      "action": "resource-explorer-2:GetIndex",
      "condition": null
    },
    {
      "action": "resource-explorer-2:GetView",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListIndexes",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListSupportedResourceTypes",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListViews",
      "condition": null
    },
    {
      "action": "resource-explorer-2:Search",
      "condition": null
    },
    {
      "action": "resource-groups:Get*",
      "condition": null
    },
    {
      "action": "resource-groups:List*",
      "condition": null
    },
    {
      "action": "resource-groups:Search*",
      "condition": null
    },
    {
      "action": "robomaker:BatchDescribe*",
      "condition": null
    },
    {
      "action": "robomaker:Describe*",
      "condition": null
    },
    {
      "action": "robomaker:Get*",
      "condition": null
    },
    {
      "action": "robomaker:List*",
      "condition": null
    },
    {
      "action": "route53-recovery-cluster:Get*",
      "condition": null
    },
    {
      "action": "route53-recovery-cluster:ListRoutingControls",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:Describe*",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "route53-recovery-control-config:List*",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:Get*",
      "condition": null
    },
    {
      "action": "route53-recovery-readiness:List*",
      "condition": null
    },
    {
      "action": "route53:Get*",
      "condition": null
    },
    {
      "action": "route53:List*",
      "condition": null
    },
    {
      "action": "route53:Test*",
      "condition": null
    },
    {
      "action": "route53domains:Check*",
      "condition": null
    },
    {
      "action": "route53domains:Get*",
      "condition": null
    },
    {
      "action": "route53domains:List*",
      "condition": null
    },
    {
      "action": "route53domains:View*",
      "condition": null
    },
    {
      "action": "route53profiles:GetProfile",
      "condition": null
    },
    {
      "action": "route53profiles:GetProfileAssociation",
      "condition": null
    },
    {
      "action": "route53profiles:GetProfileResourceAssociation",
      "condition": null
    },
    {
      "action": "route53profiles:ListProfileAssociations",
      "condition": null
    },
    {
      "action": "route53profiles:ListProfileResourceAssociations",
      "condition": null
    },
    {
      "action": "route53profiles:ListProfiles",
      "condition": null
    },
    {
      "action": "route53profiles:ListTagsForResource",
      "condition": null
    },
    {
      "action": "route53resolver:Get*",
      "condition": null
    },
    {
      "action": "route53resolver:List*",
      "condition": null
    },
    {
      "action": "rum:GetAppMonitor",
      "condition": null
    },
    {
      "action": "rum:GetAppMonitorData",
      "condition": null
    },
    {
      "action": "rum:ListAppMonitors",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObject",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectAcl",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectLegalHold",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectRetention",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectTagging",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectVersion",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectVersionAcl",
      "condition": null
    },
    {
      "action": "s3-object-lambda:GetObjectVersionTagging",
      "condition": null
    },
    {
      "action": "s3-object-lambda:ListBucket",
      "condition": null
    },
    {
      "action": "s3-object-lambda:ListBucketMultipartUploads",
      "condition": null
    },
    {
      "action": "s3-object-lambda:ListBucketVersions",
      "condition": null
    },
    {
      "action": "s3-object-lambda:ListMultipartUploadParts",
      "condition": null
    },
    {
      "action": "s3:DescribeJob",
      "condition": null
    },
    {
      "action": "s3:Get*",
      "condition": null
    },
    {
      "action": "s3:List*",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:GetAccountDetails",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:GetBatch",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:GetProject",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:ListBatchDataTransfers",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:ListBatchSummaries",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:ListProjectDataTransfers",
      "condition": null
    },
    {
      "action": "sagemaker-groundtruth-synthetic:ListProjectSummaries",
      "condition": null
    },
    {
      "action": "sagemaker:Describe*",
      "condition": null
    },
    {
      "action": "sagemaker:GetSearchSuggestions",
      "condition": null
    },
    {
      "action": "sagemaker:List*",
      "condition": null
    },
    {
      "action": "sagemaker:Search",
      "condition": null
    },
    {
      "action": "savingsplans:DescribeSavingsPlanRates",
      "condition": null
    },
    {
      "action": "savingsplans:DescribeSavingsPlans",
      "condition": null
    },
    {
      "action": "savingsplans:DescribeSavingsPlansOfferingRates",
      "condition": null
    },
    {
      "action": "savingsplans:DescribeSavingsPlansOfferings",
      "condition": null
    },
    {
      "action": "savingsplans:ListTagsForResource",
      "condition": null
    },
    {
      "action": "scheduler:GetSchedule",
      "condition": null
    },
    {
      "action": "scheduler:GetScheduleGroup",
      "condition": null
    },
    {
      "action": "scheduler:ListScheduleGroups",
      "condition": null
    },
    {
      "action": "scheduler:ListSchedules",
      "condition": null
    },
    {
      "action": "scheduler:ListTagsForResource",
      "condition": null
    },
    {
      "action": "schemas:Describe*",
      "condition": null
    },
    {
      "action": "schemas:Get*",
      "condition": null
    },
    {
      "action": "schemas:List*",
      "condition": null
    },
    {
      "action": "schemas:Search*",
      "condition": null
    },
    {
      "action": "sdb:Get*",
      "condition": null
    },
    {
      "action": "sdb:List*",
      "condition": null
    },
    {
      "action": "sdb:Select*",
      "condition": null
    },
    {
      "action": "secretsmanager:Describe*",
      "condition": null
    },
    {
      "action": "secretsmanager:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "secretsmanager:List*",
      "condition": null
    },
    {
      "action": "securityhub:BatchGetControlEvaluations",
      "condition": null
    },
    {
      "action": "securityhub:BatchGetSecurityControls",
      "condition": null
    },
    {
      "action": "securityhub:BatchGetStandardsControlAssociations",
      "condition": null
    },
    {
      "action": "securityhub:Describe*",
      "condition": null
    },
    {
      "action": "securityhub:Get*",
      "condition": null
    },
    {
      "action": "securityhub:List*",
      "condition": null
    },
    {
      "action": "securitylake:GetDataLakeExceptionSubscription",
      "condition": null
    },
    {
      "action": "securitylake:GetDataLakeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "securitylake:GetDataLakeSources",
      "condition": null
    },
    {
      "action": "securitylake:GetSubscriber",
      "condition": null
    },
    {
      "action": "securitylake:ListDataLakeExceptions",
      "condition": null
    },
    {
      "action": "securitylake:ListDataLakes",
      "condition": null
    },
    {
      "action": "securitylake:ListLogSources",
      "condition": null
    },
    {
      "action": "securitylake:ListSubscribers",
      "condition": null
    },
    {
      "action": "securitylake:ListTagsForResource",
      "condition": null
    },
    {
      "action": "serverlessrepo:Get*",
      "condition": null
    },
    {
      "action": "serverlessrepo:List*",
      "condition": null
    },
    {
      "action": "serverlessrepo:SearchApplications",
      "condition": null
    },
    {
      "action": "servicecatalog:Describe*",
      "condition": null
    },
    {
      "action": "servicecatalog:GetApplication",
      "condition": null
    },
    {
      "action": "servicecatalog:GetAttributeGroup",
      "condition": null
    },
    {
      "action": "servicecatalog:List*",
      "condition": null
    },
    {
      "action": "servicecatalog:Scan*",
      "condition": null
    },
    {
      "action": "servicecatalog:Search*",
      "condition": null
    },
    {
      "action": "servicediscovery:DiscoverInstances",
      "condition": null
    },
    {
      "action": "servicediscovery:DiscoverInstancesRevision",
      "condition": null
    },
    {
      "action": "servicediscovery:Get*",
      "condition": null
    },
    {
      "action": "servicediscovery:List*",
      "condition": null
    },
    {
      "action": "servicequotas:GetAssociationForServiceQuotaTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:GetAWSDefaultServiceQuota",
      "condition": null
    },
    {
      "action": "servicequotas:GetRequestedServiceQuotaChange",
      "condition": null
    },
    {
      "action": "servicequotas:GetServiceQuota",
      "condition": null
    },
    {
      "action": "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:ListAWSDefaultServiceQuotas",
      "condition": null
    },
    {
      "action": "servicequotas:ListRequestedServiceQuotaChangeHistory",
      "condition": null
    },
    {
      "action": "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
      "condition": null
    },
    {
      "action": "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:ListServiceQuotas",
      "condition": null
    },
    {
      "action": "servicequotas:ListServices",
      "condition": null
    },
    {
      "action": "ses:BatchGetMetricData",
      "condition": null
    },
    {
      "action": "ses:Describe*",
      "condition": null
    },
    {
      "action": "ses:Get*",
      "condition": null
    },
    {
      "action": "ses:List*",
      "condition": null
    },
    {
      "action": "shield:Describe*",
      "condition": null
    },
    {
      "action": "shield:Get*",
      "condition": null
    },
    {
      "action": "shield:List*",
      "condition": null
    },
    {
      "action": "signer:DescribeSigningJob",
      "condition": null
    },
    {
      "action": "signer:GetSigningPlatform",
      "condition": null
    },
    {
      "action": "signer:GetSigningProfile",
      "condition": null
    },
    {
      "action": "signer:ListProfilePermissions",
      "condition": null
    },
    {
      "action": "signer:ListSigningJobs",
      "condition": null
    },
    {
      "action": "signer:ListSigningPlatforms",
      "condition": null
    },
    {
      "action": "signer:ListSigningProfiles",
      "condition": null
    },
    {
      "action": "signer:ListTagsForResource",
      "condition": null
    },
    {
      "action": "signin:ListTrustedIdentityPropagationApplicationsForConsole",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeAccountAttributes",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeAccountLimits",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeConfigurationSets",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeKeywords",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeOptedOutNumbers",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeOptOutLists",
      "condition": null
    },
    {
      "action": "sms-voice:DescribePhoneNumbers",
      "condition": null
    },
    {
      "action": "sms-voice:DescribePools",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeSenderIds",
      "condition": null
    },
    {
      "action": "sms-voice:DescribeSpendLimits",
      "condition": null
    },
    {
      "action": "sms-voice:ListPoolOriginationIdentities",
      "condition": null
    },
    {
      "action": "sms-voice:ListTagsForResource",
      "condition": null
    },
    {
      "action": "snowball:Describe*",
      "condition": null
    },
    {
      "action": "snowball:Get*",
      "condition": null
    },
    {
      "action": "snowball:List*",
      "condition": null
    },
    {
      "action": "sns:Check*",
      "condition": null
    },
    {
      "action": "sns:Get*",
      "condition": null
    },
    {
      "action": "sns:List*",
      "condition": null
    },
    {
      "action": "sqs:Get*",
      "condition": null
    },
    {
      "action": "sqs:List*",
      "condition": null
    },
    {
      "action": "sqs:Receive*",
      "condition": null
    },
    {
      "action": "ssm-contacts:DescribeEngagement",
      "condition": null
    },
    {
      "action": "ssm-contacts:DescribePage",
      "condition": null
    },
    {
      "action": "ssm-contacts:GetContact",
      "condition": null
    },
    {
      "action": "ssm-contacts:GetContactChannel",
      "condition": null
    },
    {
      "action": "ssm-contacts:ListContactChannels",
      "condition": null
    },
    {
      "action": "ssm-contacts:ListContacts",
      "condition": null
    },
    {
      "action": "ssm-contacts:ListEngagements",
      "condition": null
    },
    {
      "action": "ssm-contacts:ListPageReceipts",
      "condition": null
    },
    {
      "action": "ssm-contacts:ListPagesByContact",
      "condition": null
    },
    {
      "action": "ssm-contacts:ListPagesByEngagement",
      "condition": null
    },
    {
      "action": "ssm-incidents:GetIncidentRecord",
      "condition": null
    },
    {
      "action": "ssm-incidents:GetReplicationSet",
      "condition": null
    },
    {
      "action": "ssm-incidents:GetResourcePolicies",
      "condition": null
    },
    {
      "action": "ssm-incidents:GetResponsePlan",
      "condition": null
    },
    {
      "action": "ssm-incidents:GetTimelineEvent",
      "condition": null
    },
    {
      "action": "ssm-incidents:ListIncidentRecords",
      "condition": null
    },
    {
      "action": "ssm-incidents:ListRelatedItems",
      "condition": null
    },
    {
      "action": "ssm-incidents:ListReplicationSets",
      "condition": null
    },
    {
      "action": "ssm-incidents:ListResponsePlans",
      "condition": null
    },
    {
      "action": "ssm-incidents:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ssm-incidents:ListTimelineEvents",
      "condition": null
    },
    {
      "action": "ssm:Describe*",
      "condition": null
    },
    {
      "action": "ssm:Get*",
      "condition": null
    },
    {
      "action": "ssm:List*",
      "condition": null
    },
    {
      "action": "sso-directory:Describe*",
      "condition": null
    },
    {
      "action": "sso-directory:List*",
      "condition": null
    },
    {
      "action": "sso-directory:Search*",
      "condition": null
    },
    {
      "action": "sso:Describe*",
      "condition": null
    },
    {
      "action": "sso:Get*",
      "condition": null
    },
    {
      "action": "sso:List*",
      "condition": null
    },
    {
      "action": "sso:Search*",
      "condition": null
    },
    {
      "action": "states:Describe*",
      "condition": null
    },
    {
      "action": "states:GetExecutionHistory",
      "condition": null
    },
    {
      "action": "states:List*",
      "condition": null
    },
    {
      "action": "states:ValidateStateMachineDefinition",
      "condition": null
    },
    {
      "action": "storagegateway:Describe*",
      "condition": null
    },
    {
      "action": "storagegateway:List*",
      "condition": null
    },
    {
      "action": "sts:GetAccessKeyInfo",
      "condition": null
    },
    {
      "action": "sts:GetCallerIdentity",
      "condition": null
    },
    {
      "action": "sts:GetSessionToken",
      "condition": null
    },
    {
      "action": "support:DescribeAttachment",
      "condition": null
    },
    {
      "action": "support:DescribeCases",
      "condition": null
    },
    {
      "action": "support:DescribeCommunications",
      "condition": null
    },
    {
      "action": "support:DescribeServices",
      "condition": null
    },
    {
      "action": "support:DescribeSeverityLevels",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorCheckRefreshStatuses",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorCheckResult",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorChecks",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorCheckSummaries",
      "condition": null
    },
    {
      "action": "supportplans:GetSupportPlan",
      "condition": null
    },
    {
      "action": "supportplans:GetSupportPlanUpdateStatus",
      "condition": null
    },
    {
      "action": "sustainability:GetCarbonFootprintSummary",
      "condition": null
    },
    {
      "action": "swf:Count*",
      "condition": null
    },
    {
      "action": "swf:Describe*",
      "condition": null
    },
    {
      "action": "swf:Get*",
      "condition": null
    },
    {
      "action": "swf:List*",
      "condition": null
    },
    {
      "action": "synthetics:Describe*",
      "condition": null
    },
    {
      "action": "synthetics:Get*",
      "condition": null
    },
    {
      "action": "synthetics:List*",
      "condition": null
    },
    {
      "action": "tag:DescribeReportCreation",
      "condition": null
    },
    {
      "action": "tag:Get*",
      "condition": null
    },
    {
      "action": "tax:GetExemptions",
      "condition": null
    },
    {
      "action": "tax:GetTaxInheritance",
      "condition": null
    },
    {
      "action": "tax:GetTaxInterview",
      "condition": null
    },
    {
      "action": "tax:GetTaxRegistration",
      "condition": null
    },
    {
      "action": "tax:GetTaxRegistrationDocument",
      "condition": null
    },
    {
      "action": "tax:ListTaxRegistrations",
      "condition": null
    },
    {
      "action": "timestream:DescribeBatchLoadTask",
      "condition": null
    },
    {
      "action": "timestream:DescribeDatabase",
      "condition": null
    },
    {
      "action": "timestream:DescribeEndpoints",
      "condition": null
    },
    {
      "action": "timestream:DescribeTable",
      "condition": null
    },
    {
      "action": "timestream:ListBatchLoadTasks",
      "condition": null
    },
    {
      "action": "timestream:ListDatabases",
      "condition": null
    },
    {
      "action": "timestream:ListMeasures",
      "condition": null
    },
    {
      "action": "timestream:ListTables",
      "condition": null
    },
    {
      "action": "timestream:ListTagsForResource",
      "condition": null
    },
    {
      "action": "tnb:GetSolFunctionInstance",
      "condition": null
    },
    {
      "action": "tnb:GetSolFunctionPackage",
      "condition": null
    },
    {
      "action": "tnb:GetSolFunctionPackageContent",
      "condition": null
    },
    {
      "action": "tnb:GetSolFunctionPackageDescriptor",
      "condition": null
    },
    {
      "action": "tnb:GetSolNetworkInstance",
      "condition": null
    },
    {
      "action": "tnb:GetSolNetworkOperation",
      "condition": null
    },
    {
      "action": "tnb:GetSolNetworkPackage",
      "condition": null
    },
    {
      "action": "tnb:GetSolNetworkPackageContent",
      "condition": null
    },
    {
      "action": "tnb:GetSolNetworkPackageDescriptor",
      "condition": null
    },
    {
      "action": "tnb:ListSolFunctionInstances",
      "condition": null
    },
    {
      "action": "tnb:ListSolFunctionPackages",
      "condition": null
    },
    {
      "action": "tnb:ListSolNetworkInstances",
      "condition": null
    },
    {
      "action": "tnb:ListSolNetworkOperations",
      "condition": null
    },
    {
      "action": "tnb:ListSolNetworkPackages",
      "condition": null
    },
    {
      "action": "tnb:ListTagsForResource",
      "condition": null
    },
    {
      "action": "transcribe:Get*",
      "condition": null
    },
    {
      "action": "transcribe:List*",
      "condition": null
    },
    {
      "action": "transfer:Describe*",
      "condition": null
    },
    {
      "action": "transfer:List*",
      "condition": null
    },
    {
      "action": "transfer:TestIdentityProvider",
      "condition": null
    },
    {
      "action": "translate:DescribeTextTranslationJob",
      "condition": null
    },
    {
      "action": "translate:GetParallelData",
      "condition": null
    },
    {
      "action": "translate:GetTerminology",
      "condition": null
    },
    {
      "action": "translate:ListParallelData",
      "condition": null
    },
    {
      "action": "translate:ListTerminologies",
      "condition": null
    },
    {
      "action": "translate:ListTextTranslationJobs",
      "condition": null
    },
    {
      "action": "trustedadvisor:Describe*",
      "condition": null
    },
    {
      "action": "verifiedpermissions:GetIdentitySource",
      "condition": null
    },
    {
      "action": "verifiedpermissions:GetPolicy",
      "condition": null
    },
    {
      "action": "verifiedpermissions:GetPolicyStore",
      "condition": null
    },
    {
      "action": "verifiedpermissions:GetPolicyTemplate",
      "condition": null
    },
    {
      "action": "verifiedpermissions:GetSchema",
      "condition": null
    },
    {
      "action": "verifiedpermissions:IsAuthorized",
      "condition": null
    },
    {
      "action": "verifiedpermissions:IsAuthorizedWithToken",
      "condition": null
    },
    {
      "action": "verifiedpermissions:ListIdentitySources",
      "condition": null
    },
    {
      "action": "verifiedpermissions:ListPolicies",
      "condition": null
    },
    {
      "action": "verifiedpermissions:ListPolicyStores",
      "condition": null
    },
    {
      "action": "verifiedpermissions:ListPolicyTemplates",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetAccessLogSubscription",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetAuthPolicy",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetListener",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetRule",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetService",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetServiceNetwork",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetServiceNetworkServiceAssociation",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetServiceNetworkVpcAssociation",
      "condition": null
    },
    {
      "action": "vpc-lattice:GetTargetGroup",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListAccessLogSubscriptions",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListListeners",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListRules",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListServiceNetworks",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListServiceNetworkServiceAssociations",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListServiceNetworkVpcAssociations",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListServices",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListTagsForResource",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListTargetGroups",
      "condition": null
    },
    {
      "action": "vpc-lattice:ListTargets",
      "condition": null
    },
    {
      "action": "waf-regional:Get*",
      "condition": null
    },
    {
      "action": "waf-regional:List*",
      "condition": null
    },
    {
      "action": "waf:Get*",
      "condition": null
    },
    {
      "action": "waf:List*",
      "condition": null
    },
    {
      "action": "wafv2:CheckCapacity",
      "condition": null
    },
    {
      "action": "wafv2:Describe*",
      "condition": null
    },
    {
      "action": "wafv2:Get*",
      "condition": null
    },
    {
      "action": "wafv2:List*",
      "condition": null
    },
    {
      "action": "wellarchitected:ExportLens",
      "condition": null
    },
    {
      "action": "wellarchitected:GetAnswer",
      "condition": null
    },
    {
      "action": "wellarchitected:GetConsolidatedReport",
      "condition": null
    },
    {
      "action": "wellarchitected:GetLens",
      "condition": null
    },
    {
      "action": "wellarchitected:GetLensReview",
      "condition": null
    },
    {
      "action": "wellarchitected:GetLensReviewReport",
      "condition": null
    },
    {
      "action": "wellarchitected:GetLensVersionDifference",
      "condition": null
    },
    {
      "action": "wellarchitected:GetMilestone",
      "condition": null
    },
    {
      "action": "wellarchitected:GetProfile",
      "condition": null
    },
    {
      "action": "wellarchitected:GetProfileTemplate",
      "condition": null
    },
    {
      "action": "wellarchitected:GetReviewTemplate",
      "condition": null
    },
    {
      "action": "wellarchitected:GetReviewTemplateAnswer",
      "condition": null
    },
    {
      "action": "wellarchitected:GetReviewTemplateLensReview",
      "condition": null
    },
    {
      "action": "wellarchitected:GetWorkload",
      "condition": null
    },
    {
      "action": "wellarchitected:ListAnswers",
      "condition": null
    },
    {
      "action": "wellarchitected:ListCheckDetails",
      "condition": null
    },
    {
      "action": "wellarchitected:ListCheckSummaries",
      "condition": null
    },
    {
      "action": "wellarchitected:ListLenses",
      "condition": null
    },
    {
      "action": "wellarchitected:ListLensReviewImprovements",
      "condition": null
    },
    {
      "action": "wellarchitected:ListLensReviews",
      "condition": null
    },
    {
      "action": "wellarchitected:ListLensShares",
      "condition": null
    },
    {
      "action": "wellarchitected:ListMilestones",
      "condition": null
    },
    {
      "action": "wellarchitected:ListNotifications",
      "condition": null
    },
    {
      "action": "wellarchitected:ListProfileNotifications",
      "condition": null
    },
    {
      "action": "wellarchitected:ListProfiles",
      "condition": null
    },
    {
      "action": "wellarchitected:ListProfileShares",
      "condition": null
    },
    {
      "action": "wellarchitected:ListReviewTemplateAnswers",
      "condition": null
    },
    {
      "action": "wellarchitected:ListReviewTemplates",
      "condition": null
    },
    {
      "action": "wellarchitected:ListShareInvitations",
      "condition": null
    },
    {
      "action": "wellarchitected:ListTagsForResource",
      "condition": null
    },
    {
      "action": "wellarchitected:ListTemplateShares",
      "condition": null
    },
    {
      "action": "wellarchitected:ListWorkloads",
      "condition": null
    },
    {
      "action": "wellarchitected:ListWorkloadShares",
      "condition": null
    },
    {
      "action": "workdocs:CheckAlias",
      "condition": null
    },
    {
      "action": "workdocs:Describe*",
      "condition": null
    },
    {
      "action": "workdocs:Get*",
      "condition": null
    },
    {
      "action": "workmail:Describe*",
      "condition": null
    },
    {
      "action": "workmail:Get*",
      "condition": null
    },
    {
      "action": "workmail:List*",
      "condition": null
    },
    {
      "action": "workmail:Search*",
      "condition": null
    },
    {
      "action": "workspaces-web:GetBrowserSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:GetIdentityProvider",
      "condition": null
    },
    {
      "action": "workspaces-web:GetNetworkSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:GetPortal",
      "condition": null
    },
    {
      "action": "workspaces-web:GetPortalServiceProviderMetadata",
      "condition": null
    },
    {
      "action": "workspaces-web:GetTrustStore",
      "condition": null
    },
    {
      "action": "workspaces-web:GetUserAccessLoggingSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:GetUserSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:ListBrowserSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:ListIdentityProviders",
      "condition": null
    },
    {
      "action": "workspaces-web:ListNetworkSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:ListPortals",
      "condition": null
    },
    {
      "action": "workspaces-web:ListTagsForResource",
      "condition": null
    },
    {
      "action": "workspaces-web:ListTrustStores",
      "condition": null
    },
    {
      "action": "workspaces-web:ListUserAccessLoggingSettings",
      "condition": null
    },
    {
      "action": "workspaces-web:ListUserSettings",
      "condition": null
    },
    {
      "action": "workspaces:Describe*",
      "condition": null
    },
    {
      "action": "xray:BatchGet*",
      "condition": null
    },
    {
      "action": "xray:Get*",
      "condition": null
    }
  ],
  "updatedate": "2024-06-21T20:04:53+00:00",
  "version": "v114"
}