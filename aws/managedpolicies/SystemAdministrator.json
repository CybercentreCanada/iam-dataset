{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/job-function/SystemAdministrator",
  "createdate": "2020-08-24T20:05:29+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "acm:Describe*",
          "acm:Get*",
          "acm:List*",
          "acm:Request*",
          "acm:Resend*",
          "autoscaling:*",
          "cloudtrail:DescribeTrails",
          "cloudtrail:GetTrailStatus",
          "cloudtrail:ListPublicKeys",
          "cloudtrail:ListTags",
          "cloudtrail:LookupEvents",
          "cloudtrail:StartLogging",
          "cloudtrail:StopLogging",
          "cloudwatch:*",
          "codecommit:BatchGetRepositories",
          "codecommit:CreateBranch",
          "codecommit:CreateRepository",
          "codecommit:Get*",
          "codecommit:GitPull",
          "codecommit:GitPush",
          "codecommit:List*",
          "codecommit:Put*",
          "codecommit:Test*",
          "codecommit:Update*",
          "codedeploy:*",
          "codepipeline:*",
          "config:*",
          "ds:*",
          "ec2:Allocate*",
          "ec2:AssignPrivateIpAddresses*",
          "ec2:Associate*",
          "ec2:Allocate*",
          "ec2:AttachInternetGateway",
          "ec2:AttachNetworkInterface",
          "ec2:AttachVpnGateway",
          "ec2:Bundle*",
          "ec2:Cancel*",
          "ec2:Copy*",
          "ec2:CreateCustomerGateway",
          "ec2:CreateDhcpOptions",
          "ec2:CreateFlowLogs",
          "ec2:CreateImage",
          "ec2:CreateInstanceExportTask",
          "ec2:CreateInternetGateway",
          "ec2:CreateKeyPair",
          "ec2:CreateLaunchTemplate",
          "ec2:CreateLaunchTemplateVersion",
          "ec2:CreateNatGateway",
          "ec2:CreateNetworkInterface",
          "ec2:CreatePlacementGroup",
          "ec2:CreateReservedInstancesListing",
          "ec2:CreateRoute",
          "ec2:CreateRouteTable",
          "ec2:CreateSecurityGroup",
          "ec2:CreateSnapshot",
          "ec2:CreateSpotDatafeedSubscription",
          "ec2:CreateSubnet",
          "ec2:CreateTags",
          "ec2:CreateVolume",
          "ec2:CreateVpc",
          "ec2:CreateVpcEndpoint",
          "ec2:CreateVpnConnection",
          "ec2:CreateVpnConnectionRoute",
          "ec2:CreateVpnGateway",
          "ec2:DeleteFlowLogs",
          "ec2:DeleteKeyPair",
          "ec2:DeleteLaunchTemplate",
          "ec2:DeleteLaunchTemplateVersions",
          "ec2:DeleteNatGateway",
          "ec2:DeleteNetworkInterface",
          "ec2:DeletePlacementGroup",
          "ec2:DeleteSnapshot",
          "ec2:DeleteSpotDatafeedSubscription",
          "ec2:DeleteSubnet",
          "ec2:DeleteTags",
          "ec2:DeleteVpc",
          "ec2:DeleteVpcEndpoints",
          "ec2:DeleteVpnConnection",
          "ec2:DeleteVpnConnectionRoute",
          "ec2:DeleteVpnGateway",
          "ec2:DeregisterImage",
          "ec2:Describe*",
          "ec2:DetachInternetGateway",
          "ec2:DetachNetworkInterface",
          "ec2:DetachVpnGateway",
          "ec2:DisableVgwRoutePropagation",
          "ec2:DisableVpcClassicLinkDnsSupport",
          "ec2:DisassociateAddress",
          "ec2:DisassociateRouteTable",
          "ec2:EnableVgwRoutePropagation",
          "ec2:EnableVolumeIO",
          "ec2:EnableVpcClassicLinkDnsSupport",
          "ec2:GetConsoleOutput",
          "ec2:GetHostReservationPurchasePreview",
          "ec2:GetLaunchTemplateData",
          "ec2:GetPasswordData",
          "ec2:Import*",
          "ec2:Modify*",
          "ec2:MonitorInstances",
          "ec2:MoveAddressToVpc",
          "ec2:Purchase*",
          "ec2:RegisterImage",
          "ec2:Release*",
          "ec2:Replace*",
          "ec2:ReportInstanceStatus",
          "ec2:Request*",
          "ec2:Reset*",
          "ec2:RestoreAddressToClassic",
          "ec2:RunScheduledInstances",
          "ec2:UnassignPrivateIpAddresses",
          "ec2:UnmonitorInstances",
          "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
          "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
          "elasticloadbalancing:*",
          "events:*",
          "iam:GetAccount*",
          "iam:GetContextKeys*",
          "iam:GetCredentialReport",
          "iam:ListAccountAliases",
          "iam:ListGroups",
          "iam:ListOpenIDConnectProviders",
          "iam:ListPolicies",
          "iam:ListPoliciesGrantingServiceAccess",
          "iam:ListRoles",
          "iam:ListSAMLProviders",
          "iam:ListServerCertificates",
          "iam:Simulate*",
          "iam:UpdateServerCertificate",
          "iam:UpdateSigningCertificate",
          "kinesis:ListStreams",
          "kinesis:PutRecord",
          "kms:CreateAlias",
          "kms:CreateKey",
          "kms:DeleteAlias",
          "kms:Describe*",
          "kms:GenerateRandom",
          "kms:Get*",
          "kms:List*",
          "kms:Encrypt",
          "kms:ReEncrypt*",
          "lambda:Create*",
          "lambda:Delete*",
          "lambda:Get*",
          "lambda:InvokeFunction",
          "lambda:List*",
          "lambda:PublishVersion",
          "lambda:Update*",
          "logs:*",
          "rds:Describe*",
          "rds:ListTagsForResource",
          "route53:*",
          "route53domains:*",
          "ses:*",
          "sns:*",
          "sqs:*",
          "trustedadvisor:*"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "ec2:AcceptVpcPeeringConnection",
          "ec2:AttachClassicLinkVpc",
          "ec2:AttachVolume",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:CreateVpcPeeringConnection",
          "ec2:DeleteCustomerGateway",
          "ec2:DeleteDhcpOptions",
          "ec2:DeleteInternetGateway",
          "ec2:DeleteNetworkAcl*",
          "ec2:DeleteRoute",
          "ec2:DeleteRouteTable",
          "ec2:DeleteSecurityGroup",
          "ec2:DeleteVolume",
          "ec2:DeleteVpcPeeringConnection",
          "ec2:DetachClassicLinkVpc",
          "ec2:DetachVolume",
          "ec2:DisableVpcClassicLink",
          "ec2:EnableVpcClassicLink",
          "ec2:GetConsoleScreenshot",
          "ec2:RebootInstances",
          "ec2:RejectVpcPeeringConnection",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RunInstances",
          "ec2:StartInstances",
          "ec2:StopInstances",
          "ec2:TerminateInstances"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "s3:*"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "iam:GetAccessKeyLastUsed",
          "iam:GetGroup*",
          "iam:GetInstanceProfile",
          "iam:GetLoginProfile",
          "iam:GetOpenIDConnectProvider",
          "iam:GetPolicy*",
          "iam:GetRole*",
          "iam:GetSAMLProvider",
          "iam:GetSSHPublicKey",
          "iam:GetServerCertificate",
          "iam:GetServiceLastAccessed*",
          "iam:GetUser*",
          "iam:ListAccessKeys",
          "iam:ListAttached*",
          "iam:ListEntitiesForPolicy",
          "iam:ListGroupPolicies",
          "iam:ListGroupsForUser",
          "iam:ListInstanceProfiles*",
          "iam:ListMFADevices",
          "iam:ListPolicyVersions",
          "iam:ListRolePolicies",
          "iam:ListSSHPublicKeys",
          "iam:ListSigningCertificates",
          "iam:ListUserPolicies",
          "iam:Upload*"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "iam:GetRole",
          "iam:ListRoles",
          "iam:PassRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/rds-monitoring-role",
          "arn:aws:iam::*:role/ec2-sysadmin-*",
          "arn:aws:iam::*:role/ecr-sysadmin-*",
          "arn:aws:iam::*:role/lambda-sysadmin-*"
        ]
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "SystemAdministrator",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "acm:Describe*",
      "condition": null
    },
    {
      "action": "acm:Get*",
      "condition": null
    },
    {
      "action": "acm:List*",
      "condition": null
    },
    {
      "action": "acm:Request*",
      "condition": null
    },
    {
      "action": "acm:Resend*",
      "condition": null
    },
    {
      "action": "autoscaling:*",
      "condition": null
    },
    {
      "action": "cloudtrail:DescribeTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:GetTrailStatus",
      "condition": null
    },
    {
      "action": "cloudtrail:ListPublicKeys",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTags",
      "condition": null
    },
    {
      "action": "cloudtrail:LookupEvents",
      "condition": null
    },
    {
      "action": "cloudtrail:StartLogging",
      "condition": null
    },
    {
      "action": "cloudtrail:StopLogging",
      "condition": null
    },
    {
      "action": "cloudwatch:*",
      "condition": null
    },
    {
      "action": "codecommit:BatchGetRepositories",
      "condition": null
    },
    {
      "action": "codecommit:CreateBranch",
      "condition": null
    },
    {
      "action": "codecommit:CreateRepository",
      "condition": null
    },
    {
      "action": "codecommit:Get*",
      "condition": null
    },
    {
      "action": "codecommit:GitPull",
      "condition": null
    },
    {
      "action": "codecommit:GitPush",
      "condition": null
    },
    {
      "action": "codecommit:List*",
      "condition": null
    },
    {
      "action": "codecommit:Put*",
      "condition": null
    },
    {
      "action": "codecommit:Test*",
      "condition": null
    },
    {
      "action": "codecommit:Update*",
      "condition": null
    },
    {
      "action": "codedeploy:*",
      "condition": null
    },
    {
      "action": "codepipeline:*",
      "condition": null
    },
    {
      "action": "config:*",
      "condition": null
    },
    {
      "action": "ds:*",
      "condition": null
    },
    {
      "action": "ec2:Allocate*",
      "condition": null
    },
    {
      "action": "ec2:AssignPrivateIpAddresses*",
      "condition": null
    },
    {
      "action": "ec2:Associate*",
      "condition": null
    },
    {
      "action": "ec2:Allocate*",
      "condition": null
    },
    {
      "action": "ec2:AttachInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:AttachNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:AttachVpnGateway",
      "condition": null
    },
    {
      "action": "ec2:Bundle*",
      "condition": null
    },
    {
      "action": "ec2:Cancel*",
      "condition": null
    },
    {
      "action": "ec2:Copy*",
      "condition": null
    },
    {
      "action": "ec2:CreateCustomerGateway",
      "condition": null
    },
    {
      "action": "ec2:CreateDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:CreateFlowLogs",
      "condition": null
    },
    {
      "action": "ec2:CreateImage",
      "condition": null
    },
    {
      "action": "ec2:CreateInstanceExportTask",
      "condition": null
    },
    {
      "action": "ec2:CreateInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:CreateKeyPair",
      "condition": null
    },
    {
      "action": "ec2:CreateLaunchTemplate",
      "condition": null
    },
    {
      "action": "ec2:CreateLaunchTemplateVersion",
      "condition": null
    },
    {
      "action": "ec2:CreateNatGateway",
      "condition": null
    },
    {
      "action": "ec2:CreateNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:CreatePlacementGroup",
      "condition": null
    },
    {
      "action": "ec2:CreateReservedInstancesListing",
      "condition": null
    },
    {
      "action": "ec2:CreateRoute",
      "condition": null
    },
    {
      "action": "ec2:CreateRouteTable",
      "condition": null
    },
    {
      "action": "ec2:CreateSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:CreateSnapshot",
      "condition": null
    },
    {
      "action": "ec2:CreateSpotDatafeedSubscription",
      "condition": null
    },
    {
      "action": "ec2:CreateSubnet",
      "condition": null
    },
    {
      "action": "ec2:CreateTags",
      "condition": null
    },
    {
      "action": "ec2:CreateVolume",
      "condition": null
    },
    {
      "action": "ec2:CreateVpc",
      "condition": null
    },
    {
      "action": "ec2:CreateVpcEndpoint",
      "condition": null
    },
    {
      "action": "ec2:CreateVpnConnection",
      "condition": null
    },
    {
      "action": "ec2:CreateVpnConnectionRoute",
      "condition": null
    },
    {
      "action": "ec2:CreateVpnGateway",
      "condition": null
    },
    {
      "action": "ec2:DeleteFlowLogs",
      "condition": null
    },
    {
      "action": "ec2:DeleteKeyPair",
      "condition": null
    },
    {
      "action": "ec2:DeleteLaunchTemplate",
      "condition": null
    },
    {
      "action": "ec2:DeleteLaunchTemplateVersions",
      "condition": null
    },
    {
      "action": "ec2:DeleteNatGateway",
      "condition": null
    },
    {
      "action": "ec2:DeleteNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:DeletePlacementGroup",
      "condition": null
    },
    {
      "action": "ec2:DeleteSnapshot",
      "condition": null
    },
    {
      "action": "ec2:DeleteSpotDatafeedSubscription",
      "condition": null
    },
    {
      "action": "ec2:DeleteSubnet",
      "condition": null
    },
    {
      "action": "ec2:DeleteTags",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpc",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpcEndpoints",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpnConnection",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpnConnectionRoute",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpnGateway",
      "condition": null
    },
    {
      "action": "ec2:DeregisterImage",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:DetachInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:DetachNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:DetachVpnGateway",
      "condition": null
    },
    {
      "action": "ec2:DisableVgwRoutePropagation",
      "condition": null
    },
    {
      "action": "ec2:DisableVpcClassicLinkDnsSupport",
      "condition": null
    },
    {
      "action": "ec2:DisassociateAddress",
      "condition": null
    },
    {
      "action": "ec2:DisassociateRouteTable",
      "condition": null
    },
    {
      "action": "ec2:EnableVgwRoutePropagation",
      "condition": null
    },
    {
      "action": "ec2:EnableVolumeIO",
      "condition": null
    },
    {
      "action": "ec2:EnableVpcClassicLinkDnsSupport",
      "condition": null
    },
    {
      "action": "ec2:GetConsoleOutput",
      "condition": null
    },
    {
      "action": "ec2:GetHostReservationPurchasePreview",
      "condition": null
    },
    {
      "action": "ec2:GetLaunchTemplateData",
      "condition": null
    },
    {
      "action": "ec2:GetPasswordData",
      "condition": null
    },
    {
      "action": "ec2:Import*",
      "condition": null
    },
    {
      "action": "ec2:Modify*",
      "condition": null
    },
    {
      "action": "ec2:MonitorInstances",
      "condition": null
    },
    {
      "action": "ec2:MoveAddressToVpc",
      "condition": null
    },
    {
      "action": "ec2:Purchase*",
      "condition": null
    },
    {
      "action": "ec2:RegisterImage",
      "condition": null
    },
    {
      "action": "ec2:Release*",
      "condition": null
    },
    {
      "action": "ec2:Replace*",
      "condition": null
    },
    {
      "action": "ec2:ReportInstanceStatus",
      "condition": null
    },
    {
      "action": "ec2:Request*",
      "condition": null
    },
    {
      "action": "ec2:Reset*",
      "condition": null
    },
    {
      "action": "ec2:RestoreAddressToClassic",
      "condition": null
    },
    {
      "action": "ec2:RunScheduledInstances",
      "condition": null
    },
    {
      "action": "ec2:UnassignPrivateIpAddresses",
      "condition": null
    },
    {
      "action": "ec2:UnmonitorInstances",
      "condition": null
    },
    {
      "action": "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
      "condition": null
    },
    {
      "action": "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:*",
      "condition": null
    },
    {
      "action": "events:*",
      "condition": null
    },
    {
      "action": "iam:GetAccount*",
      "condition": null
    },
    {
      "action": "iam:GetContextKeys*",
      "condition": null
    },
    {
      "action": "iam:GetCredentialReport",
      "condition": null
    },
    {
      "action": "iam:ListAccountAliases",
      "condition": null
    },
    {
      "action": "iam:ListGroups",
      "condition": null
    },
    {
      "action": "iam:ListOpenIDConnectProviders",
      "condition": null
    },
    {
      "action": "iam:ListPolicies",
      "condition": null
    },
    {
      "action": "iam:ListPoliciesGrantingServiceAccess",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "iam:ListSAMLProviders",
      "condition": null
    },
    {
      "action": "iam:ListServerCertificates",
      "condition": null
    },
    {
      "action": "iam:Simulate*",
      "condition": null
    },
    {
      "action": "iam:UpdateServerCertificate",
      "condition": null
    },
    {
      "action": "iam:UpdateSigningCertificate",
      "condition": null
    },
    {
      "action": "kinesis:ListStreams",
      "condition": null
    },
    {
      "action": "kinesis:PutRecord",
      "condition": null
    },
    {
      "action": "kms:CreateAlias",
      "condition": null
    },
    {
      "action": "kms:CreateKey",
      "condition": null
    },
    {
      "action": "kms:DeleteAlias",
      "condition": null
    },
    {
      "action": "kms:Describe*",
      "condition": null
    },
    {
      "action": "kms:GenerateRandom",
      "condition": null
    },
    {
      "action": "kms:Get*",
      "condition": null
    },
    {
      "action": "kms:List*",
      "condition": null
    },
    {
      "action": "kms:Encrypt",
      "condition": null
    },
    {
      "action": "kms:ReEncrypt*",
      "condition": null
    },
    {
      "action": "lambda:Create*",
      "condition": null
    },
    {
      "action": "lambda:Delete*",
      "condition": null
    },
    {
      "action": "lambda:Get*",
      "condition": null
    },
    {
      "action": "lambda:InvokeFunction",
      "condition": null
    },
    {
      "action": "lambda:List*",
      "condition": null
    },
    {
      "action": "lambda:PublishVersion",
      "condition": null
    },
    {
      "action": "lambda:Update*",
      "condition": null
    },
    {
      "action": "logs:*",
      "condition": null
    },
    {
      "action": "rds:Describe*",
      "condition": null
    },
    {
      "action": "rds:ListTagsForResource",
      "condition": null
    },
    {
      "action": "route53:*",
      "condition": null
    },
    {
      "action": "route53domains:*",
      "condition": null
    },
    {
      "action": "ses:*",
      "condition": null
    },
    {
      "action": "sns:*",
      "condition": null
    },
    {
      "action": "sqs:*",
      "condition": null
    },
    {
      "action": "trustedadvisor:*",
      "condition": null
    },
    {
      "action": "ec2:AcceptVpcPeeringConnection",
      "condition": null
    },
    {
      "action": "ec2:AttachClassicLinkVpc",
      "condition": null
    },
    {
      "action": "ec2:AttachVolume",
      "condition": null
    },
    {
      "action": "ec2:AuthorizeSecurityGroupEgress",
      "condition": null
    },
    {
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": null
    },
    {
      "action": "ec2:CreateVpcPeeringConnection",
      "condition": null
    },
    {
      "action": "ec2:DeleteCustomerGateway",
      "condition": null
    },
    {
      "action": "ec2:DeleteDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:DeleteInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:DeleteNetworkAcl*",
      "condition": null
    },
    {
      "action": "ec2:DeleteRoute",
      "condition": null
    },
    {
      "action": "ec2:DeleteRouteTable",
      "condition": null
    },
    {
      "action": "ec2:DeleteSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:DeleteVolume",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpcPeeringConnection",
      "condition": null
    },
    {
      "action": "ec2:DetachClassicLinkVpc",
      "condition": null
    },
    {
      "action": "ec2:DetachVolume",
      "condition": null
    },
    {
      "action": "ec2:DisableVpcClassicLink",
      "condition": null
    },
    {
      "action": "ec2:EnableVpcClassicLink",
      "condition": null
    },
    {
      "action": "ec2:GetConsoleScreenshot",
      "condition": null
    },
    {
      "action": "ec2:RebootInstances",
      "condition": null
    },
    {
      "action": "ec2:RejectVpcPeeringConnection",
      "condition": null
    },
    {
      "action": "ec2:RevokeSecurityGroupEgress",
      "condition": null
    },
    {
      "action": "ec2:RevokeSecurityGroupIngress",
      "condition": null
    },
    {
      "action": "ec2:RunInstances",
      "condition": null
    },
    {
      "action": "ec2:StartInstances",
      "condition": null
    },
    {
      "action": "ec2:StopInstances",
      "condition": null
    },
    {
      "action": "ec2:TerminateInstances",
      "condition": null
    },
    {
      "action": "s3:*",
      "condition": null
    },
    {
      "action": "iam:GetAccessKeyLastUsed",
      "condition": null
    },
    {
      "action": "iam:GetGroup*",
      "condition": null
    },
    {
      "action": "iam:GetInstanceProfile",
      "condition": null
    },
    {
      "action": "iam:GetLoginProfile",
      "condition": null
    },
    {
      "action": "iam:GetOpenIDConnectProvider",
      "condition": null
    },
    {
      "action": "iam:GetPolicy*",
      "condition": null
    },
    {
      "action": "iam:GetRole*",
      "condition": null
    },
    {
      "action": "iam:GetSAMLProvider",
      "condition": null
    },
    {
      "action": "iam:GetSSHPublicKey",
      "condition": null
    },
    {
      "action": "iam:GetServerCertificate",
      "condition": null
    },
    {
      "action": "iam:GetServiceLastAccessed*",
      "condition": null
    },
    {
      "action": "iam:GetUser*",
      "condition": null
    },
    {
      "action": "iam:ListAccessKeys",
      "condition": null
    },
    {
      "action": "iam:ListAttached*",
      "condition": null
    },
    {
      "action": "iam:ListEntitiesForPolicy",
      "condition": null
    },
    {
      "action": "iam:ListGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:ListGroupsForUser",
      "condition": null
    },
    {
      "action": "iam:ListInstanceProfiles*",
      "condition": null
    },
    {
      "action": "iam:ListMFADevices",
      "condition": null
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": null
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListSSHPublicKeys",
      "condition": null
    },
    {
      "action": "iam:ListSigningCertificates",
      "condition": null
    },
    {
      "action": "iam:ListUserPolicies",
      "condition": null
    },
    {
      "action": "iam:Upload*",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": null
    }
  ],
  "updatedate": "2020-08-24T20:05:29+00:00",
  "version": "v6"
}