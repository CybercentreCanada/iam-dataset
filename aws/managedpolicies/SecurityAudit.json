{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/SecurityAudit",
  "createdate": "2024-04-05T17:32:58+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "a4b:ListSkills",
          "access-analyzer:GetAnalyzedResource",
          "access-analyzer:GetAnalyzer",
          "access-analyzer:GetArchiveRule",
          "access-analyzer:GetFinding",
          "access-analyzer:ListAnalyzedResources",
          "access-analyzer:ListAnalyzers",
          "access-analyzer:ListArchiveRules",
          "access-analyzer:ListFindings",
          "access-analyzer:ListTagsForResource",
          "account:GetAlternateContact",
          "account:GetRegionOptStatus",
          "acm-pca:DescribeCertificateAuthority",
          "acm-pca:DescribeCertificateAuthorityAuditReport",
          "acm-pca:GetPolicy",
          "acm-pca:ListCertificateAuthorities",
          "acm-pca:ListPermissions",
          "acm-pca:ListTags",
          "acm:Describe*",
          "acm:List*",
          "airflow:GetEnvironment",
          "airflow:ListEnvironments",
          "appflow:ListFlows",
          "appflow:ListTagsForResource",
          "application-autoscaling:Describe*",
          "appmesh:Describe*",
          "appmesh:List*",
          "apprunner:DescribeAutoScalingConfiguration",
          "apprunner:DescribeCustomDomains",
          "apprunner:DescribeObservabilityConfiguration",
          "apprunner:DescribeService",
          "apprunner:DescribeVpcConnector",
          "apprunner:DescribeVpcIngressConnection",
          "apprunner:ListAutoScalingConfigurations",
          "apprunner:ListConnections",
          "apprunner:ListObservabilityConfigurations",
          "apprunner:ListOperations",
          "apprunner:ListServices",
          "apprunner:ListTagsForResource",
          "apprunner:ListVpcConnectors",
          "apprunner:ListVpcIngressConnections",
          "appsync:GetApiCache",
          "appsync:List*",
          "athena:GetWorkGroup",
          "athena:List*",
          "auditmanager:GetAccountStatus",
          "auditmanager:ListAssessmentControlInsightsByControlDomain",
          "auditmanager:ListAssessmentFrameworkShareRequests",
          "auditmanager:ListAssessmentFrameworks",
          "auditmanager:ListAssessmentReports",
          "auditmanager:ListAssessments",
          "auditmanager:ListControlDomainInsights",
          "auditmanager:ListControlDomainInsightsByAssessment",
          "auditmanager:ListControlInsightsByControlDomain",
          "auditmanager:ListControls",
          "auditmanager:ListNotifications",
          "auditmanager:ListTagsForResource",
          "autoscaling-plans:DescribeScalingPlans",
          "autoscaling:Describe*",
          "backup:DescribeGlobalSettings",
          "backup:DescribeRegionSettings",
          "backup:GetBackupVaultAccessPolicy",
          "backup:GetBackupVaultNotifications",
          "backup:ListBackupVaults",
          "backup:ListTags",
          "batch:DescribeComputeEnvironments",
          "batch:DescribeJobDefinitions",
          "bedrock:GetCustomModel",
          "bedrock:GetModelInvocationLoggingConfiguration",
          "bedrock:ListCustomModels",
          "bedrock:ListTagsForResource",
          "braket:SearchJobs",
          "braket:SearchQuantumTasks",
          "chime:List*",
          "cloud9:Describe*",
          "cloud9:ListEnvironments",
          "clouddirectory:ListDirectories",
          "cloudformation:DescribeStack*",
          "cloudformation:GetStackPolicy",
          "cloudformation:GetTemplate",
          "cloudformation:ListStack*",
          "cloudfront:Get*",
          "cloudfront:List*",
          "cloudsearch:DescribeDomainEndpointOptions",
          "cloudsearch:DescribeDomains",
          "cloudsearch:DescribeServiceAccessPolicies",
          "cloudtrail:DescribeTrails",
          "cloudtrail:GetEventSelectors",
          "cloudtrail:GetInsightSelectors",
          "cloudtrail:GetTrail",
          "cloudtrail:GetTrailStatus",
          "cloudtrail:ListTags",
          "cloudtrail:ListTrails",
          "cloudtrail:LookupEvents",
          "cloudwatch:Describe*",
          "cloudwatch:GetDashboard",
          "cloudwatch:ListDashboards",
          "cloudwatch:ListTagsForResource",
          "codeartifact:GetDomainPermissionsPolicy",
          "codeartifact:GetRepositoryPermissionsPolicy",
          "codeartifact:ListRepositories",
          "codebuild:BatchGetProjects",
          "codebuild:GetResourcePolicy",
          "codebuild:ListProjects",
          "codecommit:BatchGetRepositories",
          "codecommit:GetBranch",
          "codecommit:GetObjectIdentifier",
          "codecommit:GetRepository",
          "codecommit:GetRepositoryTriggers",
          "codecommit:List*",
          "codedeploy:Batch*",
          "codedeploy:Get*",
          "codedeploy:List*",
          "codepipeline:GetJobDetails",
          "codepipeline:GetPipeline",
          "codepipeline:GetPipelineExecution",
          "codepipeline:GetPipelineState",
          "codepipeline:ListPipelines",
          "codestar:Describe*",
          "codestar:List*",
          "cognito-identity:Describe*",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:ListIdentityPools",
          "cognito-identity:ListTagsForResource",
          "cognito-idp:Describe*",
          "cognito-idp:ListDevices",
          "cognito-idp:ListGroups",
          "cognito-idp:ListIdentityProviders",
          "cognito-idp:ListResourceServers",
          "cognito-idp:ListTagsForResource",
          "cognito-idp:ListUserImportJobs",
          "cognito-idp:ListUserPoolClients",
          "cognito-idp:ListUserPools",
          "cognito-idp:ListUsers",
          "cognito-idp:ListUsersInGroup",
          "cognito-sync:Describe*",
          "cognito-sync:List*",
          "comprehend:Describe*",
          "comprehend:List*",
          "comprehendmedical:ListICD10CMInferenceJobs",
          "comprehendmedical:ListPHIDetectionJobs",
          "comprehendmedical:ListRxNormInferenceJobs",
          "comprehendmedical:ListSNOMEDCTInferenceJobs",
          "config:BatchGetAggregateResourceConfig",
          "config:BatchGetResourceConfig",
          "config:Deliver*",
          "config:Describe*",
          "config:Get*",
          "config:List*",
          "config:SelectAggregateResourceConfig",
          "config:SelectResourceConfig",
          "connect:ListApprovedOrigins",
          "connect:ListInstanceAttributes",
          "connect:ListInstanceStorageConfigs",
          "connect:ListInstances",
          "connect:ListIntegrationAssociations",
          "connect:ListLambdaFunctions",
          "connect:ListLexBots",
          "connect:ListSecurityKeys",
          "databrew:DescribeDataset",
          "databrew:DescribeProject",
          "databrew:ListJobs",
          "databrew:ListProjects",
          "dataexchange:ListDataSets",
          "datapipeline:DescribeObjects",
          "datapipeline:DescribePipelines",
          "datapipeline:EvaluateExpression",
          "datapipeline:GetPipelineDefinition",
          "datapipeline:ListPipelines",
          "datapipeline:QueryObjects",
          "datapipeline:ValidatePipelineDefinition",
          "datasync:Describe*",
          "datasync:List*",
          "dax:Describe*",
          "dax:ListTags",
          "deepracer:ListModels",
          "detective:GetGraphIngestState",
          "detective:ListGraphs",
          "detective:ListMembers",
          "devicefarm:ListProjects",
          "directconnect:Describe*",
          "discovery:DescribeAgents",
          "discovery:DescribeConfigurations",
          "discovery:DescribeContinuousExports",
          "discovery:DescribeExportConfigurations",
          "discovery:DescribeExportTasks",
          "discovery:DescribeImportTasks",
          "dms:Describe*",
          "dms:ListTagsForResource",
          "docdb-elastic:ListClusters",
          "ds:DescribeDirectories",
          "dynamodb:DescribeContinuousBackups",
          "dynamodb:DescribeExport",
          "dynamodb:DescribeGlobalTable",
          "dynamodb:DescribeKinesisStreamingDestination",
          "dynamodb:DescribeTable",
          "dynamodb:DescribeTimeToLive",
          "dynamodb:ListBackups",
          "dynamodb:ListExports",
          "dynamodb:ListGlobalTables",
          "dynamodb:ListStreams",
          "dynamodb:ListTables",
          "dynamodb:ListTagsOfResource",
          "ec2:Describe*",
          "ec2:GetEbsEncryptionByDefault",
          "ec2:GetImageBlockPublicAccessState",
          "ec2:GetManagedPrefixListAssociations",
          "ec2:GetManagedPrefixListEntries",
          "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
          "ec2:GetNetworkInsightsAccessScopeContent",
          "ec2:GetTransitGatewayAttachmentPropagations",
          "ec2:GetTransitGatewayMulticastDomainAssociations",
          "ec2:GetTransitGatewayPrefixListReferences",
          "ec2:GetTransitGatewayRouteTableAssociations",
          "ec2:GetTransitGatewayRouteTablePropagations",
          "ec2:SearchTransitGatewayRoutes",
          "ecr-public:DescribeImageTags",
          "ecr-public:DescribeImages",
          "ecr-public:DescribeRegistries",
          "ecr-public:DescribeRepositories",
          "ecr-public:GetRegistryCatalogData",
          "ecr-public:GetRepositoryCatalogData",
          "ecr-public:GetRepositoryPolicy",
          "ecr-public:ListTagsForResource",
          "ecr:BatchGetRepositoryScanningConfiguration",
          "ecr:DescribeImageScanFindings",
          "ecr:DescribeImages",
          "ecr:DescribeRegistry",
          "ecr:DescribeRepositories",
          "ecr:GetLifecyclePolicy",
          "ecr:GetRegistryPolicy",
          "ecr:GetRegistryScanningConfiguration",
          "ecr:GetRepositoryPolicy",
          "ecr:ListImages",
          "ecr:ListTagsForResource",
          "ecs:Describe*",
          "ecs:List*",
          "eks:DescribeCluster",
          "eks:DescribeFargateProfile",
          "eks:DescribeNodeGroup",
          "eks:ListClusters",
          "eks:ListFargateProfiles",
          "eks:ListNodeGroups",
          "eks:ListTagsForResource",
          "eks:ListUpdates",
          "elastic-inference:DescribeAccelerators",
          "elasticache:Describe*",
          "elasticache:ListTagsForResource",
          "elasticbeanstalk:Describe*",
          "elasticbeanstalk:ListTagsForResource",
          "elasticfilesystem:DescribeAccessPoints",
          "elasticfilesystem:DescribeAccountPreferences",
          "elasticfilesystem:DescribeBackupPolicy",
          "elasticfilesystem:DescribeFileSystemPolicy",
          "elasticfilesystem:DescribeFileSystems",
          "elasticfilesystem:DescribeLifecycleConfiguration",
          "elasticfilesystem:DescribeMountTargetSecurityGroups",
          "elasticfilesystem:DescribeMountTargets",
          "elasticfilesystem:DescribeReplicationConfigurations",
          "elasticfilesystem:DescribeTags",
          "elasticloadbalancing:Describe*",
          "elasticmapreduce:Describe*",
          "elasticmapreduce:GetAutoTerminationPolicy",
          "elasticmapreduce:GetBlockPublicAccessConfiguration",
          "elasticmapreduce:GetManagedScalingPolicy",
          "elasticmapreduce:ListClusters",
          "elasticmapreduce:ListInstances",
          "elasticmapreduce:ListSecurityConfigurations",
          "elastictranscoder:ListPipelines",
          "emr-serverless:GetApplication",
          "emr-serverless:ListApplications",
          "emr-serverless:ListJobRuns",
          "es:Describe*",
          "es:GetCompatibleVersions",
          "es:ListDomainNames",
          "es:ListElasticsearchInstanceTypeDetails",
          "es:ListElasticsearchVersions",
          "es:ListTags",
          "events:Describe*",
          "events:List*",
          "events:TestEventPattern",
          "finspace:ListEnvironments",
          "finspace:ListKxEnvironments",
          "firehose:Describe*",
          "firehose:List*",
          "fms:ListComplianceStatus",
          "fms:ListPolicies",
          "forecast:ListDatasets",
          "frauddetector:GetDetectors",
          "fsx:Describe*",
          "fsx:List*",
          "gamelift:ListBuilds",
          "gamelift:ListFleets",
          "geo:ListMaps",
          "glacier:DescribeVault",
          "glacier:GetDataRetrievalPolicy",
          "glacier:GetVaultAccessPolicy",
          "glacier:GetVaultLock",
          "glacier:ListVaults",
          "globalaccelerator:Describe*",
          "globalaccelerator:List*",
          "glue:GetCrawlers",
          "glue:GetDataCatalogEncryptionSettings",
          "glue:GetDatabases",
          "glue:GetDevEndpoints",
          "glue:GetJobs",
          "glue:GetResourcePolicy",
          "glue:GetSecurityConfiguration",
          "glue:GetSecurityConfigurations",
          "glue:GetTags",
          "grafana:ListWorkspaces",
          "greengrass:List*",
          "guardduty:DescribePublishingDestination",
          "guardduty:Get*",
          "guardduty:List*",
          "health:DescribeAffectedAccountsForOrganization",
          "health:DescribeAffectedEntities",
          "health:DescribeAffectedEntitiesForOrganization",
          "health:DescribeEntityAggregates",
          "health:DescribeEventAggregates",
          "health:DescribeEventDetails",
          "health:DescribeEventDetailsForOrganization",
          "health:DescribeEventTypes",
          "health:DescribeEvents",
          "health:DescribeEventsForOrganization",
          "health:DescribeHealthServiceStatusForOrganization",
          "healthlake:ListFHIRDatastores",
          "honeycode:ListTables",
          "iam:GenerateCredentialReport",
          "iam:GenerateServiceLastAccessedDetails",
          "iam:Get*",
          "iam:List*",
          "iam:SimulateCustomPolicy",
          "iam:SimulatePrincipalPolicy",
          "identitystore:ListGroupMemberships",
          "identitystore:ListGroupMembershipsForMember",
          "identitystore:ListGroups",
          "identitystore:ListUsers",
          "inspector2:BatchGetAccountStatus",
          "inspector2:BatchGetFreeTrialInfo",
          "inspector2:DescribeOrganizationConfiguration",
          "inspector2:GetConfiguration",
          "inspector2:GetDelegatedAdminAccount",
          "inspector2:GetFindingsReportStatus",
          "inspector2:GetMember",
          "inspector2:ListAccountPermissions",
          "inspector2:ListCoverage",
          "inspector2:ListCoverageStatistics",
          "inspector2:ListDelegatedAdminAccounts",
          "inspector2:ListFilters",
          "inspector2:ListFindingAggregations",
          "inspector2:ListFindings",
          "inspector2:ListTagsForResource",
          "inspector2:ListUsageTotals",
          "inspector:Describe*",
          "inspector:Get*",
          "inspector:List*",
          "inspector:Preview*",
          "iot:Describe*",
          "iot:GetPolicy",
          "iot:GetPolicyVersion",
          "iot:List*",
          "iotanalytics:ListChannels",
          "iotevents:ListInputs",
          "iotfleetwise:ListModelManifests",
          "iotsitewise:DescribeGatewayCapabilityConfiguration",
          "iotsitewise:ListAssetModels",
          "iotsitewise:ListGateways",
          "iottwinmaker:ListWorkspaces",
          "kafka-cluster:Describe*",
          "kafka:Describe*",
          "kafka:GetBootstrapBrokers",
          "kafka:GetCompatibleKafkaVersions",
          "kafka:List*",
          "kafkaconnect:Describe*",
          "kafkaconnect:List*",
          "kendra:DescribeIndex",
          "kendra:ListDataSources",
          "kendra:ListIndices",
          "kendra:ListTagsForResource",
          "kinesis:DescribeLimits",
          "kinesis:DescribeStream",
          "kinesis:DescribeStreamConsumer",
          "kinesis:DescribeStreamSummary",
          "kinesis:ListShards",
          "kinesis:ListStreamConsumers",
          "kinesis:ListStreams",
          "kinesis:ListTagsForStream",
          "kinesisanalytics:ListApplications",
          "kinesisanalytics:ListTagsForResource",
          "kinesisvideo:DescribeEdgeConfiguration",
          "kinesisvideo:DescribeMappedResourceConfiguration",
          "kinesisvideo:DescribeMediaStorageConfiguration",
          "kinesisvideo:DescribeNotificationConfiguration",
          "kinesisvideo:DescribeSignalingChannel",
          "kinesisvideo:DescribeStream",
          "kinesisvideo:ListSignalingChannels",
          "kinesisvideo:ListStreams",
          "kinesisvideo:ListTagsForResource",
          "kinesisvideo:ListTagsForStream",
          "kms:Describe*",
          "kms:Get*",
          "kms:List*",
          "lambda:GetAccountSettings",
          "lambda:GetFunctionConfiguration",
          "lambda:GetFunctionEventInvokeConfig",
          "lambda:GetLayerVersionPolicy",
          "lambda:GetPolicy",
          "lambda:List*",
          "lex:DescribeBot",
          "lex:DescribeResourcePolicy",
          "lex:ListBots",
          "license-manager:List*",
          "lightsail:GetBuckets",
          "lightsail:GetContainerServices",
          "lightsail:GetDiskSnapshots",
          "lightsail:GetDisks",
          "lightsail:GetInstances",
          "lightsail:GetLoadBalancers",
          "logs:Describe*",
          "logs:ListTagsForResource",
          "logs:ListTagsLogGroup",
          "lookoutequipment:ListDatasets",
          "lookoutmetrics:ListAnomalyDetectors",
          "lookoutvision:ListProjects",
          "machinelearning:DescribeMLModels",
          "macie2:ListFindings",
          "managedblockchain:ListNetworks",
          "mechanicalturk:ListHITs",
          "mediaconnect:Describe*",
          "mediaconnect:List*",
          "medialive:ListChannels",
          "mediapackage-vod:DescribePackagingGroup",
          "mediapackage-vod:ListPackagingGroups",
          "mediapackage:DescribeOriginEndpoint",
          "mediapackage:ListOriginEndpoints",
          "mediastore:GetContainerPolicy",
          "mediastore:GetCorsPolicy",
          "mediastore:ListContainers",
          "memorydb:DescribeClusters",
          "mq:DescribeBroker",
          "mq:DescribeBrokerEngineTypes",
          "mq:DescribeBrokerInstanceOptions",
          "mq:DescribeConfiguration",
          "mq:DescribeConfigurationRevision",
          "mq:DescribeUser",
          "mq:ListBrokers",
          "mq:ListConfigurationRevisions",
          "mq:ListConfigurations",
          "mq:ListTags",
          "mq:ListUsers",
          "network-firewall:DescribeFirewall",
          "network-firewall:DescribeFirewallPolicy",
          "network-firewall:DescribeLoggingConfiguration",
          "network-firewall:DescribeResourcePolicy",
          "network-firewall:DescribeRuleGroup",
          "network-firewall:ListFirewallPolicies",
          "network-firewall:ListFirewalls",
          "network-firewall:ListRuleGroups",
          "networkmanager:DescribeGlobalNetworks",
          "nimble:ListStudios",
          "opsworks-cm:DescribeServers",
          "opsworks:DescribeStacks",
          "organizations:Describe*",
          "organizations:List*",
          "personalize:DescribeDatasetGroup",
          "personalize:ListDatasetGroups",
          "private-networks:ListNetworks",
          "profile:GetDomain",
          "profile:ListDomains",
          "profile:ListIntegrations",
          "qldb:DescribeJournalS3Export",
          "qldb:DescribeLedger",
          "qldb:ListJournalS3Exports",
          "qldb:ListJournalS3ExportsForLedger",
          "qldb:ListLedgers",
          "quicksight:Describe*",
          "quicksight:List*",
          "ram:GetResourceShares",
          "ram:List*",
          "rds:Describe*",
          "rds:DownloadDBLogFilePortion",
          "rds:ListTagsForResource",
          "redshift-serverless:GetNamespace",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:ListWorkgroups",
          "redshift:Describe*",
          "rekognition:Describe*",
          "rekognition:List*",
          "resource-groups:ListGroupResources",
          "robomaker:Describe*",
          "robomaker:List*",
          "route53:Get*",
          "route53:List*",
          "route53domains:GetDomainDetail",
          "route53domains:GetOperationDetail",
          "route53domains:ListDomains",
          "route53domains:ListOperations",
          "route53domains:ListTagsForDomain",
          "route53resolver:Get*",
          "route53resolver:List*",
          "s3-outposts:ListEndpoints",
          "s3-outposts:ListOutpostsWithS3",
          "s3-outposts:ListSharedEndpoints",
          "s3:GetAccelerateConfiguration",
          "s3:GetAccessPoint",
          "s3:GetAccessPointPolicy",
          "s3:GetAccessPointPolicyStatus",
          "s3:GetAccountPublicAccessBlock",
          "s3:GetAnalyticsConfiguration",
          "s3:GetBucket*",
          "s3:GetEncryptionConfiguration",
          "s3:GetInventoryConfiguration",
          "s3:GetLifecycleConfiguration",
          "s3:GetMetricsConfiguration",
          "s3:GetMultiRegionAccessPointPolicy",
          "s3:GetObjectAcl",
          "s3:GetObjectVersionAcl",
          "s3:GetReplicationConfiguration",
          "s3:ListAccessPoints",
          "s3:ListAllMyBuckets",
          "s3:ListMultiRegionAccessPoints",
          "sagemaker:Describe*",
          "sagemaker:List*",
          "schemas:DescribeCodeBinding",
          "schemas:DescribeDiscoverer",
          "schemas:DescribeRegistry",
          "schemas:DescribeSchema",
          "schemas:GetResourcePolicy",
          "schemas:ListDiscoverers",
          "schemas:ListRegistries",
          "schemas:ListSchemaVersions",
          "schemas:ListSchemas",
          "schemas:ListTagsForResource",
          "sdb:DomainMetadata",
          "sdb:ListDomains",
          "secretsmanager:DescribeSecret",
          "secretsmanager:GetResourcePolicy",
          "secretsmanager:ListSecretVersionIds",
          "secretsmanager:ListSecrets",
          "securityhub:Describe*",
          "securityhub:Get*",
          "securityhub:List*",
          "serverlessrepo:GetApplicationPolicy",
          "serverlessrepo:List*",
          "servicequotas:GetAWSDefaultServiceQuota",
          "servicequotas:GetAssociationForServiceQuotaTemplate",
          "servicequotas:GetRequestedServiceQuotaChange",
          "servicequotas:GetServiceQuota",
          "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
          "servicequotas:ListAWSDefaultServiceQuotas",
          "servicequotas:ListRequestedServiceQuotaChangeHistory",
          "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
          "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
          "servicequotas:ListServiceQuotas",
          "servicequotas:ListServices",
          "servicequotas:ListTagsForResource",
          "ses:Describe*",
          "ses:GetAccount",
          "ses:GetAccountSendingEnabled",
          "ses:GetConfigurationSet",
          "ses:GetConfigurationSetEventDestinations",
          "ses:GetDedicatedIps",
          "ses:GetEmailIdentity",
          "ses:GetIdentityDkimAttributes",
          "ses:GetIdentityPolicies",
          "ses:GetIdentityVerificationAttributes",
          "ses:ListConfigurationSets",
          "ses:ListDedicatedIpPools",
          "ses:ListIdentities",
          "ses:ListIdentityPolicies",
          "ses:ListReceiptFilters",
          "ses:ListReceiptRuleSets",
          "ses:ListVerifiedEmailAddresses",
          "shield:Describe*",
          "shield:GetSubscriptionState",
          "shield:List*",
          "snowball:ListClusters",
          "snowball:ListJobs",
          "sns:GetPlatformApplicationAttributes",
          "sns:GetTopicAttributes",
          "sns:ListSubscriptions",
          "sns:ListSubscriptionsByTopic",
          "sns:ListTagsForResource",
          "sns:ListTopics",
          "sqs:GetQueueAttributes",
          "sqs:ListDeadLetterSourceQueues",
          "sqs:ListQueueTags",
          "sqs:ListQueues",
          "ssm:Describe*",
          "ssm:GetAutomationExecution",
          "ssm:GetServiceSetting",
          "ssm:ListAssociationVersions",
          "ssm:ListAssociations",
          "ssm:ListCommands",
          "ssm:ListComplianceItems",
          "ssm:ListComplianceSummaries",
          "ssm:ListDocumentMetadataHistory",
          "ssm:ListDocumentVersions",
          "ssm:ListDocuments",
          "ssm:ListInventoryEntries",
          "ssm:ListOpsMetadata",
          "ssm:ListResourceComplianceSummaries",
          "ssm:ListResourceDataSync",
          "ssm:ListTagsForResource",
          "sso:DescribeAccountAssignmentCreationStatus",
          "sso:DescribePermissionSet",
          "sso:DescribePermissionsPolicies",
          "sso:List*",
          "states:DescribeStateMachine",
          "states:ListStateMachines",
          "storagegateway:DescribeBandwidthRateLimit",
          "storagegateway:DescribeCache",
          "storagegateway:DescribeCachediSCSIVolumes",
          "storagegateway:DescribeGatewayInformation",
          "storagegateway:DescribeMaintenanceStartTime",
          "storagegateway:DescribeNFSFileShares",
          "storagegateway:DescribeSnapshotSchedule",
          "storagegateway:DescribeStorediSCSIVolumes",
          "storagegateway:DescribeTapeArchives",
          "storagegateway:DescribeTapeRecoveryPoints",
          "storagegateway:DescribeTapes",
          "storagegateway:DescribeUploadBuffer",
          "storagegateway:DescribeVTLDevices",
          "storagegateway:DescribeWorkingStorage",
          "storagegateway:List*",
          "sts:GetAccessKeyInfo",
          "support:DescribeTrustedAdvisorCheckRefreshStatuses",
          "support:DescribeTrustedAdvisorCheckResult",
          "support:DescribeTrustedAdvisorCheckSummaries",
          "support:DescribeTrustedAdvisorChecks",
          "synthetics:DescribeCanaries",
          "synthetics:DescribeCanariesLastRun",
          "synthetics:DescribeRuntimeVersions",
          "synthetics:GetCanary",
          "synthetics:GetCanaryRuns",
          "synthetics:GetGroup",
          "synthetics:ListAssociatedGroups",
          "synthetics:ListGroupResources",
          "synthetics:ListGroups",
          "synthetics:ListTagsForResource",
          "tag:GetResources",
          "tag:GetTagKeys",
          "transcribe:GetCallAnalyticsCategory",
          "transcribe:GetMedicalVocabulary",
          "transcribe:GetVocabulary",
          "transcribe:GetVocabularyFilter",
          "transcribe:ListCallAnalyticsCategories",
          "transcribe:ListCallAnalyticsJobs",
          "transcribe:ListLanguageModels",
          "transcribe:ListMedicalTranscriptionJobs",
          "transcribe:ListMedicalVocabularies",
          "transcribe:ListTagsForResource",
          "transcribe:ListTranscriptionJobs",
          "transcribe:ListVocabularies",
          "transcribe:ListVocabularyFilters",
          "transfer:Describe*",
          "transfer:List*",
          "translate:List*",
          "trustedadvisor:Describe*",
          "voiceid:DescribeDomain",
          "waf-regional:GetWebACL",
          "waf-regional:ListResourcesForWebACL",
          "waf-regional:ListTagsForResource",
          "waf-regional:ListWebACLs",
          "waf:GetWebACL",
          "waf:ListTagsForResource",
          "waf:ListWebACLs",
          "wafv2:GetLoggingConfiguration",
          "wafv2:GetWebACL",
          "wafv2:GetWebACLForResource",
          "wafv2:ListAvailableManagedRuleGroups",
          "wafv2:ListIPSets",
          "wafv2:ListLoggingConfigurations",
          "wafv2:ListRegexPatternSets",
          "wafv2:ListResourcesForWebACL",
          "wafv2:ListRuleGroups",
          "wafv2:ListTagsForResource",
          "wafv2:ListWebACLs",
          "wisdom:GetAssistant",
          "workdocs:DescribeResourcePermissions",
          "workspaces:Describe*",
          "xray:GetEncryptionConfig",
          "xray:GetGroup",
          "xray:GetGroups",
          "xray:GetSamplingRules",
          "xray:GetSamplingTargets",
          "xray:GetTraceSummaries",
          "xray:ListTagsForResource"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "BaseSecurityAuditStatement"
      },
      {
        "Action": [
          "apigateway:GET"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:apigateway:*::/apis",
          "arn:aws:apigateway:*::/apis/*/authorizers/*",
          "arn:aws:apigateway:*::/apis/*/authorizers",
          "arn:aws:apigateway:*::/apis/*/cors",
          "arn:aws:apigateway:*::/apis/*/deployments/*",
          "arn:aws:apigateway:*::/apis/*/deployments",
          "arn:aws:apigateway:*::/apis/*/exports/*",
          "arn:aws:apigateway:*::/apis/*/integrations/*",
          "arn:aws:apigateway:*::/apis/*/integrations",
          "arn:aws:apigateway:*::/apis/*/models/*",
          "arn:aws:apigateway:*::/apis/*/models",
          "arn:aws:apigateway:*::/apis/*/routes/*",
          "arn:aws:apigateway:*::/apis/*/routes",
          "arn:aws:apigateway:*::/apis/*/stages",
          "arn:aws:apigateway:*::/apis/*/stages/*",
          "arn:aws:apigateway:*::/clientcertificates",
          "arn:aws:apigateway:*::/clientcertificates/*",
          "arn:aws:apigateway:*::/domainnames",
          "arn:aws:apigateway:*::/domainnames/*/apimappings",
          "arn:aws:apigateway:*::/restapis",
          "arn:aws:apigateway:*::/restapis/*/authorizers/*",
          "arn:aws:apigateway:*::/restapis/*/authorizers",
          "arn:aws:apigateway:*::/restapis/*/deployments/*",
          "arn:aws:apigateway:*::/restapis/*/deployments",
          "arn:aws:apigateway:*::/restapis/*/documentation/parts/*",
          "arn:aws:apigateway:*::/restapis/*/documentation/parts",
          "arn:aws:apigateway:*::/restapis/*/documentation/versions/*",
          "arn:aws:apigateway:*::/restapis/*/documentation/versions",
          "arn:aws:apigateway:*::/restapis/*/gatewayresponses/*",
          "arn:aws:apigateway:*::/restapis/*/gatewayresponses",
          "arn:aws:apigateway:*::/restapis/*/models/*",
          "arn:aws:apigateway:*::/restapis/*/models",
          "arn:aws:apigateway:*::/restapis/*/requestvalidators",
          "arn:aws:apigateway:*::/restapis/*/requestvalidators/*",
          "arn:aws:apigateway:*::/restapis/*/resources/*",
          "arn:aws:apigateway:*::/restapis/*/resources",
          "arn:aws:apigateway:*::/restapis/*/stages",
          "arn:aws:apigateway:*::/restapis/*/stages/*",
          "arn:aws:apigateway:*::/tags/*",
          "arn:aws:apigateway:*::/vpclinks"
        ],
        "Sid": "APIGatewayAccess"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "SecurityAudit",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "a4b:ListSkills",
      "condition": null
    },
    {
      "action": "access-analyzer:GetAnalyzedResource",
      "condition": null
    },
    {
      "action": "access-analyzer:GetAnalyzer",
      "condition": null
    },
    {
      "action": "access-analyzer:GetArchiveRule",
      "condition": null
    },
    {
      "action": "access-analyzer:GetFinding",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAnalyzedResources",
      "condition": null
    },
    {
      "action": "access-analyzer:ListAnalyzers",
      "condition": null
    },
    {
      "action": "access-analyzer:ListArchiveRules",
      "condition": null
    },
    {
      "action": "access-analyzer:ListFindings",
      "condition": null
    },
    {
      "action": "access-analyzer:ListTagsForResource",
      "condition": null
    },
    {
      "action": "account:GetAlternateContact",
      "condition": null
    },
    {
      "action": "account:GetRegionOptStatus",
      "condition": null
    },
    {
      "action": "acm-pca:DescribeCertificateAuthority",
      "condition": null
    },
    {
      "action": "acm-pca:DescribeCertificateAuthorityAuditReport",
      "condition": null
    },
    {
      "action": "acm-pca:GetPolicy",
      "condition": null
    },
    {
      "action": "acm-pca:ListCertificateAuthorities",
      "condition": null
    },
    {
      "action": "acm-pca:ListPermissions",
      "condition": null
    },
    {
      "action": "acm-pca:ListTags",
      "condition": null
    },
    {
      "action": "acm:Describe*",
      "condition": null
    },
    {
      "action": "acm:List*",
      "condition": null
    },
    {
      "action": "airflow:GetEnvironment",
      "condition": null
    },
    {
      "action": "airflow:ListEnvironments",
      "condition": null
    },
    {
      "action": "appflow:ListFlows",
      "condition": null
    },
    {
      "action": "appflow:ListTagsForResource",
      "condition": null
    },
    {
      "action": "application-autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "appmesh:Describe*",
      "condition": null
    },
    {
      "action": "appmesh:List*",
      "condition": null
    },
    {
      "action": "apprunner:DescribeAutoScalingConfiguration",
      "condition": null
    },
    {
      "action": "apprunner:DescribeCustomDomains",
      "condition": null
    },
    {
      "action": "apprunner:DescribeObservabilityConfiguration",
      "condition": null
    },
    {
      "action": "apprunner:DescribeService",
      "condition": null
    },
    {
      "action": "apprunner:DescribeVpcConnector",
      "condition": null
    },
    {
      "action": "apprunner:DescribeVpcIngressConnection",
      "condition": null
    },
    {
      "action": "apprunner:ListAutoScalingConfigurations",
      "condition": null
    },
    {
      "action": "apprunner:ListConnections",
      "condition": null
    },
    {
      "action": "apprunner:ListObservabilityConfigurations",
      "condition": null
    },
    {
      "action": "apprunner:ListOperations",
      "condition": null
    },
    {
      "action": "apprunner:ListServices",
      "condition": null
    },
    {
      "action": "apprunner:ListTagsForResource",
      "condition": null
    },
    {
      "action": "apprunner:ListVpcConnectors",
      "condition": null
    },
    {
      "action": "apprunner:ListVpcIngressConnections",
      "condition": null
    },
    {
      "action": "appsync:GetApiCache",
      "condition": null
    },
    {
      "action": "appsync:List*",
      "condition": null
    },
    {
      "action": "athena:GetWorkGroup",
      "condition": null
    },
    {
      "action": "athena:List*",
      "condition": null
    },
    {
      "action": "auditmanager:GetAccountStatus",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessmentControlInsightsByControlDomain",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessmentFrameworkShareRequests",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessmentFrameworks",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessmentReports",
      "condition": null
    },
    {
      "action": "auditmanager:ListAssessments",
      "condition": null
    },
    {
      "action": "auditmanager:ListControlDomainInsights",
      "condition": null
    },
    {
      "action": "auditmanager:ListControlDomainInsightsByAssessment",
      "condition": null
    },
    {
      "action": "auditmanager:ListControlInsightsByControlDomain",
      "condition": null
    },
    {
      "action": "auditmanager:ListControls",
      "condition": null
    },
    {
      "action": "auditmanager:ListNotifications",
      "condition": null
    },
    {
      "action": "auditmanager:ListTagsForResource",
      "condition": null
    },
    {
      "action": "autoscaling-plans:DescribeScalingPlans",
      "condition": null
    },
    {
      "action": "autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "backup:DescribeGlobalSettings",
      "condition": null
    },
    {
      "action": "backup:DescribeRegionSettings",
      "condition": null
    },
    {
      "action": "backup:GetBackupVaultAccessPolicy",
      "condition": null
    },
    {
      "action": "backup:GetBackupVaultNotifications",
      "condition": null
    },
    {
      "action": "backup:ListBackupVaults",
      "condition": null
    },
    {
      "action": "backup:ListTags",
      "condition": null
    },
    {
      "action": "batch:DescribeComputeEnvironments",
      "condition": null
    },
    {
      "action": "batch:DescribeJobDefinitions",
      "condition": null
    },
    {
      "action": "bedrock:GetCustomModel",
      "condition": null
    },
    {
      "action": "bedrock:GetModelInvocationLoggingConfiguration",
      "condition": null
    },
    {
      "action": "bedrock:ListCustomModels",
      "condition": null
    },
    {
      "action": "bedrock:ListTagsForResource",
      "condition": null
    },
    {
      "action": "braket:SearchJobs",
      "condition": null
    },
    {
      "action": "braket:SearchQuantumTasks",
      "condition": null
    },
    {
      "action": "chime:List*",
      "condition": null
    },
    {
      "action": "cloud9:Describe*",
      "condition": null
    },
    {
      "action": "cloud9:ListEnvironments",
      "condition": null
    },
    {
      "action": "clouddirectory:ListDirectories",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStack*",
      "condition": null
    },
    {
      "action": "cloudformation:GetStackPolicy",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplate",
      "condition": null
    },
    {
      "action": "cloudformation:ListStack*",
      "condition": null
    },
    {
      "action": "cloudfront:Get*",
      "condition": null
    },
    {
      "action": "cloudfront:List*",
      "condition": null
    },
    {
      "action": "cloudsearch:DescribeDomainEndpointOptions",
      "condition": null
    },
    {
      "action": "cloudsearch:DescribeDomains",
      "condition": null
    },
    {
      "action": "cloudsearch:DescribeServiceAccessPolicies",
      "condition": null
    },
    {
      "action": "cloudtrail:DescribeTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:GetEventSelectors",
      "condition": null
    },
    {
      "action": "cloudtrail:GetInsightSelectors",
      "condition": null
    },
    {
      "action": "cloudtrail:GetTrail",
      "condition": null
    },
    {
      "action": "cloudtrail:GetTrailStatus",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTags",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:LookupEvents",
      "condition": null
    },
    {
      "action": "cloudwatch:Describe*",
      "condition": null
    },
    {
      "action": "cloudwatch:GetDashboard",
      "condition": null
    },
    {
      "action": "cloudwatch:ListDashboards",
      "condition": null
    },
    {
      "action": "cloudwatch:ListTagsForResource",
      "condition": null
    },
    {
      "action": "codeartifact:GetDomainPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:GetRepositoryPermissionsPolicy",
      "condition": null
    },
    {
      "action": "codeartifact:ListRepositories",
      "condition": null
    },
    {
      "action": "codebuild:BatchGetProjects",
      "condition": null
    },
    {
      "action": "codebuild:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "codebuild:ListProjects",
      "condition": null
    },
    {
      "action": "codecommit:BatchGetRepositories",
      "condition": null
    },
    {
      "action": "codecommit:GetBranch",
      "condition": null
    },
    {
      "action": "codecommit:GetObjectIdentifier",
      "condition": null
    },
    {
      "action": "codecommit:GetRepository",
      "condition": null
    },
    {
      "action": "codecommit:GetRepositoryTriggers",
      "condition": null
    },
    {
      "action": "codecommit:List*",
      "condition": null
    },
    {
      "action": "codedeploy:Batch*",
      "condition": null
    },
    {
      "action": "codedeploy:Get*",
      "condition": null
    },
    {
      "action": "codedeploy:List*",
      "condition": null
    },
    {
      "action": "codepipeline:GetJobDetails",
      "condition": null
    },
    {
      "action": "codepipeline:GetPipeline",
      "condition": null
    },
    {
      "action": "codepipeline:GetPipelineExecution",
      "condition": null
    },
    {
      "action": "codepipeline:GetPipelineState",
      "condition": null
    },
    {
      "action": "codepipeline:ListPipelines",
      "condition": null
    },
    {
      "action": "codestar:Describe*",
      "condition": null
    },
    {
      "action": "codestar:List*",
      "condition": null
    },
    {
      "action": "cognito-identity:Describe*",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityPoolRoles",
      "condition": null
    },
    {
      "action": "cognito-identity:ListIdentityPools",
      "condition": null
    },
    {
      "action": "cognito-identity:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cognito-idp:Describe*",
      "condition": null
    },
    {
      "action": "cognito-idp:ListDevices",
      "condition": null
    },
    {
      "action": "cognito-idp:ListGroups",
      "condition": null
    },
    {
      "action": "cognito-idp:ListIdentityProviders",
      "condition": null
    },
    {
      "action": "cognito-idp:ListResourceServers",
      "condition": null
    },
    {
      "action": "cognito-idp:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserImportJobs",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserPoolClients",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserPools",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUsers",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUsersInGroup",
      "condition": null
    },
    {
      "action": "cognito-sync:Describe*",
      "condition": null
    },
    {
      "action": "cognito-sync:List*",
      "condition": null
    },
    {
      "action": "comprehend:Describe*",
      "condition": null
    },
    {
      "action": "comprehend:List*",
      "condition": null
    },
    {
      "action": "comprehendmedical:ListICD10CMInferenceJobs",
      "condition": null
    },
    {
      "action": "comprehendmedical:ListPHIDetectionJobs",
      "condition": null
    },
    {
      "action": "comprehendmedical:ListRxNormInferenceJobs",
      "condition": null
    },
    {
      "action": "comprehendmedical:ListSNOMEDCTInferenceJobs",
      "condition": null
    },
    {
      "action": "config:BatchGetAggregateResourceConfig",
      "condition": null
    },
    {
      "action": "config:BatchGetResourceConfig",
      "condition": null
    },
    {
      "action": "config:Deliver*",
      "condition": null
    },
    {
      "action": "config:Describe*",
      "condition": null
    },
    {
      "action": "config:Get*",
      "condition": null
    },
    {
      "action": "config:List*",
      "condition": null
    },
    {
      "action": "config:SelectAggregateResourceConfig",
      "condition": null
    },
    {
      "action": "config:SelectResourceConfig",
      "condition": null
    },
    {
      "action": "connect:ListApprovedOrigins",
      "condition": null
    },
    {
      "action": "connect:ListInstanceAttributes",
      "condition": null
    },
    {
      "action": "connect:ListInstanceStorageConfigs",
      "condition": null
    },
    {
      "action": "connect:ListInstances",
      "condition": null
    },
    {
      "action": "connect:ListIntegrationAssociations",
      "condition": null
    },
    {
      "action": "connect:ListLambdaFunctions",
      "condition": null
    },
    {
      "action": "connect:ListLexBots",
      "condition": null
    },
    {
      "action": "connect:ListSecurityKeys",
      "condition": null
    },
    {
      "action": "databrew:DescribeDataset",
      "condition": null
    },
    {
      "action": "databrew:DescribeProject",
      "condition": null
    },
    {
      "action": "databrew:ListJobs",
      "condition": null
    },
    {
      "action": "databrew:ListProjects",
      "condition": null
    },
    {
      "action": "dataexchange:ListDataSets",
      "condition": null
    },
    {
      "action": "datapipeline:DescribeObjects",
      "condition": null
    },
    {
      "action": "datapipeline:DescribePipelines",
      "condition": null
    },
    {
      "action": "datapipeline:EvaluateExpression",
      "condition": null
    },
    {
      "action": "datapipeline:GetPipelineDefinition",
      "condition": null
    },
    {
      "action": "datapipeline:ListPipelines",
      "condition": null
    },
    {
      "action": "datapipeline:QueryObjects",
      "condition": null
    },
    {
      "action": "datapipeline:ValidatePipelineDefinition",
      "condition": null
    },
    {
      "action": "datasync:Describe*",
      "condition": null
    },
    {
      "action": "datasync:List*",
      "condition": null
    },
    {
      "action": "dax:Describe*",
      "condition": null
    },
    {
      "action": "dax:ListTags",
      "condition": null
    },
    {
      "action": "deepracer:ListModels",
      "condition": null
    },
    {
      "action": "detective:GetGraphIngestState",
      "condition": null
    },
    {
      "action": "detective:ListGraphs",
      "condition": null
    },
    {
      "action": "detective:ListMembers",
      "condition": null
    },
    {
      "action": "devicefarm:ListProjects",
      "condition": null
    },
    {
      "action": "directconnect:Describe*",
      "condition": null
    },
    {
      "action": "discovery:DescribeAgents",
      "condition": null
    },
    {
      "action": "discovery:DescribeConfigurations",
      "condition": null
    },
    {
      "action": "discovery:DescribeContinuousExports",
      "condition": null
    },
    {
      "action": "discovery:DescribeExportConfigurations",
      "condition": null
    },
    {
      "action": "discovery:DescribeExportTasks",
      "condition": null
    },
    {
      "action": "discovery:DescribeImportTasks",
      "condition": null
    },
    {
      "action": "dms:Describe*",
      "condition": null
    },
    {
      "action": "dms:ListTagsForResource",
      "condition": null
    },
    {
      "action": "docdb-elastic:ListClusters",
      "condition": null
    },
    {
      "action": "ds:DescribeDirectories",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeContinuousBackups",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeExport",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeGlobalTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeKinesisStreamingDestination",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTimeToLive",
      "condition": null
    },
    {
      "action": "dynamodb:ListBackups",
      "condition": null
    },
    {
      "action": "dynamodb:ListExports",
      "condition": null
    },
    {
      "action": "dynamodb:ListGlobalTables",
      "condition": null
    },
    {
      "action": "dynamodb:ListStreams",
      "condition": null
    },
    {
      "action": "dynamodb:ListTables",
      "condition": null
    },
    {
      "action": "dynamodb:ListTagsOfResource",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:GetEbsEncryptionByDefault",
      "condition": null
    },
    {
      "action": "ec2:GetImageBlockPublicAccessState",
      "condition": null
    },
    {
      "action": "ec2:GetManagedPrefixListAssociations",
      "condition": null
    },
    {
      "action": "ec2:GetManagedPrefixListEntries",
      "condition": null
    },
    {
      "action": "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
      "condition": null
    },
    {
      "action": "ec2:GetNetworkInsightsAccessScopeContent",
      "condition": null
    },
    {
      "action": "ec2:GetTransitGatewayAttachmentPropagations",
      "condition": null
    },
    {
      "action": "ec2:GetTransitGatewayMulticastDomainAssociations",
      "condition": null
    },
    {
      "action": "ec2:GetTransitGatewayPrefixListReferences",
      "condition": null
    },
    {
      "action": "ec2:GetTransitGatewayRouteTableAssociations",
      "condition": null
    },
    {
      "action": "ec2:GetTransitGatewayRouteTablePropagations",
      "condition": null
    },
    {
      "action": "ec2:SearchTransitGatewayRoutes",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeImageTags",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeImages",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeRegistries",
      "condition": null
    },
    {
      "action": "ecr-public:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr-public:GetRegistryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:GetRepositoryCatalogData",
      "condition": null
    },
    {
      "action": "ecr-public:GetRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr-public:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ecr:BatchGetRepositoryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:DescribeImageScanFindings",
      "condition": null
    },
    {
      "action": "ecr:DescribeImages",
      "condition": null
    },
    {
      "action": "ecr:DescribeRegistry",
      "condition": null
    },
    {
      "action": "ecr:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr:GetLifecyclePolicy",
      "condition": null
    },
    {
      "action": "ecr:GetRegistryPolicy",
      "condition": null
    },
    {
      "action": "ecr:GetRegistryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:GetRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr:ListImages",
      "condition": null
    },
    {
      "action": "ecr:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ecs:Describe*",
      "condition": null
    },
    {
      "action": "ecs:List*",
      "condition": null
    },
    {
      "action": "eks:DescribeCluster",
      "condition": null
    },
    {
      "action": "eks:DescribeFargateProfile",
      "condition": null
    },
    {
      "action": "eks:DescribeNodeGroup",
      "condition": null
    },
    {
      "action": "eks:ListClusters",
      "condition": null
    },
    {
      "action": "eks:ListFargateProfiles",
      "condition": null
    },
    {
      "action": "eks:ListNodeGroups",
      "condition": null
    },
    {
      "action": "eks:ListTagsForResource",
      "condition": null
    },
    {
      "action": "eks:ListUpdates",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAccelerators",
      "condition": null
    },
    {
      "action": "elasticache:Describe*",
      "condition": null
    },
    {
      "action": "elasticache:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:Describe*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeAccessPoints",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeAccountPreferences",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeBackupPolicy",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystemPolicy",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeMountTargetSecurityGroups",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeMountTargets",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeReplicationConfigurations",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeTags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:Describe*",
      "condition": null
    },
    {
      "action": "elasticmapreduce:Describe*",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetAutoTerminationPolicy",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetBlockPublicAccessConfiguration",
      "condition": null
    },
    {
      "action": "elasticmapreduce:GetManagedScalingPolicy",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListClusters",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListInstances",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListSecurityConfigurations",
      "condition": null
    },
    {
      "action": "elastictranscoder:ListPipelines",
      "condition": null
    },
    {
      "action": "emr-serverless:GetApplication",
      "condition": null
    },
    {
      "action": "emr-serverless:ListApplications",
      "condition": null
    },
    {
      "action": "emr-serverless:ListJobRuns",
      "condition": null
    },
    {
      "action": "es:Describe*",
      "condition": null
    },
    {
      "action": "es:GetCompatibleVersions",
      "condition": null
    },
    {
      "action": "es:ListDomainNames",
      "condition": null
    },
    {
      "action": "es:ListElasticsearchInstanceTypeDetails",
      "condition": null
    },
    {
      "action": "es:ListElasticsearchVersions",
      "condition": null
    },
    {
      "action": "es:ListTags",
      "condition": null
    },
    {
      "action": "events:Describe*",
      "condition": null
    },
    {
      "action": "events:List*",
      "condition": null
    },
    {
      "action": "events:TestEventPattern",
      "condition": null
    },
    {
      "action": "finspace:ListEnvironments",
      "condition": null
    },
    {
      "action": "finspace:ListKxEnvironments",
      "condition": null
    },
    {
      "action": "firehose:Describe*",
      "condition": null
    },
    {
      "action": "firehose:List*",
      "condition": null
    },
    {
      "action": "fms:ListComplianceStatus",
      "condition": null
    },
    {
      "action": "fms:ListPolicies",
      "condition": null
    },
    {
      "action": "forecast:ListDatasets",
      "condition": null
    },
    {
      "action": "frauddetector:GetDetectors",
      "condition": null
    },
    {
      "action": "fsx:Describe*",
      "condition": null
    },
    {
      "action": "fsx:List*",
      "condition": null
    },
    {
      "action": "gamelift:ListBuilds",
      "condition": null
    },
    {
      "action": "gamelift:ListFleets",
      "condition": null
    },
    {
      "action": "geo:ListMaps",
      "condition": null
    },
    {
      "action": "glacier:DescribeVault",
      "condition": null
    },
    {
      "action": "glacier:GetDataRetrievalPolicy",
      "condition": null
    },
    {
      "action": "glacier:GetVaultAccessPolicy",
      "condition": null
    },
    {
      "action": "glacier:GetVaultLock",
      "condition": null
    },
    {
      "action": "glacier:ListVaults",
      "condition": null
    },
    {
      "action": "globalaccelerator:Describe*",
      "condition": null
    },
    {
      "action": "globalaccelerator:List*",
      "condition": null
    },
    {
      "action": "glue:GetCrawlers",
      "condition": null
    },
    {
      "action": "glue:GetDataCatalogEncryptionSettings",
      "condition": null
    },
    {
      "action": "glue:GetDatabases",
      "condition": null
    },
    {
      "action": "glue:GetDevEndpoints",
      "condition": null
    },
    {
      "action": "glue:GetJobs",
      "condition": null
    },
    {
      "action": "glue:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "glue:GetSecurityConfiguration",
      "condition": null
    },
    {
      "action": "glue:GetSecurityConfigurations",
      "condition": null
    },
    {
      "action": "glue:GetTags",
      "condition": null
    },
    {
      "action": "grafana:ListWorkspaces",
      "condition": null
    },
    {
      "action": "greengrass:List*",
      "condition": null
    },
    {
      "action": "guardduty:DescribePublishingDestination",
      "condition": null
    },
    {
      "action": "guardduty:Get*",
      "condition": null
    },
    {
      "action": "guardduty:List*",
      "condition": null
    },
    {
      "action": "health:DescribeAffectedAccountsForOrganization",
      "condition": null
    },
    {
      "action": "health:DescribeAffectedEntities",
      "condition": null
    },
    {
      "action": "health:DescribeAffectedEntitiesForOrganization",
      "condition": null
    },
    {
      "action": "health:DescribeEntityAggregates",
      "condition": null
    },
    {
      "action": "health:DescribeEventAggregates",
      "condition": null
    },
    {
      "action": "health:DescribeEventDetails",
      "condition": null
    },
    {
      "action": "health:DescribeEventDetailsForOrganization",
      "condition": null
    },
    {
      "action": "health:DescribeEventTypes",
      "condition": null
    },
    {
      "action": "health:DescribeEvents",
      "condition": null
    },
    {
      "action": "health:DescribeEventsForOrganization",
      "condition": null
    },
    {
      "action": "health:DescribeHealthServiceStatusForOrganization",
      "condition": null
    },
    {
      "action": "healthlake:ListFHIRDatastores",
      "condition": null
    },
    {
      "action": "honeycode:ListTables",
      "condition": null
    },
    {
      "action": "iam:GenerateCredentialReport",
      "condition": null
    },
    {
      "action": "iam:GenerateServiceLastAccessedDetails",
      "condition": null
    },
    {
      "action": "iam:Get*",
      "condition": null
    },
    {
      "action": "iam:List*",
      "condition": null
    },
    {
      "action": "iam:SimulateCustomPolicy",
      "condition": null
    },
    {
      "action": "iam:SimulatePrincipalPolicy",
      "condition": null
    },
    {
      "action": "identitystore:ListGroupMemberships",
      "condition": null
    },
    {
      "action": "identitystore:ListGroupMembershipsForMember",
      "condition": null
    },
    {
      "action": "identitystore:ListGroups",
      "condition": null
    },
    {
      "action": "identitystore:ListUsers",
      "condition": null
    },
    {
      "action": "inspector2:BatchGetAccountStatus",
      "condition": null
    },
    {
      "action": "inspector2:BatchGetFreeTrialInfo",
      "condition": null
    },
    {
      "action": "inspector2:DescribeOrganizationConfiguration",
      "condition": null
    },
    {
      "action": "inspector2:GetConfiguration",
      "condition": null
    },
    {
      "action": "inspector2:GetDelegatedAdminAccount",
      "condition": null
    },
    {
      "action": "inspector2:GetFindingsReportStatus",
      "condition": null
    },
    {
      "action": "inspector2:GetMember",
      "condition": null
    },
    {
      "action": "inspector2:ListAccountPermissions",
      "condition": null
    },
    {
      "action": "inspector2:ListCoverage",
      "condition": null
    },
    {
      "action": "inspector2:ListCoverageStatistics",
      "condition": null
    },
    {
      "action": "inspector2:ListDelegatedAdminAccounts",
      "condition": null
    },
    {
      "action": "inspector2:ListFilters",
      "condition": null
    },
    {
      "action": "inspector2:ListFindingAggregations",
      "condition": null
    },
    {
      "action": "inspector2:ListFindings",
      "condition": null
    },
    {
      "action": "inspector2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "inspector2:ListUsageTotals",
      "condition": null
    },
    {
      "action": "inspector:Describe*",
      "condition": null
    },
    {
      "action": "inspector:Get*",
      "condition": null
    },
    {
      "action": "inspector:List*",
      "condition": null
    },
    {
      "action": "inspector:Preview*",
      "condition": null
    },
    {
      "action": "iot:Describe*",
      "condition": null
    },
    {
      "action": "iot:GetPolicy",
      "condition": null
    },
    {
      "action": "iot:GetPolicyVersion",
      "condition": null
    },
    {
      "action": "iot:List*",
      "condition": null
    },
    {
      "action": "iotanalytics:ListChannels",
      "condition": null
    },
    {
      "action": "iotevents:ListInputs",
      "condition": null
    },
    {
      "action": "iotfleetwise:ListModelManifests",
      "condition": null
    },
    {
      "action": "iotsitewise:DescribeGatewayCapabilityConfiguration",
      "condition": null
    },
    {
      "action": "iotsitewise:ListAssetModels",
      "condition": null
    },
    {
      "action": "iotsitewise:ListGateways",
      "condition": null
    },
    {
      "action": "iottwinmaker:ListWorkspaces",
      "condition": null
    },
    {
      "action": "kafka-cluster:Describe*",
      "condition": null
    },
    {
      "action": "kafka:Describe*",
      "condition": null
    },
    {
      "action": "kafka:GetBootstrapBrokers",
      "condition": null
    },
    {
      "action": "kafka:GetCompatibleKafkaVersions",
      "condition": null
    },
    {
      "action": "kafka:List*",
      "condition": null
    },
    {
      "action": "kafkaconnect:Describe*",
      "condition": null
    },
    {
      "action": "kafkaconnect:List*",
      "condition": null
    },
    {
      "action": "kendra:DescribeIndex",
      "condition": null
    },
    {
      "action": "kendra:ListDataSources",
      "condition": null
    },
    {
      "action": "kendra:ListIndices",
      "condition": null
    },
    {
      "action": "kendra:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesis:DescribeLimits",
      "condition": null
    },
    {
      "action": "kinesis:DescribeStream",
      "condition": null
    },
    {
      "action": "kinesis:DescribeStreamConsumer",
      "condition": null
    },
    {
      "action": "kinesis:DescribeStreamSummary",
      "condition": null
    },
    {
      "action": "kinesis:ListShards",
      "condition": null
    },
    {
      "action": "kinesis:ListStreamConsumers",
      "condition": null
    },
    {
      "action": "kinesis:ListStreams",
      "condition": null
    },
    {
      "action": "kinesis:ListTagsForStream",
      "condition": null
    },
    {
      "action": "kinesisanalytics:ListApplications",
      "condition": null
    },
    {
      "action": "kinesisanalytics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeEdgeConfiguration",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeMappedResourceConfiguration",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeMediaStorageConfiguration",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeNotificationConfiguration",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeSignalingChannel",
      "condition": null
    },
    {
      "action": "kinesisvideo:DescribeStream",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListSignalingChannels",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListStreams",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesisvideo:ListTagsForStream",
      "condition": null
    },
    {
      "action": "kms:Describe*",
      "condition": null
    },
    {
      "action": "kms:Get*",
      "condition": null
    },
    {
      "action": "kms:List*",
      "condition": null
    },
    {
      "action": "lambda:GetAccountSettings",
      "condition": null
    },
    {
      "action": "lambda:GetFunctionConfiguration",
      "condition": null
    },
    {
      "action": "lambda:GetFunctionEventInvokeConfig",
      "condition": null
    },
    {
      "action": "lambda:GetLayerVersionPolicy",
      "condition": null
    },
    {
      "action": "lambda:GetPolicy",
      "condition": null
    },
    {
      "action": "lambda:List*",
      "condition": null
    },
    {
      "action": "lex:DescribeBot",
      "condition": null
    },
    {
      "action": "lex:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "lex:ListBots",
      "condition": null
    },
    {
      "action": "license-manager:List*",
      "condition": null
    },
    {
      "action": "lightsail:GetBuckets",
      "condition": null
    },
    {
      "action": "lightsail:GetContainerServices",
      "condition": null
    },
    {
      "action": "lightsail:GetDiskSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:GetDisks",
      "condition": null
    },
    {
      "action": "lightsail:GetInstances",
      "condition": null
    },
    {
      "action": "lightsail:GetLoadBalancers",
      "condition": null
    },
    {
      "action": "logs:Describe*",
      "condition": null
    },
    {
      "action": "logs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "logs:ListTagsLogGroup",
      "condition": null
    },
    {
      "action": "lookoutequipment:ListDatasets",
      "condition": null
    },
    {
      "action": "lookoutmetrics:ListAnomalyDetectors",
      "condition": null
    },
    {
      "action": "lookoutvision:ListProjects",
      "condition": null
    },
    {
      "action": "machinelearning:DescribeMLModels",
      "condition": null
    },
    {
      "action": "macie2:ListFindings",
      "condition": null
    },
    {
      "action": "managedblockchain:ListNetworks",
      "condition": null
    },
    {
      "action": "mechanicalturk:ListHITs",
      "condition": null
    },
    {
      "action": "mediaconnect:Describe*",
      "condition": null
    },
    {
      "action": "mediaconnect:List*",
      "condition": null
    },
    {
      "action": "medialive:ListChannels",
      "condition": null
    },
    {
      "action": "mediapackage-vod:DescribePackagingGroup",
      "condition": null
    },
    {
      "action": "mediapackage-vod:ListPackagingGroups",
      "condition": null
    },
    {
      "action": "mediapackage:DescribeOriginEndpoint",
      "condition": null
    },
    {
      "action": "mediapackage:ListOriginEndpoints",
      "condition": null
    },
    {
      "action": "mediastore:GetContainerPolicy",
      "condition": null
    },
    {
      "action": "mediastore:GetCorsPolicy",
      "condition": null
    },
    {
      "action": "mediastore:ListContainers",
      "condition": null
    },
    {
      "action": "memorydb:DescribeClusters",
      "condition": null
    },
    {
      "action": "mq:DescribeBroker",
      "condition": null
    },
    {
      "action": "mq:DescribeBrokerEngineTypes",
      "condition": null
    },
    {
      "action": "mq:DescribeBrokerInstanceOptions",
      "condition": null
    },
    {
      "action": "mq:DescribeConfiguration",
      "condition": null
    },
    {
      "action": "mq:DescribeConfigurationRevision",
      "condition": null
    },
    {
      "action": "mq:DescribeUser",
      "condition": null
    },
    {
      "action": "mq:ListBrokers",
      "condition": null
    },
    {
      "action": "mq:ListConfigurationRevisions",
      "condition": null
    },
    {
      "action": "mq:ListConfigurations",
      "condition": null
    },
    {
      "action": "mq:ListTags",
      "condition": null
    },
    {
      "action": "mq:ListUsers",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeFirewall",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeFirewallPolicy",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeLoggingConfiguration",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeRuleGroup",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewallPolicies",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewalls",
      "condition": null
    },
    {
      "action": "network-firewall:ListRuleGroups",
      "condition": null
    },
    {
      "action": "networkmanager:DescribeGlobalNetworks",
      "condition": null
    },
    {
      "action": "nimble:ListStudios",
      "condition": null
    },
    {
      "action": "opsworks-cm:DescribeServers",
      "condition": null
    },
    {
      "action": "opsworks:DescribeStacks",
      "condition": null
    },
    {
      "action": "organizations:Describe*",
      "condition": null
    },
    {
      "action": "organizations:List*",
      "condition": null
    },
    {
      "action": "personalize:DescribeDatasetGroup",
      "condition": null
    },
    {
      "action": "personalize:ListDatasetGroups",
      "condition": null
    },
    {
      "action": "private-networks:ListNetworks",
      "condition": null
    },
    {
      "action": "profile:GetDomain",
      "condition": null
    },
    {
      "action": "profile:ListDomains",
      "condition": null
    },
    {
      "action": "profile:ListIntegrations",
      "condition": null
    },
    {
      "action": "qldb:DescribeJournalS3Export",
      "condition": null
    },
    {
      "action": "qldb:DescribeLedger",
      "condition": null
    },
    {
      "action": "qldb:ListJournalS3Exports",
      "condition": null
    },
    {
      "action": "qldb:ListJournalS3ExportsForLedger",
      "condition": null
    },
    {
      "action": "qldb:ListLedgers",
      "condition": null
    },
    {
      "action": "quicksight:Describe*",
      "condition": null
    },
    {
      "action": "quicksight:List*",
      "condition": null
    },
    {
      "action": "ram:GetResourceShares",
      "condition": null
    },
    {
      "action": "ram:List*",
      "condition": null
    },
    {
      "action": "rds:Describe*",
      "condition": null
    },
    {
      "action": "rds:DownloadDBLogFilePortion",
      "condition": null
    },
    {
      "action": "rds:ListTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-serverless:GetNamespace",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListWorkgroups",
      "condition": null
    },
    {
      "action": "redshift:Describe*",
      "condition": null
    },
    {
      "action": "rekognition:Describe*",
      "condition": null
    },
    {
      "action": "rekognition:List*",
      "condition": null
    },
    {
      "action": "resource-groups:ListGroupResources",
      "condition": null
    },
    {
      "action": "robomaker:Describe*",
      "condition": null
    },
    {
      "action": "robomaker:List*",
      "condition": null
    },
    {
      "action": "route53:Get*",
      "condition": null
    },
    {
      "action": "route53:List*",
      "condition": null
    },
    {
      "action": "route53domains:GetDomainDetail",
      "condition": null
    },
    {
      "action": "route53domains:GetOperationDetail",
      "condition": null
    },
    {
      "action": "route53domains:ListDomains",
      "condition": null
    },
    {
      "action": "route53domains:ListOperations",
      "condition": null
    },
    {
      "action": "route53domains:ListTagsForDomain",
      "condition": null
    },
    {
      "action": "route53resolver:Get*",
      "condition": null
    },
    {
      "action": "route53resolver:List*",
      "condition": null
    },
    {
      "action": "s3-outposts:ListEndpoints",
      "condition": null
    },
    {
      "action": "s3-outposts:ListOutpostsWithS3",
      "condition": null
    },
    {
      "action": "s3-outposts:ListSharedEndpoints",
      "condition": null
    },
    {
      "action": "s3:GetAccelerateConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetAccessPoint",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3:GetAccessPointPolicyStatus",
      "condition": null
    },
    {
      "action": "s3:GetAccountPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:GetAnalyticsConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetBucket*",
      "condition": null
    },
    {
      "action": "s3:GetEncryptionConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetInventoryConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetMetricsConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetMultiRegionAccessPointPolicy",
      "condition": null
    },
    {
      "action": "s3:GetObjectAcl",
      "condition": null
    },
    {
      "action": "s3:GetObjectVersionAcl",
      "condition": null
    },
    {
      "action": "s3:GetReplicationConfiguration",
      "condition": null
    },
    {
      "action": "s3:ListAccessPoints",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "s3:ListMultiRegionAccessPoints",
      "condition": null
    },
    {
      "action": "sagemaker:Describe*",
      "condition": null
    },
    {
      "action": "sagemaker:List*",
      "condition": null
    },
    {
      "action": "schemas:DescribeCodeBinding",
      "condition": null
    },
    {
      "action": "schemas:DescribeDiscoverer",
      "condition": null
    },
    {
      "action": "schemas:DescribeRegistry",
      "condition": null
    },
    {
      "action": "schemas:DescribeSchema",
      "condition": null
    },
    {
      "action": "schemas:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "schemas:ListDiscoverers",
      "condition": null
    },
    {
      "action": "schemas:ListRegistries",
      "condition": null
    },
    {
      "action": "schemas:ListSchemaVersions",
      "condition": null
    },
    {
      "action": "schemas:ListSchemas",
      "condition": null
    },
    {
      "action": "schemas:ListTagsForResource",
      "condition": null
    },
    {
      "action": "sdb:DomainMetadata",
      "condition": null
    },
    {
      "action": "sdb:ListDomains",
      "condition": null
    },
    {
      "action": "secretsmanager:DescribeSecret",
      "condition": null
    },
    {
      "action": "secretsmanager:GetResourcePolicy",
      "condition": null
    },
    {
      "action": "secretsmanager:ListSecretVersionIds",
      "condition": null
    },
    {
      "action": "secretsmanager:ListSecrets",
      "condition": null
    },
    {
      "action": "securityhub:Describe*",
      "condition": null
    },
    {
      "action": "securityhub:Get*",
      "condition": null
    },
    {
      "action": "securityhub:List*",
      "condition": null
    },
    {
      "action": "serverlessrepo:GetApplicationPolicy",
      "condition": null
    },
    {
      "action": "serverlessrepo:List*",
      "condition": null
    },
    {
      "action": "servicequotas:GetAWSDefaultServiceQuota",
      "condition": null
    },
    {
      "action": "servicequotas:GetAssociationForServiceQuotaTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:GetRequestedServiceQuotaChange",
      "condition": null
    },
    {
      "action": "servicequotas:GetServiceQuota",
      "condition": null
    },
    {
      "action": "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:ListAWSDefaultServiceQuotas",
      "condition": null
    },
    {
      "action": "servicequotas:ListRequestedServiceQuotaChangeHistory",
      "condition": null
    },
    {
      "action": "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
      "condition": null
    },
    {
      "action": "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
      "condition": null
    },
    {
      "action": "servicequotas:ListServiceQuotas",
      "condition": null
    },
    {
      "action": "servicequotas:ListServices",
      "condition": null
    },
    {
      "action": "servicequotas:ListTagsForResource",
      "condition": null
    },
    {
      "action": "ses:Describe*",
      "condition": null
    },
    {
      "action": "ses:GetAccount",
      "condition": null
    },
    {
      "action": "ses:GetAccountSendingEnabled",
      "condition": null
    },
    {
      "action": "ses:GetConfigurationSet",
      "condition": null
    },
    {
      "action": "ses:GetConfigurationSetEventDestinations",
      "condition": null
    },
    {
      "action": "ses:GetDedicatedIps",
      "condition": null
    },
    {
      "action": "ses:GetEmailIdentity",
      "condition": null
    },
    {
      "action": "ses:GetIdentityDkimAttributes",
      "condition": null
    },
    {
      "action": "ses:GetIdentityPolicies",
      "condition": null
    },
    {
      "action": "ses:GetIdentityVerificationAttributes",
      "condition": null
    },
    {
      "action": "ses:ListConfigurationSets",
      "condition": null
    },
    {
      "action": "ses:ListDedicatedIpPools",
      "condition": null
    },
    {
      "action": "ses:ListIdentities",
      "condition": null
    },
    {
      "action": "ses:ListIdentityPolicies",
      "condition": null
    },
    {
      "action": "ses:ListReceiptFilters",
      "condition": null
    },
    {
      "action": "ses:ListReceiptRuleSets",
      "condition": null
    },
    {
      "action": "ses:ListVerifiedEmailAddresses",
      "condition": null
    },
    {
      "action": "shield:Describe*",
      "condition": null
    },
    {
      "action": "shield:GetSubscriptionState",
      "condition": null
    },
    {
      "action": "shield:List*",
      "condition": null
    },
    {
      "action": "snowball:ListClusters",
      "condition": null
    },
    {
      "action": "snowball:ListJobs",
      "condition": null
    },
    {
      "action": "sns:GetPlatformApplicationAttributes",
      "condition": null
    },
    {
      "action": "sns:GetTopicAttributes",
      "condition": null
    },
    {
      "action": "sns:ListSubscriptions",
      "condition": null
    },
    {
      "action": "sns:ListSubscriptionsByTopic",
      "condition": null
    },
    {
      "action": "sns:ListTagsForResource",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "sqs:GetQueueAttributes",
      "condition": null
    },
    {
      "action": "sqs:ListDeadLetterSourceQueues",
      "condition": null
    },
    {
      "action": "sqs:ListQueueTags",
      "condition": null
    },
    {
      "action": "sqs:ListQueues",
      "condition": null
    },
    {
      "action": "ssm:Describe*",
      "condition": null
    },
    {
      "action": "ssm:GetAutomationExecution",
      "condition": null
    },
    {
      "action": "ssm:GetServiceSetting",
      "condition": null
    },
    {
      "action": "ssm:ListAssociationVersions",
      "condition": null
    },
    {
      "action": "ssm:ListAssociations",
      "condition": null
    },
    {
      "action": "ssm:ListCommands",
      "condition": null
    },
    {
      "action": "ssm:ListComplianceItems",
      "condition": null
    },
    {
      "action": "ssm:ListComplianceSummaries",
      "condition": null
    },
    {
      "action": "ssm:ListDocumentMetadataHistory",
      "condition": null
    },
    {
      "action": "ssm:ListDocumentVersions",
      "condition": null
    },
    {
      "action": "ssm:ListDocuments",
      "condition": null
    },
    {
      "action": "ssm:ListInventoryEntries",
      "condition": null
    },
    {
      "action": "ssm:ListOpsMetadata",
      "condition": null
    },
    {
      "action": "ssm:ListResourceComplianceSummaries",
      "condition": null
    },
    {
      "action": "ssm:ListResourceDataSync",
      "condition": null
    },
    {
      "action": "ssm:ListTagsForResource",
      "condition": null
    },
    {
      "action": "sso:DescribeAccountAssignmentCreationStatus",
      "condition": null
    },
    {
      "action": "sso:DescribePermissionSet",
      "condition": null
    },
    {
      "action": "sso:DescribePermissionsPolicies",
      "condition": null
    },
    {
      "action": "sso:List*",
      "condition": null
    },
    {
      "action": "states:DescribeStateMachine",
      "condition": null
    },
    {
      "action": "states:ListStateMachines",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeBandwidthRateLimit",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeCache",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeCachediSCSIVolumes",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeGatewayInformation",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeMaintenanceStartTime",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeNFSFileShares",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeSnapshotSchedule",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeStorediSCSIVolumes",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeTapeArchives",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeTapeRecoveryPoints",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeTapes",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeUploadBuffer",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeVTLDevices",
      "condition": null
    },
    {
      "action": "storagegateway:DescribeWorkingStorage",
      "condition": null
    },
    {
      "action": "storagegateway:List*",
      "condition": null
    },
    {
      "action": "sts:GetAccessKeyInfo",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorCheckRefreshStatuses",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorCheckResult",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorCheckSummaries",
      "condition": null
    },
    {
      "action": "support:DescribeTrustedAdvisorChecks",
      "condition": null
    },
    {
      "action": "synthetics:DescribeCanaries",
      "condition": null
    },
    {
      "action": "synthetics:DescribeCanariesLastRun",
      "condition": null
    },
    {
      "action": "synthetics:DescribeRuntimeVersions",
      "condition": null
    },
    {
      "action": "synthetics:GetCanary",
      "condition": null
    },
    {
      "action": "synthetics:GetCanaryRuns",
      "condition": null
    },
    {
      "action": "synthetics:GetGroup",
      "condition": null
    },
    {
      "action": "synthetics:ListAssociatedGroups",
      "condition": null
    },
    {
      "action": "synthetics:ListGroupResources",
      "condition": null
    },
    {
      "action": "synthetics:ListGroups",
      "condition": null
    },
    {
      "action": "synthetics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "tag:GetResources",
      "condition": null
    },
    {
      "action": "tag:GetTagKeys",
      "condition": null
    },
    {
      "action": "transcribe:GetCallAnalyticsCategory",
      "condition": null
    },
    {
      "action": "transcribe:GetMedicalVocabulary",
      "condition": null
    },
    {
      "action": "transcribe:GetVocabulary",
      "condition": null
    },
    {
      "action": "transcribe:GetVocabularyFilter",
      "condition": null
    },
    {
      "action": "transcribe:ListCallAnalyticsCategories",
      "condition": null
    },
    {
      "action": "transcribe:ListCallAnalyticsJobs",
      "condition": null
    },
    {
      "action": "transcribe:ListLanguageModels",
      "condition": null
    },
    {
      "action": "transcribe:ListMedicalTranscriptionJobs",
      "condition": null
    },
    {
      "action": "transcribe:ListMedicalVocabularies",
      "condition": null
    },
    {
      "action": "transcribe:ListTagsForResource",
      "condition": null
    },
    {
      "action": "transcribe:ListTranscriptionJobs",
      "condition": null
    },
    {
      "action": "transcribe:ListVocabularies",
      "condition": null
    },
    {
      "action": "transcribe:ListVocabularyFilters",
      "condition": null
    },
    {
      "action": "transfer:Describe*",
      "condition": null
    },
    {
      "action": "transfer:List*",
      "condition": null
    },
    {
      "action": "translate:List*",
      "condition": null
    },
    {
      "action": "trustedadvisor:Describe*",
      "condition": null
    },
    {
      "action": "voiceid:DescribeDomain",
      "condition": null
    },
    {
      "action": "waf-regional:GetWebACL",
      "condition": null
    },
    {
      "action": "waf-regional:ListResourcesForWebACL",
      "condition": null
    },
    {
      "action": "waf-regional:ListTagsForResource",
      "condition": null
    },
    {
      "action": "waf-regional:ListWebACLs",
      "condition": null
    },
    {
      "action": "waf:GetWebACL",
      "condition": null
    },
    {
      "action": "waf:ListTagsForResource",
      "condition": null
    },
    {
      "action": "waf:ListWebACLs",
      "condition": null
    },
    {
      "action": "wafv2:GetLoggingConfiguration",
      "condition": null
    },
    {
      "action": "wafv2:GetWebACL",
      "condition": null
    },
    {
      "action": "wafv2:GetWebACLForResource",
      "condition": null
    },
    {
      "action": "wafv2:ListAvailableManagedRuleGroups",
      "condition": null
    },
    {
      "action": "wafv2:ListIPSets",
      "condition": null
    },
    {
      "action": "wafv2:ListLoggingConfigurations",
      "condition": null
    },
    {
      "action": "wafv2:ListRegexPatternSets",
      "condition": null
    },
    {
      "action": "wafv2:ListResourcesForWebACL",
      "condition": null
    },
    {
      "action": "wafv2:ListRuleGroups",
      "condition": null
    },
    {
      "action": "wafv2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "wafv2:ListWebACLs",
      "condition": null
    },
    {
      "action": "wisdom:GetAssistant",
      "condition": null
    },
    {
      "action": "workdocs:DescribeResourcePermissions",
      "condition": null
    },
    {
      "action": "workspaces:Describe*",
      "condition": null
    },
    {
      "action": "xray:GetEncryptionConfig",
      "condition": null
    },
    {
      "action": "xray:GetGroup",
      "condition": null
    },
    {
      "action": "xray:GetGroups",
      "condition": null
    },
    {
      "action": "xray:GetSamplingRules",
      "condition": null
    },
    {
      "action": "xray:GetSamplingTargets",
      "condition": null
    },
    {
      "action": "xray:GetTraceSummaries",
      "condition": null
    },
    {
      "action": "xray:ListTagsForResource",
      "condition": null
    },
    {
      "action": "apigateway:GET",
      "condition": null
    }
  ],
  "updatedate": "2024-04-05T17:32:58+00:00",
  "version": "v42"
}