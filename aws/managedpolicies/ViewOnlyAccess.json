{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess",
  "createdate": "2024-06-10T20:57:11+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "acm:ListCertificates",
          "athena:List*",
          "autoscaling:Describe*",
          "aws-marketplace:ViewSubscriptions",
          "backup:DescribeBackupJob",
          "backup:DescribeBackupVault",
          "backup:DescribeCopyJob",
          "backup:DescribeFramework",
          "backup:DescribeGlobalSettings",
          "backup:DescribeProtectedResource",
          "backup:DescribeRecoveryPoint",
          "backup:DescribeRegionSettings",
          "backup:DescribeReportJob",
          "backup:DescribeReportPlan",
          "backup:DescribeRestoreJob",
          "backup:GetSupportedResourceTypes",
          "backup:ListBackupJobs",
          "backup:ListBackupPlanTemplates",
          "backup:ListBackupPlanVersions",
          "backup:ListBackupPlans",
          "backup:ListBackupSelections",
          "backup:ListBackupVaults",
          "backup:ListCopyJobs",
          "backup:ListFrameworks",
          "backup:ListLegalHolds",
          "backup:ListProtectedResources",
          "backup:ListProtectedResourcesByBackupVault",
          "backup:ListRecoveryPointsByBackupVault",
          "backup:ListRecoveryPointsByLegalHold",
          "backup:ListRecoveryPointsByResource",
          "backup:ListReportJobs",
          "backup:ListReportPlans",
          "backup:ListRestoreJobs",
          "backup:ListTags",
          "batch:ListJobs",
          "bedrock:ListCustomModels",
          "bedrock:ListTagsForResource",
          "clouddirectory:ListAppliedSchemaArns",
          "clouddirectory:ListDevelopmentSchemaArns",
          "clouddirectory:ListDirectories",
          "clouddirectory:ListPublishedSchemaArns",
          "cloudformation:DescribeStacks",
          "cloudformation:List*",
          "cloudfront:List*",
          "cloudsearch:DescribeDomains",
          "cloudsearch:List*",
          "cloudtrail:DescribeTrails",
          "cloudtrail:ListTrails",
          "cloudtrail:LookupEvents",
          "cloudwatch:Get*",
          "cloudwatch:List*",
          "codebuild:ListBuilds*",
          "codebuild:ListProjects",
          "codecommit:List*",
          "codedeploy:BatchGetApplicationRevisions",
          "codedeploy:BatchGetApplications",
          "codedeploy:BatchGetDeploymentGroups",
          "codedeploy:BatchGetDeploymentInstances",
          "codedeploy:BatchGetDeploymentTargets",
          "codedeploy:BatchGetDeployments",
          "codedeploy:BatchGetOnPremisesInstances",
          "codedeploy:Get*",
          "codedeploy:List*",
          "codepipeline:ListPipelines",
          "codestar:List*",
          "cognito-identity:ListIdentities",
          "cognito-identity:ListIdentityPools",
          "cognito-idp:List*",
          "cognito-sync:ListDatasets",
          "comprehend:Describe*",
          "comprehend:List*",
          "config:Describe*",
          "config:List*",
          "connect:List*",
          "cost-optimization-hub:GetPreferences",
          "cost-optimization-hub:GetRecommendation",
          "cost-optimization-hub:ListEnrollmentStatuses",
          "cost-optimization-hub:ListRecommendationSummaries",
          "cost-optimization-hub:ListRecommendations",
          "databrew:ListJobs",
          "databrew:ListProjects",
          "datapipeline:DescribePipelines",
          "datapipeline:GetAccountLimits",
          "datapipeline:ListPipelines",
          "dax:DescribeClusters",
          "dax:DescribeDefaultParameters",
          "dax:DescribeEvents",
          "dax:DescribeParameterGroups",
          "dax:DescribeParameters",
          "dax:DescribeSubnetGroups",
          "dax:ListTags",
          "devicefarm:List*",
          "directconnect:Describe*",
          "discovery:List*",
          "dms:List*",
          "ds:DescribeDirectories",
          "dynamodb:DescribeBackup",
          "dynamodb:DescribeContinuousBackups",
          "dynamodb:DescribeGlobalTable",
          "dynamodb:DescribeGlobalTableSettings",
          "dynamodb:DescribeLimits",
          "dynamodb:DescribeReservedCapacity",
          "dynamodb:DescribeReservedCapacityOfferings",
          "dynamodb:DescribeStream",
          "dynamodb:DescribeTable",
          "dynamodb:DescribeTimeToLive",
          "dynamodb:ListBackups",
          "dynamodb:ListExports",
          "dynamodb:ListGlobalTables",
          "dynamodb:ListStreams",
          "dynamodb:ListTables",
          "dynamodb:ListTagsOfResource",
          "ec2:DescribeAccountAttributes",
          "ec2:DescribeAddresses",
          "ec2:DescribeAvailabilityZones",
          "ec2:DescribeBundleTasks",
          "ec2:DescribeCarrierGateways",
          "ec2:DescribeClassicLinkInstances",
          "ec2:DescribeConversionTasks",
          "ec2:DescribeCustomerGateways",
          "ec2:DescribeDhcpOptions",
          "ec2:DescribeExportTasks",
          "ec2:DescribeFlowLogs",
          "ec2:DescribeHost*",
          "ec2:DescribeIdFormat",
          "ec2:DescribeIdentityIdFormat",
          "ec2:DescribeImage*",
          "ec2:DescribeImport*",
          "ec2:DescribeInstance*",
          "ec2:DescribeInternetGateways",
          "ec2:DescribeKeyPairs",
          "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
          "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
          "ec2:DescribeLocalGatewayRouteTables",
          "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
          "ec2:DescribeLocalGatewayVirtualInterfaces",
          "ec2:DescribeLocalGateways",
          "ec2:DescribeMovingAddresses",
          "ec2:DescribeNatGateways",
          "ec2:DescribeNetwork*",
          "ec2:DescribePlacementGroups",
          "ec2:DescribePrefixLists",
          "ec2:DescribeRegions",
          "ec2:DescribeReserved*",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroupRules",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSnapshot*",
          "ec2:DescribeSpot*",
          "ec2:DescribeSubnets",
          "ec2:DescribeTags",
          "ec2:DescribeVolume*",
          "ec2:DescribeVpc*",
          "ec2:DescribeVpnGateways",
          "ec2:SearchLocalGatewayRoutes",
          "ecr:DescribeRegistry",
          "ecr:DescribeRepositories",
          "ecr:ListImages",
          "ecs:Describe*",
          "ecs:List*",
          "eks:ListTagsForResource",
          "elastic-inference:DescribeAcceleratorOfferings",
          "elastic-inference:DescribeAcceleratorTypes",
          "elastic-inference:DescribeAccelerators",
          "elastic-inference:ListTagsForResource",
          "elasticache:Describe*",
          "elasticbeanstalk:DescribeApplicationVersions",
          "elasticbeanstalk:DescribeApplications",
          "elasticbeanstalk:DescribeEnvironments",
          "elasticbeanstalk:ListAvailableSolutionStacks",
          "elasticfilesystem:DescribeFileSystems",
          "elasticloadbalancing:DescribeInstanceHealth",
          "elasticloadbalancing:DescribeListeners",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeTargetGroups",
          "elasticloadbalancing:DescribeTargetHealth",
          "elasticmapreduce:List*",
          "elastictranscoder:List*",
          "emr-serverless:ListApplications",
          "es:DescribeElasticsearchDomain",
          "es:DescribeElasticsearchDomains",
          "es:ListDomainNames",
          "events:ListRuleNamesByTarget",
          "events:ListRules",
          "events:ListTargetsByRule",
          "firehose:DescribeDeliveryStream",
          "firehose:List*",
          "fsx:DescribeFileSystems",
          "gamelift:List*",
          "glacier:List*",
          "glue:GetTags",
          "greengrass:List*",
          "iam:GetAccountSummary",
          "iam:GetLoginProfile",
          "iam:List*",
          "importexport:ListJobs",
          "inspector:List*",
          "iot:List*",
          "kafka:ListClusters",
          "kendra:ListDataSources",
          "kendra:ListTagsForResource",
          "kinesis:ListStreams",
          "kinesisanalytics:ListApplications",
          "kinesisanalytics:ListTagsForResource",
          "kms:ListKeys",
          "kms:ListResourceTags",
          "lambda:List*",
          "lex:GetBotAliases",
          "lex:GetBotChannelAssociations",
          "lex:GetBotVersions",
          "lex:GetBots",
          "lex:GetIntentVersions",
          "lex:GetIntents",
          "lex:GetSlotTypeVersions",
          "lex:GetSlotTypes",
          "lex:GetUtterancesView",
          "lightsail:GetBlueprints",
          "lightsail:GetBundles",
          "lightsail:GetInstanceSnapshots",
          "lightsail:GetInstances",
          "lightsail:GetKeyPair",
          "lightsail:GetRegions",
          "lightsail:GetStaticIps",
          "lightsail:IsVpcPeered",
          "logs:Describe*",
          "logs:ListTagsForResource",
          "lookoutvision:ListModelPackagingJobs",
          "lookoutvision:ListModels",
          "lookoutvision:ListProjects",
          "machinelearning:Describe*",
          "mediaconnect:ListEntitlements",
          "mediaconnect:ListFlows",
          "mediaconnect:ListOfferings",
          "mediaconnect:ListReservations",
          "mobiletargeting:GetApplicationSettings",
          "mobiletargeting:GetCampaigns",
          "mobiletargeting:GetImportJobs",
          "mobiletargeting:GetSegments",
          "oam:ListAttachedLinks",
          "oam:ListLinks",
          "oam:ListSinks",
          "opsworks-cm:Describe*",
          "opsworks:Describe*",
          "organizations:List*",
          "outposts:GetOutpost",
          "outposts:GetOutpostInstanceTypes",
          "outposts:ListOutposts",
          "outposts:ListSites",
          "outposts:ListTagsForResource",
          "polly:Describe*",
          "polly:List*",
          "profile:ListDomains",
          "profile:ListIntegrations",
          "rds:Describe*",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:ListWorkgroups",
          "redshift:DescribeClusters",
          "redshift:DescribeEvents",
          "redshift:ViewQueriesInConsole",
          "resource-explorer-2:GetDefaultView",
          "resource-explorer-2:GetIndex",
          "resource-explorer-2:ListIndexes",
          "resource-explorer-2:ListSupportedResourceTypes",
          "resource-explorer-2:ListTagsForResource",
          "resource-explorer-2:ListViews",
          "route53:Get*",
          "route53:List*",
          "route53domains:List*",
          "route53resolver:Get*",
          "route53resolver:List*",
          "s3:ListAllMyBuckets",
          "s3:ListBucket",
          "s3:ListMultiRegionAccessPoints",
          "sagemaker:Describe*",
          "sagemaker:List*",
          "sdb:List*",
          "servicecatalog:List*",
          "ses:DescribeActiveReceiptRuleSet",
          "ses:List*",
          "ses:ListDedicatedIpPools",
          "shield:List*",
          "sns:List*",
          "sqs:GetQueueAttributes",
          "sqs:GetQueueUrl",
          "sqs:ListDeadLetterSourceQueues",
          "sqs:ListMessageMoveTasks",
          "sqs:ListQueueTags",
          "sqs:ListQueues",
          "ssm:ListAssociations",
          "ssm:ListDocuments",
          "states:ListActivities",
          "states:ListStateMachineAliases",
          "states:ListStateMachineVersions",
          "states:ListStateMachines",
          "storagegateway:ListGateways",
          "storagegateway:ListLocalDisks",
          "storagegateway:ListVolumeRecoveryPoints",
          "storagegateway:ListVolumes",
          "swf:List*",
          "trustedadvisor:Describe*",
          "waf-regional:List*",
          "waf:List*",
          "wafv2:List*",
          "workdocs:DescribeAvailableDirectories",
          "workdocs:DescribeInstances",
          "workmail:Describe*",
          "workspaces:Describe*"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GeneralViewOnlyAccessStatement"
      },
      {
        "Action": [
          "apigateway:GET"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:apigateway:*::/apis",
          "arn:aws:apigateway:*::/apis/*/authorizers/*",
          "arn:aws:apigateway:*::/apis/*/authorizers",
          "arn:aws:apigateway:*::/apis/*/cors",
          "arn:aws:apigateway:*::/apis/*/deployments/*",
          "arn:aws:apigateway:*::/apis/*/deployments",
          "arn:aws:apigateway:*::/apis/*/exports/*",
          "arn:aws:apigateway:*::/apis/*/integrations/*",
          "arn:aws:apigateway:*::/apis/*/integrations",
          "arn:aws:apigateway:*::/apis/*/models/*",
          "arn:aws:apigateway:*::/apis/*/models",
          "arn:aws:apigateway:*::/apis/*/routes/*",
          "arn:aws:apigateway:*::/apis/*/routes",
          "arn:aws:apigateway:*::/apis/*/stages",
          "arn:aws:apigateway:*::/apis/*/stages/*",
          "arn:aws:apigateway:*::/clientcertificates",
          "arn:aws:apigateway:*::/clientcertificates/*",
          "arn:aws:apigateway:*::/domainnames",
          "arn:aws:apigateway:*::/domainnames/*/apimappings",
          "arn:aws:apigateway:*::/restapis",
          "arn:aws:apigateway:*::/restapis/*/authorizers/*",
          "arn:aws:apigateway:*::/restapis/*/authorizers",
          "arn:aws:apigateway:*::/restapis/*/deployments/*",
          "arn:aws:apigateway:*::/restapis/*/deployments",
          "arn:aws:apigateway:*::/restapis/*/documentation/parts/*",
          "arn:aws:apigateway:*::/restapis/*/documentation/parts",
          "arn:aws:apigateway:*::/restapis/*/documentation/versions/*",
          "arn:aws:apigateway:*::/restapis/*/documentation/versions",
          "arn:aws:apigateway:*::/restapis/*/gatewayresponses/*",
          "arn:aws:apigateway:*::/restapis/*/gatewayresponses",
          "arn:aws:apigateway:*::/restapis/*/models/*",
          "arn:aws:apigateway:*::/restapis/*/models",
          "arn:aws:apigateway:*::/restapis/*/requestvalidators",
          "arn:aws:apigateway:*::/restapis/*/requestvalidators/*",
          "arn:aws:apigateway:*::/restapis/*/resources/*",
          "arn:aws:apigateway:*::/restapis/*/resources",
          "arn:aws:apigateway:*::/restapis/*/stages",
          "arn:aws:apigateway:*::/restapis/*/stages/*",
          "arn:aws:apigateway:*::/tags/*",
          "arn:aws:apigateway:*::/vpclinks"
        ],
        "Sid": "APIGatewayAccess"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "ViewOnlyAccess",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "acm:ListCertificates",
      "condition": null
    },
    {
      "action": "athena:List*",
      "condition": null
    },
    {
      "action": "autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "aws-marketplace:ViewSubscriptions",
      "condition": null
    },
    {
      "action": "backup:DescribeBackupJob",
      "condition": null
    },
    {
      "action": "backup:DescribeBackupVault",
      "condition": null
    },
    {
      "action": "backup:DescribeCopyJob",
      "condition": null
    },
    {
      "action": "backup:DescribeFramework",
      "condition": null
    },
    {
      "action": "backup:DescribeGlobalSettings",
      "condition": null
    },
    {
      "action": "backup:DescribeProtectedResource",
      "condition": null
    },
    {
      "action": "backup:DescribeRecoveryPoint",
      "condition": null
    },
    {
      "action": "backup:DescribeRegionSettings",
      "condition": null
    },
    {
      "action": "backup:DescribeReportJob",
      "condition": null
    },
    {
      "action": "backup:DescribeReportPlan",
      "condition": null
    },
    {
      "action": "backup:DescribeRestoreJob",
      "condition": null
    },
    {
      "action": "backup:GetSupportedResourceTypes",
      "condition": null
    },
    {
      "action": "backup:ListBackupJobs",
      "condition": null
    },
    {
      "action": "backup:ListBackupPlanTemplates",
      "condition": null
    },
    {
      "action": "backup:ListBackupPlanVersions",
      "condition": null
    },
    {
      "action": "backup:ListBackupPlans",
      "condition": null
    },
    {
      "action": "backup:ListBackupSelections",
      "condition": null
    },
    {
      "action": "backup:ListBackupVaults",
      "condition": null
    },
    {
      "action": "backup:ListCopyJobs",
      "condition": null
    },
    {
      "action": "backup:ListFrameworks",
      "condition": null
    },
    {
      "action": "backup:ListLegalHolds",
      "condition": null
    },
    {
      "action": "backup:ListProtectedResources",
      "condition": null
    },
    {
      "action": "backup:ListProtectedResourcesByBackupVault",
      "condition": null
    },
    {
      "action": "backup:ListRecoveryPointsByBackupVault",
      "condition": null
    },
    {
      "action": "backup:ListRecoveryPointsByLegalHold",
      "condition": null
    },
    {
      "action": "backup:ListRecoveryPointsByResource",
      "condition": null
    },
    {
      "action": "backup:ListReportJobs",
      "condition": null
    },
    {
      "action": "backup:ListReportPlans",
      "condition": null
    },
    {
      "action": "backup:ListRestoreJobs",
      "condition": null
    },
    {
      "action": "backup:ListTags",
      "condition": null
    },
    {
      "action": "batch:ListJobs",
      "condition": null
    },
    {
      "action": "bedrock:ListCustomModels",
      "condition": null
    },
    {
      "action": "bedrock:ListTagsForResource",
      "condition": null
    },
    {
      "action": "clouddirectory:ListAppliedSchemaArns",
      "condition": null
    },
    {
      "action": "clouddirectory:ListDevelopmentSchemaArns",
      "condition": null
    },
    {
      "action": "clouddirectory:ListDirectories",
      "condition": null
    },
    {
      "action": "clouddirectory:ListPublishedSchemaArns",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStacks",
      "condition": null
    },
    {
      "action": "cloudformation:List*",
      "condition": null
    },
    {
      "action": "cloudfront:List*",
      "condition": null
    },
    {
      "action": "cloudsearch:DescribeDomains",
      "condition": null
    },
    {
      "action": "cloudsearch:List*",
      "condition": null
    },
    {
      "action": "cloudtrail:DescribeTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:LookupEvents",
      "condition": null
    },
    {
      "action": "cloudwatch:Get*",
      "condition": null
    },
    {
      "action": "cloudwatch:List*",
      "condition": null
    },
    {
      "action": "codebuild:ListBuilds*",
      "condition": null
    },
    {
      "action": "codebuild:ListProjects",
      "condition": null
    },
    {
      "action": "codecommit:List*",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetApplicationRevisions",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetApplications",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetDeploymentGroups",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetDeploymentInstances",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetDeploymentTargets",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetDeployments",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetOnPremisesInstances",
      "condition": null
    },
    {
      "action": "codedeploy:Get*",
      "condition": null
    },
    {
      "action": "codedeploy:List*",
      "condition": null
    },
    {
      "action": "codepipeline:ListPipelines",
      "condition": null
    },
    {
      "action": "codestar:List*",
      "condition": null
    },
    {
      "action": "cognito-identity:ListIdentities",
      "condition": null
    },
    {
      "action": "cognito-identity:ListIdentityPools",
      "condition": null
    },
    {
      "action": "cognito-idp:List*",
      "condition": null
    },
    {
      "action": "cognito-sync:ListDatasets",
      "condition": null
    },
    {
      "action": "comprehend:Describe*",
      "condition": null
    },
    {
      "action": "comprehend:List*",
      "condition": null
    },
    {
      "action": "config:Describe*",
      "condition": null
    },
    {
      "action": "config:List*",
      "condition": null
    },
    {
      "action": "connect:List*",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:GetPreferences",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:GetRecommendation",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:ListEnrollmentStatuses",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:ListRecommendationSummaries",
      "condition": null
    },
    {
      "action": "cost-optimization-hub:ListRecommendations",
      "condition": null
    },
    {
      "action": "databrew:ListJobs",
      "condition": null
    },
    {
      "action": "databrew:ListProjects",
      "condition": null
    },
    {
      "action": "datapipeline:DescribePipelines",
      "condition": null
    },
    {
      "action": "datapipeline:GetAccountLimits",
      "condition": null
    },
    {
      "action": "datapipeline:ListPipelines",
      "condition": null
    },
    {
      "action": "dax:DescribeClusters",
      "condition": null
    },
    {
      "action": "dax:DescribeDefaultParameters",
      "condition": null
    },
    {
      "action": "dax:DescribeEvents",
      "condition": null
    },
    {
      "action": "dax:DescribeParameterGroups",
      "condition": null
    },
    {
      "action": "dax:DescribeParameters",
      "condition": null
    },
    {
      "action": "dax:DescribeSubnetGroups",
      "condition": null
    },
    {
      "action": "dax:ListTags",
      "condition": null
    },
    {
      "action": "devicefarm:List*",
      "condition": null
    },
    {
      "action": "directconnect:Describe*",
      "condition": null
    },
    {
      "action": "discovery:List*",
      "condition": null
    },
    {
      "action": "dms:List*",
      "condition": null
    },
    {
      "action": "ds:DescribeDirectories",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeBackup",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeContinuousBackups",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeGlobalTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeGlobalTableSettings",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeLimits",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeReservedCapacity",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeReservedCapacityOfferings",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeStream",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTimeToLive",
      "condition": null
    },
    {
      "action": "dynamodb:ListBackups",
      "condition": null
    },
    {
      "action": "dynamodb:ListExports",
      "condition": null
    },
    {
      "action": "dynamodb:ListGlobalTables",
      "condition": null
    },
    {
      "action": "dynamodb:ListStreams",
      "condition": null
    },
    {
      "action": "dynamodb:ListTables",
      "condition": null
    },
    {
      "action": "dynamodb:ListTagsOfResource",
      "condition": null
    },
    {
      "action": "ec2:DescribeAccountAttributes",
      "condition": null
    },
    {
      "action": "ec2:DescribeAddresses",
      "condition": null
    },
    {
      "action": "ec2:DescribeAvailabilityZones",
      "condition": null
    },
    {
      "action": "ec2:DescribeBundleTasks",
      "condition": null
    },
    {
      "action": "ec2:DescribeCarrierGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeClassicLinkInstances",
      "condition": null
    },
    {
      "action": "ec2:DescribeConversionTasks",
      "condition": null
    },
    {
      "action": "ec2:DescribeCustomerGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:DescribeExportTasks",
      "condition": null
    },
    {
      "action": "ec2:DescribeFlowLogs",
      "condition": null
    },
    {
      "action": "ec2:DescribeHost*",
      "condition": null
    },
    {
      "action": "ec2:DescribeIdFormat",
      "condition": null
    },
    {
      "action": "ec2:DescribeIdentityIdFormat",
      "condition": null
    },
    {
      "action": "ec2:DescribeImage*",
      "condition": null
    },
    {
      "action": "ec2:DescribeImport*",
      "condition": null
    },
    {
      "action": "ec2:DescribeInstance*",
      "condition": null
    },
    {
      "action": "ec2:DescribeInternetGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeKeyPairs",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayVirtualInterfaces",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeMovingAddresses",
      "condition": null
    },
    {
      "action": "ec2:DescribeNatGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetwork*",
      "condition": null
    },
    {
      "action": "ec2:DescribePlacementGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribePrefixLists",
      "condition": null
    },
    {
      "action": "ec2:DescribeRegions",
      "condition": null
    },
    {
      "action": "ec2:DescribeReserved*",
      "condition": null
    },
    {
      "action": "ec2:DescribeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroupRules",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeSnapshot*",
      "condition": null
    },
    {
      "action": "ec2:DescribeSpot*",
      "condition": null
    },
    {
      "action": "ec2:DescribeSubnets",
      "condition": null
    },
    {
      "action": "ec2:DescribeTags",
      "condition": null
    },
    {
      "action": "ec2:DescribeVolume*",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpc*",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpnGateways",
      "condition": null
    },
    {
      "action": "ec2:SearchLocalGatewayRoutes",
      "condition": null
    },
    {
      "action": "ecr:DescribeRegistry",
      "condition": null
    },
    {
      "action": "ecr:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr:ListImages",
      "condition": null
    },
    {
      "action": "ecs:Describe*",
      "condition": null
    },
    {
      "action": "ecs:List*",
      "condition": null
    },
    {
      "action": "eks:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAcceleratorOfferings",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAcceleratorTypes",
      "condition": null
    },
    {
      "action": "elastic-inference:DescribeAccelerators",
      "condition": null
    },
    {
      "action": "elastic-inference:ListTagsForResource",
      "condition": null
    },
    {
      "action": "elasticache:Describe*",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:DescribeApplicationVersions",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:DescribeApplications",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:DescribeEnvironments",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:ListAvailableSolutionStacks",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeInstanceHealth",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroups",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetHealth",
      "condition": null
    },
    {
      "action": "elasticmapreduce:List*",
      "condition": null
    },
    {
      "action": "elastictranscoder:List*",
      "condition": null
    },
    {
      "action": "emr-serverless:ListApplications",
      "condition": null
    },
    {
      "action": "es:DescribeElasticsearchDomain",
      "condition": null
    },
    {
      "action": "es:DescribeElasticsearchDomains",
      "condition": null
    },
    {
      "action": "es:ListDomainNames",
      "condition": null
    },
    {
      "action": "events:ListRuleNamesByTarget",
      "condition": null
    },
    {
      "action": "events:ListRules",
      "condition": null
    },
    {
      "action": "events:ListTargetsByRule",
      "condition": null
    },
    {
      "action": "firehose:DescribeDeliveryStream",
      "condition": null
    },
    {
      "action": "firehose:List*",
      "condition": null
    },
    {
      "action": "fsx:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "gamelift:List*",
      "condition": null
    },
    {
      "action": "glacier:List*",
      "condition": null
    },
    {
      "action": "glue:GetTags",
      "condition": null
    },
    {
      "action": "greengrass:List*",
      "condition": null
    },
    {
      "action": "iam:GetAccountSummary",
      "condition": null
    },
    {
      "action": "iam:GetLoginProfile",
      "condition": null
    },
    {
      "action": "iam:List*",
      "condition": null
    },
    {
      "action": "importexport:ListJobs",
      "condition": null
    },
    {
      "action": "inspector:List*",
      "condition": null
    },
    {
      "action": "iot:List*",
      "condition": null
    },
    {
      "action": "kafka:ListClusters",
      "condition": null
    },
    {
      "action": "kendra:ListDataSources",
      "condition": null
    },
    {
      "action": "kendra:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kinesis:ListStreams",
      "condition": null
    },
    {
      "action": "kinesisanalytics:ListApplications",
      "condition": null
    },
    {
      "action": "kinesisanalytics:ListTagsForResource",
      "condition": null
    },
    {
      "action": "kms:ListKeys",
      "condition": null
    },
    {
      "action": "kms:ListResourceTags",
      "condition": null
    },
    {
      "action": "lambda:List*",
      "condition": null
    },
    {
      "action": "lex:GetBotAliases",
      "condition": null
    },
    {
      "action": "lex:GetBotChannelAssociations",
      "condition": null
    },
    {
      "action": "lex:GetBotVersions",
      "condition": null
    },
    {
      "action": "lex:GetBots",
      "condition": null
    },
    {
      "action": "lex:GetIntentVersions",
      "condition": null
    },
    {
      "action": "lex:GetIntents",
      "condition": null
    },
    {
      "action": "lex:GetSlotTypeVersions",
      "condition": null
    },
    {
      "action": "lex:GetSlotTypes",
      "condition": null
    },
    {
      "action": "lex:GetUtterancesView",
      "condition": null
    },
    {
      "action": "lightsail:GetBlueprints",
      "condition": null
    },
    {
      "action": "lightsail:GetBundles",
      "condition": null
    },
    {
      "action": "lightsail:GetInstanceSnapshots",
      "condition": null
    },
    {
      "action": "lightsail:GetInstances",
      "condition": null
    },
    {
      "action": "lightsail:GetKeyPair",
      "condition": null
    },
    {
      "action": "lightsail:GetRegions",
      "condition": null
    },
    {
      "action": "lightsail:GetStaticIps",
      "condition": null
    },
    {
      "action": "lightsail:IsVpcPeered",
      "condition": null
    },
    {
      "action": "logs:Describe*",
      "condition": null
    },
    {
      "action": "logs:ListTagsForResource",
      "condition": null
    },
    {
      "action": "lookoutvision:ListModelPackagingJobs",
      "condition": null
    },
    {
      "action": "lookoutvision:ListModels",
      "condition": null
    },
    {
      "action": "lookoutvision:ListProjects",
      "condition": null
    },
    {
      "action": "machinelearning:Describe*",
      "condition": null
    },
    {
      "action": "mediaconnect:ListEntitlements",
      "condition": null
    },
    {
      "action": "mediaconnect:ListFlows",
      "condition": null
    },
    {
      "action": "mediaconnect:ListOfferings",
      "condition": null
    },
    {
      "action": "mediaconnect:ListReservations",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetApplicationSettings",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetCampaigns",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetImportJobs",
      "condition": null
    },
    {
      "action": "mobiletargeting:GetSegments",
      "condition": null
    },
    {
      "action": "oam:ListAttachedLinks",
      "condition": null
    },
    {
      "action": "oam:ListLinks",
      "condition": null
    },
    {
      "action": "oam:ListSinks",
      "condition": null
    },
    {
      "action": "opsworks-cm:Describe*",
      "condition": null
    },
    {
      "action": "opsworks:Describe*",
      "condition": null
    },
    {
      "action": "organizations:List*",
      "condition": null
    },
    {
      "action": "outposts:GetOutpost",
      "condition": null
    },
    {
      "action": "outposts:GetOutpostInstanceTypes",
      "condition": null
    },
    {
      "action": "outposts:ListOutposts",
      "condition": null
    },
    {
      "action": "outposts:ListSites",
      "condition": null
    },
    {
      "action": "outposts:ListTagsForResource",
      "condition": null
    },
    {
      "action": "polly:Describe*",
      "condition": null
    },
    {
      "action": "polly:List*",
      "condition": null
    },
    {
      "action": "profile:ListDomains",
      "condition": null
    },
    {
      "action": "profile:ListIntegrations",
      "condition": null
    },
    {
      "action": "rds:Describe*",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListTagsForResource",
      "condition": null
    },
    {
      "action": "redshift-serverless:ListWorkgroups",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusters",
      "condition": null
    },
    {
      "action": "redshift:DescribeEvents",
      "condition": null
    },
    {
      "action": "redshift:ViewQueriesInConsole",
      "condition": null
    },
    {
      "action": "resource-explorer-2:GetDefaultView",
      "condition": null
    },
    {
      "action": "resource-explorer-2:GetIndex",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListIndexes",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListSupportedResourceTypes",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListTagsForResource",
      "condition": null
    },
    {
      "action": "resource-explorer-2:ListViews",
      "condition": null
    },
    {
      "action": "route53:Get*",
      "condition": null
    },
    {
      "action": "route53:List*",
      "condition": null
    },
    {
      "action": "route53domains:List*",
      "condition": null
    },
    {
      "action": "route53resolver:Get*",
      "condition": null
    },
    {
      "action": "route53resolver:List*",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "s3:ListBucket",
      "condition": null
    },
    {
      "action": "s3:ListMultiRegionAccessPoints",
      "condition": null
    },
    {
      "action": "sagemaker:Describe*",
      "condition": null
    },
    {
      "action": "sagemaker:List*",
      "condition": null
    },
    {
      "action": "sdb:List*",
      "condition": null
    },
    {
      "action": "servicecatalog:List*",
      "condition": null
    },
    {
      "action": "ses:DescribeActiveReceiptRuleSet",
      "condition": null
    },
    {
      "action": "ses:List*",
      "condition": null
    },
    {
      "action": "ses:ListDedicatedIpPools",
      "condition": null
    },
    {
      "action": "shield:List*",
      "condition": null
    },
    {
      "action": "sns:List*",
      "condition": null
    },
    {
      "action": "sqs:GetQueueAttributes",
      "condition": null
    },
    {
      "action": "sqs:GetQueueUrl",
      "condition": null
    },
    {
      "action": "sqs:ListDeadLetterSourceQueues",
      "condition": null
    },
    {
      "action": "sqs:ListMessageMoveTasks",
      "condition": null
    },
    {
      "action": "sqs:ListQueueTags",
      "condition": null
    },
    {
      "action": "sqs:ListQueues",
      "condition": null
    },
    {
      "action": "ssm:ListAssociations",
      "condition": null
    },
    {
      "action": "ssm:ListDocuments",
      "condition": null
    },
    {
      "action": "states:ListActivities",
      "condition": null
    },
    {
      "action": "states:ListStateMachineAliases",
      "condition": null
    },
    {
      "action": "states:ListStateMachineVersions",
      "condition": null
    },
    {
      "action": "states:ListStateMachines",
      "condition": null
    },
    {
      "action": "storagegateway:ListGateways",
      "condition": null
    },
    {
      "action": "storagegateway:ListLocalDisks",
      "condition": null
    },
    {
      "action": "storagegateway:ListVolumeRecoveryPoints",
      "condition": null
    },
    {
      "action": "storagegateway:ListVolumes",
      "condition": null
    },
    {
      "action": "swf:List*",
      "condition": null
    },
    {
      "action": "trustedadvisor:Describe*",
      "condition": null
    },
    {
      "action": "waf-regional:List*",
      "condition": null
    },
    {
      "action": "waf:List*",
      "condition": null
    },
    {
      "action": "wafv2:List*",
      "condition": null
    },
    {
      "action": "workdocs:DescribeAvailableDirectories",
      "condition": null
    },
    {
      "action": "workdocs:DescribeInstances",
      "condition": null
    },
    {
      "action": "workmail:Describe*",
      "condition": null
    },
    {
      "action": "workspaces:Describe*",
      "condition": null
    },
    {
      "action": "apigateway:GET",
      "condition": null
    }
  ],
  "updatedate": "2024-06-10T20:57:11+00:00",
  "version": "v19"
}