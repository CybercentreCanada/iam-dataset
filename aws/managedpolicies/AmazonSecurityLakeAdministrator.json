{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/AmazonSecurityLakeAdministrator",
  "createdate": "2024-02-23T16:01:57+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "securitylake:*",
          "organizations:DescribeOrganization",
          "organizations:ListDelegatedServicesForAccount",
          "organizations:ListAccounts",
          "iam:ListRoles",
          "ram:GetResourceShareAssociations"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowActionsWithAnyResource"
      },
      {
        "Action": [
          "glue:CreateCrawler",
          "glue:StopCrawlerSchedule",
          "lambda:CreateEventSourceMapping",
          "lakeformation:GrantPermissions",
          "lakeformation:ListPermissions",
          "lakeformation:RegisterResource",
          "lakeformation:RevokePermissions",
          "lakeformation:GetDatalakeSettings",
          "events:ListConnections",
          "events:ListApiDestinations",
          "iam:GetRole",
          "iam:ListAttachedRolePolicies",
          "kms:DescribeKey"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowActionsWithAnyResourceViaSecurityLake"
      },
      {
        "Action": [
          "s3:CreateBucket",
          "s3:PutBucketPolicy",
          "s3:PutBucketPublicAccessBlock",
          "s3:PutBucketNotification",
          "s3:PutBucketTagging",
          "s3:PutEncryptionConfiguration",
          "s3:PutBucketVersioning",
          "s3:PutReplicationConfiguration",
          "s3:PutLifecycleConfiguration",
          "s3:ListBucket",
          "s3:PutObject",
          "s3:GetBucketNotification"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::aws-security-data-lake*",
        "Sid": "AllowManagingSecurityLakeS3Buckets"
      },
      {
        "Action": [
          "lambda:CreateFunction"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:lambda:*:*:function:SecurityLake_Glue_Partition_Updater_Lambda*",
          "arn:aws:lambda:*:*:function:AmazonSecurityLake*"
        ],
        "Sid": "AllowLambdaCreateFunction"
      },
      {
        "Action": [
          "lambda:AddPermission"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringEquals": {
            "lambda:Principal": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:lambda:*:*:function:SecurityLake_Glue_Partition_Updater_Lambda*",
          "arn:aws:lambda:*:*:function:AmazonSecurityLake*"
        ],
        "Sid": "AllowLambdaAddPermission"
      },
      {
        "Action": [
          "glue:CreateDatabase",
          "glue:GetDatabase",
          "glue:CreateTable",
          "glue:GetTable"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/amazon_security_lake_glue_db*",
          "arn:aws:glue:*:*:table/amazon_security_lake_glue_db*/*"
        ],
        "Sid": "AllowGlueActions"
      },
      {
        "Action": [
          "events:PutTargets",
          "events:PutRule",
          "events:DescribeRule",
          "events:CreateApiDestination",
          "events:CreateConnection",
          "events:UpdateConnection",
          "events:UpdateApiDestination",
          "events:DeleteConnection",
          "events:DeleteApiDestination",
          "events:ListTargetsByRule",
          "events:RemoveTargets",
          "events:DeleteRule"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:events:*:*:rule/AmazonSecurityLake*",
          "arn:aws:events:*:*:rule/SecurityLake*",
          "arn:aws:events:*:*:api-destination/AmazonSecurityLake*",
          "arn:aws:events:*:*:connection/AmazonSecurityLake*"
        ],
        "Sid": "AllowEventBridgeActions"
      },
      {
        "Action": [
          "sqs:CreateQueue",
          "sqs:SetQueueAttributes",
          "sqs:GetQueueURL",
          "sqs:AddPermission",
          "sqs:GetQueueAttributes",
          "sqs:DeleteQueue"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sqs:*:*:SecurityLake*",
          "arn:aws:sqs:*:*:AmazonSecurityLake*"
        ],
        "Sid": "AllowSQSActions"
      },
      {
        "Action": [
          "kms:CreateGrant"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "kms:GrantOperations": [
              "GenerateDataKey",
              "RetireGrant",
              "Decrypt"
            ]
          },
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringLike": {
            "kms:EncryptionContext:aws:s3:arn": "arn:aws:s3:::aws-security-data-lake*"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:kms:*:*:key/*",
        "Sid": "AllowKmsCmkGrantForSecurityLake"
      },
      {
        "Action": [
          "ram:CreateResourceShare",
          "ram:AssociateResourceShare"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringLikeIfExists": {
            "ram:ResourceArn": [
              "arn:aws:glue:*:*:catalog",
              "arn:aws:glue:*:*:database/amazon_security_lake_glue_db*",
              "arn:aws:glue:*:*:table/amazon_security_lake_glue_db*/*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowEnablingQueryBasedSubscribers"
      },
      {
        "Action": [
          "ram:UpdateResourceShare",
          "ram:GetResourceShares",
          "ram:DisassociateResourceShare",
          "ram:DeleteResourceShare"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringLike": {
            "ram:ResourceShareName": "LakeFormation*"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowConfiguringQueryBasedSubscribers"
      },
      {
        "Action": [
          "secretsmanager:CreateSecret",
          "secretsmanager:GetSecretValue",
          "secretsmanager:PutSecretValue"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:secretsmanager:*:*:secret:events!connection/AmazonSecurityLake-*",
        "Sid": "AllowConfiguringCredentialsForSubscriberNotification"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "lambda.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:data-lake/default"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/service-role/AmazonSecurityLakeMetaStoreManager",
          "arn:aws:iam::*:role/service-role/AmazonSecurityLakeMetaStoreManagerV2"
        ],
        "Sid": "AllowPassRoleForUpdatingGluePartitionsSecLakeArn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringEquals": {
            "iam:PassedToService": "lambda.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": [
              "arn:aws:lambda:*:*:function:SecurityLake_Glue_Partition_Updater_Lambda*",
              "arn:aws:lambda:*:*:function:AmazonSecurityLake*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/service-role/AmazonSecurityLakeMetaStoreManager",
          "arn:aws:iam::*:role/service-role/AmazonSecurityLakeMetaStoreManagerV2"
        ],
        "Sid": "AllowPassRoleForUpdatingGluePartitionsLambdaArn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "s3.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:data-lake/default"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/service-role/AmazonSecurityLakeS3ReplicationRole",
        "Sid": "AllowPassRoleForCrossRegionReplicationSecLakeArn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringEquals": {
            "iam:PassedToService": "s3.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": "arn:aws:s3:::aws-security-data-lake*"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/service-role/AmazonSecurityLakeS3ReplicationRole",
        "Sid": "AllowPassRoleForCrossRegionReplicationS3Arn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "glue.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:data-lake/default"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/service-role/AmazonSecurityLakeCustomDataGlueCrawler*",
        "Sid": "AllowPassRoleForCustomSourceCrawlerSecLakeArn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringEquals": {
            "iam:PassedToService": "glue.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/service-role/AmazonSecurityLakeCustomDataGlueCrawler*",
        "Sid": "AllowPassRoleForCustomSourceCrawlerGlueArn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "events.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:subscriber/*"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/service-role/AmazonSecurityLakeSubscriberEventBridge",
        "Sid": "AllowPassRoleForSubscriberNotificationSecLakeArn"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringEquals": {
            "iam:PassedToService": "events.amazonaws.com"
          },
          "StringLike": {
            "iam:AssociatedResourceARN": "arn:aws:events:*:*:rule/AmazonSecurityLake*"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/service-role/AmazonSecurityLakeSubscriberEventBridge",
        "Sid": "AllowPassRoleForSubscriberNotificationEventsArn"
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:AWSServiceName": [
              "securitylake.amazonaws.com",
              "lakeformation.amazonaws.com",
              "apidestinations.events.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/aws-service-role/securitylake.amazonaws.com/AWSServiceRoleForSecurityLake",
          "arn:aws:iam::*:role/aws-service-role/lakeformation.amazonaws.com/AWSServiceRoleForLakeFormationDataAccess",
          "arn:aws:iam::*:role/aws-service-role/apidestinations.events.amazonaws.com/AWSServiceRoleForAmazonEventBridgeApiDestinations"
        ],
        "Sid": "AllowOnboardingToSecurityLakeDependencies"
      },
      {
        "Action": [
          "iam:CreateRole",
          "iam:PutRolePolicy",
          "iam:DeleteRolePolicy"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          },
          "StringEquals": {
            "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonSecurityLakePermissionsBoundary"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/AmazonSecurityLake*",
        "Sid": "AllowRolePolicyActionsforSubscibersandSources"
      },
      {
        "Action": [
          "iam:PutRolePolicy",
          "iam:GetRolePolicy"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/aws-service-role/lakeformation.amazonaws.com/AWSServiceRoleForLakeFormationDataAccess",
        "Sid": "AllowRegisterS3LocationInLakeFormation"
      },
      {
        "Action": [
          "iam:ListRolePolicies",
          "iam:DeleteRole"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": "securitylake.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/AmazonSecurityLake*",
        "Sid": "AllowIAMActionsByResource"
      },
      {
        "Action": [
          "s3:Get*",
          "s3:List*"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::aws-security-data-lake-*",
        "Sid": "S3ReadAccessToSecurityLakes"
      },
      {
        "Action": [
          "s3:GetObject",
          "s3:GetObjectVersion"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::security-lake-meta-store-manager-*",
        "Sid": "S3ReadAccessToSecurityLakeMetastoreObject"
      },
      {
        "Action": [
          "s3:GetAccountPublicAccessBlock",
          "s3:ListAccessPoints",
          "s3:ListAllMyBuckets"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "S3ResourcelessReadOnly"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AmazonSecurityLakeAdministrator",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "securitylake:*",
      "condition": null
    },
    {
      "action": "organizations:DescribeOrganization",
      "condition": null
    },
    {
      "action": "organizations:ListDelegatedServicesForAccount",
      "condition": null
    },
    {
      "action": "organizations:ListAccounts",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "ram:GetResourceShareAssociations",
      "condition": null
    },
    {
      "action": "glue:CreateCrawler",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "glue:StopCrawlerSchedule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lambda:CreateEventSourceMapping",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lakeformation:GrantPermissions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lakeformation:ListPermissions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lakeformation:RegisterResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lakeformation:RevokePermissions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lakeformation:GetDatalakeSettings",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:ListConnections",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:ListApiDestinations",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:GetRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "kms:DescribeKey",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:CreateBucket",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutBucketPolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutBucketPublicAccessBlock",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutBucketNotification",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutBucketTagging",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutEncryptionConfiguration",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutBucketVersioning",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutReplicationConfiguration",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutLifecycleConfiguration",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:ListBucket",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:PutObject",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:GetBucketNotification",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lambda:CreateFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "lambda:AddPermission",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "lambda:Principal": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "glue:CreateDatabase",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "glue:GetDatabase",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "glue:CreateTable",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "glue:GetTable",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:PutTargets",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:PutRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:DescribeRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:CreateApiDestination",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:CreateConnection",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:UpdateConnection",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:UpdateApiDestination",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:DeleteConnection",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:DeleteApiDestination",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:ListTargetsByRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:RemoveTargets",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "events:DeleteRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "sqs:CreateQueue",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "sqs:SetQueueAttributes",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "sqs:GetQueueURL",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "sqs:AddPermission",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "sqs:GetQueueAttributes",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "sqs:DeleteQueue",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "kms:CreateGrant",
      "condition": {
        "ForAllValues:StringEquals": {
          "kms:GrantOperations": [
            "GenerateDataKey",
            "RetireGrant",
            "Decrypt"
          ]
        },
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLike": {
          "kms:EncryptionContext:aws:s3:arn": "arn:aws:s3:::aws-security-data-lake*"
        }
      }
    },
    {
      "action": "ram:CreateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLikeIfExists": {
          "ram:ResourceArn": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/amazon_security_lake_glue_db*",
            "arn:aws:glue:*:*:table/amazon_security_lake_glue_db*/*"
          ]
        }
      }
    },
    {
      "action": "ram:AssociateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLikeIfExists": {
          "ram:ResourceArn": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/amazon_security_lake_glue_db*",
            "arn:aws:glue:*:*:table/amazon_security_lake_glue_db*/*"
          ]
        }
      }
    },
    {
      "action": "ram:UpdateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLike": {
          "ram:ResourceShareName": "LakeFormation*"
        }
      }
    },
    {
      "action": "ram:GetResourceShares",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLike": {
          "ram:ResourceShareName": "LakeFormation*"
        }
      }
    },
    {
      "action": "ram:DisassociateResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLike": {
          "ram:ResourceShareName": "LakeFormation*"
        }
      }
    },
    {
      "action": "ram:DeleteResourceShare",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringLike": {
          "ram:ResourceShareName": "LakeFormation*"
        }
      }
    },
    {
      "action": "secretsmanager:CreateSecret",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "secretsmanager:GetSecretValue",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "secretsmanager:PutSecretValue",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": "lambda.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:data-lake/default"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PassedToService": "lambda.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": [
            "arn:aws:lambda:*:*:function:SecurityLake_Glue_Partition_Updater_Lambda*",
            "arn:aws:lambda:*:*:function:AmazonSecurityLake*"
          ]
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": "s3.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:data-lake/default"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PassedToService": "s3.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": "arn:aws:s3:::aws-security-data-lake*"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": "glue.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:data-lake/default"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PassedToService": "glue.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": "events.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": "arn:aws:securitylake:*:*:subscriber/*"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PassedToService": "events.amazonaws.com"
        },
        "StringLike": {
          "iam:AssociatedResourceARN": "arn:aws:events:*:*:rule/AmazonSecurityLake*"
        }
      }
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringLike": {
          "iam:AWSServiceName": [
            "securitylake.amazonaws.com",
            "lakeformation.amazonaws.com",
            "apidestinations.events.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:CreateRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonSecurityLakePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:PutRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonSecurityLakePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:DeleteRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        },
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonSecurityLakePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:PutRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:DeleteRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": "securitylake.amazonaws.com"
        }
      }
    },
    {
      "action": "s3:Get*",
      "condition": null
    },
    {
      "action": "s3:List*",
      "condition": null
    },
    {
      "action": "s3:GetObject",
      "condition": null
    },
    {
      "action": "s3:GetObjectVersion",
      "condition": null
    },
    {
      "action": "s3:GetAccountPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:ListAccessPoints",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    }
  ],
  "updatedate": "2024-02-23T16:01:57+00:00",
  "version": "v2"
}