{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSAuditManagerServiceRolePolicy",
  "createdate": "2024-06-10T20:28:09+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "acm:GetAccountConfiguration",
          "acm:ListCertificates",
          "autoscaling:DescribeAutoScalingGroups",
          "backup:ListBackupPlans",
          "backup:ListRecoveryPointsByResource",
          "bedrock:GetCustomModel",
          "bedrock:GetFoundationModel",
          "bedrock:GetModelCustomizationJob",
          "bedrock:GetModelInvocationLoggingConfiguration",
          "bedrock:ListCustomModels",
          "bedrock:ListFoundationModels",
          "bedrock:ListModelCustomizationJobs",
          "cloudfront:GetDistribution",
          "cloudfront:GetDistributionConfig",
          "cloudfront:ListDistributions",
          "cloudtrail:GetTrail",
          "cloudtrail:ListTrails",
          "cloudtrail:DescribeTrails",
          "cloudtrail:LookupEvents",
          "cloudwatch:DescribeAlarms",
          "cloudwatch:DescribeAlarmsForMetric",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:ListMetrics",
          "cognito-idp:DescribeUserPool",
          "config:DescribeConfigRules",
          "config:DescribeDeliveryChannels",
          "config:ListDiscoveredResources",
          "directconnect:DescribeDirectConnectGateways",
          "directconnect:DescribeVirtualGateways",
          "dynamodb:DescribeContinuousBackups",
          "dynamodb:DescribeBackup",
          "dynamodb:DescribeTableReplicaAutoScaling",
          "dynamodb:DescribeTable",
          "dynamodb:ListBackups",
          "dynamodb:ListGlobalTables",
          "dynamodb:ListTables",
          "ec2:DescribeInstanceCreditSpecifications",
          "ec2:DescribeInstanceAttribute",
          "ec2:DescribeSecurityGroupRules",
          "ec2:DescribeVpcEndpointConnections",
          "ec2:DescribeVpcEndpointServiceConfigurations",
          "ec2:GetLaunchTemplateData",
          "ec2:DescribeAddresses",
          "ec2:DescribeCustomerGateways",
          "ec2:DescribeEgressOnlyInternetGateways",
          "ec2:DescribeFlowLogs",
          "ec2:DescribeInstances",
          "ec2:DescribeInternetGateways",
          "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
          "ec2:DescribeLocalGateways",
          "ec2:DescribeLocalGatewayVirtualInterfaces",
          "ec2:DescribeNatGateways",
          "ec2:DescribeNetworkAcls",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSnapshots",
          "ec2:DescribeTransitGateways",
          "ec2:DescribeVolumes",
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeVpcPeeringConnections",
          "ec2:DescribeVpcs",
          "ec2:DescribeVpnConnections",
          "ec2:DescribeVpnGateways",
          "ec2:GetEbsDefaultKmsKeyId",
          "ec2:GetEbsEncryptionByDefault",
          "ecs:DescribeClusters",
          "eks:DescribeAddonVersions",
          "elasticache:DescribeCacheClusters",
          "elasticache:DescribeServiceUpdates",
          "elasticfilesystem:DescribeAccessPoints",
          "elasticfilesystem:DescribeFileSystems",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeSslPolicies",
          "elasticloadbalancing:DescribeTargetGroups",
          "elasticmapreduce:ListClusters",
          "elasticmapreduce:ListSecurityConfigurations",
          "events:DescribeRule",
          "events:ListConnections",
          "events:ListEventBuses",
          "events:ListEventSources",
          "events:ListRules",
          "firehose:ListDeliveryStreams",
          "fsx:DescribeFileSystems",
          "guardduty:ListDetectors",
          "iam:GenerateCredentialReport",
          "iam:GetAccountAuthorizationDetails",
          "iam:GetAccessKeyLastUsed",
          "iam:GetCredentialReport",
          "iam:GetGroupPolicy",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:GetRolePolicy",
          "iam:GetUser",
          "iam:GetUserPolicy",
          "iam:GetAccountPasswordPolicy",
          "iam:GetAccountSummary",
          "iam:ListAttachedGroupPolicies",
          "iam:ListAttachedUserPolicies",
          "iam:ListEntitiesForPolicy",
          "iam:ListGroupsForUser",
          "iam:ListGroupPolicies",
          "iam:ListGroups",
          "iam:ListOpenIdConnectProviders",
          "iam:ListPolicies",
          "iam:ListRolePolicies",
          "iam:ListRoles",
          "iam:ListSamlProviders",
          "iam:ListUserPolicies",
          "iam:ListUsers",
          "iam:ListVirtualMFADevices",
          "iam:ListPolicyVersions",
          "iam:ListAccessKeys",
          "iam:ListAttachedRolePolicies",
          "iam:ListMfaDeviceTags",
          "iam:ListMfaDevices",
          "kafka:ListClusters",
          "kafka:ListKafkaVersions",
          "kinesis:ListStreams",
          "kms:DescribeKey",
          "kms:GetKeyPolicy",
          "kms:GetKeyRotationStatus",
          "kms:ListGrants",
          "kms:ListKeyPolicies",
          "kms:ListKeys",
          "lambda:ListFunctions",
          "license-manager:ListAssociationsForLicenseConfiguration",
          "license-manager:ListLicenseConfigurations",
          "license-manager:ListUsageForLicenseConfiguration",
          "logs:DescribeDestinations",
          "logs:DescribeExportTasks",
          "logs:DescribeLogGroups",
          "logs:DescribeMetricFilters",
          "logs:DescribeResourcePolicies",
          "logs:FilterLogEvents",
          "logs:GetDataProtectionPolicy",
          "es:DescribeDomains",
          "es:DescribeDomain",
          "es:DescribeDomainConfig",
          "es:ListDomainNames",
          "organizations:DescribeOrganization",
          "organizations:DescribePolicy",
          "rds:DescribeCertificates",
          "rds:DescribeDBClusterEndpoints",
          "rds:DescribeDBClusterParameterGroups",
          "rds:DescribeDBInstances",
          "rds:DescribeDBSecurityGroups",
          "rds:DescribeDBClusters",
          "rds:DescribeDBInstanceAutomatedBackups",
          "redshift:DescribeClusters",
          "redshift:DescribeClusterSnapshots",
          "redshift:DescribeLoggingStatus",
          "route53:GetQueryLoggingConfig",
          "sagemaker:DescribeAlgorithm",
          "sagemaker:DescribeFlowDefinition",
          "sagemaker:DescribeHumanTaskUi",
          "sagemaker:DescribeModelBiasJobDefinition",
          "sagemaker:DescribeModelCard",
          "sagemaker:DescribeModelQualityJobDefinition",
          "sagemaker:DescribeDomain",
          "sagemaker:DescribeEndpoint",
          "sagemaker:DescribeEndpointConfig",
          "sagemaker:DescribeLabelingJob",
          "sagemaker:DescribeModel",
          "sagemaker:DescribeTrainingJob",
          "sagemaker:DescribeUserProfile",
          "sagemaker:ListAlgorithms",
          "sagemaker:ListDomains",
          "sagemaker:ListEndpoints",
          "sagemaker:ListEndpointConfigs",
          "sagemaker:ListFlowDefinitions",
          "sagemaker:ListHumanTaskUis",
          "sagemaker:ListLabelingJobs",
          "sagemaker:ListModels",
          "sagemaker:ListModelBiasJobDefinitions",
          "sagemaker:ListModelCards",
          "sagemaker:ListModelQualityJobDefinitions",
          "sagemaker:ListMonitoringAlerts",
          "sagemaker:ListMonitoringSchedules",
          "sagemaker:ListTrainingJobs",
          "sagemaker:ListUserProfiles",
          "s3:GetBucketPublicAccessBlock",
          "s3:GetBucketVersioning",
          "s3:GetEncryptionConfiguration",
          "s3:GetLifecycleConfiguration",
          "s3:ListAllMyBuckets",
          "secretsmanager:DescribeSecret",
          "secretsmanager:ListSecrets",
          "securityhub:DescribeStandards",
          "sns:ListTagsForResource",
          "sns:ListTopics",
          "sqs:ListQueues",
          "waf-regional:GetRule",
          "waf-regional:GetWebAcl",
          "waf:GetRule",
          "waf:GetRuleGroup",
          "waf:ListActivatedRulesInRuleGroup",
          "waf:ListWebAcls",
          "wafv2:ListWebAcls",
          "waf-regional:GetLoggingConfiguration",
          "waf-regional:ListRuleGroups",
          "waf-regional:ListSubscribedRuleGroups",
          "waf-regional:ListWebACLs",
          "waf-regional:ListRules",
          "waf:ListRuleGroups",
          "waf:ListRules"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "APIsAccess"
      },
      {
        "Action": [
          "s3:GetBucketAcl",
          "s3:GetBucketLogging",
          "s3:GetBucketOwnershipControls",
          "s3:GetBucketPolicy",
          "s3:GetBucketTagging"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": [
              "${aws:PrincipalAccount}"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "S3Access"
      },
      {
        "Action": [
          "apigateway:GET"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": [
              "${aws:PrincipalAccount}"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:apigateway:*::/restapis",
          "arn:aws:apigateway:*::/restapis/*/stages/*",
          "arn:aws:apigateway:*::/restapis/*/stages"
        ],
        "Sid": "APIGatewayAccess"
      },
      {
        "Action": [
          "events:PutRule"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "events:source": [
              "aws.securityhub"
            ]
          },
          "Null": {
            "events:source": "false"
          },
          "StringEquals": {
            "events:detail-type": "Security Hub Findings - Imported"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver",
        "Sid": "CreateEventsAccess"
      },
      {
        "Action": [
          "events:DeleteRule",
          "events:DescribeRule",
          "events:EnableRule",
          "events:DisableRule",
          "events:ListTargetsByRule",
          "events:PutTargets",
          "events:RemoveTargets"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver",
        "Sid": "EventsAccess"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AWSAuditManagerServiceRolePolicy",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "acm:GetAccountConfiguration",
      "condition": null
    },
    {
      "action": "acm:ListCertificates",
      "condition": null
    },
    {
      "action": "autoscaling:DescribeAutoScalingGroups",
      "condition": null
    },
    {
      "action": "backup:ListBackupPlans",
      "condition": null
    },
    {
      "action": "backup:ListRecoveryPointsByResource",
      "condition": null
    },
    {
      "action": "bedrock:GetCustomModel",
      "condition": null
    },
    {
      "action": "bedrock:GetFoundationModel",
      "condition": null
    },
    {
      "action": "bedrock:GetModelCustomizationJob",
      "condition": null
    },
    {
      "action": "bedrock:GetModelInvocationLoggingConfiguration",
      "condition": null
    },
    {
      "action": "bedrock:ListCustomModels",
      "condition": null
    },
    {
      "action": "bedrock:ListFoundationModels",
      "condition": null
    },
    {
      "action": "bedrock:ListModelCustomizationJobs",
      "condition": null
    },
    {
      "action": "cloudfront:GetDistribution",
      "condition": null
    },
    {
      "action": "cloudfront:GetDistributionConfig",
      "condition": null
    },
    {
      "action": "cloudfront:ListDistributions",
      "condition": null
    },
    {
      "action": "cloudtrail:GetTrail",
      "condition": null
    },
    {
      "action": "cloudtrail:ListTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:DescribeTrails",
      "condition": null
    },
    {
      "action": "cloudtrail:LookupEvents",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarmsForMetric",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricStatistics",
      "condition": null
    },
    {
      "action": "cloudwatch:ListMetrics",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPool",
      "condition": null
    },
    {
      "action": "config:DescribeConfigRules",
      "condition": null
    },
    {
      "action": "config:DescribeDeliveryChannels",
      "condition": null
    },
    {
      "action": "config:ListDiscoveredResources",
      "condition": null
    },
    {
      "action": "directconnect:DescribeDirectConnectGateways",
      "condition": null
    },
    {
      "action": "directconnect:DescribeVirtualGateways",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeContinuousBackups",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeBackup",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTableReplicaAutoScaling",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": null
    },
    {
      "action": "dynamodb:ListBackups",
      "condition": null
    },
    {
      "action": "dynamodb:ListGlobalTables",
      "condition": null
    },
    {
      "action": "dynamodb:ListTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeInstanceCreditSpecifications",
      "condition": null
    },
    {
      "action": "ec2:DescribeInstanceAttribute",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroupRules",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcEndpointConnections",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcEndpointServiceConfigurations",
      "condition": null
    },
    {
      "action": "ec2:GetLaunchTemplateData",
      "condition": null
    },
    {
      "action": "ec2:DescribeAddresses",
      "condition": null
    },
    {
      "action": "ec2:DescribeCustomerGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeEgressOnlyInternetGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeFlowLogs",
      "condition": null
    },
    {
      "action": "ec2:DescribeInstances",
      "condition": null
    },
    {
      "action": "ec2:DescribeInternetGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeLocalGatewayVirtualInterfaces",
      "condition": null
    },
    {
      "action": "ec2:DescribeNatGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetworkAcls",
      "condition": null
    },
    {
      "action": "ec2:DescribeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeSnapshots",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeVolumes",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcEndpoints",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcPeeringConnections",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcs",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpnConnections",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpnGateways",
      "condition": null
    },
    {
      "action": "ec2:GetEbsDefaultKmsKeyId",
      "condition": null
    },
    {
      "action": "ec2:GetEbsEncryptionByDefault",
      "condition": null
    },
    {
      "action": "ecs:DescribeClusters",
      "condition": null
    },
    {
      "action": "eks:DescribeAddonVersions",
      "condition": null
    },
    {
      "action": "elasticache:DescribeCacheClusters",
      "condition": null
    },
    {
      "action": "elasticache:DescribeServiceUpdates",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeAccessPoints",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeSslPolicies",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroups",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListClusters",
      "condition": null
    },
    {
      "action": "elasticmapreduce:ListSecurityConfigurations",
      "condition": null
    },
    {
      "action": "events:DescribeRule",
      "condition": null
    },
    {
      "action": "events:ListConnections",
      "condition": null
    },
    {
      "action": "events:ListEventBuses",
      "condition": null
    },
    {
      "action": "events:ListEventSources",
      "condition": null
    },
    {
      "action": "events:ListRules",
      "condition": null
    },
    {
      "action": "firehose:ListDeliveryStreams",
      "condition": null
    },
    {
      "action": "fsx:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "guardduty:ListDetectors",
      "condition": null
    },
    {
      "action": "iam:GenerateCredentialReport",
      "condition": null
    },
    {
      "action": "iam:GetAccountAuthorizationDetails",
      "condition": null
    },
    {
      "action": "iam:GetAccessKeyLastUsed",
      "condition": null
    },
    {
      "action": "iam:GetCredentialReport",
      "condition": null
    },
    {
      "action": "iam:GetGroupPolicy",
      "condition": null
    },
    {
      "action": "iam:GetPolicy",
      "condition": null
    },
    {
      "action": "iam:GetPolicyVersion",
      "condition": null
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": null
    },
    {
      "action": "iam:GetUser",
      "condition": null
    },
    {
      "action": "iam:GetUserPolicy",
      "condition": null
    },
    {
      "action": "iam:GetAccountPasswordPolicy",
      "condition": null
    },
    {
      "action": "iam:GetAccountSummary",
      "condition": null
    },
    {
      "action": "iam:ListAttachedGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:ListAttachedUserPolicies",
      "condition": null
    },
    {
      "action": "iam:ListEntitiesForPolicy",
      "condition": null
    },
    {
      "action": "iam:ListGroupsForUser",
      "condition": null
    },
    {
      "action": "iam:ListGroupPolicies",
      "condition": null
    },
    {
      "action": "iam:ListGroups",
      "condition": null
    },
    {
      "action": "iam:ListOpenIdConnectProviders",
      "condition": null
    },
    {
      "action": "iam:ListPolicies",
      "condition": null
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "iam:ListSamlProviders",
      "condition": null
    },
    {
      "action": "iam:ListUserPolicies",
      "condition": null
    },
    {
      "action": "iam:ListUsers",
      "condition": null
    },
    {
      "action": "iam:ListVirtualMFADevices",
      "condition": null
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": null
    },
    {
      "action": "iam:ListAccessKeys",
      "condition": null
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListMfaDeviceTags",
      "condition": null
    },
    {
      "action": "iam:ListMfaDevices",
      "condition": null
    },
    {
      "action": "kafka:ListClusters",
      "condition": null
    },
    {
      "action": "kafka:ListKafkaVersions",
      "condition": null
    },
    {
      "action": "kinesis:ListStreams",
      "condition": null
    },
    {
      "action": "kms:DescribeKey",
      "condition": null
    },
    {
      "action": "kms:GetKeyPolicy",
      "condition": null
    },
    {
      "action": "kms:GetKeyRotationStatus",
      "condition": null
    },
    {
      "action": "kms:ListGrants",
      "condition": null
    },
    {
      "action": "kms:ListKeyPolicies",
      "condition": null
    },
    {
      "action": "kms:ListKeys",
      "condition": null
    },
    {
      "action": "lambda:ListFunctions",
      "condition": null
    },
    {
      "action": "license-manager:ListAssociationsForLicenseConfiguration",
      "condition": null
    },
    {
      "action": "license-manager:ListLicenseConfigurations",
      "condition": null
    },
    {
      "action": "license-manager:ListUsageForLicenseConfiguration",
      "condition": null
    },
    {
      "action": "logs:DescribeDestinations",
      "condition": null
    },
    {
      "action": "logs:DescribeExportTasks",
      "condition": null
    },
    {
      "action": "logs:DescribeLogGroups",
      "condition": null
    },
    {
      "action": "logs:DescribeMetricFilters",
      "condition": null
    },
    {
      "action": "logs:DescribeResourcePolicies",
      "condition": null
    },
    {
      "action": "logs:FilterLogEvents",
      "condition": null
    },
    {
      "action": "logs:GetDataProtectionPolicy",
      "condition": null
    },
    {
      "action": "es:DescribeDomains",
      "condition": null
    },
    {
      "action": "es:DescribeDomain",
      "condition": null
    },
    {
      "action": "es:DescribeDomainConfig",
      "condition": null
    },
    {
      "action": "es:ListDomainNames",
      "condition": null
    },
    {
      "action": "organizations:DescribeOrganization",
      "condition": null
    },
    {
      "action": "organizations:DescribePolicy",
      "condition": null
    },
    {
      "action": "rds:DescribeCertificates",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusterEndpoints",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusterParameterGroups",
      "condition": null
    },
    {
      "action": "rds:DescribeDBInstances",
      "condition": null
    },
    {
      "action": "rds:DescribeDBSecurityGroups",
      "condition": null
    },
    {
      "action": "rds:DescribeDBClusters",
      "condition": null
    },
    {
      "action": "rds:DescribeDBInstanceAutomatedBackups",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusters",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusterSnapshots",
      "condition": null
    },
    {
      "action": "redshift:DescribeLoggingStatus",
      "condition": null
    },
    {
      "action": "route53:GetQueryLoggingConfig",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeAlgorithm",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeFlowDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeHumanTaskUi",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModelBiasJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModelCard",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModelQualityJobDefinition",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeDomain",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeEndpoint",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeEndpointConfig",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeLabelingJob",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeModel",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeTrainingJob",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeUserProfile",
      "condition": null
    },
    {
      "action": "sagemaker:ListAlgorithms",
      "condition": null
    },
    {
      "action": "sagemaker:ListDomains",
      "condition": null
    },
    {
      "action": "sagemaker:ListEndpoints",
      "condition": null
    },
    {
      "action": "sagemaker:ListEndpointConfigs",
      "condition": null
    },
    {
      "action": "sagemaker:ListFlowDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListHumanTaskUis",
      "condition": null
    },
    {
      "action": "sagemaker:ListLabelingJobs",
      "condition": null
    },
    {
      "action": "sagemaker:ListModels",
      "condition": null
    },
    {
      "action": "sagemaker:ListModelBiasJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListModelCards",
      "condition": null
    },
    {
      "action": "sagemaker:ListModelQualityJobDefinitions",
      "condition": null
    },
    {
      "action": "sagemaker:ListMonitoringAlerts",
      "condition": null
    },
    {
      "action": "sagemaker:ListMonitoringSchedules",
      "condition": null
    },
    {
      "action": "sagemaker:ListTrainingJobs",
      "condition": null
    },
    {
      "action": "sagemaker:ListUserProfiles",
      "condition": null
    },
    {
      "action": "s3:GetBucketPublicAccessBlock",
      "condition": null
    },
    {
      "action": "s3:GetBucketVersioning",
      "condition": null
    },
    {
      "action": "s3:GetEncryptionConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "secretsmanager:DescribeSecret",
      "condition": null
    },
    {
      "action": "secretsmanager:ListSecrets",
      "condition": null
    },
    {
      "action": "securityhub:DescribeStandards",
      "condition": null
    },
    {
      "action": "sns:ListTagsForResource",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "sqs:ListQueues",
      "condition": null
    },
    {
      "action": "waf-regional:GetRule",
      "condition": null
    },
    {
      "action": "waf-regional:GetWebAcl",
      "condition": null
    },
    {
      "action": "waf:GetRule",
      "condition": null
    },
    {
      "action": "waf:GetRuleGroup",
      "condition": null
    },
    {
      "action": "waf:ListActivatedRulesInRuleGroup",
      "condition": null
    },
    {
      "action": "waf:ListWebAcls",
      "condition": null
    },
    {
      "action": "wafv2:ListWebAcls",
      "condition": null
    },
    {
      "action": "waf-regional:GetLoggingConfiguration",
      "condition": null
    },
    {
      "action": "waf-regional:ListRuleGroups",
      "condition": null
    },
    {
      "action": "waf-regional:ListSubscribedRuleGroups",
      "condition": null
    },
    {
      "action": "waf-regional:ListWebACLs",
      "condition": null
    },
    {
      "action": "waf-regional:ListRules",
      "condition": null
    },
    {
      "action": "waf:ListRuleGroups",
      "condition": null
    },
    {
      "action": "waf:ListRules",
      "condition": null
    },
    {
      "action": "s3:GetBucketAcl",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": [
            "${aws:PrincipalAccount}"
          ]
        }
      }
    },
    {
      "action": "s3:GetBucketLogging",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": [
            "${aws:PrincipalAccount}"
          ]
        }
      }
    },
    {
      "action": "s3:GetBucketOwnershipControls",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": [
            "${aws:PrincipalAccount}"
          ]
        }
      }
    },
    {
      "action": "s3:GetBucketPolicy",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": [
            "${aws:PrincipalAccount}"
          ]
        }
      }
    },
    {
      "action": "s3:GetBucketTagging",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": [
            "${aws:PrincipalAccount}"
          ]
        }
      }
    },
    {
      "action": "apigateway:GET",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": [
            "${aws:PrincipalAccount}"
          ]
        }
      }
    },
    {
      "action": "events:PutRule",
      "condition": {
        "ForAllValues:StringEquals": {
          "events:source": [
            "aws.securityhub"
          ]
        },
        "Null": {
          "events:source": "false"
        },
        "StringEquals": {
          "events:detail-type": "Security Hub Findings - Imported"
        }
      }
    },
    {
      "action": "events:DeleteRule",
      "condition": null
    },
    {
      "action": "events:DescribeRule",
      "condition": null
    },
    {
      "action": "events:EnableRule",
      "condition": null
    },
    {
      "action": "events:DisableRule",
      "condition": null
    },
    {
      "action": "events:ListTargetsByRule",
      "condition": null
    },
    {
      "action": "events:PutTargets",
      "condition": null
    },
    {
      "action": "events:RemoveTargets",
      "condition": null
    }
  ],
  "updatedate": "2024-06-10T20:28:09+00:00",
  "version": "v9"
}