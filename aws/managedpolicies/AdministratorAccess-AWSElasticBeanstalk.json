{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk",
  "createdate": "2023-03-23T23:45:23+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "acm:Describe*",
          "acm:List*",
          "autoscaling:Describe*",
          "cloudformation:Describe*",
          "cloudformation:Estimate*",
          "cloudformation:Get*",
          "cloudformation:List*",
          "cloudformation:Validate*",
          "cloudtrail:LookupEvents",
          "cloudwatch:DescribeAlarms",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:ListMetrics",
          "codecommit:Get*",
          "codecommit:UploadArchive",
          "ec2:AllocateAddress",
          "ec2:AssociateAddress",
          "ec2:AuthorizeSecurityGroup*",
          "ec2:CreateLaunchTemplate*",
          "ec2:CreateSecurityGroup",
          "ec2:CreateTags",
          "ec2:DeleteLaunchTemplate*",
          "ec2:DeleteSecurityGroup",
          "ec2:DeleteTags",
          "ec2:Describe*",
          "ec2:DisassociateAddress",
          "ec2:ReleaseAddress",
          "ec2:RevokeSecurityGroup*",
          "ecs:CreateCluster",
          "ecs:DeRegisterTaskDefinition",
          "ecs:Describe*",
          "ecs:List*",
          "ecs:RegisterTaskDefinition",
          "elasticbeanstalk:*",
          "elasticloadbalancing:Describe*",
          "iam:GetRole",
          "iam:ListAttachedRolePolicies",
          "iam:ListInstanceProfiles",
          "iam:ListRolePolicies",
          "iam:ListRoles",
          "iam:ListServerCertificates",
          "logs:Describe*",
          "rds:Describe*",
          "s3:ListAllMyBuckets",
          "sns:ListSubscriptionsByTopic",
          "sns:ListTopics",
          "sqs:ListQueues"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "autoscaling:*"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*",
          "arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/eb-*",
          "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*",
          "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/eb-*"
        ]
      },
      {
        "Action": [
          "cloudformation:CancelUpdateStack",
          "cloudformation:ContinueUpdateRollback",
          "cloudformation:CreateStack",
          "cloudformation:DeleteStack",
          "cloudformation:GetTemplate",
          "cloudformation:ListStackResources",
          "cloudformation:SignalResource",
          "cloudformation:TagResource",
          "cloudformation:UntagResource",
          "cloudformation:UpdateStack"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:cloudformation:*:*:stack/awseb-*",
          "arn:aws:cloudformation:*:*:stack/eb-*"
        ]
      },
      {
        "Action": [
          "cloudwatch:DeleteAlarms",
          "cloudwatch:PutMetricAlarm"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:cloudwatch:*:*:alarm:awseb-*",
          "arn:aws:cloudwatch:*:*:alarm:eb-*"
        ]
      },
      {
        "Action": [
          "codebuild:BatchGetBuilds",
          "codebuild:CreateProject",
          "codebuild:DeleteProject",
          "codebuild:StartBuild"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:codebuild:*:*:project/Elastic-Beanstalk-*"
      },
      {
        "Action": [
          "dynamodb:CreateTable",
          "dynamodb:DeleteTable",
          "dynamodb:DescribeTable",
          "dynamodb:TagResource"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:dynamodb:*:*:table/awseb-e-*",
          "arn:aws:dynamodb:*:*:table/eb-*"
        ]
      },
      {
        "Action": [
          "ec2:RebootInstances",
          "ec2:TerminateInstances"
        ],
        "Condition": {
          "StringLike": {
            "ec2:ResourceTag/aws:cloudformation:stack-id": [
              "arn:aws:cloudformation:*:*:stack/awseb-e-*",
              "arn:aws:cloudformation:*:*:stack/eb-*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:instance/*"
      },
      {
        "Action": [
          "ec2:RunInstances"
        ],
        "Condition": {
          "ArnLike": {
            "ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "ecs:DeleteCluster"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:ecs:*:*:cluster/awseb-*"
      },
      {
        "Action": [
          "elasticloadbalancing:*Rule",
          "elasticloadbalancing:*Tags",
          "elasticloadbalancing:SetRulePriorities",
          "elasticloadbalancing:SetSecurityGroups"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
          "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
          "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*/*"
        ]
      },
      {
        "Action": [
          "elasticloadbalancing:*"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*",
          "arn:aws:elasticloadbalancing:*:*:targetgroup/eb-*",
          "arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-*",
          "arn:aws:elasticloadbalancing:*:*:loadbalancer/eb-*",
          "arn:aws:elasticloadbalancing:*:*:loadbalancer/*/awseb-*/*",
          "arn:aws:elasticloadbalancing:*:*:loadbalancer/*/eb-*/*",
          "arn:aws:elasticloadbalancing:*:*:listener/awseb-*",
          "arn:aws:elasticloadbalancing:*:*:listener/eb-*",
          "arn:aws:elasticloadbalancing:*:*:listener/*/awseb-*/*/*",
          "arn:aws:elasticloadbalancing:*:*:listener/*/eb-*/*/*",
          "arn:aws:elasticloadbalancing:*:*:listener-rule/app/awseb-*/*/*/*",
          "arn:aws:elasticloadbalancing:*:*:listener-rule/app/eb-*/*/*/*"
        ]
      },
      {
        "Action": [
          "iam:AddRoleToInstanceProfile",
          "iam:CreateInstanceProfile",
          "iam:CreateRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/aws-elasticbeanstalk*",
          "arn:aws:iam::*:instance-profile/aws-elasticbeanstalk*"
        ]
      },
      {
        "Action": [
          "iam:AttachRolePolicy"
        ],
        "Condition": {
          "StringLike": {
            "iam:PolicyArn": [
              "arn:aws:iam::aws:policy/AWSElasticBeanstalk*",
              "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalk*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/aws-elasticbeanstalk*"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": [
              "elasticbeanstalk.amazonaws.com",
              "ec2.amazonaws.com",
              "ec2.amazonaws.com.cn",
              "autoscaling.amazonaws.com",
              "elasticloadbalancing.amazonaws.com",
              "ecs.amazonaws.com",
              "cloudformation.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/*"
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:AWSServiceName": [
              "autoscaling.amazonaws.com",
              "elasticbeanstalk.amazonaws.com",
              "elasticloadbalancing.amazonaws.com",
              "managedupdates.elasticbeanstalk.amazonaws.com",
              "maintenance.elasticbeanstalk.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling*",
          "arn:aws:iam::*:role/aws-service-role/elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*",
          "arn:aws:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing*",
          "arn:aws:iam::*:role/aws-service-role/managedupdates.elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*",
          "arn:aws:iam::*:role/aws-service-role/maintenance.elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*"
        ]
      },
      {
        "Action": [
          "logs:CreateLogGroup",
          "logs:DeleteLogGroup",
          "logs:PutRetentionPolicy"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*"
      },
      {
        "Action": [
          "rds:*DBSubnetGroup",
          "rds:AuthorizeDBSecurityGroupIngress",
          "rds:CreateDBInstance",
          "rds:CreateDBSecurityGroup",
          "rds:DeleteDBInstance",
          "rds:DeleteDBSecurityGroup",
          "rds:ModifyDBInstance",
          "rds:RestoreDBInstanceFromDBSnapshot"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:rds:*:*:db:*",
          "arn:aws:rds:*:*:secgrp:awseb-e-*",
          "arn:aws:rds:*:*:secgrp:eb-*",
          "arn:aws:rds:*:*:snapshot:*",
          "arn:aws:rds:*:*:subgrp:awseb-e-*",
          "arn:aws:rds:*:*:subgrp:eb-*"
        ]
      },
      {
        "Action": [
          "s3:Delete*",
          "s3:Get*",
          "s3:Put*"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::elasticbeanstalk-*/*"
      },
      {
        "Action": [
          "s3:CreateBucket",
          "s3:GetBucket*",
          "s3:ListBucket",
          "s3:PutBucketPolicy"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::elasticbeanstalk-*"
      },
      {
        "Action": [
          "sns:CreateTopic",
          "sns:DeleteTopic",
          "sns:GetTopicAttributes",
          "sns:Publish",
          "sns:SetTopicAttributes",
          "sns:Subscribe",
          "sns:Unsubscribe"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:sns:*:*:ElasticBeanstalkNotifications-*"
      },
      {
        "Action": [
          "sqs:*QueueAttributes",
          "sqs:CreateQueue",
          "sqs:DeleteQueue",
          "sqs:SendMessage",
          "sqs:TagQueue"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sqs:*:*:awseb-e-*",
          "arn:aws:sqs:*:*:eb-*"
        ]
      },
      {
        "Action": [
          "ecs:TagResource"
        ],
        "Condition": {
          "StringEquals": {
            "ecs:CreateAction": [
              "CreateCluster",
              "RegisterTaskDefinition"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AdministratorAccess-AWSElasticBeanstalk",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "acm:Describe*",
      "condition": null
    },
    {
      "action": "acm:List*",
      "condition": null
    },
    {
      "action": "autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "cloudformation:Describe*",
      "condition": null
    },
    {
      "action": "cloudformation:Estimate*",
      "condition": null
    },
    {
      "action": "cloudformation:Get*",
      "condition": null
    },
    {
      "action": "cloudformation:List*",
      "condition": null
    },
    {
      "action": "cloudformation:Validate*",
      "condition": null
    },
    {
      "action": "cloudtrail:LookupEvents",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricStatistics",
      "condition": null
    },
    {
      "action": "cloudwatch:ListMetrics",
      "condition": null
    },
    {
      "action": "codecommit:Get*",
      "condition": null
    },
    {
      "action": "codecommit:UploadArchive",
      "condition": null
    },
    {
      "action": "ec2:AllocateAddress",
      "condition": null
    },
    {
      "action": "ec2:AssociateAddress",
      "condition": null
    },
    {
      "action": "ec2:AuthorizeSecurityGroup*",
      "condition": null
    },
    {
      "action": "ec2:CreateLaunchTemplate*",
      "condition": null
    },
    {
      "action": "ec2:CreateSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:CreateTags",
      "condition": null
    },
    {
      "action": "ec2:DeleteLaunchTemplate*",
      "condition": null
    },
    {
      "action": "ec2:DeleteSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:DeleteTags",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:DisassociateAddress",
      "condition": null
    },
    {
      "action": "ec2:ReleaseAddress",
      "condition": null
    },
    {
      "action": "ec2:RevokeSecurityGroup*",
      "condition": null
    },
    {
      "action": "ecs:CreateCluster",
      "condition": null
    },
    {
      "action": "ecs:DeRegisterTaskDefinition",
      "condition": null
    },
    {
      "action": "ecs:Describe*",
      "condition": null
    },
    {
      "action": "ecs:List*",
      "condition": null
    },
    {
      "action": "ecs:RegisterTaskDefinition",
      "condition": null
    },
    {
      "action": "elasticbeanstalk:*",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:Describe*",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListInstanceProfiles",
      "condition": null
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "iam:ListServerCertificates",
      "condition": null
    },
    {
      "action": "logs:Describe*",
      "condition": null
    },
    {
      "action": "rds:Describe*",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "sns:ListSubscriptionsByTopic",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "sqs:ListQueues",
      "condition": null
    },
    {
      "action": "autoscaling:*",
      "condition": null
    },
    {
      "action": "cloudformation:CancelUpdateStack",
      "condition": null
    },
    {
      "action": "cloudformation:ContinueUpdateRollback",
      "condition": null
    },
    {
      "action": "cloudformation:CreateStack",
      "condition": null
    },
    {
      "action": "cloudformation:DeleteStack",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplate",
      "condition": null
    },
    {
      "action": "cloudformation:ListStackResources",
      "condition": null
    },
    {
      "action": "cloudformation:SignalResource",
      "condition": null
    },
    {
      "action": "cloudformation:TagResource",
      "condition": null
    },
    {
      "action": "cloudformation:UntagResource",
      "condition": null
    },
    {
      "action": "cloudformation:UpdateStack",
      "condition": null
    },
    {
      "action": "cloudwatch:DeleteAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:PutMetricAlarm",
      "condition": null
    },
    {
      "action": "codebuild:BatchGetBuilds",
      "condition": null
    },
    {
      "action": "codebuild:CreateProject",
      "condition": null
    },
    {
      "action": "codebuild:DeleteProject",
      "condition": null
    },
    {
      "action": "codebuild:StartBuild",
      "condition": null
    },
    {
      "action": "dynamodb:CreateTable",
      "condition": null
    },
    {
      "action": "dynamodb:DeleteTable",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": null
    },
    {
      "action": "dynamodb:TagResource",
      "condition": null
    },
    {
      "action": "ec2:RebootInstances",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/aws:cloudformation:stack-id": [
            "arn:aws:cloudformation:*:*:stack/awseb-e-*",
            "arn:aws:cloudformation:*:*:stack/eb-*"
          ]
        }
      }
    },
    {
      "action": "ec2:TerminateInstances",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/aws:cloudformation:stack-id": [
            "arn:aws:cloudformation:*:*:stack/awseb-e-*",
            "arn:aws:cloudformation:*:*:stack/eb-*"
          ]
        }
      }
    },
    {
      "action": "ec2:RunInstances",
      "condition": {
        "ArnLike": {
          "ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
        }
      }
    },
    {
      "action": "ecs:DeleteCluster",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:*Rule",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:*Tags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:SetRulePriorities",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:SetSecurityGroups",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:*",
      "condition": null
    },
    {
      "action": "iam:AddRoleToInstanceProfile",
      "condition": null
    },
    {
      "action": "iam:CreateInstanceProfile",
      "condition": null
    },
    {
      "action": "iam:CreateRole",
      "condition": null
    },
    {
      "action": "iam:AttachRolePolicy",
      "condition": {
        "StringLike": {
          "iam:PolicyArn": [
            "arn:aws:iam::aws:policy/AWSElasticBeanstalk*",
            "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalk*"
          ]
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": [
            "elasticbeanstalk.amazonaws.com",
            "ec2.amazonaws.com",
            "ec2.amazonaws.com.cn",
            "autoscaling.amazonaws.com",
            "elasticloadbalancing.amazonaws.com",
            "ecs.amazonaws.com",
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringLike": {
          "iam:AWSServiceName": [
            "autoscaling.amazonaws.com",
            "elasticbeanstalk.amazonaws.com",
            "elasticloadbalancing.amazonaws.com",
            "managedupdates.elasticbeanstalk.amazonaws.com",
            "maintenance.elasticbeanstalk.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "logs:CreateLogGroup",
      "condition": null
    },
    {
      "action": "logs:DeleteLogGroup",
      "condition": null
    },
    {
      "action": "logs:PutRetentionPolicy",
      "condition": null
    },
    {
      "action": "rds:*DBSubnetGroup",
      "condition": null
    },
    {
      "action": "rds:AuthorizeDBSecurityGroupIngress",
      "condition": null
    },
    {
      "action": "rds:CreateDBInstance",
      "condition": null
    },
    {
      "action": "rds:CreateDBSecurityGroup",
      "condition": null
    },
    {
      "action": "rds:DeleteDBInstance",
      "condition": null
    },
    {
      "action": "rds:DeleteDBSecurityGroup",
      "condition": null
    },
    {
      "action": "rds:ModifyDBInstance",
      "condition": null
    },
    {
      "action": "rds:RestoreDBInstanceFromDBSnapshot",
      "condition": null
    },
    {
      "action": "s3:Delete*",
      "condition": null
    },
    {
      "action": "s3:Get*",
      "condition": null
    },
    {
      "action": "s3:Put*",
      "condition": null
    },
    {
      "action": "s3:CreateBucket",
      "condition": null
    },
    {
      "action": "s3:GetBucket*",
      "condition": null
    },
    {
      "action": "s3:ListBucket",
      "condition": null
    },
    {
      "action": "s3:PutBucketPolicy",
      "condition": null
    },
    {
      "action": "sns:CreateTopic",
      "condition": null
    },
    {
      "action": "sns:DeleteTopic",
      "condition": null
    },
    {
      "action": "sns:GetTopicAttributes",
      "condition": null
    },
    {
      "action": "sns:Publish",
      "condition": null
    },
    {
      "action": "sns:SetTopicAttributes",
      "condition": null
    },
    {
      "action": "sns:Subscribe",
      "condition": null
    },
    {
      "action": "sns:Unsubscribe",
      "condition": null
    },
    {
      "action": "sqs:*QueueAttributes",
      "condition": null
    },
    {
      "action": "sqs:CreateQueue",
      "condition": null
    },
    {
      "action": "sqs:DeleteQueue",
      "condition": null
    },
    {
      "action": "sqs:SendMessage",
      "condition": null
    },
    {
      "action": "sqs:TagQueue",
      "condition": null
    },
    {
      "action": "ecs:TagResource",
      "condition": {
        "StringEquals": {
          "ecs:CreateAction": [
            "CreateCluster",
            "RegisterTaskDefinition"
          ]
        }
      }
    }
  ],
  "updatedate": "2023-03-23T23:45:23+00:00",
  "version": "v3"
}