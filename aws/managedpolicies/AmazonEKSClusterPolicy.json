{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
  "createdate": "2023-02-07T17:33:23+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "autoscaling:DescribeAutoScalingGroups",
          "autoscaling:UpdateAutoScalingGroup",
          "ec2:AttachVolume",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:CreateRoute",
          "ec2:CreateSecurityGroup",
          "ec2:CreateTags",
          "ec2:CreateVolume",
          "ec2:DeleteRoute",
          "ec2:DeleteSecurityGroup",
          "ec2:DeleteVolume",
          "ec2:DescribeInstances",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSubnets",
          "ec2:DescribeVolumes",
          "ec2:DescribeVolumesModifications",
          "ec2:DescribeVpcs",
          "ec2:DescribeDhcpOptions",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DescribeAvailabilityZones",
          "ec2:DetachVolume",
          "ec2:ModifyInstanceAttribute",
          "ec2:ModifyVolume",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:DescribeAccountAttributes",
          "ec2:DescribeAddresses",
          "ec2:DescribeInternetGateways",
          "elasticloadbalancing:AddTags",
          "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
          "elasticloadbalancing:AttachLoadBalancerToSubnets",
          "elasticloadbalancing:ConfigureHealthCheck",
          "elasticloadbalancing:CreateListener",
          "elasticloadbalancing:CreateLoadBalancer",
          "elasticloadbalancing:CreateLoadBalancerListeners",
          "elasticloadbalancing:CreateLoadBalancerPolicy",
          "elasticloadbalancing:CreateTargetGroup",
          "elasticloadbalancing:DeleteListener",
          "elasticloadbalancing:DeleteLoadBalancer",
          "elasticloadbalancing:DeleteLoadBalancerListeners",
          "elasticloadbalancing:DeleteTargetGroup",
          "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
          "elasticloadbalancing:DeregisterTargets",
          "elasticloadbalancing:DescribeListeners",
          "elasticloadbalancing:DescribeLoadBalancerAttributes",
          "elasticloadbalancing:DescribeLoadBalancerPolicies",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeTargetGroupAttributes",
          "elasticloadbalancing:DescribeTargetGroups",
          "elasticloadbalancing:DescribeTargetHealth",
          "elasticloadbalancing:DetachLoadBalancerFromSubnets",
          "elasticloadbalancing:ModifyListener",
          "elasticloadbalancing:ModifyLoadBalancerAttributes",
          "elasticloadbalancing:ModifyTargetGroup",
          "elasticloadbalancing:ModifyTargetGroupAttributes",
          "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
          "elasticloadbalancing:RegisterTargets",
          "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
          "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
          "kms:DescribeKey"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AmazonEKSClusterPolicy",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "autoscaling:DescribeAutoScalingGroups",
      "condition": null
    },
    {
      "action": "autoscaling:UpdateAutoScalingGroup",
      "condition": null
    },
    {
      "action": "ec2:AttachVolume",
      "condition": null
    },
    {
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": null
    },
    {
      "action": "ec2:CreateRoute",
      "condition": null
    },
    {
      "action": "ec2:CreateSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:CreateTags",
      "condition": null
    },
    {
      "action": "ec2:CreateVolume",
      "condition": null
    },
    {
      "action": "ec2:DeleteRoute",
      "condition": null
    },
    {
      "action": "ec2:DeleteSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:DeleteVolume",
      "condition": null
    },
    {
      "action": "ec2:DescribeInstances",
      "condition": null
    },
    {
      "action": "ec2:DescribeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeSubnets",
      "condition": null
    },
    {
      "action": "ec2:DescribeVolumes",
      "condition": null
    },
    {
      "action": "ec2:DescribeVolumesModifications",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcs",
      "condition": null
    },
    {
      "action": "ec2:DescribeDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetworkInterfaces",
      "condition": null
    },
    {
      "action": "ec2:DescribeAvailabilityZones",
      "condition": null
    },
    {
      "action": "ec2:DetachVolume",
      "condition": null
    },
    {
      "action": "ec2:ModifyInstanceAttribute",
      "condition": null
    },
    {
      "action": "ec2:ModifyVolume",
      "condition": null
    },
    {
      "action": "ec2:RevokeSecurityGroupIngress",
      "condition": null
    },
    {
      "action": "ec2:DescribeAccountAttributes",
      "condition": null
    },
    {
      "action": "ec2:DescribeAddresses",
      "condition": null
    },
    {
      "action": "ec2:DescribeInternetGateways",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:AddTags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:AttachLoadBalancerToSubnets",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:ConfigureHealthCheck",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateListener",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateLoadBalancerListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateLoadBalancerPolicy",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateTargetGroup",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteListener",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteLoadBalancerListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteTargetGroup",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeregisterTargets",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancerAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancerPolicies",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroupAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroups",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetHealth",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DetachLoadBalancerFromSubnets",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:ModifyListener",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:ModifyLoadBalancerAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:ModifyTargetGroup",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:ModifyTargetGroupAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:RegisterTargets",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
      "condition": null
    },
    {
      "action": "kms:DescribeKey",
      "condition": null
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringEquals": {
          "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
        }
      }
    }
  ],
  "updatedate": "2023-02-07T17:33:23+00:00",
  "version": "v6"
}