{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/AmazonECS_FullAccess",
  "createdate": "2023-01-04T16:26:05+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "application-autoscaling:DeleteScalingPolicy",
          "application-autoscaling:DeregisterScalableTarget",
          "application-autoscaling:DescribeScalableTargets",
          "application-autoscaling:DescribeScalingActivities",
          "application-autoscaling:DescribeScalingPolicies",
          "application-autoscaling:PutScalingPolicy",
          "application-autoscaling:RegisterScalableTarget",
          "appmesh:DescribeVirtualGateway",
          "appmesh:DescribeVirtualNode",
          "appmesh:ListMeshes",
          "appmesh:ListVirtualGateways",
          "appmesh:ListVirtualNodes",
          "autoscaling:CreateAutoScalingGroup",
          "autoscaling:CreateLaunchConfiguration",
          "autoscaling:DeleteAutoScalingGroup",
          "autoscaling:DeleteLaunchConfiguration",
          "autoscaling:Describe*",
          "autoscaling:UpdateAutoScalingGroup",
          "cloudformation:CreateStack",
          "cloudformation:DeleteStack",
          "cloudformation:DescribeStack*",
          "cloudformation:UpdateStack",
          "cloudwatch:DeleteAlarms",
          "cloudwatch:DescribeAlarms",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:PutMetricAlarm",
          "codedeploy:BatchGetApplicationRevisions",
          "codedeploy:BatchGetApplications",
          "codedeploy:BatchGetDeploymentGroups",
          "codedeploy:BatchGetDeployments",
          "codedeploy:ContinueDeployment",
          "codedeploy:CreateApplication",
          "codedeploy:CreateDeployment",
          "codedeploy:CreateDeploymentGroup",
          "codedeploy:GetApplication",
          "codedeploy:GetApplicationRevision",
          "codedeploy:GetDeployment",
          "codedeploy:GetDeploymentConfig",
          "codedeploy:GetDeploymentGroup",
          "codedeploy:GetDeploymentTarget",
          "codedeploy:ListApplicationRevisions",
          "codedeploy:ListApplications",
          "codedeploy:ListDeploymentConfigs",
          "codedeploy:ListDeploymentGroups",
          "codedeploy:ListDeployments",
          "codedeploy:ListDeploymentTargets",
          "codedeploy:RegisterApplicationRevision",
          "codedeploy:StopDeployment",
          "ec2:AssociateRouteTable",
          "ec2:AttachInternetGateway",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:CancelSpotFleetRequests",
          "ec2:CreateInternetGateway",
          "ec2:CreateLaunchTemplate",
          "ec2:CreateRoute",
          "ec2:CreateRouteTable",
          "ec2:CreateSecurityGroup",
          "ec2:CreateSubnet",
          "ec2:CreateVpc",
          "ec2:DeleteLaunchTemplate",
          "ec2:DeleteSubnet",
          "ec2:DeleteVpc",
          "ec2:Describe*",
          "ec2:DetachInternetGateway",
          "ec2:DisassociateRouteTable",
          "ec2:ModifySubnetAttribute",
          "ec2:ModifyVpcAttribute",
          "ec2:RequestSpotFleet",
          "ec2:RunInstances",
          "ecs:*",
          "elasticfilesystem:DescribeAccessPoints",
          "elasticfilesystem:DescribeFileSystems",
          "elasticloadbalancing:CreateListener",
          "elasticloadbalancing:CreateLoadBalancer",
          "elasticloadbalancing:CreateRule",
          "elasticloadbalancing:CreateTargetGroup",
          "elasticloadbalancing:DeleteListener",
          "elasticloadbalancing:DeleteLoadBalancer",
          "elasticloadbalancing:DeleteRule",
          "elasticloadbalancing:DeleteTargetGroup",
          "elasticloadbalancing:DescribeListeners",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeRules",
          "elasticloadbalancing:DescribeTargetGroups",
          "events:DeleteRule",
          "events:DescribeRule",
          "events:ListRuleNamesByTarget",
          "events:ListTargetsByRule",
          "events:PutRule",
          "events:PutTargets",
          "events:RemoveTargets",
          "fsx:DescribeFileSystems",
          "iam:ListAttachedRolePolicies",
          "iam:ListInstanceProfiles",
          "iam:ListRoles",
          "lambda:ListFunctions",
          "logs:CreateLogGroup",
          "logs:DescribeLogGroups",
          "logs:FilterLogEvents",
          "route53:CreateHostedZone",
          "route53:DeleteHostedZone",
          "route53:GetHealthCheck",
          "route53:GetHostedZone",
          "route53:ListHostedZonesByName",
          "servicediscovery:CreatePrivateDnsNamespace",
          "servicediscovery:CreateService",
          "servicediscovery:DeleteService",
          "servicediscovery:GetNamespace",
          "servicediscovery:GetOperation",
          "servicediscovery:GetService",
          "servicediscovery:ListNamespaces",
          "servicediscovery:ListServices",
          "servicediscovery:UpdateService",
          "sns:ListTopics"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "ssm:GetParameter",
          "ssm:GetParameters",
          "ssm:GetParametersByPath"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:ssm:*:*:parameter/aws/service/ecs*"
      },
      {
        "Action": [
          "ec2:DeleteInternetGateway",
          "ec2:DeleteRoute",
          "ec2:DeleteRouteTable",
          "ec2:DeleteSecurityGroup"
        ],
        "Condition": {
          "StringLike": {
            "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:PassedToService": "ecs-tasks.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:PassedToService": [
              "ec2.amazonaws.com",
              "ec2.amazonaws.com.cn"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/ecsInstanceRole*"
        ]
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:PassedToService": [
              "application-autoscaling.amazonaws.com",
              "application-autoscaling.amazonaws.com.cn"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/ecsAutoscaleRole*"
        ]
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:AWSServiceName": [
              "autoscaling.amazonaws.com",
              "ecs.amazonaws.com",
              "ecs.application-autoscaling.amazonaws.com",
              "spot.amazonaws.com",
              "spotfleet.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "elasticloadbalancing:AddTags"
        ],
        "Condition": {
          "StringEquals": {
            "elasticloadbalancing:CreateAction": [
              "CreateTargetGroup",
              "CreateRule",
              "CreateListener",
              "CreateLoadBalancer"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AmazonECS_FullAccess",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "application-autoscaling:DeleteScalingPolicy",
      "condition": null
    },
    {
      "action": "application-autoscaling:DeregisterScalableTarget",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalableTargets",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalingActivities",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalingPolicies",
      "condition": null
    },
    {
      "action": "application-autoscaling:PutScalingPolicy",
      "condition": null
    },
    {
      "action": "application-autoscaling:RegisterScalableTarget",
      "condition": null
    },
    {
      "action": "appmesh:DescribeVirtualGateway",
      "condition": null
    },
    {
      "action": "appmesh:DescribeVirtualNode",
      "condition": null
    },
    {
      "action": "appmesh:ListMeshes",
      "condition": null
    },
    {
      "action": "appmesh:ListVirtualGateways",
      "condition": null
    },
    {
      "action": "appmesh:ListVirtualNodes",
      "condition": null
    },
    {
      "action": "autoscaling:CreateAutoScalingGroup",
      "condition": null
    },
    {
      "action": "autoscaling:CreateLaunchConfiguration",
      "condition": null
    },
    {
      "action": "autoscaling:DeleteAutoScalingGroup",
      "condition": null
    },
    {
      "action": "autoscaling:DeleteLaunchConfiguration",
      "condition": null
    },
    {
      "action": "autoscaling:Describe*",
      "condition": null
    },
    {
      "action": "autoscaling:UpdateAutoScalingGroup",
      "condition": null
    },
    {
      "action": "cloudformation:CreateStack",
      "condition": null
    },
    {
      "action": "cloudformation:DeleteStack",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStack*",
      "condition": null
    },
    {
      "action": "cloudformation:UpdateStack",
      "condition": null
    },
    {
      "action": "cloudwatch:DeleteAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricStatistics",
      "condition": null
    },
    {
      "action": "cloudwatch:PutMetricAlarm",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetApplicationRevisions",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetApplications",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetDeploymentGroups",
      "condition": null
    },
    {
      "action": "codedeploy:BatchGetDeployments",
      "condition": null
    },
    {
      "action": "codedeploy:ContinueDeployment",
      "condition": null
    },
    {
      "action": "codedeploy:CreateApplication",
      "condition": null
    },
    {
      "action": "codedeploy:CreateDeployment",
      "condition": null
    },
    {
      "action": "codedeploy:CreateDeploymentGroup",
      "condition": null
    },
    {
      "action": "codedeploy:GetApplication",
      "condition": null
    },
    {
      "action": "codedeploy:GetApplicationRevision",
      "condition": null
    },
    {
      "action": "codedeploy:GetDeployment",
      "condition": null
    },
    {
      "action": "codedeploy:GetDeploymentConfig",
      "condition": null
    },
    {
      "action": "codedeploy:GetDeploymentGroup",
      "condition": null
    },
    {
      "action": "codedeploy:GetDeploymentTarget",
      "condition": null
    },
    {
      "action": "codedeploy:ListApplicationRevisions",
      "condition": null
    },
    {
      "action": "codedeploy:ListApplications",
      "condition": null
    },
    {
      "action": "codedeploy:ListDeploymentConfigs",
      "condition": null
    },
    {
      "action": "codedeploy:ListDeploymentGroups",
      "condition": null
    },
    {
      "action": "codedeploy:ListDeployments",
      "condition": null
    },
    {
      "action": "codedeploy:ListDeploymentTargets",
      "condition": null
    },
    {
      "action": "codedeploy:RegisterApplicationRevision",
      "condition": null
    },
    {
      "action": "codedeploy:StopDeployment",
      "condition": null
    },
    {
      "action": "ec2:AssociateRouteTable",
      "condition": null
    },
    {
      "action": "ec2:AttachInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": null
    },
    {
      "action": "ec2:CancelSpotFleetRequests",
      "condition": null
    },
    {
      "action": "ec2:CreateInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:CreateLaunchTemplate",
      "condition": null
    },
    {
      "action": "ec2:CreateRoute",
      "condition": null
    },
    {
      "action": "ec2:CreateRouteTable",
      "condition": null
    },
    {
      "action": "ec2:CreateSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:CreateSubnet",
      "condition": null
    },
    {
      "action": "ec2:CreateVpc",
      "condition": null
    },
    {
      "action": "ec2:DeleteLaunchTemplate",
      "condition": null
    },
    {
      "action": "ec2:DeleteSubnet",
      "condition": null
    },
    {
      "action": "ec2:DeleteVpc",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:DetachInternetGateway",
      "condition": null
    },
    {
      "action": "ec2:DisassociateRouteTable",
      "condition": null
    },
    {
      "action": "ec2:ModifySubnetAttribute",
      "condition": null
    },
    {
      "action": "ec2:ModifyVpcAttribute",
      "condition": null
    },
    {
      "action": "ec2:RequestSpotFleet",
      "condition": null
    },
    {
      "action": "ec2:RunInstances",
      "condition": null
    },
    {
      "action": "ecs:*",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeAccessPoints",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateListener",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateRule",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:CreateTargetGroup",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteListener",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteLoadBalancer",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteRule",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DeleteTargetGroup",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeRules",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroups",
      "condition": null
    },
    {
      "action": "events:DeleteRule",
      "condition": null
    },
    {
      "action": "events:DescribeRule",
      "condition": null
    },
    {
      "action": "events:ListRuleNamesByTarget",
      "condition": null
    },
    {
      "action": "events:ListTargetsByRule",
      "condition": null
    },
    {
      "action": "events:PutRule",
      "condition": null
    },
    {
      "action": "events:PutTargets",
      "condition": null
    },
    {
      "action": "events:RemoveTargets",
      "condition": null
    },
    {
      "action": "fsx:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": null
    },
    {
      "action": "iam:ListInstanceProfiles",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "lambda:ListFunctions",
      "condition": null
    },
    {
      "action": "logs:CreateLogGroup",
      "condition": null
    },
    {
      "action": "logs:DescribeLogGroups",
      "condition": null
    },
    {
      "action": "logs:FilterLogEvents",
      "condition": null
    },
    {
      "action": "route53:CreateHostedZone",
      "condition": null
    },
    {
      "action": "route53:DeleteHostedZone",
      "condition": null
    },
    {
      "action": "route53:GetHealthCheck",
      "condition": null
    },
    {
      "action": "route53:GetHostedZone",
      "condition": null
    },
    {
      "action": "route53:ListHostedZonesByName",
      "condition": null
    },
    {
      "action": "servicediscovery:CreatePrivateDnsNamespace",
      "condition": null
    },
    {
      "action": "servicediscovery:CreateService",
      "condition": null
    },
    {
      "action": "servicediscovery:DeleteService",
      "condition": null
    },
    {
      "action": "servicediscovery:GetNamespace",
      "condition": null
    },
    {
      "action": "servicediscovery:GetOperation",
      "condition": null
    },
    {
      "action": "servicediscovery:GetService",
      "condition": null
    },
    {
      "action": "servicediscovery:ListNamespaces",
      "condition": null
    },
    {
      "action": "servicediscovery:ListServices",
      "condition": null
    },
    {
      "action": "servicediscovery:UpdateService",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "ssm:GetParameter",
      "condition": null
    },
    {
      "action": "ssm:GetParameters",
      "condition": null
    },
    {
      "action": "ssm:GetParametersByPath",
      "condition": null
    },
    {
      "action": "ec2:DeleteInternetGateway",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
        }
      }
    },
    {
      "action": "ec2:DeleteRoute",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
        }
      }
    },
    {
      "action": "ec2:DeleteRouteTable",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
        }
      }
    },
    {
      "action": "ec2:DeleteSecurityGroup",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringLike": {
          "iam:PassedToService": "ecs-tasks.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringLike": {
          "iam:PassedToService": [
            "ec2.amazonaws.com",
            "ec2.amazonaws.com.cn"
          ]
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringLike": {
          "iam:PassedToService": [
            "application-autoscaling.amazonaws.com",
            "application-autoscaling.amazonaws.com.cn"
          ]
        }
      }
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringLike": {
          "iam:AWSServiceName": [
            "autoscaling.amazonaws.com",
            "ecs.amazonaws.com",
            "ecs.application-autoscaling.amazonaws.com",
            "spot.amazonaws.com",
            "spotfleet.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "elasticloadbalancing:AddTags",
      "condition": {
        "StringEquals": {
          "elasticloadbalancing:CreateAction": [
            "CreateTargetGroup",
            "CreateRule",
            "CreateListener",
            "CreateLoadBalancer"
          ]
        }
      }
    }
  ],
  "updatedate": "2023-01-04T16:26:05+00:00",
  "version": "v20"
}