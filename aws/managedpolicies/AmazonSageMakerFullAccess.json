{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
  "createdate": "2024-03-29T17:35:49+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "sagemaker:*",
          "sagemaker-geospatial:*"
        ],
        "Effect": "Allow",
        "NotResource": [
          "arn:aws:sagemaker:*:*:domain/*",
          "arn:aws:sagemaker:*:*:user-profile/*",
          "arn:aws:sagemaker:*:*:app/*",
          "arn:aws:sagemaker:*:*:space/*",
          "arn:aws:sagemaker:*:*:flow-definition/*"
        ],
        "Sid": "AllowAllNonAdminSageMakerActions"
      },
      {
        "Action": [
          "sagemaker:AddTags"
        ],
        "Condition": {
          "StringEquals": {
            "sagemaker:TaggingAction": "CreateSpace"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sagemaker:*:*:space/*"
        ],
        "Sid": "AllowAddTagsForSpace"
      },
      {
        "Action": [
          "sagemaker:AddTags"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sagemaker:*:*:app/*"
        ],
        "Sid": "AllowAddTagsForApp"
      },
      {
        "Action": [
          "sagemaker:CreatePresignedDomainUrl",
          "sagemaker:DescribeDomain",
          "sagemaker:ListDomains",
          "sagemaker:DescribeUserProfile",
          "sagemaker:ListUserProfiles",
          "sagemaker:DescribeSpace",
          "sagemaker:ListSpaces",
          "sagemaker:DescribeApp",
          "sagemaker:ListApps"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowStudioActions"
      },
      {
        "Action": [
          "sagemaker:CreateApp",
          "sagemaker:DeleteApp"
        ],
        "Condition": {
          "Null": {
            "sagemaker:OwnerUserProfileArn": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:sagemaker:*:*:app/*/*/*/*",
        "Sid": "AllowAppActionsForUserProfile"
      },
      {
        "Action": [
          "sagemaker:CreateApp",
          "sagemaker:DeleteApp"
        ],
        "Condition": {
          "StringEquals": {
            "sagemaker:SpaceSharingType": [
              "Shared"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*",
        "Sid": "AllowAppActionsForSharedSpaces"
      },
      {
        "Action": [
          "sagemaker:CreateSpace",
          "sagemaker:UpdateSpace",
          "sagemaker:DeleteSpace"
        ],
        "Condition": {
          "Null": {
            "sagemaker:OwnerUserProfileArn": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:sagemaker:*:*:space/${sagemaker:DomainId}/*",
        "Sid": "AllowMutatingActionsOnSharedSpacesWithoutOwner"
      },
      {
        "Action": [
          "sagemaker:CreateSpace",
          "sagemaker:UpdateSpace",
          "sagemaker:DeleteSpace"
        ],
        "Condition": {
          "ArnLike": {
            "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
          },
          "StringEquals": {
            "sagemaker:SpaceSharingType": [
              "Private",
              "Shared"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:sagemaker:*:*:space/${sagemaker:DomainId}/*",
        "Sid": "RestrictMutatingActionsOnSpacesToOwnerUserProfile"
      },
      {
        "Action": [
          "sagemaker:CreateApp",
          "sagemaker:DeleteApp"
        ],
        "Condition": {
          "ArnLike": {
            "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
          },
          "StringEquals": {
            "sagemaker:SpaceSharingType": [
              "Private"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*",
        "Sid": "RestrictMutatingActionsOnPrivateSpaceAppsToOwnerUserProfile"
      },
      {
        "Action": [
          "sagemaker:*"
        ],
        "Condition": {
          "StringEqualsIfExists": {
            "sagemaker:WorkteamType": [
              "private-crowd",
              "vendor-crowd"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sagemaker:*:*:flow-definition/*"
        ],
        "Sid": "AllowFlowDefinitionActions"
      },
      {
        "Action": [
          "application-autoscaling:DeleteScalingPolicy",
          "application-autoscaling:DeleteScheduledAction",
          "application-autoscaling:DeregisterScalableTarget",
          "application-autoscaling:DescribeScalableTargets",
          "application-autoscaling:DescribeScalingActivities",
          "application-autoscaling:DescribeScalingPolicies",
          "application-autoscaling:DescribeScheduledActions",
          "application-autoscaling:PutScalingPolicy",
          "application-autoscaling:PutScheduledAction",
          "application-autoscaling:RegisterScalableTarget",
          "aws-marketplace:ViewSubscriptions",
          "cloudformation:GetTemplateSummary",
          "cloudwatch:DeleteAlarms",
          "cloudwatch:DescribeAlarms",
          "cloudwatch:GetMetricData",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:ListMetrics",
          "cloudwatch:PutMetricAlarm",
          "cloudwatch:PutMetricData",
          "codecommit:BatchGetRepositories",
          "codecommit:CreateRepository",
          "codecommit:GetRepository",
          "codecommit:List*",
          "cognito-idp:AdminAddUserToGroup",
          "cognito-idp:AdminCreateUser",
          "cognito-idp:AdminDeleteUser",
          "cognito-idp:AdminDisableUser",
          "cognito-idp:AdminEnableUser",
          "cognito-idp:AdminRemoveUserFromGroup",
          "cognito-idp:CreateGroup",
          "cognito-idp:CreateUserPool",
          "cognito-idp:CreateUserPoolClient",
          "cognito-idp:CreateUserPoolDomain",
          "cognito-idp:DescribeUserPool",
          "cognito-idp:DescribeUserPoolClient",
          "cognito-idp:List*",
          "cognito-idp:UpdateUserPool",
          "cognito-idp:UpdateUserPoolClient",
          "ec2:CreateNetworkInterface",
          "ec2:CreateNetworkInterfacePermission",
          "ec2:CreateVpcEndpoint",
          "ec2:DeleteNetworkInterface",
          "ec2:DeleteNetworkInterfacePermission",
          "ec2:DescribeDhcpOptions",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSubnets",
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeVpcs",
          "ecr:BatchCheckLayerAvailability",
          "ecr:BatchGetImage",
          "ecr:CreateRepository",
          "ecr:Describe*",
          "ecr:GetAuthorizationToken",
          "ecr:GetDownloadUrlForLayer",
          "ecr:StartImageScan",
          "elastic-inference:Connect",
          "elasticfilesystem:DescribeFileSystems",
          "elasticfilesystem:DescribeMountTargets",
          "fsx:DescribeFileSystems",
          "glue:CreateJob",
          "glue:DeleteJob",
          "glue:GetJob*",
          "glue:GetTable*",
          "glue:GetWorkflowRun",
          "glue:ResetJobBookmark",
          "glue:StartJobRun",
          "glue:StartWorkflowRun",
          "glue:UpdateJob",
          "groundtruthlabeling:*",
          "iam:ListRoles",
          "kms:DescribeKey",
          "kms:ListAliases",
          "lambda:ListFunctions",
          "logs:CreateLogDelivery",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:DeleteLogDelivery",
          "logs:Describe*",
          "logs:GetLogDelivery",
          "logs:GetLogEvents",
          "logs:ListLogDeliveries",
          "logs:PutLogEvents",
          "logs:PutResourcePolicy",
          "logs:UpdateLogDelivery",
          "robomaker:CreateSimulationApplication",
          "robomaker:DescribeSimulationApplication",
          "robomaker:DeleteSimulationApplication",
          "robomaker:CreateSimulationJob",
          "robomaker:DescribeSimulationJob",
          "robomaker:CancelSimulationJob",
          "secretsmanager:ListSecrets",
          "servicecatalog:Describe*",
          "servicecatalog:List*",
          "servicecatalog:ScanProvisionedProducts",
          "servicecatalog:SearchProducts",
          "servicecatalog:SearchProvisionedProducts",
          "sns:ListTopics",
          "tag:GetResources"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowAWSServiceActions"
      },
      {
        "Action": [
          "ecr:SetRepositoryPolicy",
          "ecr:CompleteLayerUpload",
          "ecr:BatchDeleteImage",
          "ecr:UploadLayerPart",
          "ecr:DeleteRepositoryPolicy",
          "ecr:InitiateLayerUpload",
          "ecr:DeleteRepository",
          "ecr:PutImage"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ecr:*:*:repository/*sagemaker*"
        ],
        "Sid": "AllowECRActions"
      },
      {
        "Action": [
          "codecommit:GitPull",
          "codecommit:GitPush"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:codecommit:*:*:*sagemaker*",
          "arn:aws:codecommit:*:*:*SageMaker*",
          "arn:aws:codecommit:*:*:*Sagemaker*"
        ],
        "Sid": "AllowCodeCommitActions"
      },
      {
        "Action": [
          "codebuild:BatchGetBuilds",
          "codebuild:StartBuild"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:codebuild:*:*:project/sagemaker*",
          "arn:aws:codebuild:*:*:build/*"
        ],
        "Sid": "AllowCodeBuildActions"
      },
      {
        "Action": [
          "states:DescribeExecution",
          "states:GetExecutionHistory",
          "states:StartExecution",
          "states:StopExecution",
          "states:UpdateStateMachine"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:states:*:*:statemachine:*sagemaker*",
          "arn:aws:states:*:*:execution:*sagemaker*:*"
        ],
        "Sid": "AllowStepFunctionsActions"
      },
      {
        "Action": [
          "secretsmanager:DescribeSecret",
          "secretsmanager:GetSecretValue",
          "secretsmanager:CreateSecret"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
        ],
        "Sid": "AllowSecretManagerActions"
      },
      {
        "Action": [
          "secretsmanager:DescribeSecret",
          "secretsmanager:GetSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "secretsmanager:ResourceTag/SageMaker": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowReadOnlySecretManagerActions"
      },
      {
        "Action": [
          "servicecatalog:ProvisionProduct"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowServiceCatalogProvisionProduct"
      },
      {
        "Action": [
          "servicecatalog:TerminateProvisionedProduct",
          "servicecatalog:UpdateProvisionedProduct"
        ],
        "Condition": {
          "StringEquals": {
            "servicecatalog:userLevel": "self"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowServiceCatalogTerminateUpdateProvisionProduct"
      },
      {
        "Action": [
          "s3:GetObject",
          "s3:PutObject",
          "s3:DeleteObject",
          "s3:AbortMultipartUpload"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3:::*SageMaker*",
          "arn:aws:s3:::*Sagemaker*",
          "arn:aws:s3:::*sagemaker*",
          "arn:aws:s3:::*aws-glue*"
        ],
        "Sid": "AllowS3ObjectActions"
      },
      {
        "Action": [
          "s3:GetObject"
        ],
        "Condition": {
          "StringEqualsIgnoreCase": {
            "s3:ExistingObjectTag/SageMaker": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3:::*"
        ],
        "Sid": "AllowS3GetObjectWithSageMakerExistingObjectTag"
      },
      {
        "Action": [
          "s3:GetObject"
        ],
        "Condition": {
          "StringEquals": {
            "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3:::*"
        ],
        "Sid": "AllowS3GetObjectWithServiceCatalogProvisioningExistingObjectTag"
      },
      {
        "Action": [
          "s3:CreateBucket",
          "s3:GetBucketLocation",
          "s3:ListBucket",
          "s3:ListAllMyBuckets",
          "s3:GetBucketCors",
          "s3:PutBucketCors"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowS3BucketActions"
      },
      {
        "Action": [
          "s3:GetBucketAcl",
          "s3:PutObjectAcl"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3:::*SageMaker*",
          "arn:aws:s3:::*Sagemaker*",
          "arn:aws:s3:::*sagemaker*"
        ],
        "Sid": "AllowS3BucketACL"
      },
      {
        "Action": [
          "lambda:InvokeFunction"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:lambda:*:*:function:*SageMaker*",
          "arn:aws:lambda:*:*:function:*sagemaker*",
          "arn:aws:lambda:*:*:function:*Sagemaker*",
          "arn:aws:lambda:*:*:function:*LabelingFunction*"
        ],
        "Sid": "AllowLambdaInvokeFunction"
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringLike": {
            "iam:AWSServiceName": "sagemaker.application-autoscaling.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint",
        "Sid": "AllowCreateServiceLinkedRoleForSageMakerApplicationAutoscaling"
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:AWSServiceName": "robomaker.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowCreateServiceLinkedRoleForRobomaker"
      },
      {
        "Action": [
          "sns:Subscribe",
          "sns:CreateTopic",
          "sns:Publish"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sns:*:*:*SageMaker*",
          "arn:aws:sns:*:*:*Sagemaker*",
          "arn:aws:sns:*:*:*sagemaker*"
        ],
        "Sid": "AllowSNSActions"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": [
              "glue.amazonaws.com",
              "robomaker.amazonaws.com",
              "states.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/*AmazonSageMaker*",
        "Sid": "AllowPassRoleForSageMakerRoles"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "sagemaker.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/*",
        "Sid": "AllowPassRoleToSageMaker"
      },
      {
        "Action": [
          "athena:ListDataCatalogs",
          "athena:ListDatabases",
          "athena:ListTableMetadata",
          "athena:GetQueryExecution",
          "athena:GetQueryResults",
          "athena:StartQueryExecution",
          "athena:StopQueryExecution"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "AllowAthenaActions"
      },
      {
        "Action": [
          "glue:CreateTable"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
          "arn:aws:glue:*:*:table/sagemaker_featurestore/*",
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/*"
        ],
        "Sid": "AllowGlueCreateTable"
      },
      {
        "Action": [
          "glue:UpdateTable"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:table/sagemaker_featurestore/*",
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/sagemaker_featurestore"
        ],
        "Sid": "AllowGlueUpdateTable"
      },
      {
        "Action": [
          "glue:DeleteTable"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/*"
        ],
        "Sid": "AllowGlueDeleteTable"
      },
      {
        "Action": [
          "glue:GetDatabases",
          "glue:GetTable",
          "glue:GetTables"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:table/*",
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/*"
        ],
        "Sid": "AllowGlueGetTablesAndDatabases"
      },
      {
        "Action": [
          "glue:CreateDatabase",
          "glue:GetDatabase"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:glue:*:*:catalog",
          "arn:aws:glue:*:*:database/sagemaker_featurestore",
          "arn:aws:glue:*:*:database/sagemaker_processing",
          "arn:aws:glue:*:*:database/default",
          "arn:aws:glue:*:*:database/sagemaker_data_wrangler"
        ],
        "Sid": "AllowGlueGetAndCreateDatabase"
      },
      {
        "Action": [
          "redshift-data:ExecuteStatement",
          "redshift-data:DescribeStatement",
          "redshift-data:CancelStatement",
          "redshift-data:GetStatementResult",
          "redshift-data:ListSchemas",
          "redshift-data:ListTables"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "AllowRedshiftDataActions"
      },
      {
        "Action": [
          "redshift:GetClusterCredentials"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:redshift:*:*:dbuser:*/sagemaker_access*",
          "arn:aws:redshift:*:*:dbname:*"
        ],
        "Sid": "AllowRedshiftGetClusterCredentials"
      },
      {
        "Action": [
          "sagemaker:ListTags"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:sagemaker:*:*:user-profile/*"
        ],
        "Sid": "AllowListTagsForUserProfile"
      },
      {
        "Action": [
          "cloudformation:ListStackResources"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*",
        "Sid": "AllowCloudformationListStackResources"
      },
      {
        "Action": [
          "s3express:CreateSession"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3express:*:*:bucket/*SageMaker*",
          "arn:aws:s3express:*:*:bucket/*Sagemaker*",
          "arn:aws:s3express:*:*:bucket/*sagemaker*",
          "arn:aws:s3express:*:*:bucket/*aws-glue*"
        ],
        "Sid": "AllowS3ExpressObjectActions"
      },
      {
        "Action": [
          "s3express:CreateBucket"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:s3express:*:*:bucket/*SageMaker*",
          "arn:aws:s3express:*:*:bucket/*Sagemaker*",
          "arn:aws:s3express:*:*:bucket/*sagemaker*"
        ],
        "Sid": "AllowS3ExpressCreateBucketActions"
      },
      {
        "Action": [
          "s3express:ListAllMyDirectoryBuckets"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowS3ExpressListBucketActions"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AmazonSageMakerFullAccess",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "sagemaker:*",
      "condition": null
    },
    {
      "action": "sagemaker-geospatial:*",
      "condition": null
    },
    {
      "action": "sagemaker:AddTags",
      "condition": {
        "StringEquals": {
          "sagemaker:TaggingAction": "CreateSpace"
        }
      }
    },
    {
      "action": "sagemaker:AddTags",
      "condition": null
    },
    {
      "action": "sagemaker:CreatePresignedDomainUrl",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeDomain",
      "condition": null
    },
    {
      "action": "sagemaker:ListDomains",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeUserProfile",
      "condition": null
    },
    {
      "action": "sagemaker:ListUserProfiles",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeSpace",
      "condition": null
    },
    {
      "action": "sagemaker:ListSpaces",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeApp",
      "condition": null
    },
    {
      "action": "sagemaker:ListApps",
      "condition": null
    },
    {
      "action": "sagemaker:CreateApp",
      "condition": {
        "Null": {
          "sagemaker:OwnerUserProfileArn": "true"
        }
      }
    },
    {
      "action": "sagemaker:DeleteApp",
      "condition": {
        "Null": {
          "sagemaker:OwnerUserProfileArn": "true"
        }
      }
    },
    {
      "action": "sagemaker:CreateApp",
      "condition": {
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Shared"
          ]
        }
      }
    },
    {
      "action": "sagemaker:DeleteApp",
      "condition": {
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Shared"
          ]
        }
      }
    },
    {
      "action": "sagemaker:CreateSpace",
      "condition": {
        "Null": {
          "sagemaker:OwnerUserProfileArn": "true"
        }
      }
    },
    {
      "action": "sagemaker:UpdateSpace",
      "condition": {
        "Null": {
          "sagemaker:OwnerUserProfileArn": "true"
        }
      }
    },
    {
      "action": "sagemaker:DeleteSpace",
      "condition": {
        "Null": {
          "sagemaker:OwnerUserProfileArn": "true"
        }
      }
    },
    {
      "action": "sagemaker:CreateSpace",
      "condition": {
        "ArnLike": {
          "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
        },
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Private",
            "Shared"
          ]
        }
      }
    },
    {
      "action": "sagemaker:UpdateSpace",
      "condition": {
        "ArnLike": {
          "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
        },
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Private",
            "Shared"
          ]
        }
      }
    },
    {
      "action": "sagemaker:DeleteSpace",
      "condition": {
        "ArnLike": {
          "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
        },
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Private",
            "Shared"
          ]
        }
      }
    },
    {
      "action": "sagemaker:CreateApp",
      "condition": {
        "ArnLike": {
          "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
        },
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Private"
          ]
        }
      }
    },
    {
      "action": "sagemaker:DeleteApp",
      "condition": {
        "ArnLike": {
          "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
        },
        "StringEquals": {
          "sagemaker:SpaceSharingType": [
            "Private"
          ]
        }
      }
    },
    {
      "action": "sagemaker:*",
      "condition": {
        "StringEqualsIfExists": {
          "sagemaker:WorkteamType": [
            "private-crowd",
            "vendor-crowd"
          ]
        }
      }
    },
    {
      "action": "application-autoscaling:DeleteScalingPolicy",
      "condition": null
    },
    {
      "action": "application-autoscaling:DeleteScheduledAction",
      "condition": null
    },
    {
      "action": "application-autoscaling:DeregisterScalableTarget",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalableTargets",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalingActivities",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScalingPolicies",
      "condition": null
    },
    {
      "action": "application-autoscaling:DescribeScheduledActions",
      "condition": null
    },
    {
      "action": "application-autoscaling:PutScalingPolicy",
      "condition": null
    },
    {
      "action": "application-autoscaling:PutScheduledAction",
      "condition": null
    },
    {
      "action": "application-autoscaling:RegisterScalableTarget",
      "condition": null
    },
    {
      "action": "aws-marketplace:ViewSubscriptions",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplateSummary",
      "condition": null
    },
    {
      "action": "cloudwatch:DeleteAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:DescribeAlarms",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricData",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricStatistics",
      "condition": null
    },
    {
      "action": "cloudwatch:ListMetrics",
      "condition": null
    },
    {
      "action": "cloudwatch:PutMetricAlarm",
      "condition": null
    },
    {
      "action": "cloudwatch:PutMetricData",
      "condition": null
    },
    {
      "action": "codecommit:BatchGetRepositories",
      "condition": null
    },
    {
      "action": "codecommit:CreateRepository",
      "condition": null
    },
    {
      "action": "codecommit:GetRepository",
      "condition": null
    },
    {
      "action": "codecommit:List*",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminAddUserToGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminCreateUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminDeleteUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminDisableUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminEnableUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminRemoveUserFromGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateUserPoolClient",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateUserPoolDomain",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPoolClient",
      "condition": null
    },
    {
      "action": "cognito-idp:List*",
      "condition": null
    },
    {
      "action": "cognito-idp:UpdateUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:UpdateUserPoolClient",
      "condition": null
    },
    {
      "action": "ec2:CreateNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:CreateNetworkInterfacePermission",
      "condition": null
    },
    {
      "action": "ec2:CreateVpcEndpoint",
      "condition": null
    },
    {
      "action": "ec2:DeleteNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:DeleteNetworkInterfacePermission",
      "condition": null
    },
    {
      "action": "ec2:DescribeDhcpOptions",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetworkInterfaces",
      "condition": null
    },
    {
      "action": "ec2:DescribeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeSubnets",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcEndpoints",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcs",
      "condition": null
    },
    {
      "action": "ecr:BatchCheckLayerAvailability",
      "condition": null
    },
    {
      "action": "ecr:BatchGetImage",
      "condition": null
    },
    {
      "action": "ecr:CreateRepository",
      "condition": null
    },
    {
      "action": "ecr:Describe*",
      "condition": null
    },
    {
      "action": "ecr:GetAuthorizationToken",
      "condition": null
    },
    {
      "action": "ecr:GetDownloadUrlForLayer",
      "condition": null
    },
    {
      "action": "ecr:StartImageScan",
      "condition": null
    },
    {
      "action": "elastic-inference:Connect",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "elasticfilesystem:DescribeMountTargets",
      "condition": null
    },
    {
      "action": "fsx:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "glue:CreateJob",
      "condition": null
    },
    {
      "action": "glue:DeleteJob",
      "condition": null
    },
    {
      "action": "glue:GetJob*",
      "condition": null
    },
    {
      "action": "glue:GetTable*",
      "condition": null
    },
    {
      "action": "glue:GetWorkflowRun",
      "condition": null
    },
    {
      "action": "glue:ResetJobBookmark",
      "condition": null
    },
    {
      "action": "glue:StartJobRun",
      "condition": null
    },
    {
      "action": "glue:StartWorkflowRun",
      "condition": null
    },
    {
      "action": "glue:UpdateJob",
      "condition": null
    },
    {
      "action": "groundtruthlabeling:*",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "kms:DescribeKey",
      "condition": null
    },
    {
      "action": "kms:ListAliases",
      "condition": null
    },
    {
      "action": "lambda:ListFunctions",
      "condition": null
    },
    {
      "action": "logs:CreateLogDelivery",
      "condition": null
    },
    {
      "action": "logs:CreateLogGroup",
      "condition": null
    },
    {
      "action": "logs:CreateLogStream",
      "condition": null
    },
    {
      "action": "logs:DeleteLogDelivery",
      "condition": null
    },
    {
      "action": "logs:Describe*",
      "condition": null
    },
    {
      "action": "logs:GetLogDelivery",
      "condition": null
    },
    {
      "action": "logs:GetLogEvents",
      "condition": null
    },
    {
      "action": "logs:ListLogDeliveries",
      "condition": null
    },
    {
      "action": "logs:PutLogEvents",
      "condition": null
    },
    {
      "action": "logs:PutResourcePolicy",
      "condition": null
    },
    {
      "action": "logs:UpdateLogDelivery",
      "condition": null
    },
    {
      "action": "robomaker:CreateSimulationApplication",
      "condition": null
    },
    {
      "action": "robomaker:DescribeSimulationApplication",
      "condition": null
    },
    {
      "action": "robomaker:DeleteSimulationApplication",
      "condition": null
    },
    {
      "action": "robomaker:CreateSimulationJob",
      "condition": null
    },
    {
      "action": "robomaker:DescribeSimulationJob",
      "condition": null
    },
    {
      "action": "robomaker:CancelSimulationJob",
      "condition": null
    },
    {
      "action": "secretsmanager:ListSecrets",
      "condition": null
    },
    {
      "action": "servicecatalog:Describe*",
      "condition": null
    },
    {
      "action": "servicecatalog:List*",
      "condition": null
    },
    {
      "action": "servicecatalog:ScanProvisionedProducts",
      "condition": null
    },
    {
      "action": "servicecatalog:SearchProducts",
      "condition": null
    },
    {
      "action": "servicecatalog:SearchProvisionedProducts",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "tag:GetResources",
      "condition": null
    },
    {
      "action": "ecr:SetRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr:CompleteLayerUpload",
      "condition": null
    },
    {
      "action": "ecr:BatchDeleteImage",
      "condition": null
    },
    {
      "action": "ecr:UploadLayerPart",
      "condition": null
    },
    {
      "action": "ecr:DeleteRepositoryPolicy",
      "condition": null
    },
    {
      "action": "ecr:InitiateLayerUpload",
      "condition": null
    },
    {
      "action": "ecr:DeleteRepository",
      "condition": null
    },
    {
      "action": "ecr:PutImage",
      "condition": null
    },
    {
      "action": "codecommit:GitPull",
      "condition": null
    },
    {
      "action": "codecommit:GitPush",
      "condition": null
    },
    {
      "action": "codebuild:BatchGetBuilds",
      "condition": null
    },
    {
      "action": "codebuild:StartBuild",
      "condition": null
    },
    {
      "action": "states:DescribeExecution",
      "condition": null
    },
    {
      "action": "states:GetExecutionHistory",
      "condition": null
    },
    {
      "action": "states:StartExecution",
      "condition": null
    },
    {
      "action": "states:StopExecution",
      "condition": null
    },
    {
      "action": "states:UpdateStateMachine",
      "condition": null
    },
    {
      "action": "secretsmanager:DescribeSecret",
      "condition": null
    },
    {
      "action": "secretsmanager:GetSecretValue",
      "condition": null
    },
    {
      "action": "secretsmanager:CreateSecret",
      "condition": null
    },
    {
      "action": "secretsmanager:DescribeSecret",
      "condition": {
        "StringEquals": {
          "secretsmanager:ResourceTag/SageMaker": "true"
        }
      }
    },
    {
      "action": "secretsmanager:GetSecretValue",
      "condition": {
        "StringEquals": {
          "secretsmanager:ResourceTag/SageMaker": "true"
        }
      }
    },
    {
      "action": "servicecatalog:ProvisionProduct",
      "condition": null
    },
    {
      "action": "servicecatalog:TerminateProvisionedProduct",
      "condition": {
        "StringEquals": {
          "servicecatalog:userLevel": "self"
        }
      }
    },
    {
      "action": "servicecatalog:UpdateProvisionedProduct",
      "condition": {
        "StringEquals": {
          "servicecatalog:userLevel": "self"
        }
      }
    },
    {
      "action": "s3:GetObject",
      "condition": null
    },
    {
      "action": "s3:PutObject",
      "condition": null
    },
    {
      "action": "s3:DeleteObject",
      "condition": null
    },
    {
      "action": "s3:AbortMultipartUpload",
      "condition": null
    },
    {
      "action": "s3:GetObject",
      "condition": {
        "StringEqualsIgnoreCase": {
          "s3:ExistingObjectTag/SageMaker": "true"
        }
      }
    },
    {
      "action": "s3:GetObject",
      "condition": {
        "StringEquals": {
          "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
        }
      }
    },
    {
      "action": "s3:CreateBucket",
      "condition": null
    },
    {
      "action": "s3:GetBucketLocation",
      "condition": null
    },
    {
      "action": "s3:ListBucket",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "s3:GetBucketCors",
      "condition": null
    },
    {
      "action": "s3:PutBucketCors",
      "condition": null
    },
    {
      "action": "s3:GetBucketAcl",
      "condition": null
    },
    {
      "action": "s3:PutObjectAcl",
      "condition": null
    },
    {
      "action": "lambda:InvokeFunction",
      "condition": null
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringLike": {
          "iam:AWSServiceName": "sagemaker.application-autoscaling.amazonaws.com"
        }
      }
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringEquals": {
          "iam:AWSServiceName": "robomaker.amazonaws.com"
        }
      }
    },
    {
      "action": "sns:Subscribe",
      "condition": null
    },
    {
      "action": "sns:CreateTopic",
      "condition": null
    },
    {
      "action": "sns:Publish",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": [
            "glue.amazonaws.com",
            "robomaker.amazonaws.com",
            "states.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "action": "athena:ListDataCatalogs",
      "condition": null
    },
    {
      "action": "athena:ListDatabases",
      "condition": null
    },
    {
      "action": "athena:ListTableMetadata",
      "condition": null
    },
    {
      "action": "athena:GetQueryExecution",
      "condition": null
    },
    {
      "action": "athena:GetQueryResults",
      "condition": null
    },
    {
      "action": "athena:StartQueryExecution",
      "condition": null
    },
    {
      "action": "athena:StopQueryExecution",
      "condition": null
    },
    {
      "action": "glue:CreateTable",
      "condition": null
    },
    {
      "action": "glue:UpdateTable",
      "condition": null
    },
    {
      "action": "glue:DeleteTable",
      "condition": null
    },
    {
      "action": "glue:GetDatabases",
      "condition": null
    },
    {
      "action": "glue:GetTable",
      "condition": null
    },
    {
      "action": "glue:GetTables",
      "condition": null
    },
    {
      "action": "glue:CreateDatabase",
      "condition": null
    },
    {
      "action": "glue:GetDatabase",
      "condition": null
    },
    {
      "action": "redshift-data:ExecuteStatement",
      "condition": null
    },
    {
      "action": "redshift-data:DescribeStatement",
      "condition": null
    },
    {
      "action": "redshift-data:CancelStatement",
      "condition": null
    },
    {
      "action": "redshift-data:GetStatementResult",
      "condition": null
    },
    {
      "action": "redshift-data:ListSchemas",
      "condition": null
    },
    {
      "action": "redshift-data:ListTables",
      "condition": null
    },
    {
      "action": "redshift:GetClusterCredentials",
      "condition": null
    },
    {
      "action": "sagemaker:ListTags",
      "condition": null
    },
    {
      "action": "cloudformation:ListStackResources",
      "condition": null
    },
    {
      "action": "s3express:CreateSession",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3express:CreateBucket",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3express:ListAllMyDirectoryBuckets",
      "condition": null
    }
  ],
  "updatedate": "2024-03-29T17:35:49+00:00",
  "version": "v26"
}