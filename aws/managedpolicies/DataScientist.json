{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/job-function/DataScientist",
  "createdate": "2019-12-03T16:48:34+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "autoscaling:*",
          "cloudwatch:*",
          "cloudformation:CreateStack",
          "cloudformation:DescribeStackEvents",
          "datapipeline:Describe*",
          "datapipeline:ListPipelines",
          "datapipeline:GetPipelineDefinition",
          "datapipeline:QueryObjects",
          "dynamodb:*",
          "ec2:CancelSpotInstanceRequests",
          "ec2:CancelSpotFleetRequests",
          "ec2:CreateTags",
          "ec2:DeleteTags",
          "ec2:Describe*",
          "ec2:ModifyImageAttribute",
          "ec2:ModifyInstanceAttribute",
          "ec2:ModifySpotFleetRequest",
          "ec2:RequestSpotInstances",
          "ec2:RequestSpotFleet",
          "elasticfilesystem:*",
          "elasticmapreduce:*",
          "es:*",
          "firehose:*",
          "fsx:DescribeFileSystems",
          "iam:GetInstanceProfile",
          "iam:GetRole",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:ListRoles",
          "kinesis:*",
          "kms:List*",
          "lambda:Create*",
          "lambda:Delete*",
          "lambda:Get*",
          "lambda:InvokeFunction",
          "lambda:PublishVersion",
          "lambda:Update*",
          "lambda:List*",
          "machinelearning:*",
          "sdb:*",
          "rds:*",
          "sns:ListSubscriptions",
          "sns:ListTopics",
          "logs:DescribeLogStreams",
          "logs:GetLogEvents",
          "redshift:*",
          "s3:CreateBucket",
          "sns:CreateTopic",
          "sns:Get*",
          "sns:List*"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "s3:Abort*",
          "s3:DeleteObject",
          "s3:Get*",
          "s3:List*",
          "s3:PutAccelerateConfiguration",
          "s3:PutBucketCors",
          "s3:PutBucketLogging",
          "s3:PutBucketNotification",
          "s3:PutBucketTagging",
          "s3:PutObject",
          "s3:Replicate*",
          "s3:RestoreObject"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "ec2:RunInstances",
          "ec2:TerminateInstances"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ]
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/DataPipelineDefaultRole",
          "arn:aws:iam::*:role/DataPipelineDefaultResourceRole",
          "arn:aws:iam::*:role/EMR_EC2_DefaultRole",
          "arn:aws:iam::*:role/EMR_DefaultRole",
          "arn:aws:iam::*:role/kinesis-*"
        ]
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "sagemaker.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "sagemaker:*"
        ],
        "Effect": "Allow",
        "NotResource": [
          "arn:aws:sagemaker:*:*:domain/*",
          "arn:aws:sagemaker:*:*:user-profile/*",
          "arn:aws:sagemaker:*:*:app/*",
          "arn:aws:sagemaker:*:*:flow-definition/*"
        ]
      },
      {
        "Action": [
          "sagemaker:CreatePresignedDomainUrl",
          "sagemaker:DescribeDomain",
          "sagemaker:ListDomains",
          "sagemaker:DescribeUserProfile",
          "sagemaker:ListUserProfiles",
          "sagemaker:*App",
          "sagemaker:ListApps"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "sagemaker:*FlowDefinition",
          "sagemaker:*FlowDefinitions"
        ],
        "Condition": {
          "StringEqualsIfExists": {
            "sagemaker:WorkteamType": [
              "private-crowd",
              "vendor-crowd"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "DataScientist",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "autoscaling:*",
      "condition": null
    },
    {
      "action": "cloudwatch:*",
      "condition": null
    },
    {
      "action": "cloudformation:CreateStack",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStackEvents",
      "condition": null
    },
    {
      "action": "datapipeline:Describe*",
      "condition": null
    },
    {
      "action": "datapipeline:ListPipelines",
      "condition": null
    },
    {
      "action": "datapipeline:GetPipelineDefinition",
      "condition": null
    },
    {
      "action": "datapipeline:QueryObjects",
      "condition": null
    },
    {
      "action": "dynamodb:*",
      "condition": null
    },
    {
      "action": "ec2:CancelSpotInstanceRequests",
      "condition": null
    },
    {
      "action": "ec2:CancelSpotFleetRequests",
      "condition": null
    },
    {
      "action": "ec2:CreateTags",
      "condition": null
    },
    {
      "action": "ec2:DeleteTags",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:ModifyImageAttribute",
      "condition": null
    },
    {
      "action": "ec2:ModifyInstanceAttribute",
      "condition": null
    },
    {
      "action": "ec2:ModifySpotFleetRequest",
      "condition": null
    },
    {
      "action": "ec2:RequestSpotInstances",
      "condition": null
    },
    {
      "action": "ec2:RequestSpotFleet",
      "condition": null
    },
    {
      "action": "elasticfilesystem:*",
      "condition": null
    },
    {
      "action": "elasticmapreduce:*",
      "condition": null
    },
    {
      "action": "es:*",
      "condition": null
    },
    {
      "action": "firehose:*",
      "condition": null
    },
    {
      "action": "fsx:DescribeFileSystems",
      "condition": null
    },
    {
      "action": "iam:GetInstanceProfile",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:GetPolicy",
      "condition": null
    },
    {
      "action": "iam:GetPolicyVersion",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "kinesis:*",
      "condition": null
    },
    {
      "action": "kms:List*",
      "condition": null
    },
    {
      "action": "lambda:Create*",
      "condition": null
    },
    {
      "action": "lambda:Delete*",
      "condition": null
    },
    {
      "action": "lambda:Get*",
      "condition": null
    },
    {
      "action": "lambda:InvokeFunction",
      "condition": null
    },
    {
      "action": "lambda:PublishVersion",
      "condition": null
    },
    {
      "action": "lambda:Update*",
      "condition": null
    },
    {
      "action": "lambda:List*",
      "condition": null
    },
    {
      "action": "machinelearning:*",
      "condition": null
    },
    {
      "action": "sdb:*",
      "condition": null
    },
    {
      "action": "rds:*",
      "condition": null
    },
    {
      "action": "sns:ListSubscriptions",
      "condition": null
    },
    {
      "action": "sns:ListTopics",
      "condition": null
    },
    {
      "action": "logs:DescribeLogStreams",
      "condition": null
    },
    {
      "action": "logs:GetLogEvents",
      "condition": null
    },
    {
      "action": "redshift:*",
      "condition": null
    },
    {
      "action": "s3:CreateBucket",
      "condition": null
    },
    {
      "action": "sns:CreateTopic",
      "condition": null
    },
    {
      "action": "sns:Get*",
      "condition": null
    },
    {
      "action": "sns:List*",
      "condition": null
    },
    {
      "action": "s3:Abort*",
      "condition": null
    },
    {
      "action": "s3:DeleteObject",
      "condition": null
    },
    {
      "action": "s3:Get*",
      "condition": null
    },
    {
      "action": "s3:List*",
      "condition": null
    },
    {
      "action": "s3:PutAccelerateConfiguration",
      "condition": null
    },
    {
      "action": "s3:PutBucketCors",
      "condition": null
    },
    {
      "action": "s3:PutBucketLogging",
      "condition": null
    },
    {
      "action": "s3:PutBucketNotification",
      "condition": null
    },
    {
      "action": "s3:PutBucketTagging",
      "condition": null
    },
    {
      "action": "s3:PutObject",
      "condition": null
    },
    {
      "action": "s3:Replicate*",
      "condition": null
    },
    {
      "action": "s3:RestoreObject",
      "condition": null
    },
    {
      "action": "ec2:RunInstances",
      "condition": null
    },
    {
      "action": "ec2:TerminateInstances",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "action": "sagemaker:*",
      "condition": null
    },
    {
      "action": "sagemaker:CreatePresignedDomainUrl",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeDomain",
      "condition": null
    },
    {
      "action": "sagemaker:ListDomains",
      "condition": null
    },
    {
      "action": "sagemaker:DescribeUserProfile",
      "condition": null
    },
    {
      "action": "sagemaker:ListUserProfiles",
      "condition": null
    },
    {
      "action": "sagemaker:*App",
      "condition": null
    },
    {
      "action": "sagemaker:ListApps",
      "condition": null
    },
    {
      "action": "sagemaker:*FlowDefinition",
      "condition": {
        "StringEqualsIfExists": {
          "sagemaker:WorkteamType": [
            "private-crowd",
            "vendor-crowd"
          ]
        }
      }
    },
    {
      "action": "sagemaker:*FlowDefinitions",
      "condition": {
        "StringEqualsIfExists": {
          "sagemaker:WorkteamType": [
            "private-crowd",
            "vendor-crowd"
          ]
        }
      }
    }
  ],
  "updatedate": "2019-12-03T16:48:34+00:00",
  "version": "v5"
}