{
  "access_levels": [],
  "arn": null,
  "createdate": "2023-04-04T02:48:38Z",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": true,
  "document": {
    "Statement": [
      {
        "Action": [
          "iam:CreateRole",
          "iam:DetachRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:AttachRolePolicy",
          "iam:PutRolePolicy"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/*datazone*"
      },
      {
        "Action": [
          "iam:DeleteRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/*datazone*"
        ]
      },
      {
        "Action": [
          "kms:CreateKey",
          "kms:TagResource",
          "athena:CreateWorkGroup",
          "athena:TagResource",
          "iam:TagRole",
          "iam:TagPolicy",
          "logs:CreateLogGroup",
          "logs:TagLogGroup",
          "ssm:AddTagsToResource"
        ],
        "Condition": {
          "ForAnyValue:StringLike": {
            "aws:TagKeys": "datazone:*"
          },
          "StringLike": {
            "aws:ResourceTag/datazone:projectId": "proj-*"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "athena:DeleteWorkGroup",
          "kms:ScheduleKeyDeletion",
          "kms:DescribeKey",
          "kms:EnableKeyRotation",
          "kms:DisableKeyRotation",
          "kms:GenerateDataKey",
          "kms:Encrypt",
          "kms:Decrypt",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:AuthorizeSecurityGroupIngress"
        ],
        "Condition": {
          "StringLike": {
            "aws:ResourceTag/datazone:projectId": "proj-*"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "ec2:CreateTags"
        ],
        "Condition": {
          "ForAnyValue:StringLike": {
            "aws:TagKeys": "datazone:projectId"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "iam:DeletePolicy",
          "s3:DeleteBucket"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:policy/datazone*",
          "arn:aws:s3:::datazone*"
        ]
      },
      {
        "Action": [
          "ssm:GetParameter*",
          "ssm:PutParameter",
          "ssm:DeleteParameter"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ssm:*:*:parameter/*datazone*"
        ]
      },
      {
        "Action": [
          "iam:GetRole",
          "iam:GetPolicy",
          "iam:GetRolePolicy",
          "iam:CreatePolicy",
          "iam:ListPolicyVersions",
          "lakeformation:RegisterResource",
          "lakeformation:DeregisterResource",
          "lakeformation:GrantPermissions",
          "lakeformation:PutDataLakeSettings",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:RevokePermissions",
          "lakeformation:ListPermissions",
          "glue:CreateDatabase",
          "glue:DeleteDatabase",
          "glue:GetDatabases",
          "glue:GetDatabase",
          "sts:GetCallerIdentity"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/*datazone*"
        ]
      },
      {
        "Action": [
          "s3:PutEncryptionConfiguration",
          "s3:PutBucketPublicAccessBlock",
          "s3:DeleteBucketPolicy",
          "s3:CreateBucket",
          "s3:PutBucketPolicy",
          "s3:PutBucketAcl",
          "s3:PutBucketVersioning",
          "s3:PutBucketTagging",
          "s3:PutBucketLogging",
          "s3:GetObject*",
          "s3:GetBucket*",
          "s3:List*",
          "s3:GetEncryptionConfiguration",
          "s3:DeleteObject*",
          "s3:PutObject*",
          "s3:Abort*"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::*datazone*"
      },
      {
        "Action": [
          "athena:Get*",
          "athena:List*",
          "ec2:CreateSecurityGroup",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:DeleteSecurityGroup",
          "ec2:Describe*",
          "ec2:Get*",
          "ec2:List*",
          "logs:PutRetentionPolicy",
          "logs:DescribeLogGroups",
          "logs:DeleteLogGroup",
          "logs:DeleteRetentionPolicy"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "kms:PutKeyPolicy"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "cloudformation.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "ec2:CreateVpcEndpoint"
        ],
        "Effect": "Allow",
        "NotResource": "arn:aws:ec2:*:*:vpc-endpoint/*"
      },
      {
        "Action": [
          "ec2:CreateVpcEndpoint"
        ],
        "Condition": {
          "StringLike": {
            "ec2:VpceServiceName": [
              "com.amazonaws.*.logs",
              "com.amazonaws.*.s3",
              "com.amazonaws.*.glue",
              "com.amazonaws.*.athena"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
      },
      {
        "Action": [
          "cloudformation:DescribeStacks",
          "cloudformation:DescribeStackEvents",
          "cloudformation:GetTemplate",
          "cloudformation:DescribeChangeSet",
          "cloudformation:CreateChangeSet",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:DeleteChangeSet",
          "cloudformation:CreateStack",
          "cloudformation:UpdateStack",
          "cloudformation:DeleteStack",
          "cloudformation:TagResource",
          "cloudformation:GetTemplateSummary"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:cloudformation:*:*:stack/DataZone*"
        ]
      },
      {
        "Action": [
          "s3:GetObject*",
          "s3:GetBucket*",
          "s3:List*",
          "s3:GetEncryptionConfiguration",
          "s3:DeleteObject*",
          "s3:PutObject*",
          "s3:Abort*",
          "s3:DeleteBucket"
        ],
        "Effect": "Deny",
        "NotResource": [
          "arn:aws:s3:::*datazone*"
        ]
      },
      {
        "Action": [
          "kms:*"
        ],
        "Condition": {
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Deny",
        "Resource": "*"
      },
      {
        "Effect": "Deny",
        "NotAction": [
          "ssm:PutParameter",
          "ssm:DeleteParameter",
          "ssm:AddTagsToResource",
          "ssm:GetParameters",
          "ssm:GetParameter",
          "s3:PutEncryptionConfiguration",
          "s3:PutBucketPublicAccessBlock",
          "s3:DeleteBucketPolicy",
          "s3:CreateBucket",
          "s3:PutBucketAcl",
          "s3:PutBucketPolicy",
          "s3:PutBucketVersioning",
          "s3:PutBucketTagging",
          "s3:ListBucket",
          "s3:PutBucketLogging",
          "s3:DeleteBucket",
          "iam:GetRole",
          "iam:GetRolePolicy",
          "iam:GetPolicy",
          "iam:CreatePolicy",
          "iam:ListPolicyVersions",
          "iam:DeletePolicy",
          "cloudformation:DescribeStacks",
          "cloudformation:DescribeStackEvents",
          "cloudformation:GetTemplate",
          "cloudformation:DescribeChangeSet",
          "cloudformation:CreateChangeSet",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:DeleteChangeSet",
          "cloudformation:TagResource",
          "cloudformation:CreateStack",
          "cloudformation:UpdateStack",
          "cloudformation:DeleteStack",
          "cloudformation:GetTemplateSummary",
          "athena:*",
          "kms:*",
          "glue:CreateDatabase",
          "glue:DeleteDatabase",
          "glue:GetDatabases",
          "glue:GetDatabase",
          "lambda:*",
          "ec2:*",
          "logs:*",
          "servicecatalog:CreateApplication",
          "servicecatalog:DeleteApplication",
          "servicecatalog:GetApplication",
          "lakeformation:RegisterResource",
          "lakeformation:DeregisterResource",
          "lakeformation:GrantPermissions",
          "lakeformation:PutDataLakeSettings",
          "lakeformation:RevokePermissions",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:ListPermissions",
          "iam:CreateRole",
          "iam:DeleteRole",
          "iam:DetachRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:AttachRolePolicy",
          "iam:PutRolePolicy",
          "iam:UntagRole",
          "iam:PassRole",
          "iam:TagRole",
          "s3:GetBucket*",
          "s3:GetObject*",
          "s3:Abort*",
          "s3:GetEncryptionConfiguration",
          "s3:PutObject*"
        ],
        "Resource": [
          "*"
        ]
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": true,
  "name": "AmazonDataZoneProjectDeploymentPermissionsBoundary",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "iam:CreateRole",
      "condition": {
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:DetachRolePolicy",
      "condition": {
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:DeleteRolePolicy",
      "condition": {
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:AttachRolePolicy",
      "condition": {
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:PutRolePolicy",
      "condition": {
        "StringEquals": {
          "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
        }
      }
    },
    {
      "action": "iam:DeleteRole",
      "condition": null
    },
    {
      "action": "kms:CreateKey",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:TagResource",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "athena:CreateWorkGroup",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "athena:TagResource",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "iam:TagRole",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "iam:TagPolicy",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "logs:CreateLogGroup",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "logs:TagLogGroup",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "ssm:AddTagsToResource",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:*"
        },
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "athena:DeleteWorkGroup",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:ScheduleKeyDeletion",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:DescribeKey",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:EnableKeyRotation",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:DisableKeyRotation",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:GenerateDataKey",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:Encrypt",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "kms:Decrypt",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "ec2:AuthorizeSecurityGroupEgress",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": {
        "StringLike": {
          "aws:ResourceTag/datazone:projectId": "proj-*"
        }
      }
    },
    {
      "action": "ec2:CreateTags",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": "datazone:projectId"
        }
      }
    },
    {
      "action": "iam:DeletePolicy",
      "condition": null
    },
    {
      "action": "s3:DeleteBucket",
      "condition": null
    },
    {
      "action": "ssm:GetParameter*",
      "condition": null
    },
    {
      "action": "ssm:PutParameter",
      "condition": null
    },
    {
      "action": "ssm:DeleteParameter",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:GetPolicy",
      "condition": null
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": null
    },
    {
      "action": "iam:CreatePolicy",
      "condition": null
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": null
    },
    {
      "action": "lakeformation:RegisterResource",
      "condition": null
    },
    {
      "action": "lakeformation:DeregisterResource",
      "condition": null
    },
    {
      "action": "lakeformation:GrantPermissions",
      "condition": null
    },
    {
      "action": "lakeformation:PutDataLakeSettings",
      "condition": null
    },
    {
      "action": "lakeformation:GetDataLakeSettings",
      "condition": null
    },
    {
      "action": "lakeformation:RevokePermissions",
      "condition": null
    },
    {
      "action": "lakeformation:ListPermissions",
      "condition": null
    },
    {
      "action": "glue:CreateDatabase",
      "condition": null
    },
    {
      "action": "glue:DeleteDatabase",
      "condition": null
    },
    {
      "action": "glue:GetDatabases",
      "condition": null
    },
    {
      "action": "glue:GetDatabase",
      "condition": null
    },
    {
      "action": "sts:GetCallerIdentity",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": null
    },
    {
      "action": "s3:PutEncryptionConfiguration",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketPublicAccessBlock",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:DeleteBucketPolicy",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:CreateBucket",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketPolicy",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketAcl",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketVersioning",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketTagging",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketLogging",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:GetObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:GetBucket*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:List*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:GetEncryptionConfiguration",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:DeleteObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutObject*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:Abort*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "athena:Get*",
      "condition": null
    },
    {
      "action": "athena:List*",
      "condition": null
    },
    {
      "action": "ec2:CreateSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:RevokeSecurityGroupEgress",
      "condition": null
    },
    {
      "action": "ec2:DeleteSecurityGroup",
      "condition": null
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:Get*",
      "condition": null
    },
    {
      "action": "ec2:List*",
      "condition": null
    },
    {
      "action": "logs:PutRetentionPolicy",
      "condition": null
    },
    {
      "action": "logs:DescribeLogGroups",
      "condition": null
    },
    {
      "action": "logs:DeleteLogGroup",
      "condition": null
    },
    {
      "action": "logs:DeleteRetentionPolicy",
      "condition": null
    },
    {
      "action": "kms:PutKeyPolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "ec2:CreateVpcEndpoint",
      "condition": null
    },
    {
      "action": "ec2:CreateVpcEndpoint",
      "condition": {
        "StringLike": {
          "ec2:VpceServiceName": [
            "com.amazonaws.*.logs",
            "com.amazonaws.*.s3",
            "com.amazonaws.*.glue",
            "com.amazonaws.*.athena"
          ]
        }
      }
    },
    {
      "action": "cloudformation:DescribeStacks",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStackEvents",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplate",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:CreateChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:ExecuteChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:DeleteChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:CreateStack",
      "condition": null
    },
    {
      "action": "cloudformation:UpdateStack",
      "condition": null
    },
    {
      "action": "cloudformation:DeleteStack",
      "condition": null
    },
    {
      "action": "cloudformation:TagResource",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplateSummary",
      "condition": null
    }
  ],
  "updatedate": null,
  "version": "v2"
}