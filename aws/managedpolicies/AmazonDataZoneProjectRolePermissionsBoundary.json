{
  "access_levels": [],
  "arn": null,
  "createdate": "2023-03-21T02:51:56Z",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": true,
  "document": {
    "Statement": [
      {
        "Action": [
          "s3:List*",
          "s3:Get*",
          "s3:DeleteObjectVersion",
          "s3:RestoreObject",
          "s3:ReplicateObject",
          "s3:PutObject",
          "s3:AbortMultipartUpload",
          "s3:CreateBucket",
          "s3:PutBucketPublicAccessBlock",
          "s3:PutObjectRetention",
          "s3:DeleteObject"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::datazone*"
      },
      {
        "Action": [
          "s3:List*",
          "s3:Get*",
          "kms:List*",
          "kms:Get*",
          "kms:Describe*",
          "kms:Decrypt"
        ],
        "Condition": {
          "StringNotEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "ec2:Describe*",
          "ec2:CreateNetworkInterface",
          "ec2:DeleteNetworkInterface",
          "logs:*",
          "athena:TerminateSession",
          "athena:CreatePreparedStatement",
          "athena:StopCalculationExecution",
          "athena:StartQueryExecution",
          "athena:UpdatePreparedStatement",
          "athena:BatchGet*",
          "athena:List*",
          "athena:UpdateNotebook",
          "athena:DeleteNotebook",
          "athena:DeletePreparedStatement",
          "athena:UpdateNotebookMetadata",
          "athena:DeleteNamedQuery",
          "athena:Get*",
          "athena:UpdateNamedQuery",
          "athena:CreateNamedQuery",
          "athena:ExportNotebook",
          "athena:StopQueryExecution",
          "athena:StartCalculationExecution",
          "athena:StartSession",
          "athena:CreatePresignedNotebookUrl",
          "athena:CreateNotebook",
          "athena:ImportNotebook",
          "organizations:DescribeOrganization",
          "organizations:DescribeAccount",
          "lakeformation:GetDataAccess",
          "lakeformation:BatchGrantPermissions",
          "lakeformation:GrantPermissions",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:PutDataLakeSettings",
          "lakeformation:BatchRevokePermissions",
          "lakeformation:GetResourceLFTags",
          "lakeformation:ListPermissions",
          "ram:CreateResourceShare",
          "ram:UpdateResourceShare",
          "ram:DeleteResourceShare",
          "ram:AssociateResourceShare",
          "ram:DisassociateResourceShare",
          "ram:AcceptResourceShareInvitation",
          "ram:Get*",
          "ram:List*",
          "redshift:DescribeClusters",
          "redshift:JoinGroup",
          "redshift:CreateClusterUser",
          "redshift:GetClusterCredentials",
          "redshift-data:*",
          "redshift:AuthorizeDataShare",
          "redshift:DescribeDataShares",
          "redshift:AssociateDataShareConsumer",
          "tag:GetResources",
          "iam:ListRoles",
          "iam:ListUsers",
          "iam:ListGroups",
          "iam:ListRolePolicies",
          "iam:GetRole",
          "iam:GetRolePolicy",
          "glue:CreateTable",
          "glue:BatchCreatePartition",
          "glue:CreatePartition",
          "glue:CreatePartitionIndex",
          "glue:CreateDataQualityRuleset",
          "glue:CreateBlueprint",
          "glue:CreateJob",
          "glue:CreateConnection",
          "glue:CreateCrawler",
          "glue:CreateWorkflow",
          "sqlworkbench:*",
          "datazone:*"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "ec2:CreateTags",
          "ec2:DeleteTags"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "aws:TagKeys": [
              "aws-glue-service-resource"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:network-interface/*"
        ]
      },
      {
        "Action": [
          "kms:List*",
          "kms:Get*",
          "kms:Describe*",
          "kms:Decrypt",
          "kms:Encrypt",
          "kms:ReEncrypt*",
          "kms:Verify",
          "kms:Sign",
          "kms:GenerateDataKey",
          "glue:*"
        ],
        "Condition": {
          "Null": {
            "aws:ResourceTag/datazone:projectId": "false"
          }
        },
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/datazone*"
        ]
      },
      {
        "Action": [
          "glue:BatchGet*",
          "glue:SearchTables",
          "glue:List*",
          "glue:Get*",
          "glue:CreateDatabase",
          "glue:UpdateDatabase",
          "glue:DeleteTable",
          "glue:BatchDeleteTable",
          "glue:UpdateTable",
          "glue:DeletePartition",
          "glue:BatchDeletePartition",
          "glue:PutResourcePolicy",
          "glue:BatchUpdatePartition",
          "glue:DeleteTableVersion",
          "glue:DeleteColumnStatisticsForPartition",
          "glue:DeleteColumnStatisticsForTable",
          "glue:DeletePartitionIndex",
          "glue:UpdateColumnStatisticsForPartition",
          "glue:UpdateColumnStatisticsForTable",
          "glue:BatchDeleteTableVersion",
          "glue:UpdatePartition",
          "glue:NotifyEvent",
          "glue:DeleteResourcePolicy"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Effect": "Deny",
        "NotAction": [
          "s3:List*",
          "s3:Get*",
          "s3:Describe*",
          "s3:DeleteObjectVersion",
          "s3:RestoreObject",
          "s3:ReplicateObject",
          "s3:PutObject",
          "s3:AbortMultipartUpload",
          "s3:CreateBucket",
          "s3:PutBucketPublicAccessBlock",
          "s3:PutObjectRetention",
          "s3:DeleteObject",
          "kms:List*",
          "kms:Get*",
          "kms:Describe*",
          "kms:Decrypt",
          "kms:Encrypt",
          "kms:ReEncrypt*",
          "kms:Verify",
          "kms:Sign",
          "kms:GenerateDataKey",
          "ec2:Describe*",
          "ec2:CreateNetworkInterface",
          "ec2:DeleteNetworkInterface",
          "ec2:CreateTags",
          "ec2:DeleteTags",
          "logs:*",
          "athena:*",
          "glue:BatchGet*",
          "glue:Get*",
          "glue:SearchTables",
          "glue:List*",
          "glue:CreateDatabase",
          "glue:UpdateDatabase",
          "glue:CreateTable",
          "glue:DeleteTable",
          "glue:BatchDeleteTable",
          "glue:UpdateTable",
          "glue:BatchCreatePartition",
          "glue:CreatePartition",
          "glue:DeletePartition",
          "glue:BatchDeletePartition",
          "glue:PutResourcePolicy",
          "glue:CreatePartitionIndex",
          "glue:BatchUpdatePartition",
          "glue:DeleteTableVersion",
          "glue:DeleteColumnStatisticsForPartition",
          "glue:DeleteColumnStatisticsForTable",
          "glue:DeletePartitionIndex",
          "glue:UpdateColumnStatisticsForPartition",
          "glue:UpdateColumnStatisticsForTable",
          "glue:BatchDeleteTableVersion",
          "glue:UpdatePartition",
          "glue:NotifyEvent",
          "glue:StartBlueprintRun",
          "glue:PutWorkflowRunProperties",
          "glue:StopCrawler",
          "glue:DeleteJob",
          "glue:DeleteWorkflow",
          "glue:UpdateCrawler",
          "glue:DeleteBlueprint",
          "glue:UpdateWorkflow",
          "glue:StartCrawler",
          "glue:ResetJobBookmark",
          "glue:UpdateJob",
          "glue:StartWorkflowRun",
          "glue:StopCrawlerSchedule",
          "glue:ResumeWorkflowRun",
          "glue:DeleteCrawler",
          "glue:UpdateBlueprint",
          "glue:BatchStopJobRun",
          "glue:StopWorkflowRun",
          "glue:UpdateCrawlerSchedule",
          "glue:DeleteConnection",
          "glue:UpdateConnection",
          "glue:BatchDeleteConnection",
          "glue:StartCrawlerSchedule",
          "glue:StartJobRun",
          "glue:CreateWorkflow",
          "glue:*DataQuality*",
          "glue:CreateBlueprint",
          "glue:CreateJob",
          "glue:CreateConnection",
          "glue:CreateCrawler",
          "glue:DeleteResourcePolicy",
          "organizations:DescribeOrganization",
          "organizations:DescribeAccount",
          "lakeformation:GetDataAccess",
          "lakeformation:BatchGrantPermissions",
          "lakeformation:GrantPermissions",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:PutDataLakeSettings",
          "lakeformation:BatchRevokePermissions",
          "lakeformation:GetResourceLFTags",
          "lakeformation:ListPermissions",
          "ram:*",
          "redshift:*",
          "redshift-data:*",
          "tag:GetResources",
          "iam:List*",
          "iam:GetRole",
          "iam:GetRolePolicy",
          "iam:PassRole",
          "sqlworkbench:*",
          "datazone:*"
        ],
        "Resource": [
          "*"
        ]
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": true,
  "name": "AmazonDataZoneProjectRolePermissionsBoundary",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "s3:List*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:Get*",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:DeleteObjectVersion",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:RestoreObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:ReplicateObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:AbortMultipartUpload",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:CreateBucket",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutBucketPublicAccessBlock",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:PutObjectRetention",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:DeleteObject",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:List*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "s3:Get*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "kms:List*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "kms:Get*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "kms:Describe*",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "kms:Decrypt",
      "condition": {
        "StringNotEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "ec2:Describe*",
      "condition": null
    },
    {
      "action": "ec2:CreateNetworkInterface",
      "condition": null
    },
    {
      "action": "ec2:DeleteNetworkInterface",
      "condition": null
    },
    {
      "action": "logs:*",
      "condition": null
    },
    {
      "action": "athena:TerminateSession",
      "condition": null
    },
    {
      "action": "athena:CreatePreparedStatement",
      "condition": null
    },
    {
      "action": "athena:StopCalculationExecution",
      "condition": null
    },
    {
      "action": "athena:StartQueryExecution",
      "condition": null
    },
    {
      "action": "athena:UpdatePreparedStatement",
      "condition": null
    },
    {
      "action": "athena:BatchGet*",
      "condition": null
    },
    {
      "action": "athena:List*",
      "condition": null
    },
    {
      "action": "athena:UpdateNotebook",
      "condition": null
    },
    {
      "action": "athena:DeleteNotebook",
      "condition": null
    },
    {
      "action": "athena:DeletePreparedStatement",
      "condition": null
    },
    {
      "action": "athena:UpdateNotebookMetadata",
      "condition": null
    },
    {
      "action": "athena:DeleteNamedQuery",
      "condition": null
    },
    {
      "action": "athena:Get*",
      "condition": null
    },
    {
      "action": "athena:UpdateNamedQuery",
      "condition": null
    },
    {
      "action": "athena:CreateNamedQuery",
      "condition": null
    },
    {
      "action": "athena:ExportNotebook",
      "condition": null
    },
    {
      "action": "athena:StopQueryExecution",
      "condition": null
    },
    {
      "action": "athena:StartCalculationExecution",
      "condition": null
    },
    {
      "action": "athena:StartSession",
      "condition": null
    },
    {
      "action": "athena:CreatePresignedNotebookUrl",
      "condition": null
    },
    {
      "action": "athena:CreateNotebook",
      "condition": null
    },
    {
      "action": "athena:ImportNotebook",
      "condition": null
    },
    {
      "action": "organizations:DescribeOrganization",
      "condition": null
    },
    {
      "action": "organizations:DescribeAccount",
      "condition": null
    },
    {
      "action": "lakeformation:GetDataAccess",
      "condition": null
    },
    {
      "action": "lakeformation:BatchGrantPermissions",
      "condition": null
    },
    {
      "action": "lakeformation:GrantPermissions",
      "condition": null
    },
    {
      "action": "lakeformation:GetDataLakeSettings",
      "condition": null
    },
    {
      "action": "lakeformation:PutDataLakeSettings",
      "condition": null
    },
    {
      "action": "lakeformation:BatchRevokePermissions",
      "condition": null
    },
    {
      "action": "lakeformation:GetResourceLFTags",
      "condition": null
    },
    {
      "action": "lakeformation:ListPermissions",
      "condition": null
    },
    {
      "action": "ram:CreateResourceShare",
      "condition": null
    },
    {
      "action": "ram:UpdateResourceShare",
      "condition": null
    },
    {
      "action": "ram:DeleteResourceShare",
      "condition": null
    },
    {
      "action": "ram:AssociateResourceShare",
      "condition": null
    },
    {
      "action": "ram:DisassociateResourceShare",
      "condition": null
    },
    {
      "action": "ram:AcceptResourceShareInvitation",
      "condition": null
    },
    {
      "action": "ram:Get*",
      "condition": null
    },
    {
      "action": "ram:List*",
      "condition": null
    },
    {
      "action": "redshift:DescribeClusters",
      "condition": null
    },
    {
      "action": "redshift:JoinGroup",
      "condition": null
    },
    {
      "action": "redshift:CreateClusterUser",
      "condition": null
    },
    {
      "action": "redshift:GetClusterCredentials",
      "condition": null
    },
    {
      "action": "redshift-data:*",
      "condition": null
    },
    {
      "action": "redshift:AuthorizeDataShare",
      "condition": null
    },
    {
      "action": "redshift:DescribeDataShares",
      "condition": null
    },
    {
      "action": "redshift:AssociateDataShareConsumer",
      "condition": null
    },
    {
      "action": "tag:GetResources",
      "condition": null
    },
    {
      "action": "iam:ListRoles",
      "condition": null
    },
    {
      "action": "iam:ListUsers",
      "condition": null
    },
    {
      "action": "iam:ListGroups",
      "condition": null
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": null
    },
    {
      "action": "glue:CreateTable",
      "condition": null
    },
    {
      "action": "glue:BatchCreatePartition",
      "condition": null
    },
    {
      "action": "glue:CreatePartition",
      "condition": null
    },
    {
      "action": "glue:CreatePartitionIndex",
      "condition": null
    },
    {
      "action": "glue:CreateDataQualityRuleset",
      "condition": null
    },
    {
      "action": "glue:CreateBlueprint",
      "condition": null
    },
    {
      "action": "glue:CreateJob",
      "condition": null
    },
    {
      "action": "glue:CreateConnection",
      "condition": null
    },
    {
      "action": "glue:CreateCrawler",
      "condition": null
    },
    {
      "action": "glue:CreateWorkflow",
      "condition": null
    },
    {
      "action": "sqlworkbench:*",
      "condition": null
    },
    {
      "action": "datazone:*",
      "condition": null
    },
    {
      "action": "ec2:CreateTags",
      "condition": {
        "ForAllValues:StringEquals": {
          "aws:TagKeys": [
            "aws-glue-service-resource"
          ]
        }
      }
    },
    {
      "action": "ec2:DeleteTags",
      "condition": {
        "ForAllValues:StringEquals": {
          "aws:TagKeys": [
            "aws-glue-service-resource"
          ]
        }
      }
    },
    {
      "action": "kms:List*",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:Get*",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:Describe*",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:Decrypt",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:Encrypt",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:ReEncrypt*",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:Verify",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:Sign",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "kms:GenerateDataKey",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "glue:*",
      "condition": {
        "Null": {
          "aws:ResourceTag/datazone:projectId": "false"
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": null
    },
    {
      "action": "glue:BatchGet*",
      "condition": null
    },
    {
      "action": "glue:SearchTables",
      "condition": null
    },
    {
      "action": "glue:List*",
      "condition": null
    },
    {
      "action": "glue:Get*",
      "condition": null
    },
    {
      "action": "glue:CreateDatabase",
      "condition": null
    },
    {
      "action": "glue:UpdateDatabase",
      "condition": null
    },
    {
      "action": "glue:DeleteTable",
      "condition": null
    },
    {
      "action": "glue:BatchDeleteTable",
      "condition": null
    },
    {
      "action": "glue:UpdateTable",
      "condition": null
    },
    {
      "action": "glue:DeletePartition",
      "condition": null
    },
    {
      "action": "glue:BatchDeletePartition",
      "condition": null
    },
    {
      "action": "glue:PutResourcePolicy",
      "condition": null
    },
    {
      "action": "glue:BatchUpdatePartition",
      "condition": null
    },
    {
      "action": "glue:DeleteTableVersion",
      "condition": null
    },
    {
      "action": "glue:DeleteColumnStatisticsForPartition",
      "condition": null
    },
    {
      "action": "glue:DeleteColumnStatisticsForTable",
      "condition": null
    },
    {
      "action": "glue:DeletePartitionIndex",
      "condition": null
    },
    {
      "action": "glue:UpdateColumnStatisticsForPartition",
      "condition": null
    },
    {
      "action": "glue:UpdateColumnStatisticsForTable",
      "condition": null
    },
    {
      "action": "glue:BatchDeleteTableVersion",
      "condition": null
    },
    {
      "action": "glue:UpdatePartition",
      "condition": null
    },
    {
      "action": "glue:NotifyEvent",
      "condition": null
    },
    {
      "action": "glue:DeleteResourcePolicy",
      "condition": null
    }
  ],
  "updatedate": null,
  "version": "v1"
}