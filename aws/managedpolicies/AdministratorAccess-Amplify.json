{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/AdministratorAccess-Amplify",
  "createdate": "2024-04-04T20:35:31+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "cloudformation:CreateChangeSet",
          "cloudformation:CreateStack",
          "cloudformation:DeleteStack",
          "cloudformation:DescribeChangeSet",
          "cloudformation:DescribeStackEvents",
          "cloudformation:DescribeStackResource",
          "cloudformation:DescribeStackResources",
          "cloudformation:DescribeStacks",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:GetTemplate",
          "cloudformation:UpdateStack",
          "cloudformation:ListStacks",
          "cloudformation:ListStackResources",
          "cloudformation:DeleteStackSet",
          "cloudformation:DescribeStackSet",
          "cloudformation:UpdateStackSet",
          "cloudformation:TagResource",
          "cloudformation:UntagResource"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:cloudformation:*:*:stack/amplify-*"
        ],
        "Sid": "CLICloudformationPolicy"
      },
      {
        "Action": [
          "iam:ListRoleTags",
          "iam:TagRole",
          "iam:AttachRolePolicy",
          "iam:CreatePolicy",
          "iam:DeletePolicy",
          "iam:DeleteRole",
          "iam:DeleteRolePolicy",
          "iam:DetachRolePolicy",
          "iam:PutRolePolicy",
          "iam:UntagRole",
          "iam:UpdateRole",
          "iam:GetRole",
          "iam:GetPolicy",
          "iam:GetRolePolicy",
          "iam:PassRole",
          "iam:ListPolicyVersions",
          "iam:CreatePolicyVersion",
          "iam:DeletePolicyVersion",
          "iam:CreateRole",
          "iam:ListRolePolicies",
          "iam:PutRolePermissionsBoundary",
          "iam:DeleteRolePermissionsBoundary",
          "appsync:CreateApiKey",
          "appsync:CreateDataSource",
          "appsync:CreateFunction",
          "appsync:CreateResolver",
          "appsync:CreateType",
          "appsync:DeleteApiKey",
          "appsync:DeleteDataSource",
          "appsync:DeleteFunction",
          "appsync:DeleteResolver",
          "appsync:DeleteType",
          "appsync:GetDataSource",
          "appsync:GetFunction",
          "appsync:GetIntrospectionSchema",
          "appsync:GetResolver",
          "appsync:GetSchemaCreationStatus",
          "appsync:GetType",
          "appsync:GraphQL",
          "appsync:ListApiKeys",
          "appsync:ListDataSources",
          "appsync:ListFunctions",
          "appsync:ListGraphqlApis",
          "appsync:ListResolvers",
          "appsync:ListResolversByFunction",
          "appsync:ListTypes",
          "appsync:StartSchemaCreation",
          "appsync:UntagResource",
          "appsync:UpdateApiKey",
          "appsync:UpdateDataSource",
          "appsync:UpdateFunction",
          "appsync:UpdateResolver",
          "appsync:UpdateType",
          "appsync:TagResource",
          "appsync:CreateGraphqlApi",
          "appsync:DeleteGraphqlApi",
          "appsync:GetGraphqlApi",
          "appsync:ListTagsForResource",
          "appsync:UpdateGraphqlApi",
          "apigateway:DELETE",
          "apigateway:GET",
          "apigateway:PATCH",
          "apigateway:POST",
          "apigateway:PUT",
          "cognito-idp:CreateUserPool",
          "cognito-identity:CreateIdentityPool",
          "cognito-identity:DeleteIdentityPool",
          "cognito-identity:DescribeIdentity",
          "cognito-identity:DescribeIdentityPool",
          "cognito-identity:SetIdentityPoolRoles",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:UpdateIdentityPool",
          "cognito-idp:CreateUserPoolClient",
          "cognito-idp:DeleteUserPool",
          "cognito-idp:DeleteUserPoolClient",
          "cognito-idp:DescribeUserPool",
          "cognito-idp:DescribeUserPoolClient",
          "cognito-idp:ListTagsForResource",
          "cognito-idp:ListUserPoolClients",
          "cognito-idp:UpdateUserPoolClient",
          "cognito-idp:CreateGroup",
          "cognito-idp:DeleteGroup",
          "cognito-identity:TagResource",
          "cognito-idp:TagResource",
          "cognito-idp:UpdateUserPool",
          "cognito-idp:SetUserPoolMfaConfig",
          "lambda:AddPermission",
          "lambda:CreateFunction",
          "lambda:DeleteFunction",
          "lambda:GetFunction",
          "lambda:GetFunctionConfiguration",
          "lambda:InvokeAsync",
          "lambda:InvokeFunction",
          "lambda:RemovePermission",
          "lambda:UpdateFunctionCode",
          "lambda:UpdateFunctionConfiguration",
          "lambda:ListTags",
          "lambda:TagResource",
          "lambda:UntagResource",
          "lambda:AddLayerVersionPermission",
          "lambda:CreateEventSourceMapping",
          "lambda:DeleteEventSourceMapping",
          "lambda:DeleteLayerVersion",
          "lambda:GetEventSourceMapping",
          "lambda:GetLayerVersion",
          "lambda:ListEventSourceMappings",
          "lambda:ListLayerVersions",
          "lambda:PublishLayerVersion",
          "lambda:RemoveLayerVersionPermission",
          "lambda:UpdateEventSourceMapping",
          "dynamodb:CreateTable",
          "dynamodb:DeleteItem",
          "dynamodb:DeleteTable",
          "dynamodb:DescribeContinuousBackups",
          "dynamodb:DescribeTable",
          "dynamodb:DescribeTimeToLive",
          "dynamodb:ListStreams",
          "dynamodb:PutItem",
          "dynamodb:TagResource",
          "dynamodb:ListTagsOfResource",
          "dynamodb:UntagResource",
          "dynamodb:UpdateContinuousBackups",
          "dynamodb:UpdateItem",
          "dynamodb:UpdateTable",
          "dynamodb:UpdateTimeToLive",
          "s3:CreateBucket",
          "s3:ListBucket",
          "s3:PutBucketAcl",
          "s3:PutBucketCORS",
          "s3:PutBucketNotification",
          "s3:PutBucketPolicy",
          "s3:PutBucketWebsite",
          "s3:PutObjectAcl",
          "cloudfront:CreateCloudFrontOriginAccessIdentity",
          "cloudfront:CreateDistribution",
          "cloudfront:DeleteCloudFrontOriginAccessIdentity",
          "cloudfront:DeleteDistribution",
          "cloudfront:GetCloudFrontOriginAccessIdentity",
          "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
          "cloudfront:GetDistribution",
          "cloudfront:GetDistributionConfig",
          "cloudfront:TagResource",
          "cloudfront:UntagResource",
          "cloudfront:UpdateCloudFrontOriginAccessIdentity",
          "cloudfront:UpdateDistribution",
          "events:DeleteRule",
          "events:DescribeRule",
          "events:ListRuleNamesByTarget",
          "events:PutRule",
          "events:PutTargets",
          "events:RemoveTargets",
          "mobiletargeting:GetApp",
          "kinesis:AddTagsToStream",
          "kinesis:CreateStream",
          "kinesis:DeleteStream",
          "kinesis:DescribeStream",
          "kinesis:DescribeStreamSummary",
          "kinesis:ListTagsForStream",
          "kinesis:PutRecords",
          "es:AddTags",
          "es:CreateElasticsearchDomain",
          "es:DeleteElasticsearchDomain",
          "es:DescribeElasticsearchDomain",
          "es:UpdateElasticsearchDomainConfig",
          "s3:PutEncryptionConfiguration",
          "s3:PutBucketPublicAccessBlock"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "cloudformation.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CLIManageviaCFNPolicy"
      },
      {
        "Action": [
          "appsync:GetIntrospectionSchema",
          "appsync:GraphQL",
          "appsync:UpdateApiKey",
          "appsync:ListApiKeys",
          "amplify:*",
          "amplifybackend:*",
          "amplifyuibuilder:*",
          "sts:AssumeRole",
          "mobiletargeting:*",
          "cognito-idp:AdminAddUserToGroup",
          "cognito-idp:AdminCreateUser",
          "cognito-idp:CreateGroup",
          "cognito-idp:DeleteGroup",
          "cognito-idp:DeleteUser",
          "cognito-idp:ListUsers",
          "cognito-idp:AdminGetUser",
          "cognito-idp:ListUsersInGroup",
          "cognito-idp:AdminDisableUser",
          "cognito-idp:AdminRemoveUserFromGroup",
          "cognito-idp:AdminResetUserPassword",
          "cognito-idp:AdminListGroupsForUser",
          "cognito-idp:ListGroups",
          "cognito-idp:AdminListUserAuthEvents",
          "cognito-idp:AdminDeleteUser",
          "cognito-idp:AdminConfirmSignUp",
          "cognito-idp:AdminEnableUser",
          "cognito-idp:AdminUpdateUserAttributes",
          "cognito-idp:DescribeIdentityProvider",
          "cognito-idp:DescribeUserPool",
          "cognito-idp:DeleteUserPool",
          "cognito-idp:DescribeUserPoolClient",
          "cognito-idp:CreateUserPool",
          "cognito-idp:CreateUserPoolClient",
          "cognito-idp:UpdateUserPool",
          "cognito-idp:AdminSetUserPassword",
          "cognito-idp:ListUserPools",
          "cognito-idp:ListUserPoolClients",
          "cognito-idp:ListIdentityProviders",
          "cognito-idp:GetUserPoolMfaConfig",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:SetIdentityPoolRoles",
          "cognito-identity:CreateIdentityPool",
          "cognito-identity:DeleteIdentityPool",
          "cognito-identity:ListIdentityPools",
          "cognito-identity:DescribeIdentityPool",
          "dynamodb:DescribeTable",
          "dynamodb:ListTables",
          "lambda:GetFunction",
          "lambda:CreateFunction",
          "lambda:AddPermission",
          "lambda:DeleteFunction",
          "lambda:DeleteLayerVersion",
          "lambda:InvokeFunction",
          "lambda:ListLayerVersions",
          "iam:PutRolePolicy",
          "iam:CreatePolicy",
          "iam:AttachRolePolicy",
          "iam:ListPolicyVersions",
          "iam:ListAttachedRolePolicies",
          "iam:CreateRole",
          "iam:PassRole",
          "iam:ListRolePolicies",
          "iam:DeleteRolePolicy",
          "iam:CreatePolicyVersion",
          "iam:DeletePolicyVersion",
          "iam:DeleteRole",
          "iam:DetachRolePolicy",
          "cloudformation:ListStacks",
          "cloudformation:DescribeStacks",
          "sns:CreateSMSSandboxPhoneNumber",
          "sns:GetSMSSandboxAccountStatus",
          "sns:VerifySMSSandboxPhoneNumber",
          "sns:DeleteSMSSandboxPhoneNumber",
          "sns:ListSMSSandboxPhoneNumbers",
          "sns:ListOriginationNumbers",
          "rekognition:DescribeCollection",
          "logs:DescribeLogStreams",
          "logs:GetLogEvents",
          "lex:GetBot",
          "lex:GetBuiltinIntent",
          "lex:GetBuiltinIntents",
          "lex:GetBuiltinSlotTypes",
          "cloudformation:GetTemplateSummary",
          "codecommit:GitPull",
          "cloudfront:GetCloudFrontOriginAccessIdentity",
          "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
          "polly:DescribeVoices"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CLISDKCalls"
      },
      {
        "Action": [
          "ssm:PutParameter",
          "ssm:DeleteParameter",
          "ssm:GetParametersByPath",
          "ssm:GetParameters",
          "ssm:GetParameter",
          "ssm:DeleteParameters"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:ssm:*:*:parameter/amplify/*",
        "Sid": "AmplifySSMCalls"
      },
      {
        "Action": [
          "geo:*"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "GeoPowerUser"
      },
      {
        "Action": [
          "ecr:DescribeRepositories"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AmplifyEcrSDKCalls"
      },
      {
        "Action": [
          "s3:CreateBucket",
          "s3:DeleteBucket",
          "s3:DeleteBucketPolicy",
          "s3:DeleteBucketWebsite",
          "s3:DeleteObject",
          "s3:DeleteObjectVersion",
          "s3:GetBucketLocation",
          "s3:GetObject",
          "s3:ListAllMyBuckets",
          "s3:ListBucket",
          "s3:ListBucketVersions",
          "s3:PutBucketAcl",
          "s3:PutBucketCORS",
          "s3:PutBucketNotification",
          "s3:PutBucketPolicy",
          "s3:PutBucketVersioning",
          "s3:PutBucketWebsite",
          "s3:PutEncryptionConfiguration",
          "s3:PutLifecycleConfiguration",
          "s3:PutObject",
          "s3:PutObjectAcl"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AmplifyStorageSDKCalls"
      },
      {
        "Action": [
          "cloudfront:CreateCloudFrontOriginAccessIdentity",
          "cloudfront:CreateDistribution",
          "cloudfront:CreateInvalidation",
          "cloudfront:GetDistribution",
          "cloudfront:GetDistributionConfig",
          "cloudfront:ListCloudFrontOriginAccessIdentities",
          "cloudfront:ListDistributions",
          "cloudfront:ListDistributionsByLambdaFunction",
          "cloudfront:ListDistributionsByWebACLId",
          "cloudfront:ListFieldLevelEncryptionConfigs",
          "cloudfront:ListFieldLevelEncryptionProfiles",
          "cloudfront:ListInvalidations",
          "cloudfront:ListPublicKeys",
          "cloudfront:ListStreamingDistributions",
          "cloudfront:UpdateDistribution",
          "cloudfront:TagResource",
          "cloudfront:UntagResource",
          "cloudfront:ListTagsForResource",
          "cloudfront:DeleteDistribution",
          "iam:AttachRolePolicy",
          "iam:CreateRole",
          "iam:CreateServiceLinkedRole",
          "iam:GetRole",
          "iam:PutRolePolicy",
          "iam:PassRole",
          "lambda:CreateFunction",
          "lambda:EnableReplication",
          "lambda:DeleteFunction",
          "lambda:GetFunction",
          "lambda:GetFunctionConfiguration",
          "lambda:PublishVersion",
          "lambda:UpdateFunctionCode",
          "lambda:UpdateFunctionConfiguration",
          "lambda:ListTags",
          "lambda:TagResource",
          "lambda:UntagResource",
          "route53:ChangeResourceRecordSets",
          "route53:ListHostedZonesByName",
          "route53:ListResourceRecordSets",
          "s3:CreateBucket",
          "s3:GetAccelerateConfiguration",
          "s3:GetObject",
          "s3:ListBucket",
          "s3:PutAccelerateConfiguration",
          "s3:PutBucketPolicy",
          "s3:PutObject",
          "s3:PutBucketTagging",
          "s3:GetBucketTagging",
          "lambda:ListEventSourceMappings",
          "lambda:CreateEventSourceMapping",
          "iam:UpdateAssumeRolePolicy",
          "iam:DeleteRolePolicy",
          "sqs:CreateQueue",
          "sqs:DeleteQueue",
          "sqs:GetQueueAttributes",
          "sqs:SetQueueAttributes",
          "amplify:GetApp",
          "amplify:GetBranch",
          "amplify:UpdateApp",
          "amplify:UpdateBranch"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AmplifySSRCalls"
      },
      {
        "Action": [
          "logs:DescribeLogGroups"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:*",
        "Sid": "AmplifySSRViewLogGroups"
      },
      {
        "Action": [
          "logs:CreateLogGroup"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws/amplify/*",
        "Sid": "AmplifySSRCreateLogGroup"
      },
      {
        "Action": [
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:*:*:log-group:/aws/amplify/*:log-stream:*",
        "Sid": "AmplifySSRPushLogs"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AdministratorAccess-Amplify",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "cloudformation:CreateChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:CreateStack",
      "condition": null
    },
    {
      "action": "cloudformation:DeleteStack",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStackEvents",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStackResource",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStackResources",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStacks",
      "condition": null
    },
    {
      "action": "cloudformation:ExecuteChangeSet",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplate",
      "condition": null
    },
    {
      "action": "cloudformation:UpdateStack",
      "condition": null
    },
    {
      "action": "cloudformation:ListStacks",
      "condition": null
    },
    {
      "action": "cloudformation:ListStackResources",
      "condition": null
    },
    {
      "action": "cloudformation:DeleteStackSet",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStackSet",
      "condition": null
    },
    {
      "action": "cloudformation:UpdateStackSet",
      "condition": null
    },
    {
      "action": "cloudformation:TagResource",
      "condition": null
    },
    {
      "action": "cloudformation:UntagResource",
      "condition": null
    },
    {
      "action": "iam:ListRoleTags",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:TagRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:AttachRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:CreatePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:DeletePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:DeleteRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:DeleteRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:DetachRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:PutRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:UntagRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:UpdateRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:GetRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:GetPolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:PassRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:CreatePolicyVersion",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:DeletePolicyVersion",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:CreateRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:PutRolePermissionsBoundary",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:DeleteRolePermissionsBoundary",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:CreateApiKey",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:CreateDataSource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:CreateFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:CreateResolver",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:CreateType",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:DeleteApiKey",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:DeleteDataSource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:DeleteFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:DeleteResolver",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:DeleteType",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetDataSource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetIntrospectionSchema",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetResolver",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetSchemaCreationStatus",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetType",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GraphQL",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListApiKeys",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListDataSources",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListFunctions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListGraphqlApis",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListResolvers",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListResolversByFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListTypes",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:StartSchemaCreation",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UntagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UpdateApiKey",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UpdateDataSource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UpdateFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UpdateResolver",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UpdateType",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:TagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:CreateGraphqlApi",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:DeleteGraphqlApi",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetGraphqlApi",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:ListTagsForResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:UpdateGraphqlApi",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "apigateway:DELETE",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "apigateway:GET",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "apigateway:PATCH",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "apigateway:POST",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "apigateway:PUT",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:CreateUserPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:CreateIdentityPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:DeleteIdentityPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:DescribeIdentity",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:DescribeIdentityPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:SetIdentityPoolRoles",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:GetIdentityPoolRoles",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:UpdateIdentityPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:CreateUserPoolClient",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:DeleteUserPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:DeleteUserPoolClient",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:DescribeUserPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:DescribeUserPoolClient",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:ListTagsForResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:ListUserPoolClients",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:UpdateUserPoolClient",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:CreateGroup",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:DeleteGroup",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-identity:TagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:TagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:UpdateUserPool",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cognito-idp:SetUserPoolMfaConfig",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:AddPermission",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:CreateFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:DeleteFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:GetFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:GetFunctionConfiguration",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:InvokeAsync",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:InvokeFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:RemovePermission",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:UpdateFunctionCode",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:UpdateFunctionConfiguration",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:ListTags",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:TagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:UntagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:AddLayerVersionPermission",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:CreateEventSourceMapping",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:DeleteEventSourceMapping",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:DeleteLayerVersion",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:GetEventSourceMapping",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:GetLayerVersion",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:ListEventSourceMappings",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:ListLayerVersions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:PublishLayerVersion",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:RemoveLayerVersionPermission",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:UpdateEventSourceMapping",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:CreateTable",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:DeleteItem",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:DeleteTable",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:DescribeContinuousBackups",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:DescribeTimeToLive",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:ListStreams",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:PutItem",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:TagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:ListTagsOfResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:UntagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:UpdateContinuousBackups",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:UpdateItem",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:UpdateTable",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "dynamodb:UpdateTimeToLive",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:CreateBucket",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:ListBucket",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutBucketAcl",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutBucketCORS",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutBucketNotification",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutBucketPolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutBucketWebsite",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutObjectAcl",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:CreateCloudFrontOriginAccessIdentity",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:CreateDistribution",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:DeleteDistribution",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:GetCloudFrontOriginAccessIdentity",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:GetDistribution",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:GetDistributionConfig",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:TagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:UntagResource",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "cloudfront:UpdateDistribution",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "events:DeleteRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "events:DescribeRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "events:ListRuleNamesByTarget",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "events:PutRule",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "events:PutTargets",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "events:RemoveTargets",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "mobiletargeting:GetApp",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:AddTagsToStream",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:CreateStream",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:DeleteStream",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:DescribeStream",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:DescribeStreamSummary",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:ListTagsForStream",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "kinesis:PutRecords",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "es:AddTags",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "es:CreateElasticsearchDomain",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "es:DeleteElasticsearchDomain",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "es:DescribeElasticsearchDomain",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "es:UpdateElasticsearchDomainConfig",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutEncryptionConfiguration",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "s3:PutBucketPublicAccessBlock",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "cloudformation.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "appsync:GetIntrospectionSchema",
      "condition": null
    },
    {
      "action": "appsync:GraphQL",
      "condition": null
    },
    {
      "action": "appsync:UpdateApiKey",
      "condition": null
    },
    {
      "action": "appsync:ListApiKeys",
      "condition": null
    },
    {
      "action": "amplify:*",
      "condition": null
    },
    {
      "action": "amplifybackend:*",
      "condition": null
    },
    {
      "action": "amplifyuibuilder:*",
      "condition": null
    },
    {
      "action": "sts:AssumeRole",
      "condition": null
    },
    {
      "action": "mobiletargeting:*",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminAddUserToGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminCreateUser",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:DeleteGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:DeleteUser",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUsers",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminGetUser",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUsersInGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminDisableUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminRemoveUserFromGroup",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminResetUserPassword",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminListGroupsForUser",
      "condition": null
    },
    {
      "action": "cognito-idp:ListGroups",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminListUserAuthEvents",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminDeleteUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminConfirmSignUp",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminEnableUser",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminUpdateUserAttributes",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeIdentityProvider",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:DeleteUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:DescribeUserPoolClient",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:CreateUserPoolClient",
      "condition": null
    },
    {
      "action": "cognito-idp:UpdateUserPool",
      "condition": null
    },
    {
      "action": "cognito-idp:AdminSetUserPassword",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserPools",
      "condition": null
    },
    {
      "action": "cognito-idp:ListUserPoolClients",
      "condition": null
    },
    {
      "action": "cognito-idp:ListIdentityProviders",
      "condition": null
    },
    {
      "action": "cognito-idp:GetUserPoolMfaConfig",
      "condition": null
    },
    {
      "action": "cognito-identity:GetIdentityPoolRoles",
      "condition": null
    },
    {
      "action": "cognito-identity:SetIdentityPoolRoles",
      "condition": null
    },
    {
      "action": "cognito-identity:CreateIdentityPool",
      "condition": null
    },
    {
      "action": "cognito-identity:DeleteIdentityPool",
      "condition": null
    },
    {
      "action": "cognito-identity:ListIdentityPools",
      "condition": null
    },
    {
      "action": "cognito-identity:DescribeIdentityPool",
      "condition": null
    },
    {
      "action": "dynamodb:DescribeTable",
      "condition": null
    },
    {
      "action": "dynamodb:ListTables",
      "condition": null
    },
    {
      "action": "lambda:GetFunction",
      "condition": null
    },
    {
      "action": "lambda:CreateFunction",
      "condition": null
    },
    {
      "action": "lambda:AddPermission",
      "condition": null
    },
    {
      "action": "lambda:DeleteFunction",
      "condition": null
    },
    {
      "action": "lambda:DeleteLayerVersion",
      "condition": null
    },
    {
      "action": "lambda:InvokeFunction",
      "condition": null
    },
    {
      "action": "lambda:ListLayerVersions",
      "condition": null
    },
    {
      "action": "iam:PutRolePolicy",
      "condition": null
    },
    {
      "action": "iam:CreatePolicy",
      "condition": null
    },
    {
      "action": "iam:AttachRolePolicy",
      "condition": null
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": null
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": null
    },
    {
      "action": "iam:CreateRole",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": null
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": null
    },
    {
      "action": "iam:DeleteRolePolicy",
      "condition": null
    },
    {
      "action": "iam:CreatePolicyVersion",
      "condition": null
    },
    {
      "action": "iam:DeletePolicyVersion",
      "condition": null
    },
    {
      "action": "iam:DeleteRole",
      "condition": null
    },
    {
      "action": "iam:DetachRolePolicy",
      "condition": null
    },
    {
      "action": "cloudformation:ListStacks",
      "condition": null
    },
    {
      "action": "cloudformation:DescribeStacks",
      "condition": null
    },
    {
      "action": "sns:CreateSMSSandboxPhoneNumber",
      "condition": null
    },
    {
      "action": "sns:GetSMSSandboxAccountStatus",
      "condition": null
    },
    {
      "action": "sns:VerifySMSSandboxPhoneNumber",
      "condition": null
    },
    {
      "action": "sns:DeleteSMSSandboxPhoneNumber",
      "condition": null
    },
    {
      "action": "sns:ListSMSSandboxPhoneNumbers",
      "condition": null
    },
    {
      "action": "sns:ListOriginationNumbers",
      "condition": null
    },
    {
      "action": "rekognition:DescribeCollection",
      "condition": null
    },
    {
      "action": "logs:DescribeLogStreams",
      "condition": null
    },
    {
      "action": "logs:GetLogEvents",
      "condition": null
    },
    {
      "action": "lex:GetBot",
      "condition": null
    },
    {
      "action": "lex:GetBuiltinIntent",
      "condition": null
    },
    {
      "action": "lex:GetBuiltinIntents",
      "condition": null
    },
    {
      "action": "lex:GetBuiltinSlotTypes",
      "condition": null
    },
    {
      "action": "cloudformation:GetTemplateSummary",
      "condition": null
    },
    {
      "action": "codecommit:GitPull",
      "condition": null
    },
    {
      "action": "cloudfront:GetCloudFrontOriginAccessIdentity",
      "condition": null
    },
    {
      "action": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
      "condition": null
    },
    {
      "action": "polly:DescribeVoices",
      "condition": null
    },
    {
      "action": "ssm:PutParameter",
      "condition": null
    },
    {
      "action": "ssm:DeleteParameter",
      "condition": null
    },
    {
      "action": "ssm:GetParametersByPath",
      "condition": null
    },
    {
      "action": "ssm:GetParameters",
      "condition": null
    },
    {
      "action": "ssm:GetParameter",
      "condition": null
    },
    {
      "action": "ssm:DeleteParameters",
      "condition": null
    },
    {
      "action": "geo:*",
      "condition": null
    },
    {
      "action": "ecr:DescribeRepositories",
      "condition": null
    },
    {
      "action": "s3:CreateBucket",
      "condition": null
    },
    {
      "action": "s3:DeleteBucket",
      "condition": null
    },
    {
      "action": "s3:DeleteBucketPolicy",
      "condition": null
    },
    {
      "action": "s3:DeleteBucketWebsite",
      "condition": null
    },
    {
      "action": "s3:DeleteObject",
      "condition": null
    },
    {
      "action": "s3:DeleteObjectVersion",
      "condition": null
    },
    {
      "action": "s3:GetBucketLocation",
      "condition": null
    },
    {
      "action": "s3:GetObject",
      "condition": null
    },
    {
      "action": "s3:ListAllMyBuckets",
      "condition": null
    },
    {
      "action": "s3:ListBucket",
      "condition": null
    },
    {
      "action": "s3:ListBucketVersions",
      "condition": null
    },
    {
      "action": "s3:PutBucketAcl",
      "condition": null
    },
    {
      "action": "s3:PutBucketCORS",
      "condition": null
    },
    {
      "action": "s3:PutBucketNotification",
      "condition": null
    },
    {
      "action": "s3:PutBucketPolicy",
      "condition": null
    },
    {
      "action": "s3:PutBucketVersioning",
      "condition": null
    },
    {
      "action": "s3:PutBucketWebsite",
      "condition": null
    },
    {
      "action": "s3:PutEncryptionConfiguration",
      "condition": null
    },
    {
      "action": "s3:PutLifecycleConfiguration",
      "condition": null
    },
    {
      "action": "s3:PutObject",
      "condition": null
    },
    {
      "action": "s3:PutObjectAcl",
      "condition": null
    },
    {
      "action": "cloudfront:CreateCloudFrontOriginAccessIdentity",
      "condition": null
    },
    {
      "action": "cloudfront:CreateDistribution",
      "condition": null
    },
    {
      "action": "cloudfront:CreateInvalidation",
      "condition": null
    },
    {
      "action": "cloudfront:GetDistribution",
      "condition": null
    },
    {
      "action": "cloudfront:GetDistributionConfig",
      "condition": null
    },
    {
      "action": "cloudfront:ListCloudFrontOriginAccessIdentities",
      "condition": null
    },
    {
      "action": "cloudfront:ListDistributions",
      "condition": null
    },
    {
      "action": "cloudfront:ListDistributionsByLambdaFunction",
      "condition": null
    },
    {
      "action": "cloudfront:ListDistributionsByWebACLId",
      "condition": null
    },
    {
      "action": "cloudfront:ListFieldLevelEncryptionConfigs",
      "condition": null
    },
    {
      "action": "cloudfront:ListFieldLevelEncryptionProfiles",
      "condition": null
    },
    {
      "action": "cloudfront:ListInvalidations",
      "condition": null
    },
    {
      "action": "cloudfront:ListPublicKeys",
      "condition": null
    },
    {
      "action": "cloudfront:ListStreamingDistributions",
      "condition": null
    },
    {
      "action": "cloudfront:UpdateDistribution",
      "condition": null
    },
    {
      "action": "cloudfront:TagResource",
      "condition": null
    },
    {
      "action": "cloudfront:UntagResource",
      "condition": null
    },
    {
      "action": "cloudfront:ListTagsForResource",
      "condition": null
    },
    {
      "action": "cloudfront:DeleteDistribution",
      "condition": null
    },
    {
      "action": "iam:AttachRolePolicy",
      "condition": null
    },
    {
      "action": "iam:CreateRole",
      "condition": null
    },
    {
      "action": "iam:CreateServiceLinkedRole",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": null
    },
    {
      "action": "iam:PutRolePolicy",
      "condition": null
    },
    {
      "action": "iam:PassRole",
      "condition": null
    },
    {
      "action": "lambda:CreateFunction",
      "condition": null
    },
    {
      "action": "lambda:EnableReplication",
      "condition": null
    },
    {
      "action": "lambda:DeleteFunction",
      "condition": null
    },
    {
      "action": "lambda:GetFunction",
      "condition": null
    },
    {
      "action": "lambda:GetFunctionConfiguration",
      "condition": null
    },
    {
      "action": "lambda:PublishVersion",
      "condition": null
    },
    {
      "action": "lambda:UpdateFunctionCode",
      "condition": null
    },
    {
      "action": "lambda:UpdateFunctionConfiguration",
      "condition": null
    },
    {
      "action": "lambda:ListTags",
      "condition": null
    },
    {
      "action": "lambda:TagResource",
      "condition": null
    },
    {
      "action": "lambda:UntagResource",
      "condition": null
    },
    {
      "action": "route53:ChangeResourceRecordSets",
      "condition": null
    },
    {
      "action": "route53:ListHostedZonesByName",
      "condition": null
    },
    {
      "action": "route53:ListResourceRecordSets",
      "condition": null
    },
    {
      "action": "s3:CreateBucket",
      "condition": null
    },
    {
      "action": "s3:GetAccelerateConfiguration",
      "condition": null
    },
    {
      "action": "s3:GetObject",
      "condition": null
    },
    {
      "action": "s3:ListBucket",
      "condition": null
    },
    {
      "action": "s3:PutAccelerateConfiguration",
      "condition": null
    },
    {
      "action": "s3:PutBucketPolicy",
      "condition": null
    },
    {
      "action": "s3:PutObject",
      "condition": null
    },
    {
      "action": "s3:PutBucketTagging",
      "condition": null
    },
    {
      "action": "s3:GetBucketTagging",
      "condition": null
    },
    {
      "action": "lambda:ListEventSourceMappings",
      "condition": null
    },
    {
      "action": "lambda:CreateEventSourceMapping",
      "condition": null
    },
    {
      "action": "iam:UpdateAssumeRolePolicy",
      "condition": null
    },
    {
      "action": "iam:DeleteRolePolicy",
      "condition": null
    },
    {
      "action": "sqs:CreateQueue",
      "condition": null
    },
    {
      "action": "sqs:DeleteQueue",
      "condition": null
    },
    {
      "action": "sqs:GetQueueAttributes",
      "condition": null
    },
    {
      "action": "sqs:SetQueueAttributes",
      "condition": null
    },
    {
      "action": "amplify:GetApp",
      "condition": null
    },
    {
      "action": "amplify:GetBranch",
      "condition": null
    },
    {
      "action": "amplify:UpdateApp",
      "condition": null
    },
    {
      "action": "amplify:UpdateBranch",
      "condition": null
    },
    {
      "action": "logs:DescribeLogGroups",
      "condition": null
    },
    {
      "action": "logs:CreateLogGroup",
      "condition": null
    },
    {
      "action": "logs:CreateLogStream",
      "condition": null
    },
    {
      "action": "logs:PutLogEvents",
      "condition": null
    }
  ],
  "updatedate": "2024-04-04T20:35:31+00:00",
  "version": "v12"
}