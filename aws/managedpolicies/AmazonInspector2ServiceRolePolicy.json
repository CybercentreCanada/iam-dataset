{
  "access_levels": [],
  "arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonInspector2ServiceRolePolicy",
  "createdate": "2024-01-22T14:06:01+00:00",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "directconnect:DescribeConnections",
          "directconnect:DescribeDirectConnectGatewayAssociations",
          "directconnect:DescribeDirectConnectGatewayAttachments",
          "directconnect:DescribeDirectConnectGateways",
          "directconnect:DescribeVirtualGateways",
          "directconnect:DescribeVirtualInterfaces",
          "ec2:DescribeAvailabilityZones",
          "ec2:DescribeCustomerGateways",
          "ec2:DescribeInstances",
          "ec2:DescribeInternetGateways",
          "ec2:DescribeManagedPrefixLists",
          "ec2:DescribeNatGateways",
          "ec2:DescribeNetworkAcls",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DescribePrefixLists",
          "ec2:DescribeRegions",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSubnets",
          "ec2:DescribeTransitGatewayAttachments",
          "ec2:DescribeTransitGatewayConnects",
          "ec2:DescribeTransitGatewayPeeringAttachments",
          "ec2:DescribeTransitGatewayRouteTables",
          "ec2:DescribeTransitGatewayVpcAttachments",
          "ec2:DescribeTransitGateways",
          "ec2:DescribeVpcEndpointServiceConfigurations",
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeVpcPeeringConnections",
          "ec2:DescribeVpcs",
          "ec2:DescribeVpnConnections",
          "ec2:DescribeVpnGateways",
          "ec2:GetManagedPrefixListEntries",
          "ec2:GetTransitGatewayRouteTablePropagations",
          "ec2:SearchTransitGatewayRoutes",
          "elasticloadbalancing:DescribeListeners",
          "elasticloadbalancing:DescribeLoadBalancerAttributes",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeRules",
          "elasticloadbalancing:DescribeTags",
          "elasticloadbalancing:DescribeTargetGroups",
          "elasticloadbalancing:DescribeTargetGroupAttributes",
          "elasticloadbalancing:DescribeTargetHealth",
          "network-firewall:DescribeFirewall",
          "network-firewall:DescribeFirewallPolicy",
          "network-firewall:DescribeResourcePolicy",
          "network-firewall:DescribeRuleGroup",
          "network-firewall:ListFirewallPolicies",
          "network-firewall:ListFirewalls",
          "network-firewall:ListRuleGroups",
          "tiros:CreateQuery",
          "tiros:GetQueryAnswer"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "TirosPolicy"
      },
      {
        "Action": [
          "ecr:BatchGetImage",
          "ecr:BatchGetRepositoryScanningConfiguration",
          "ecr:DescribeImages",
          "ecr:DescribeRegistry",
          "ecr:DescribeRepositories",
          "ecr:GetAuthorizationToken",
          "ecr:GetDownloadUrlForLayer",
          "ecr:GetRegistryScanningConfiguration",
          "ecr:ListImages",
          "ecr:PutRegistryScanningConfiguration",
          "organizations:DescribeAccount",
          "organizations:DescribeOrganization",
          "organizations:ListAccounts",
          "ssm:DescribeAssociation",
          "ssm:DescribeAssociationExecutions",
          "ssm:DescribeInstanceInformation",
          "ssm:ListAssociations",
          "ssm:ListResourceDataSync"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "PackageVulnerabilityScanning"
      },
      {
        "Action": [
          "lambda:ListFunctions",
          "lambda:GetFunction",
          "lambda:GetLayerVersion",
          "cloudwatch:GetMetricData"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "LambdaPackageVulnerabilityScanning"
      },
      {
        "Action": [
          "ssm:CreateAssociation",
          "ssm:StartAssociationsOnce",
          "ssm:DeleteAssociation",
          "ssm:UpdateAssociation"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:instance/*",
          "arn:aws:ssm:*:*:document/AmazonInspector2-*",
          "arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
          "arn:aws:ssm:*:*:managed-instance/*",
          "arn:aws:ssm:*:*:association/*"
        ],
        "Sid": "GatherInventory"
      },
      {
        "Action": [
          "ssm:CreateResourceDataSync",
          "ssm:DeleteResourceDataSync"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ssm:*:*:resource-data-sync/InspectorResourceDataSync-do-not-delete"
        ],
        "Sid": "DataSyncCleanup"
      },
      {
        "Action": [
          "events:PutRule",
          "events:DeleteRule",
          "events:DescribeRule",
          "events:ListTargetsByRule",
          "events:PutTargets",
          "events:RemoveTargets"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:events:*:*:rule/DO-NOT-DELETE-AmazonInspector*ManagedRule"
        ],
        "Sid": "ManagedRules"
      },
      {
        "Action": [
          "codeguru-security:CreateScan",
          "codeguru-security:GetAccountConfiguration",
          "codeguru-security:GetFindings",
          "codeguru-security:GetScan",
          "codeguru-security:ListFindings",
          "codeguru-security:BatchGetFindings",
          "codeguru-security:DeleteScansByCategory"
        ],
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "LambdaCodeVulnerabilityScanning"
      },
      {
        "Action": [
          "iam:GetRole",
          "iam:GetRolePolicy",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:ListAttachedRolePolicies",
          "iam:ListPolicies",
          "iam:ListPolicyVersions",
          "iam:ListRolePolicies",
          "lambda:ListVersionsByFunction"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:CalledVia": [
              "codeguru-security.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "CodeGuruCodeVulnerabilityScanning"
      },
      {
        "Action": [
          "ssm:PutParameter",
          "ssm:GetParameters",
          "ssm:DeleteParameter"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ssm:*:*:parameter/inspector-aws/service/inspector-linux-application-paths"
        ],
        "Sid": "Ec2DeepInspection"
      },
      {
        "Action": [
          "cloudtrail:CreateServiceLinkedChannel",
          "cloudtrail:DeleteServiceLinkedChannel"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:cloudtrail:*:*:channel/aws-service-channel/inspector2/*"
        ],
        "Sid": "AllowManagementOfServiceLinkedChannel"
      },
      {
        "Action": [
          "cloudtrail:ListServiceLinkedChannels"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "AllowListServiceLinkedChannels"
      },
      {
        "Action": [
          "ssm:SendCommand",
          "ssm:GetCommandInvocation"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ssm:*:*:document/AmazonInspector2-InvokeInspectorSsmPluginCIS"
        ],
        "Sid": "AllowToRunInvokeCisSpecificDocuments"
      },
      {
        "Action": [
          "ssm:SendCommand"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceAccount": "${aws:PrincipalAccount}"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:instance/*"
        ],
        "Sid": "AllowToRunCisCommandsToSpecificResources"
      },
      {
        "Action": [
          "cloudwatch:PutMetricData"
        ],
        "Condition": {
          "StringEquals": {
            "cloudwatch:namespace": "AWS/Inspector2"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "AllowToPutCloudwatchMetricData"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [],
  "malformed": false,
  "name": "AmazonInspector2ServiceRolePolicy",
  "privesc": false,
  "resource_exposure": false,
  "undocumented_actions": false,
  "unknown_actions": [
    {
      "action": "directconnect:DescribeConnections",
      "condition": null
    },
    {
      "action": "directconnect:DescribeDirectConnectGatewayAssociations",
      "condition": null
    },
    {
      "action": "directconnect:DescribeDirectConnectGatewayAttachments",
      "condition": null
    },
    {
      "action": "directconnect:DescribeDirectConnectGateways",
      "condition": null
    },
    {
      "action": "directconnect:DescribeVirtualGateways",
      "condition": null
    },
    {
      "action": "directconnect:DescribeVirtualInterfaces",
      "condition": null
    },
    {
      "action": "ec2:DescribeAvailabilityZones",
      "condition": null
    },
    {
      "action": "ec2:DescribeCustomerGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeInstances",
      "condition": null
    },
    {
      "action": "ec2:DescribeInternetGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeManagedPrefixLists",
      "condition": null
    },
    {
      "action": "ec2:DescribeNatGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetworkAcls",
      "condition": null
    },
    {
      "action": "ec2:DescribeNetworkInterfaces",
      "condition": null
    },
    {
      "action": "ec2:DescribePrefixLists",
      "condition": null
    },
    {
      "action": "ec2:DescribeRegions",
      "condition": null
    },
    {
      "action": "ec2:DescribeRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeSecurityGroups",
      "condition": null
    },
    {
      "action": "ec2:DescribeSubnets",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGatewayAttachments",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGatewayConnects",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGatewayPeeringAttachments",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGatewayRouteTables",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGatewayVpcAttachments",
      "condition": null
    },
    {
      "action": "ec2:DescribeTransitGateways",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcEndpointServiceConfigurations",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcEndpoints",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcPeeringConnections",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpcs",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpnConnections",
      "condition": null
    },
    {
      "action": "ec2:DescribeVpnGateways",
      "condition": null
    },
    {
      "action": "ec2:GetManagedPrefixListEntries",
      "condition": null
    },
    {
      "action": "ec2:GetTransitGatewayRouteTablePropagations",
      "condition": null
    },
    {
      "action": "ec2:SearchTransitGatewayRoutes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeListeners",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancerAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeRules",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTags",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroups",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetGroupAttributes",
      "condition": null
    },
    {
      "action": "elasticloadbalancing:DescribeTargetHealth",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeFirewall",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeFirewallPolicy",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeResourcePolicy",
      "condition": null
    },
    {
      "action": "network-firewall:DescribeRuleGroup",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewallPolicies",
      "condition": null
    },
    {
      "action": "network-firewall:ListFirewalls",
      "condition": null
    },
    {
      "action": "network-firewall:ListRuleGroups",
      "condition": null
    },
    {
      "action": "tiros:CreateQuery",
      "condition": null
    },
    {
      "action": "tiros:GetQueryAnswer",
      "condition": null
    },
    {
      "action": "ecr:BatchGetImage",
      "condition": null
    },
    {
      "action": "ecr:BatchGetRepositoryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:DescribeImages",
      "condition": null
    },
    {
      "action": "ecr:DescribeRegistry",
      "condition": null
    },
    {
      "action": "ecr:DescribeRepositories",
      "condition": null
    },
    {
      "action": "ecr:GetAuthorizationToken",
      "condition": null
    },
    {
      "action": "ecr:GetDownloadUrlForLayer",
      "condition": null
    },
    {
      "action": "ecr:GetRegistryScanningConfiguration",
      "condition": null
    },
    {
      "action": "ecr:ListImages",
      "condition": null
    },
    {
      "action": "ecr:PutRegistryScanningConfiguration",
      "condition": null
    },
    {
      "action": "organizations:DescribeAccount",
      "condition": null
    },
    {
      "action": "organizations:DescribeOrganization",
      "condition": null
    },
    {
      "action": "organizations:ListAccounts",
      "condition": null
    },
    {
      "action": "ssm:DescribeAssociation",
      "condition": null
    },
    {
      "action": "ssm:DescribeAssociationExecutions",
      "condition": null
    },
    {
      "action": "ssm:DescribeInstanceInformation",
      "condition": null
    },
    {
      "action": "ssm:ListAssociations",
      "condition": null
    },
    {
      "action": "ssm:ListResourceDataSync",
      "condition": null
    },
    {
      "action": "lambda:ListFunctions",
      "condition": null
    },
    {
      "action": "lambda:GetFunction",
      "condition": null
    },
    {
      "action": "lambda:GetLayerVersion",
      "condition": null
    },
    {
      "action": "cloudwatch:GetMetricData",
      "condition": null
    },
    {
      "action": "ssm:CreateAssociation",
      "condition": null
    },
    {
      "action": "ssm:StartAssociationsOnce",
      "condition": null
    },
    {
      "action": "ssm:DeleteAssociation",
      "condition": null
    },
    {
      "action": "ssm:UpdateAssociation",
      "condition": null
    },
    {
      "action": "ssm:CreateResourceDataSync",
      "condition": null
    },
    {
      "action": "ssm:DeleteResourceDataSync",
      "condition": null
    },
    {
      "action": "events:PutRule",
      "condition": null
    },
    {
      "action": "events:DeleteRule",
      "condition": null
    },
    {
      "action": "events:DescribeRule",
      "condition": null
    },
    {
      "action": "events:ListTargetsByRule",
      "condition": null
    },
    {
      "action": "events:PutTargets",
      "condition": null
    },
    {
      "action": "events:RemoveTargets",
      "condition": null
    },
    {
      "action": "codeguru-security:CreateScan",
      "condition": null
    },
    {
      "action": "codeguru-security:GetAccountConfiguration",
      "condition": null
    },
    {
      "action": "codeguru-security:GetFindings",
      "condition": null
    },
    {
      "action": "codeguru-security:GetScan",
      "condition": null
    },
    {
      "action": "codeguru-security:ListFindings",
      "condition": null
    },
    {
      "action": "codeguru-security:BatchGetFindings",
      "condition": null
    },
    {
      "action": "codeguru-security:DeleteScansByCategory",
      "condition": null
    },
    {
      "action": "iam:GetRole",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:GetRolePolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:GetPolicy",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:GetPolicyVersion",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:ListAttachedRolePolicies",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:ListPolicies",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:ListPolicyVersions",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "iam:ListRolePolicies",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "lambda:ListVersionsByFunction",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:CalledVia": [
            "codeguru-security.amazonaws.com"
          ]
        }
      }
    },
    {
      "action": "ssm:PutParameter",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "ssm:GetParameters",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "ssm:DeleteParameter",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "cloudtrail:CreateServiceLinkedChannel",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "cloudtrail:DeleteServiceLinkedChannel",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "cloudtrail:ListServiceLinkedChannels",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "ssm:SendCommand",
      "condition": null
    },
    {
      "action": "ssm:GetCommandInvocation",
      "condition": null
    },
    {
      "action": "ssm:SendCommand",
      "condition": {
        "StringEquals": {
          "aws:ResourceAccount": "${aws:PrincipalAccount}"
        }
      }
    },
    {
      "action": "cloudwatch:PutMetricData",
      "condition": {
        "StringEquals": {
          "cloudwatch:namespace": "AWS/Inspector2"
        }
      }
    }
  ],
  "updatedate": "2024-01-22T14:06:01+00:00",
  "version": "v12"
}