{"name": "AWSServiceRoleForAmazonEKSNodegroup", "deprecated": false, "createdate": "2020-08-31T19:07:38Z", "updatedate": "2020-08-31T19:07:38+00:00", "version": "v5", "malformed": false, "unknown_actions": [], "access_levels": ["List", "Read", "Tagging", "Write"], "document": {"Version": "2012-10-17", "Statement": [{"Sid": "SharedSecurityGroupRelatedPermissions", "Effect": "Allow", "Action": ["ec2:RevokeSecurityGroupIngress", "ec2:AuthorizeSecurityGroupEgress", "ec2:AuthorizeSecurityGroupIngress", "ec2:DescribeInstances", "ec2:RevokeSecurityGroupEgress", "ec2:DeleteSecurityGroup"], "Resource": "*", "Condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"Sid": "EKSCreatedSecurityGroupRelatedPermissions", "Effect": "Allow", "Action": ["ec2:RevokeSecurityGroupIngress", "ec2:AuthorizeSecurityGroupEgress", "ec2:AuthorizeSecurityGroupIngress", "ec2:DescribeInstances", "ec2:RevokeSecurityGroupEgress", "ec2:DeleteSecurityGroup"], "Resource": "*", "Condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"Sid": "LaunchTemplateRelatedPermissions", "Effect": "Allow", "Action": ["ec2:DeleteLaunchTemplate", "ec2:CreateLaunchTemplateVersion"], "Resource": "*", "Condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"Sid": "AutoscalingRelatedPermissions", "Effect": "Allow", "Action": ["autoscaling:UpdateAutoScalingGroup", "autoscaling:DeleteAutoScalingGroup", "autoscaling:TerminateInstanceInAutoScalingGroup", "autoscaling:CompleteLifecycleAction", "autoscaling:PutLifecycleHook", "autoscaling:PutNotificationConfiguration"], "Resource": "arn:aws:autoscaling:*:*:*:autoScalingGroupName/eks-*"}, {"Sid": "AllowAutoscalingToCreateSLR", "Effect": "Allow", "Condition": {"StringEquals": {"iam:AWSServiceName": "autoscaling.amazonaws.com"}}, "Action": ["iam:CreateServiceLinkedRole"], "Resource": "*"}, {"Sid": "AllowASGCreationByEKS", "Effect": "Allow", "Action": ["autoscaling:CreateOrUpdateTags", "autoscaling:CreateAutoScalingGroup"], "Resource": "*", "Condition": {"ForAnyValue:StringEquals": {"aws:TagKeys": ["eks", "eks:cluster-name", "eks:nodegroup-name"]}}}, {"Sid": "AllowPassRoleToAutoscaling", "Effect": "Allow", "Action": ["iam:PassRole"], "Resource": "*", "Condition": {"StringEquals": {"iam:PassedToService": "autoscaling.amazonaws.com"}}}, {"Sid": "AllowPassRoleToEC2", "Effect": "Allow", "Action": ["iam:PassRole"], "Resource": "*", "Condition": {"StringEqualsIfExists": {"iam:PassedToService": ["ec2.amazonaws.com", "ec2.amazonaws.com.cn"]}}}, {"Sid": "PermissionsToManageResourcesForNodegroups", "Effect": "Allow", "Action": ["iam:GetRole", "ec2:CreateLaunchTemplate", "ec2:DescribeInstances", "iam:GetInstanceProfile", "ec2:DescribeLaunchTemplates", "autoscaling:DescribeAutoScalingGroups", "ec2:CreateSecurityGroup", "ec2:DescribeLaunchTemplateVersions", "ec2:RunInstances", "ec2:DescribeSecurityGroups", "ec2:GetConsoleOutput", "ec2:DescribeRouteTables", "ec2:DescribeSubnets"], "Resource": "*"}, {"Sid": "PermissionsToCreateAndManageInstanceProfiles", "Effect": "Allow", "Action": ["iam:CreateInstanceProfile", "iam:DeleteInstanceProfile", "iam:RemoveRoleFromInstanceProfile", "iam:AddRoleToInstanceProfile"], "Resource": "arn:aws:iam::*:instance-profile/eks-*"}, {"Sid": "PermissionsToManageEKSAndKubernetesTags", "Effect": "Allow", "Action": ["ec2:CreateTags", "ec2:DeleteTags"], "Resource": "*", "Condition": {"ForAnyValue:StringLike": {"aws:TagKeys": ["eks", "eks:cluster-name", "eks:nodegroup-name", "kubernetes.io/cluster/*"]}}}]}, "effective_actions": [{"action": "ec2:RevokeSecurityGroupIngress", "effective_action": "ec2:RevokeSecurityGroupIngress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"action": "ec2:AuthorizeSecurityGroupEgress", "effective_action": "ec2:AuthorizeSecurityGroupEgress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"action": "ec2:AuthorizeSecurityGroupIngress", "effective_action": "ec2:AuthorizeSecurityGroupIngress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"action": "ec2:DescribeInstances", "effective_action": "ec2:DescribeInstances", "access_level": "List", "condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"action": "ec2:RevokeSecurityGroupEgress", "effective_action": "ec2:RevokeSecurityGroupEgress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"action": "ec2:DeleteSecurityGroup", "effective_action": "ec2:DeleteSecurityGroup", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks": "*"}}}, {"action": "ec2:RevokeSecurityGroupIngress", "effective_action": "ec2:RevokeSecurityGroupIngress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:AuthorizeSecurityGroupEgress", "effective_action": "ec2:AuthorizeSecurityGroupEgress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:AuthorizeSecurityGroupIngress", "effective_action": "ec2:AuthorizeSecurityGroupIngress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:DescribeInstances", "effective_action": "ec2:DescribeInstances", "access_level": "List", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:RevokeSecurityGroupEgress", "effective_action": "ec2:RevokeSecurityGroupEgress", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:DeleteSecurityGroup", "effective_action": "ec2:DeleteSecurityGroup", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:DeleteLaunchTemplate", "effective_action": "ec2:DeleteLaunchTemplate", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "ec2:CreateLaunchTemplateVersion", "effective_action": "ec2:CreateLaunchTemplateVersion", "access_level": "Write", "condition": {"StringLike": {"ec2:ResourceTag/eks:nodegroup-name": "*"}}}, {"action": "autoscaling:UpdateAutoScalingGroup", "effective_action": "autoscaling:UpdateAutoScalingGroup", "access_level": "Write", "condition": null}, {"action": "autoscaling:DeleteAutoScalingGroup", "effective_action": "autoscaling:DeleteAutoScalingGroup", "access_level": "Write", "condition": null}, {"action": "autoscaling:TerminateInstanceInAutoScalingGroup", "effective_action": "autoscaling:TerminateInstanceInAutoScalingGroup", "access_level": "Write", "condition": null}, {"action": "autoscaling:CompleteLifecycleAction", "effective_action": "autoscaling:CompleteLifecycleAction", "access_level": "Write", "condition": null}, {"action": "autoscaling:PutLifecycleHook", "effective_action": "autoscaling:PutLifecycleHook", "access_level": "Write", "condition": null}, {"action": "autoscaling:PutNotificationConfiguration", "effective_action": "autoscaling:PutNotificationConfiguration", "access_level": "Write", "condition": null}, {"action": "iam:CreateServiceLinkedRole", "effective_action": "iam:CreateServiceLinkedRole", "access_level": "Write", "condition": {"StringEquals": {"iam:AWSServiceName": "autoscaling.amazonaws.com"}}}, {"action": "autoscaling:CreateOrUpdateTags", "effective_action": "autoscaling:CreateOrUpdateTags", "access_level": "Tagging", "condition": {"ForAnyValue:StringEquals": {"aws:TagKeys": ["eks", "eks:cluster-name", "eks:nodegroup-name"]}}}, {"action": "autoscaling:CreateAutoScalingGroup", "effective_action": "autoscaling:CreateAutoScalingGroup", "access_level": "Tagging", "condition": {"ForAnyValue:StringEquals": {"aws:TagKeys": ["eks", "eks:cluster-name", "eks:nodegroup-name"]}}}, {"action": "iam:PassRole", "effective_action": "iam:PassRole", "access_level": "Write", "condition": {"StringEquals": {"iam:PassedToService": "autoscaling.amazonaws.com"}}}, {"action": "iam:PassRole", "effective_action": "iam:PassRole", "access_level": "Write", "condition": {"StringEqualsIfExists": {"iam:PassedToService": ["ec2.amazonaws.com", "ec2.amazonaws.com.cn"]}}}, {"action": "iam:GetRole", "effective_action": "iam:GetRole", "access_level": "Read", "condition": null}, {"action": "ec2:CreateLaunchTemplate", "effective_action": "ec2:CreateLaunchTemplate", "access_level": "Write", "condition": null}, {"action": "ec2:DescribeInstances", "effective_action": "ec2:DescribeInstances", "access_level": "List", "condition": null}, {"action": "iam:GetInstanceProfile", "effective_action": "iam:GetInstanceProfile", "access_level": "Read", "condition": null}, {"action": "ec2:DescribeLaunchTemplates", "effective_action": "ec2:DescribeLaunchTemplates", "access_level": "List", "condition": null}, {"action": "autoscaling:DescribeAutoScalingGroups", "effective_action": "autoscaling:DescribeAutoScalingGroups", "access_level": "List", "condition": null}, {"action": "ec2:CreateSecurityGroup", "effective_action": "ec2:CreateSecurityGroup", "access_level": "Write", "condition": null}, {"action": "ec2:DescribeLaunchTemplateVersions", "effective_action": "ec2:DescribeLaunchTemplateVersions", "access_level": "List", "condition": null}, {"action": "ec2:RunInstances", "effective_action": "ec2:RunInstances", "access_level": "Write", "condition": null}, {"action": "ec2:DescribeSecurityGroups", "effective_action": "ec2:DescribeSecurityGroups", "access_level": "List", "condition": null}, {"action": "ec2:GetConsoleOutput", "effective_action": "ec2:GetConsoleOutput", "access_level": "Read", "condition": null}, {"action": "ec2:DescribeRouteTables", "effective_action": "ec2:DescribeRouteTables", "access_level": "List", "condition": null}, {"action": "ec2:DescribeSubnets", "effective_action": "ec2:DescribeSubnets", "access_level": "List", "condition": null}, {"action": "iam:CreateInstanceProfile", "effective_action": "iam:CreateInstanceProfile", "access_level": "Write", "condition": null}, {"action": "iam:DeleteInstanceProfile", "effective_action": "iam:DeleteInstanceProfile", "access_level": "Write", "condition": null}, {"action": "iam:RemoveRoleFromInstanceProfile", "effective_action": "iam:RemoveRoleFromInstanceProfile", "access_level": "Write", "condition": null}, {"action": "iam:AddRoleToInstanceProfile", "effective_action": "iam:AddRoleToInstanceProfile", "access_level": "Write", "condition": null}, {"action": "ec2:CreateTags", "effective_action": "ec2:CreateTags", "access_level": "Tagging", "condition": {"ForAnyValue:StringLike": {"aws:TagKeys": ["eks", "eks:cluster-name", "eks:nodegroup-name", "kubernetes.io/cluster/*"]}}}, {"action": "ec2:DeleteTags", "effective_action": "ec2:DeleteTags", "access_level": "Tagging", "condition": {"ForAnyValue:StringLike": {"aws:TagKeys": ["eks", "eks:cluster-name", "eks:nodegroup-name", "kubernetes.io/cluster/*"]}}}]}